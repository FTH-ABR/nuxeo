{"key":"Nuxeo-unknown","hidden":false,"spi":["[Lorg.nuxeo.ecm.platform.actions.FilterRule;","[Lorg.nuxeo.ecm.platform.actions.ActionFilter;","[Lorg.nuxeo.ecm.core.schema.SchemaDescriptor;","[Lorg.nuxeo.ecm.core.schema.SchemaDescriptor;","org.nuxeo.runtime.model.RuntimeContext","[Lorg.nuxeo.directory.mongodb.MongoDBReferenceDescriptor;","[Lorg.nuxeo.ecm.automation.OperationDocumentation$Param;","org.nuxeo.ecm.webengine.jaxrs.Utils$ClassRef","org.nuxeo.ecm.webengine.jaxrs.servlet.mapping.PathMatcher","org.nuxeo.ecm.webengine.jaxrs.servlet.config.ResourceResolver","org.nuxeo.common.xmap.Resource","org.nuxeo.ecm.core.convert.extension.Converter","org.nuxeo.ecm.core.api.VersioningOption","[Lorg.nuxeo.ecm.directory.core.CoreDirectoryDescriptor$ACLDescriptor;","org.nuxeo.ecm.directory.BaseDirectoryDescriptor$SubstringMatchType","[Lorg.nuxeo.ecm.directory.PermissionDescriptor;","[Lorg.nuxeo.ecm.directory.ReferenceDescriptor;","[Lorg.nuxeo.ecm.directory.InverseReferenceDescriptor;","[Lorg.nuxeo.ecm.automation.core.OperationChainContribution$Operation;","[Lorg.nuxeo.ecm.automation.OperationDocumentation$Param;","org.nuxeo.ecm.core.api.Filter","org.nuxeo.ecm.automation.context.ContextHelper","org.nuxeo.ecm.platform.computedgroups.GroupComputer","org.nuxeo.ecm.core.management.storage.DocumentStoreHandler","org.nuxeo.lib.stream.computation.ComputationPolicy","[Lorg.nuxeo.ecm.directory.sql.TableReferenceDescriptor;","[Lorg.nuxeo.ecm.directory.sql.SQLStaticFilter;","org.nuxeo.ecm.core.storage.FulltextDescriptor","org.nuxeo.ecm.core.storage.FulltextDescriptor","org.nuxeo.runtime.model.RuntimeContext","org.nuxeo.ecm.core.event.EventListener","org.nuxeo.ecm.core.event.PostCommitEventListener","org.nuxeo.ecm.core.api.adapter.DocumentAdapterFactory","org.nuxeo.ecm.core.blob.BlobDispatcher","org.nuxeo.runtime.services.event.EventListener","org.nuxeo.runtime.services.event.EventListener"],"operations":[{"@type":"NXOperation","name":"Actions.GET","version":"unknown","aliases":[],"description":"Retrieve list of available actions for a given category. Action context is built based on the Operation context (currentDocument will be fetched from Context if not provided as input). If this operation is executed in a chain that initialized the Seam context, it will be used for Action context","operationClass":"org.nuxeo.ecm.automation.core.operations.services.GetActions","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","blob","document","blob"],"category":"Services","url":"Actions.GET","label":"List available actions","requires":null,"since":"","params":[{"name":"category","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"lang","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"AttachFiles","version":"unknown","aliases":[],"description":null,"operationClass":"org.nuxeo.ecm.automation.core.impl.OperationChainCompiler.CompiledChainImpl","contributingComponent":"BuiltIn","signature":["bloblist","document","blob","document"],"category":"Chain","url":"AttachFiles","label":"AttachFiles","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Audit.LogEvent","version":"unknown","aliases":["Audit.Log"],"description":"Log events into audit for each of the input document. The operation accept as input one ore more documents that are returned back as the output.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.AuditLog","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["document","document","documents","documents"],"category":"Services","url":"Audit.LogEvent","label":"Log Event In Audit","requires":null,"since":"","params":[{"name":"event","description":"","type":"string","widget":"AuditEvent","values":[],"order":0,"isRequired":true},{"name":"category","description":"","type":"string","widget":null,"values":["Automation"],"order":0,"isRequired":false},{"name":"comment","description":"","type":"string","widget":"TextArea","values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Audit.Query","version":"unknown","aliases":[],"description":"Execute a JPA query against the Audit Service. This is returning a blob with the query result. The result is a serialized JSON array. You can use the context to set query variables but you must prefix using 'audit.query.' the context variable keys that match the ones in the query.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.AuditQuery","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","blob"],"category":"Services","url":"Audit.Query","label":"Query Audit Service","requires":null,"since":"","params":[{"name":"query","description":"","type":"string","widget":"TextArea","values":[],"order":0,"isRequired":true},{"name":"maxResults","description":"","type":"int","widget":null,"values":[],"order":0,"isRequired":false},{"name":"pageNo","description":"","type":"int","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Audit.QueryWithPageProvider","version":"unknown","aliases":["Audit.PageProvider"],"description":"Perform a query or a named provider query against Audit logs. Result is paginated. The query result will become the input for the next operation. If no query or provider name is given, a query based on default Audit page provider will be executed.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.AuditPageProviderOperation","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","paginable"],"category":"Fetch","url":"Audit.QueryWithPageProvider","label":"Audit Query With Page Provider","requires":null,"since":"","params":[{"name":"currentPageIndex","description":"","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"language","description":"","type":"string","widget":"Option","values":["NXQL"],"order":0,"isRequired":false},{"name":"maxResults","description":"","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"namedQueryParams","description":"","type":"properties","widget":null,"values":[],"order":0,"isRequired":false},{"name":"page","description":"","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"pageSize","description":"","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"providerName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"query","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"queryParams","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"sortBy","description":"Sort by properties (separated by comma)","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"sortInfo","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"sortOrder","description":"Sort order, ASC or DESC","type":"string","widget":"Option","values":["ASC","DESC"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Audit.Restore","version":"unknown","aliases":[],"description":"Restore log entries from an audit storage implementation to the audit backend.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.AuditRestore","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","void"],"category":"Services","url":"Audit.Restore","label":"Restore log entries","requires":null,"since":"","params":[{"name":"auditStorage","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"batchSize","description":"","type":"int","widget":null,"values":[],"order":0,"isRequired":false},{"name":"keepAlive","description":"","type":"int","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Auth.LoginAs","version":"unknown","aliases":[],"description":"Login As the given user. If no user is given a system login is performed. This is a void operations - the input will be returned back as the output.","operationClass":"org.nuxeo.ecm.automation.core.operations.login.LoginAs","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","void","document","document"],"category":"Users & Groups","url":"Auth.LoginAs","label":"Login As","requires":null,"since":"","params":[{"name":"name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Auth.Logout","version":"unknown","aliases":[],"description":"Perform a logout. This should be used only after using the Login As operation to restore original login. This is a void operations - the input will be returned back as the output.","operationClass":"org.nuxeo.ecm.automation.core.operations.login.Logout","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","void","document","document"],"category":"Users & Groups","url":"Auth.Logout","label":"Logout","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Blob.AttachOnDocument","version":"unknown","aliases":["Blob.Attach"],"description":"Attach the input file to the document given as a parameter. If the xpath points to a blob list then the blob is appended to the list, otherwise the xpath should point to a blob property. If the save parameter is set the document modification will be automatically saved. Return the blob.","operationClass":"org.nuxeo.ecm.automation.core.operations.blob.AttachBlob","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["blob","blob","bloblist","bloblist"],"category":"Files","url":"Blob.AttachOnDocument","label":"Attach File","requires":null,"since":"","params":[{"name":"document","description":"","type":"document","widget":null,"values":[],"order":0,"isRequired":true},{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"xpath","description":"","type":"string","widget":null,"values":["file:content"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Blob.BulkDownload","version":"unknown","aliases":[],"description":"Prepare a Zip of a list of documents.","operationClass":"org.nuxeo.ecm.automation.core.operations.blob.BulkDownload","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["documents","blob"],"category":"Files","url":"Blob.BulkDownload","label":"Bulk Download","requires":null,"since":"","params":[{"name":"filename","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Blob.ConcatenatePDFs","version":"unknown","aliases":[],"description":"Given a File document holding a pdf on the file:content property and 2 pdfs on the files:files property, the following operation will provide a pdf that is the result of the merge of all the pdfs, with the content of the one in file:content property first.","operationClass":"org.nuxeo.ecm.automation.core.operations.blob.ConcatenatePDFs","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["bloblist","blob","blob","blob"],"category":"Conversion","url":"Blob.ConcatenatePDFs","label":"Concatenate PDFs","requires":null,"since":"","params":[{"name":"filename","description":"The merge pdf result filename.","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"blob_to_append","description":"Optional blob reference in context to append in first place.","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Blob.Convert","version":"unknown","aliases":[],"description":"Convert the input file to a file of the given mime-type and return the new file.","operationClass":"org.nuxeo.ecm.automation.core.operations.blob.ConvertBlob","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["bloblist","bloblist","blob","blob","document","blob"],"category":"Conversion","url":"Blob.Convert","label":"Convert to given mime-type","requires":null,"since":"5.7","params":[{"name":"mimeType","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Blob.CreateFromURL","version":"unknown","aliases":["Blob.Create"],"description":"Creates a file from a given URL. The file parameter specifies how to retrieve the file content. It should be an URL to the file you want to use as the source. You can also use an expression to get an URL from the context. Returns the created file.","operationClass":"org.nuxeo.ecm.automation.core.operations.blob.CreateBlob","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","blob"],"category":"Fetch","url":"Blob.CreateFromURL","label":"File From URL","requires":null,"since":"","params":[{"name":"file","description":"","type":"resource","widget":null,"values":[],"order":0,"isRequired":true},{"name":"encoding","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"filename","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"mime-type","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Blob.CreateZip","version":"unknown","aliases":[],"description":"Creates a zip file from the input file(s). If no file name is given, the first file name in the input will be used. Returns the zip file.","operationClass":"org.nuxeo.ecm.automation.core.operations.blob.CreateZip","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["bloblist","blob","blob","blob"],"category":"Files","url":"Blob.CreateZip","label":"Zip","requires":null,"since":"","params":[{"name":"filename","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Blob.ExportToFS","version":"unknown","aliases":["Blob.ToFile"],"description":"Save the input blob(s) as a file(s) into the given target directory. The blob(s) filename is used as the file name. You can specify an optional <b>prefix</b> string to prepend to the file name. Return back the blob(s).","operationClass":"org.nuxeo.ecm.automation.core.operations.blob.BlobToFile","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["blob","blob","bloblist","bloblist"],"category":"Files","url":"Blob.ExportToFS","label":"Export to File","requires":null,"since":"","params":[{"name":"directory","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"prefix","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Blob.PostToURL","version":"unknown","aliases":["Blob.Post"],"description":"Post the input file to a target HTTP URL. Returns back the input file.","operationClass":"org.nuxeo.ecm.automation.core.operations.blob.PostBlob","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["blob","blob","bloblist","bloblist"],"category":"Files","url":"Blob.PostToURL","label":"HTTP Post","requires":null,"since":"","params":[{"name":"url","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Blob.RemoveFromDocument","version":"unknown","aliases":["Blob.Remove"],"description":"Remove the file attached to the input document as specified by the 'xpath' parameter. If the 'xpath' point to a blob list then the list will be cleared. If the file to remove is part of a list it will be removed from the list otherwise the 'xpath' should point to a blob property that will be removed. If the save parameter is set the document modification will be automatically saved. Return the document.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.RemoveDocumentBlob","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Files","url":"Blob.RemoveFromDocument","label":"Remove File","requires":null,"since":"","params":[{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"xpath","description":"","type":"string","widget":null,"values":["file:content"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Blob.RunConverter","version":"unknown","aliases":[],"description":"Simply call a converter based on the 'converter' parameter. You can pass the converter properties with the 'properties' parameter.","operationClass":"org.nuxeo.ecm.automation.core.operations.blob.RunConverter","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["blob","blob"],"category":"Conversion","url":"Blob.RunConverter","label":"Blob.RunConverter","requires":null,"since":"7.1","params":[{"name":"converter","description":"The name of the converter to call","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"parameters","description":"The converter parameters to pass","type":"properties","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Blob.ToPDF","version":"unknown","aliases":[],"description":"Convert the input file to a PDF and return the new file.","operationClass":"org.nuxeo.ecm.automation.core.operations.blob.BlobToPDF","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["bloblist","bloblist","blob","blob","document","blob"],"category":"Conversion","url":"Blob.ToPDF","label":"Convert To PDF","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"BlobHolder.AttachOnCurrentDocument","version":"unknown","aliases":["BlobHolder.Attach"],"description":"Attach the input file(s) to the current document using the BlobHolder abstraction","operationClass":"org.nuxeo.ecm.automation.core.operations.services.BlobHolderAttach","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["bloblist","document","blob","document"],"category":"Files","url":"BlobHolder.AttachOnCurrentDocument","label":"Attach File or files to the currentDocument.","requires":null,"since":"","params":[{"name":"useMainBlob","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Bulk.RunAction","version":"unknown","aliases":[],"description":"Run a bulk action on a set of documents expressed by a NXQL.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.bulk.BulkRunAction","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","bulkstatus"],"category":"Services","url":"Bulk.RunAction","label":"Run a bulk command","requires":null,"since":"","params":[{"name":"action","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"batchSize","description":"","type":"int","widget":null,"values":[],"order":0,"isRequired":false},{"name":"bucketSize","description":"","type":"int","widget":null,"values":[],"order":0,"isRequired":false},{"name":"namedParameters","description":"Named parameters to pass to the page provider to fill in query variables.","type":"properties","widget":null,"values":[],"order":0,"isRequired":false},{"name":"parameters","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"providerName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"query","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"queryParams","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"quickFilters","description":"Quick filter properties (separated by comma)","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"repositoryName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Bulk.WaitForAction","version":"unknown","aliases":[],"description":"Wait until Bulk computation is done. This operation is meant to be used for tests. Its usage in production is not recommended.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.bulk.BulkWaitForAction","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","boolean"],"category":"Services","url":"Bulk.WaitForAction","label":"Wait for Bulk computation","requires":null,"since":"10.2","params":[{"name":"commandId","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"timeoutSecond","description":"","type":"long","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Business.BusinessCreateOperation","version":"unknown","aliases":[],"description":"This operation map pojo client side to document adapter server side and create NX document assuming that pojo and adapter have both properties in common.","operationClass":"org.nuxeo.ecm.automation.core.operations.business.BusinessCreateOperation","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["businessadapter","businessadapter"],"category":"Business","url":"Business.BusinessCreateOperation","label":"BusinessCreateOperation","requires":null,"since":"","params":[{"name":"name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"parentPath","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Business.BusinessFetchOperation","version":"unknown","aliases":[],"description":"This operation map pojo client side to document adapter server side and fetch the related NX document.","operationClass":"org.nuxeo.ecm.automation.core.operations.business.BusinessFetchOperation","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["businessadapter","businessadapter"],"category":"Business","url":"Business.BusinessFetchOperation","label":"BusinessFetchOperation","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Business.BusinessUpdateOperation","version":"unknown","aliases":[],"description":"This operation map pojo client side to document adapter server side and update the related NX document.","operationClass":"org.nuxeo.ecm.automation.core.operations.business.BusinessUpdateOperation","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["businessadapter","businessadapter"],"category":"Business","url":"Business.BusinessUpdateOperation","label":"BusinessUpdateOperation","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Collection.Create","version":"unknown","aliases":["Collection.CreateCollection"],"description":"Create a new collection. This is returning the document serialization of the created collection.","operationClass":"org.nuxeo.ecm.automation.core.operations.collections.CreateCollectionOperation","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","document","document","document"],"category":"Document","url":"Collection.Create","label":"Create a collection","requires":null,"since":"","params":[{"name":"name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"description","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Collection.GetDocumentsFromCollection","version":"unknown","aliases":[],"description":"Get the list of documents visible by the currentUser in a collection. This is returning a list of documents.","operationClass":"org.nuxeo.ecm.automation.core.operations.collections.GetDocumentsFromCollectionOperation","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["document","documents"],"category":"Document","url":"Collection.GetDocumentsFromCollection","label":"Get documents from collection","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Collection.RemoveFromCollection","version":"unknown","aliases":[],"description":"Remove a list of documents from a collection. No value is returned.","operationClass":"org.nuxeo.ecm.automation.core.operations.collections.RemoveFromCollectionOperation","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["document","document","documents","documents"],"category":"Document","url":"Collection.RemoveFromCollection","label":"Remove from collection","requires":null,"since":"","params":[{"name":"collection","description":"","type":"document","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Collection.Suggestion","version":"unknown","aliases":[],"description":"Get the collection list accessible by the current user. This is returning a blob containing a serialized JSON array..","operationClass":"org.nuxeo.ecm.automation.core.operations.collections.SuggestCollectionEntry","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","blob"],"category":"Services","url":"Collection.Suggestion","label":"Get collection suggestion","requires":null,"since":"","params":[{"name":"currentPageIndex","description":"","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"lang","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"pageSize","description":"","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"searchTerm","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Context.FetchDocument","version":"unknown","aliases":[],"description":"Fetch the input of the context as a document or list of documents. The document will become the input for the next operation.","operationClass":"org.nuxeo.ecm.automation.core.operations.FetchContextDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Fetch","url":"Context.FetchDocument","label":"Context Document(s)","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Context.FetchFile","version":"unknown","aliases":[],"description":"Fetch the input of the context as a file or list of files. The file(s) will become the input for the next operation.","operationClass":"org.nuxeo.ecm.automation.core.operations.FetchContextBlob","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["blob","blob","bloblist","bloblist"],"category":"Fetch","url":"Context.FetchFile","label":"Context File(s)","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Context.GetEmailsWithPermissionOnDoc","version":"unknown","aliases":["Document.GetPrincipalEmails"],"description":"Fetch the principal emails that have a given permission on the input document and then set them in the context under the given key variable name. The operation returns the input document. You can later use the list of principals set by this operation on the context from another operation. The 'key' argument represents the variable name and the 'permission' argument the permission to check. If the 'ignore groups' argument is false then groups are recursively resolved, extracting user members of these groups. Be <b>warned</b> that this may be a very consuming operation.<ul>Note that <li></li><li>groups are not included</li><li>the list pushed into the context is a string list of emails.</li></ul>","operationClass":"org.nuxeo.ecm.automation.core.operations.users.GetDocumentPrincipalEmails","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["document","document"],"category":"Users & Groups","url":"Context.GetEmailsWithPermissionOnDoc","label":"Get Principal Emails","requires":null,"since":"","params":[{"name":"permission","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"variable name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"ignore groups","description":"","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Context.GetUsersGroupIdsWithPermissionOnDoc","version":"unknown","aliases":["Document.GetUsersAndGroups"],"description":"Fetch the users and groups that have a given permission on the input document and then set them in the context under the given key variable name. The operation returns the input document. You can later use the list of identifiers set by this operation on the context from another operation. The 'key' argument represents the variable name and the 'permission' argument the permission to check. If the 'ignore groups' argument is false then groups will be part of the result. If the 'resolve groups' argument is true then groups are recursively resolved, adding user members of these groups in place of them. Be <b>warned</b> that this may be a very consuming operation. If the 'prefix identifiers' argument is true, then user identifiers are prefixed by 'user:' and groups identifiers are prefixed by 'group:'.","operationClass":"org.nuxeo.ecm.automation.core.operations.users.GetDocumentUsersAndGroups","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["document","document"],"category":"Users & Groups","url":"Context.GetUsersGroupIdsWithPermissionOnDoc","label":"Get Users and Groups","requires":null,"since":"","params":[{"name":"permission","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"variable name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"ignore groups","description":"","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false},{"name":"prefix identifiers","description":"","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false},{"name":"resolve groups","description":"","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Context.PopBlob","version":"unknown","aliases":["Blob.Pop"],"description":"Restore the last saved input file in the context input stack. This operation must be used only if a PUSH operation was previously made. Return the last <i>pushed</i> file.","operationClass":"org.nuxeo.ecm.automation.core.operations.stack.PopBlob","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","blob"],"category":"Push & Pop","url":"Context.PopBlob","label":"Pop File","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Context.PopBlobList","version":"unknown","aliases":["Blob.PopList"],"description":"Restore the last saved input file list in the context input stack","operationClass":"org.nuxeo.ecm.automation.core.operations.stack.PopBlobList","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","bloblist"],"category":"Push & Pop","url":"Context.PopBlobList","label":"Pop File List","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Context.PopDocument","version":"unknown","aliases":["Document.Pop"],"description":"Restore the last saved input document in the context input stack. This operation must be used only if a PUSH operation was previously made. Return the last <i>pushed</i> document.","operationClass":"org.nuxeo.ecm.automation.core.operations.stack.PopDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","document"],"category":"Push & Pop","url":"Context.PopDocument","label":"Pop Document","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Context.PopDocumentList","version":"unknown","aliases":["Document.PopList"],"description":"Restore the last saved input document list in the context input stack","operationClass":"org.nuxeo.ecm.automation.core.operations.stack.PopDocumentList","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","documents"],"category":"Push & Pop","url":"Context.PopDocumentList","label":"Pop Document List","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Context.PullBlob","version":"unknown","aliases":["Blob.Pull"],"description":"Restore the last saved input file in the context input stack. This operation must be used only if a PUSH operation was previously made. Return the first <i>pushed</i> file.","operationClass":"org.nuxeo.ecm.automation.core.operations.stack.PullBlob","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","blob"],"category":"Push & Pop","url":"Context.PullBlob","label":"Pull File","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Context.PullBlobList","version":"unknown","aliases":["Blob.PullList"],"description":"Restore the first saved input file list in the context input stack","operationClass":"org.nuxeo.ecm.automation.core.operations.stack.PullBlobList","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","bloblist"],"category":"Push & Pop","url":"Context.PullBlobList","label":"Pull File List","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Context.PullDocument","version":"unknown","aliases":["Document.Pull"],"description":"Restore the first saved input document in the context input stack. This operation must be used only if a PUSH operation was previously made. Return the first <i>pushed</i> document.","operationClass":"org.nuxeo.ecm.automation.core.operations.stack.PullDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","document"],"category":"Push & Pop","url":"Context.PullDocument","label":"Pull Document","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Context.PullDocumentList","version":"unknown","aliases":["Document.PullList"],"description":"Restore the first saved input document list in the context input stack","operationClass":"org.nuxeo.ecm.automation.core.operations.stack.PullDocumentList","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","documents"],"category":"Push & Pop","url":"Context.PullDocumentList","label":"Pull Document List","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Context.PushBlob","version":"unknown","aliases":["Blob.Push"],"description":"Push the input file on the context stack. The file can be restored later as the input using the corrresponding pop operation. Returns the input file.","operationClass":"org.nuxeo.ecm.automation.core.operations.stack.PushBlob","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["blob","blob"],"category":"Push & Pop","url":"Context.PushBlob","label":"Push File","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Context.PushBlobList","version":"unknown","aliases":["Blob.PushList"],"description":"Push the input file list on the context stack. The file list can be restored later as the input using the corrresponding pop operation. Returns the input file list.","operationClass":"org.nuxeo.ecm.automation.core.operations.stack.PushBlobList","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["bloblist","bloblist"],"category":"Push & Pop","url":"Context.PushBlobList","label":"Push File List","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Context.PushDocument","version":"unknown","aliases":["Document.Push"],"description":"Push the input document on the context stack. The document can be restored later as the input using the corrresponding pop operation. Returns the input document.","operationClass":"org.nuxeo.ecm.automation.core.operations.stack.PushDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document"],"category":"Push & Pop","url":"Context.PushDocument","label":"Push Document","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Context.PushDocumentList","version":"unknown","aliases":["Document.PushList"],"description":"Push the input document list on the context stack. The document list can be restored later as the input using the corrresponding pop operation. Returns the input document list.","operationClass":"org.nuxeo.ecm.automation.core.operations.stack.PushDocumentList","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["documents","documents"],"category":"Push & Pop","url":"Context.PushDocumentList","label":"Push Document List","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Context.RestoreBlobInput","version":"unknown","aliases":[],"description":"Restore the file input from a context variable given its name. Return the file.","operationClass":"org.nuxeo.ecm.automation.core.operations.RestoreBlobInput","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","blob"],"category":"Execution Context","url":"Context.RestoreBlobInput","label":"Restore File Input","requires":null,"since":"","params":[{"name":"name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Context.RestoreBlobInputFromScript","version":"unknown","aliases":[],"description":"Run a script and return the result blob object of the script the output of the operation","operationClass":"org.nuxeo.ecm.automation.core.operations.RestoreBlobInputFromScript","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","blob"],"category":"Execution Context","url":"Context.RestoreBlobInputFromScript","label":"Restore input blob from a script","requires":null,"since":"","params":[{"name":"script","description":"","type":"string","widget":"TextArea","values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Context.RestoreBlobsInput","version":"unknown","aliases":[],"description":"Restore the file list input from a context variable given its name. Return the files.","operationClass":"org.nuxeo.ecm.automation.core.operations.RestoreBlobsInput","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","bloblist"],"category":"Execution Context","url":"Context.RestoreBlobsInput","label":"Restore Files Input","requires":null,"since":"","params":[{"name":"name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Context.RestoreBlobsInputFromScript","version":"unknown","aliases":[],"description":"Run a script and return the result Blobs object of the script the output of the operation","operationClass":"org.nuxeo.ecm.automation.core.operations.RestoreBlobsInputFromScript","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","bloblist"],"category":"Execution Context","url":"Context.RestoreBlobsInputFromScript","label":"Restore input blobs from a script","requires":null,"since":"","params":[{"name":"script","description":"","type":"string","widget":"TextArea","values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Context.RestoreDocumentInput","version":"unknown","aliases":[],"description":"Restore the document input from a context variable given its name. Return the document.","operationClass":"org.nuxeo.ecm.automation.core.operations.RestoreDocumentInput","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","document"],"category":"Execution Context","url":"Context.RestoreDocumentInput","label":"Restore Document Input","requires":null,"since":"","params":[{"name":"name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Context.RestoreDocumentInputFromScript","version":"unknown","aliases":[],"description":"Run a script and return the result Document object of the script the output of the operation","operationClass":"org.nuxeo.ecm.automation.core.operations.RestoreDocumentInputFromScript","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","document"],"category":"Execution Context","url":"Context.RestoreDocumentInputFromScript","label":"Restore input document from a script","requires":null,"since":"","params":[{"name":"script","description":"","type":"string","widget":"TextArea","values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Context.RestoreDocumentsInput","version":"unknown","aliases":[],"description":"Restore the document list input from a context variable given its name. Return the document list.","operationClass":"org.nuxeo.ecm.automation.core.operations.RestoreDocumentsInput","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","documents"],"category":"Execution Context","url":"Context.RestoreDocumentsInput","label":"Restore Documents Input","requires":null,"since":"","params":[{"name":"name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Context.RestoreDocumentsInputFromScript","version":"unknown","aliases":[],"description":"Run a script and return the result documents object of the script the output of the operation","operationClass":"org.nuxeo.ecm.automation.core.operations.RestoreDocumentsInputFromScript","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","documents"],"category":"Execution Context","url":"Context.RestoreDocumentsInputFromScript","label":"Restore input documents from a script","requires":null,"since":"","params":[{"name":"script","description":"","type":"string","widget":"TextArea","values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Context.RunDocumentOperationInNewTx","version":"unknown","aliases":[],"description":"Run an operation chain in a separate tx. The 'parameters' injected are accessible in the subcontext ChainParameters. For instance, @{ChainParameters['parameterKey']}.","operationClass":"org.nuxeo.ecm.automation.core.operations.execution.RunInNewTransaction","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","void"],"category":"Execution Flow","url":"Context.RunDocumentOperationInNewTx","label":"Run Document Chain in new Tx","requires":null,"since":"","params":[{"name":"id","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"isolate","description":"","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false},{"name":"parameters","description":"Accessible in the subcontext ChainParameters. For instance, @{ChainParameters['parameterKey']}.","type":"properties","widget":null,"values":[],"order":0,"isRequired":false},{"name":"rollbackGlobalOnError","description":"","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false},{"name":"timeout","description":"","type":"integer","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Context.SetInputAsVar","version":"unknown","aliases":[],"description":"Set a context variable that points to the current input object. You must give a name for the variable. This operation works on any input type and return back the input as the output.","operationClass":"org.nuxeo.ecm.automation.core.operations.SetInputAsVar","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","void"],"category":"Execution Context","url":"Context.SetInputAsVar","label":"Set Context Variable From Input","requires":null,"since":"","params":[{"name":"name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Context.SetVar","version":"unknown","aliases":[],"description":"Set a context variable given a name and the value. To compute the value at runtime from the current context you should use an EL expression as the value. This operation works on any input type and return back the input as the output.","operationClass":"org.nuxeo.ecm.automation.core.operations.SetVar","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","void"],"category":"Execution Context","url":"Context.SetVar","label":"Set Context Variable","requires":null,"since":"","params":[{"name":"name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"value","description":"","type":"object","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Counters.GET","version":"unknown","aliases":[],"description":"Retrieve data collected by one or more Counters","operationClass":"org.nuxeo.ecm.automation.core.operations.management.GetCounters","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","blob"],"category":"Services","url":"Counters.GET","label":"Retrieve counters values","requires":null,"since":"","params":[{"name":"counterNames","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Directory.CreateEntries","version":"unknown","aliases":[],"description":"Creates directory entries. Entries are sent as a JSON array. Returning the created entries ids as a JSON array.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.directory.CreateDirectoryEntries","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","blob"],"category":"Services","url":"Directory.CreateEntries","label":"Creates directory entries","requires":null,"since":"","params":[{"name":"directoryName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"entries","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Directory.CreateVocabularyEntry","version":"unknown","aliases":[],"description":"Add a new entry in the <i>vocabularyName</i> vocabulary only if <i>id</i> is not found (an existing entry isnot updated). If <i>label</i> is empty, it is set to the id. WARNING: Current user must have enough rights to write in a vocabulary.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.directory.CreateVocabularyEntry","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","void"],"category":"Services","url":"Directory.CreateVocabularyEntry","label":"Vocabulary: Add Entry","requires":null,"since":"","params":[{"name":"id","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"vocabularyName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"label","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"obsolete","description":"","type":"long","widget":null,"values":[],"order":0,"isRequired":false},{"name":"ordering","description":"","type":"long","widget":null,"values":[],"order":0,"isRequired":false},{"name":"parent","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Directory.DeleteEntries","version":"unknown","aliases":[],"description":"Deletes directory entries. Entries ids to delete are sent through a JSON array. Returns deleted entries id as a JSON array.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.directory.DeleteDirectoryEntries","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","blob"],"category":"Services","url":"Directory.DeleteEntries","label":"Deletes directory entries","requires":null,"since":"","params":[{"name":"directoryName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"entries","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"markObsolete","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Directory.Entries","version":"unknown","aliases":[],"description":"Get the entries of a directory. This is returning a blob containing a serialized JSON array. The input document, if specified, is used as a context for a potential local configuration of the directory.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.GetDirectoryEntries","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","blob","document","blob"],"category":"Services","url":"Directory.Entries","label":"Get directory entries","requires":null,"since":"","params":[{"name":"directoryName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"lang","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"translateLabels","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Directory.LoadFromCSV","version":"unknown","aliases":[],"description":"Load directory entries from a CSV file. Depending on the data loading policy, duplicate entries are ignored, updated or trigger an error.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.directory.LoadFromCSV","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["blob","void"],"category":"Services","url":"Directory.LoadFromCSV","label":"Load directory entries from CSV file","requires":null,"since":"","params":[{"name":"dataLoadingPolicy","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"directoryName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Directory.Projection","version":"unknown","aliases":[],"description":"Executes a query using given filter and return only the column *<b>columnName</b>*. The result is assigned to the context variable *<b>variableName</b>*. The filters are specified as <i>key=value</i> pairs separated by a new line. The key used for a filter is the column name of the directory. To specify multi-line values you can use a \\ character followed by a new line. <p>Example:<pre>firstName=John<br>lastName=doe</pre>By default, the search filters use exact match. You can do a fulltext search on some specific columns using the fulltextFields. it's specified as comma separated columnName, for instance : <p>Example:<pre>firstName,lastName</pre>","operationClass":"org.nuxeo.ecm.automation.core.operations.services.directory.DirectoryProjection","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","void"],"category":"Services","url":"Directory.Projection","label":"Get a Directory Projection","requires":null,"since":"5.7.2","params":[{"name":"columnName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"directoryName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"variableName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"filters","description":"","type":"properties","widget":null,"values":[],"order":0,"isRequired":false},{"name":"fulltextFields","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Directory.ReadEntries","version":"unknown","aliases":[],"description":"Reads directory entries. Entries ids to read are sent as a JSON array. Returns the entries as a JSON array of JSON objects containing all fields.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.directory.ReadDirectoryEntries","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","blob"],"category":"Services","url":"Directory.ReadEntries","label":"Reads directory entries","requires":null,"since":"","params":[{"name":"directoryName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"entries","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"lang","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"translateLabels","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Directory.SuggestEntries","version":"unknown","aliases":[],"description":"Get the entries suggestions of a directory. This is returning a blob containing a serialized JSON array. Prefix parameter is used to filter the entries.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.directory.SuggestDirectoryEntries","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","blob"],"category":"Services","url":"Directory.SuggestEntries","label":"Get suggested directory entries","requires":null,"since":"","params":[{"name":"directoryName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"absoluteLabelSeparator","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"canSelectParent","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"caseSensitive","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"contains","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"dbl10n","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"displayObsoleteEntries","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"filterParent","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"filters","description":"","type":"properties","widget":null,"values":[],"order":0,"isRequired":false},{"name":"keySeparator","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"labelFieldName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"lang","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"limit","description":"","type":"int","widget":null,"values":[],"order":0,"isRequired":false},{"name":"localize","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"searchTerm","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Directory.UpdateEntries","version":"unknown","aliases":[],"description":"Updates directory entries. Entries to update are sent as a JSON array. Returns the updated entries ids as a JSON array of JSON objects containing all fields","operationClass":"org.nuxeo.ecm.automation.core.operations.services.directory.UpdateDirectoryEntries","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","blob"],"category":"Services","url":"Directory.UpdateEntries","label":"Updates directory entries","requires":null,"since":"","params":[{"name":"directoryName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"entries","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Document.AddACE","version":"unknown","aliases":["Document.SetACE"],"description":"Set Acces Control Entry on the input document(s). Returns the document(s).","operationClass":"org.nuxeo.ecm.automation.core.operations.document.SetDocumentACE","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.AddACE","label":"Set ACL","requires":null,"since":"","params":[{"name":"permission","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"user","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"acl","description":"","type":"string","widget":null,"values":["local"],"order":0,"isRequired":false},{"name":"grant","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"overwrite","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.AddFacet","version":"unknown","aliases":["Document.AddFacet"],"description":"Adds the facet to the document. <p>WARNING: The save parameter is true by default, which means the document is saved in the database after adding the facet. It must be set to false when the operation is used in the context of an event that will fail if the document is saved (empty document created, about to create, before modification, ...).</p>","operationClass":"org.nuxeo.ecm.automation.core.operations.document.AddFacet","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.AddFacet","label":"Add Facet","requires":null,"since":"","params":[{"name":"facet","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.AddItemToListProperty","version":"unknown","aliases":["Document.AddItemToListProperty"],"description":"This operation can add new entries to a multivalued complex property. The xpath parameter is the property that should be updated (e.g.: contract:customers). The value parameter is a String containing the JSON-formatted list of entries to add. E.g.: assuming a Contract document type holding customers, each having a firstName and lastName property: [{\"lastName\":\"Norris\", \"firstName\": \"Chuck\"}, {\"lastName\":\"Lee\", \"firstName\": \"Bruce\"}] . Activating the save parameter forces the changes to be written in database immediately (at the cost of performance loss), otherwise changes made to the document will be written in bulk when the chain succeeds. <p>Save parameter has to be turned off when this operation is used in the context of the empty document created, about to create, before document modification, document modified events.</p>","operationClass":"org.nuxeo.ecm.automation.core.operations.document.AddItemToListProperty","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.AddItemToListProperty","label":"Adds an Entry Into a Multivalued Complex Property","requires":null,"since":"","params":[{"name":"complexJsonProperties","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"xpath","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.AddPermission","version":"unknown","aliases":["Document.AddACL"],"description":"Add Permission on the input document(s). Returns the document(s).","operationClass":"org.nuxeo.ecm.automation.core.operations.document.AddPermission","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.AddPermission","label":"Add Permission","requires":null,"since":"","params":[{"name":"permission","description":"ACE permission.","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"acl","description":"ACL name.","type":"string","widget":null,"values":["local"],"order":0,"isRequired":false},{"name":"begin","description":"ACE begin date.","type":"date","widget":null,"values":[],"order":0,"isRequired":false},{"name":"blockInheritance","description":"Block inheritance or not.","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"comment","description":"Comment","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"email","description":"ACE target user/group.","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"end","description":"ACE end date.","type":"date","widget":null,"values":[],"order":0,"isRequired":false},{"name":"notify","description":"Notify the user or not","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"username","description":"ACE target user/group.","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"users","description":"ACE target set of users and/or groups.","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.AddRelation","version":"unknown","aliases":["Relations.CreateRelation"],"description":"Create a relation between 2 documents. The subject of the relation will be the input of the operation and the object of the relation will be retrieved from the context using the 'object' field. The 'predicate' field specifies the relation predicate (When using a known predicate, use the full URL like 'http://purl.org/dc/terms/IsBasedOn', unknown predicates will be treated as plain strings and be the same on the subject and object). The 'outgoing' flag indicates the direction of the relation - the default is false which means the relation will go from the input object to the object specified as 'object' parameter. Return back the subject document.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.CreateRelation","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["document","document","documents","documents"],"category":"Services","url":"Document.AddRelation","label":"Create Relation","requires":null,"since":"","params":[{"name":"object","description":"","type":"document","widget":null,"values":[],"order":0,"isRequired":true},{"name":"predicate","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"outgoing","description":"","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.AddToCollection","version":"unknown","aliases":["Collection.AddToCollection"],"description":"Add a list of documents in a collection. No value is returned.","operationClass":"org.nuxeo.ecm.automation.core.operations.collections.AddToCollectionOperation","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["document","document","documents","documents"],"category":"Document","url":"Document.AddToCollection","label":"Add document to collection","requires":null,"since":"","params":[{"name":"collection","description":"","type":"document","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Document.AddToFavorites","version":"unknown","aliases":["Collection.AddToFavorites"],"description":"Add a list of documents in the favorites. No value is returned.","operationClass":"org.nuxeo.ecm.automation.core.operations.collections.AddToFavoritesOperation","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["document","document","documents","documents"],"category":"Document","url":"Document.AddToFavorites","label":"Add document to favorites","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Document.BlockPermissionInheritance","version":"unknown","aliases":[],"description":"Block the permission inheritance on the input document(s). Returns the document(s).","operationClass":"org.nuxeo.ecm.automation.core.operations.document.BlockPermissionInheritance","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.BlockPermissionInheritance","label":"Block Permission Inheritance","requires":null,"since":"","params":[{"name":"acl","description":"ACL name.","type":"string","widget":null,"values":["local"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.CheckIn","version":"unknown","aliases":[],"description":"Checks in the input document. Returns back the document.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.CheckInDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.CheckIn","label":"Check In","requires":null,"since":"","params":[{"name":"version","description":"","type":"string","widget":null,"values":["none","minor","major"],"order":0,"isRequired":true},{"name":"comment","description":"","type":"string","widget":null,"values":[],"order":1,"isRequired":false},{"name":"versionVarName","description":"","type":"string","widget":null,"values":[],"order":2,"isRequired":false}]},{"@type":"NXOperation","name":"Document.CheckOut","version":"unknown","aliases":[],"description":"Checks out the input document. Returns back the document.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.CheckOutDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.CheckOut","label":"Check Out","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Document.Copy","version":"unknown","aliases":[],"description":"Copy the input document into the given Folderish. The name parameter will be used as the copy name otherwise if not specified the original name will be preserved. The target Folderish can be specified as an absolute or relative path (relative to the input document) as an UID or by using an EL expression. Return the newly created document (the copy). The document is copied with its children recursively. The resetLifeCycle parameter allows to reset the life cycle of the copied document.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.CopyDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.Copy","label":"Copy","requires":null,"since":"","params":[{"name":"target","description":"","type":"document","widget":null,"values":[],"order":0,"isRequired":true},{"name":"name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"resetLifeCycle","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.CopySchema","version":"unknown","aliases":[],"description":"Copy all the properties from the schema of the source into the input document. Either sourceId or sourcePath parameter should be filled. When both are filled, sourceId will be used. If saveDocument is true, the document is saved. If save is true, the session is saved (setting save to true and saveDocument to false has no effect, the session will not be saved)","operationClass":"org.nuxeo.ecm.automation.core.operations.document.CopySchema","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.CopySchema","label":"Copy Schema","requires":null,"since":"","params":[{"name":"schema","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"saveDocument","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"sourceId","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"sourcePath","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.Create","version":"unknown","aliases":[],"description":"Create a new document in the input folder. You can initialize the document properties using the 'properties' parameter. The properties are specified as <i>key=value</i> pairs separated by a new line. The key used for a property is the property xpath. To specify multi-line values, you can use a \\ character followed by a new line. <p>Example:<pre>dc:title=The Document Title<br>dc:description=foo bar</pre>. Returns the created document.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.CreateDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.Create","label":"Create","requires":null,"since":"","params":[{"name":"type","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"properties","description":"","type":"properties","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.CreateLiveProxy","version":"unknown","aliases":["CreateProxyLive"],"description":"This operation will create a proxy that points the given document as input. This is like a symbolic link for File System. The proxy will be created into the destination specified as parameter. <p>The document returned is the proxy live.<p> Remark: <b>you will have a strange behavior if the input is a folderish.</b>","operationClass":"org.nuxeo.ecm.automation.core.operations.document.CreateProxyLive","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.CreateLiveProxy","label":"Create Proxy Live","requires":null,"since":"","params":[{"name":"Destination Path","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Document.CreateVersion","version":"unknown","aliases":[],"description":"Create a new version for the input document. Any modification made on the document by the chain will be automatically saved. Increment version if this was specified through the 'snapshot' parameter. This operation should not be used in the context of the empty document created, about to create, before document modification, document modified events. Returns the live document (not the version).","operationClass":"org.nuxeo.ecm.automation.core.operations.document.CreateVersion","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.CreateVersion","label":"Snapshot Version","requires":null,"since":"","params":[{"name":"increment","description":"","type":"string","widget":"Option","values":["None","Minor","Major"],"order":0,"isRequired":false},{"name":"saveDocument","description":"Save the document in the session after versioning","type":"boolean","widget":"Check","values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.Delete","version":"unknown","aliases":[],"description":"Delete the input document. The previous context input will be restored for the next operation.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.DeleteDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.Delete","label":"Delete","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Document.DeleteRelation","version":"unknown","aliases":["Relations.DeleteRelation"],"description":"Delete a relation between 2 documents. The subject of the relation will be the input of the operation and the object of the relation will be retrieved from the context using the 'object' field. The 'predicate' field specifies the relation predicate (When using a known predicate, use the full URL like 'purl.org/dc/terms/IsBasedOn', unknown predicates will be treated as plain strings and be the same on the subject and object). The 'outgoing' flag indicates the direction of the relation - the default is false which means the relation will go from the input object to the object specified as 'object' parameter. Return back the subject document.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.DeleteRelation","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["document","document","documents","documents"],"category":"Services","url":"Document.DeleteRelation","label":"Delete Relation","requires":null,"since":"","params":[{"name":"object","description":"","type":"document","widget":null,"values":[],"order":0,"isRequired":true},{"name":"predicate","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"outgoing","description":"","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.EmptyTrash","version":"unknown","aliases":[],"description":"Emtpy a folder's trash by permanently deleting documents marked as trashed.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.EmptyTrash","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","void"],"category":"Document","url":"Document.EmptyTrash","label":"Empty Trash","requires":null,"since":"","params":[{"name":"parent","description":"A Folderish document whose trash will be emptied","type":"document","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Document.FetchByProperty","version":"unknown","aliases":[],"description":"For each specified string property value, fetch all documents that match the property and the optional where clause. Matching documents are collected into a list and the returned to the next operation. The operation has no input.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.FetchByProperty","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","documents"],"category":"Fetch","url":"Document.FetchByProperty","label":"Fetch By Property","requires":null,"since":"","params":[{"name":"property","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"values","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":true},{"name":"query","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.Filter","version":"unknown","aliases":[],"description":"Filter the input list of documents given a condition. The condition can be expressed using 4 parameters: types, facets, lifecycle and condition. If more than one parameter is specified an AND will be used to group conditions. <br>The 'types' parameter can take a comma separated list of document type: File,Note.<br>The 'facet' parameter can take a single facet name.<br> The 'life cycle' parameter takes a name of a life cycle state the document should have.<br>The 'condition' parameter can take any EL expression.<p>Returns the list of documents that match the filter condition.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.FilterDocuments","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","documents","documents","documents"],"category":"Document","url":"Document.Filter","label":"Filter List","requires":null,"since":"","params":[{"name":"class","description":"","type":"string","widget":"Option","values":["Any","Regular Document","Document Link","Published Document","Document Proxy","Document Version","Immutable Document","Mutable Document"],"order":0,"isRequired":false},{"name":"condition","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"facet","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"lifecycle","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"pathStartsWith","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"types","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.FollowLifecycleTransition","version":"unknown","aliases":["Document.SetLifeCycle"],"description":"Follow the given transition on the input document life cycle state","operationClass":"org.nuxeo.ecm.automation.core.operations.document.SetDocumentLifeCycle","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.FollowLifecycleTransition","label":"Follow Life Cycle Transition","requires":null,"since":"","params":[{"name":"value","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Document.GetBlob","version":"unknown","aliases":["Blob.Get"],"description":"Gets a file attached to the input document. The file location is specified using an xpath to the blob property of the document. Returns the file.","operationClass":"org.nuxeo.ecm.automation.core.operations.blob.GetDocumentBlob","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","blob","documents","bloblist"],"category":"Files","url":"Document.GetBlob","label":"Get Document File","requires":null,"since":"","params":[{"name":"xpath","description":"","type":"string","widget":null,"values":["file:content"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.GetBlobs","version":"unknown","aliases":["Blob.GetAll"],"description":"Gets a list of all blobs that are attached on the input document. Returns a list of files.","operationClass":"org.nuxeo.ecm.automation.core.operations.blob.GetAllDocumentBlobs","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","bloblist","documents","bloblist"],"category":"Files","url":"Document.GetBlobs","label":"Get All Document Files","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Document.GetBlobsByProperty","version":"unknown","aliases":["Blob.GetList"],"description":"Gets a list of files that are attached on the input document. The files location should be specified using the blob list property xpath. Returns a list of files.","operationClass":"org.nuxeo.ecm.automation.core.operations.blob.GetDocumentBlobs","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","bloblist","documents","bloblist"],"category":"Files","url":"Document.GetBlobsByProperty","label":"Get Document Files","requires":null,"since":"","params":[{"name":"xpath","description":"","type":"string","widget":null,"values":["files:files"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.GetChild","version":"unknown","aliases":[],"description":"Get a child document given its name. Take as input the parent document and return the child document.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.GetDocumentChild","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.GetChild","label":"Get Child","requires":null,"since":"","params":[{"name":"name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Document.GetChildren","version":"unknown","aliases":[],"description":"Get the children of a document. The list of children will become the input for the next operation","operationClass":"org.nuxeo.ecm.automation.core.operations.document.GetDocumentChildren","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","documents","documents","documents"],"category":"Document","url":"Document.GetChildren","label":"Get Children","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Document.GetLastVersion","version":"unknown","aliases":["Document.GetLastVersion"],"description":"Returns the last version of the document if it exists.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.GetLastDocumentVersion","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.GetLastVersion","label":"Get Last version","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Document.GetLinkedDocuments","version":"unknown","aliases":["Relations.GetRelations"],"description":"Get the relations for the input document. The 'outgoing' parameter ca be used to specify whether outgoing or incoming relations should be returned. Retuns a document list.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.GetRelations","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["document","documents"],"category":"Services","url":"Document.GetLinkedDocuments","label":"Get Linked Documents","requires":null,"since":"","params":[{"name":"predicate","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"graphName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"outgoing","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.GetParent","version":"unknown","aliases":[],"description":"Get the parent document of the input document. The parent document will become the input for the next operation. You can use the 'type' parameter to specify which parent to select from the document ancestors","operationClass":"org.nuxeo.ecm.automation.core.operations.document.GetDocumentParent","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.GetParent","label":"Get Parent","requires":null,"since":"","params":[{"name":"type","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.GetVersions","version":"unknown","aliases":[],"description":"Gets the versions of the input document.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.GetDocumentVersions","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","documents"],"category":"Document","url":"Document.GetVersions","label":"Get Versions","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Document.Lock","version":"unknown","aliases":[],"description":"Lock the input document for the current user. Returns back the locked document.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.LockDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.Lock","label":"Lock","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Document.Mail","version":"unknown","aliases":["Notification.SendMail"],"description":"Send an email using the input document to the specified recipients. You can use the HTML parameter to specify whether you message is in HTML format or in plain text. Also you can attach any blob on the current document to the message by using the comma separated list of xpath expressions 'files'. If you xpath points to a blob list all blobs in the list will be attached. Return back the input document(s). If rollbackOnError is true, the whole chain will be rollbacked if an error occurs while trying to send the email (for instance if no SMTP server is configured), else a simple warning will be logged and the chain will continue.","operationClass":"org.nuxeo.ecm.automation.core.operations.notification.SendMail","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["document","document","documents","documents"],"category":"Notification","url":"Document.Mail","label":"Send E-Mail","requires":null,"since":"","params":[{"name":"from","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"message","description":"","type":"string","widget":"MailTemplate","values":[],"order":0,"isRequired":true},{"name":"subject","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"HTML","description":"","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false},{"name":"Strict User Resolution","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"bcc","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"cc","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"files","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"replyto","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"rollbackOnError","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"to","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"viewId","description":"","type":"string","widget":null,"values":["view_documents"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.Move","version":"unknown","aliases":[],"description":"Move the input document into the target folder.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.MoveDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.Move","label":"Move","requires":null,"since":"","params":[{"name":"target","description":"","type":"document","widget":null,"values":[],"order":0,"isRequired":true},{"name":"name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.MoveCollectionMember","version":"unknown","aliases":[],"description":"Move member1 of a collection right after member2 of the same collection. If member2 is not sepcified, the member1 is moved to first position. Returns true if successfully moved.","operationClass":"org.nuxeo.ecm.automation.core.operations.collections.MoveCollectionMemberOperation","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["document","boolean"],"category":"Document","url":"Document.MoveCollectionMember","label":"Reorder members of a collection","requires":null,"since":"","params":[{"name":"member1","description":"","type":"document","widget":null,"values":[],"order":0,"isRequired":true},{"name":"member2","description":"","type":"document","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.MoveToColdStorage","version":"unknown","aliases":[],"description":"Move the main document content to the cold storage.","operationClass":"org.nuxeo.ecm.automation.core.operations.coldstorage.MoveToColdStorage","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["document","document","documents","documents"],"category":"Files","url":"Document.MoveToColdStorage","label":"Move to Cold Storage","requires":null,"since":"","params":[{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.Order","version":"unknown","aliases":[],"description":"Given a parent document, order the source child before the destination child.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.OrderDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.Order","label":"Order Document","requires":null,"since":"10.1","params":[{"name":"before","description":"","type":"document","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.PublishToSection","version":"unknown","aliases":["Document.Publish"],"description":"Publish the input document into the target section. Existing proxy is overrided if the override attribute is set. Return the created proxy.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.PublishDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.PublishToSection","label":"Publish Document","requires":null,"since":"","params":[{"name":"target","description":"","type":"document","widget":null,"values":[],"order":0,"isRequired":true},{"name":"override","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.PublishToSections","version":"unknown","aliases":["Document.MultiPublish"],"description":"Publish the input document(s) into several target sections. The target is evaluated to a document list (can be a path, UID or EL expression). Existing proxy is overridden if the override attribute is set. Returns a list with the created proxies.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.MultiPublishDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","documents","documents","documents"],"category":"Document","url":"Document.PublishToSections","label":"Multi-Publish","requires":null,"since":"","params":[{"name":"target","description":"","type":"documents","widget":null,"values":[],"order":0,"isRequired":true},{"name":"override","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.Reload","version":"unknown","aliases":[],"description":"Reload the input document from the repository. Any previous modification made by the chain on this document will be lost if these modifications were not saved. Return the reloaded document.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.ReloadDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.Reload","label":"Reset","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Document.RemoveACL","version":"unknown","aliases":[],"description":"Remove a named Acces Control List from the input document(s). Returns the document(s).","operationClass":"org.nuxeo.ecm.automation.core.operations.document.RemoveDocumentACL","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.RemoveACL","label":"Remove ACL","requires":null,"since":"","params":[{"name":"acl","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Document.RemoveEntryOfMultivaluedProperty","version":"unknown","aliases":["RemoveEntryOfMultivaluedProperty"],"description":"Remove the first entry of the giving value in the multivalued xpath, does nothing if does not exist: <ul<li>if 'is Remove All' is check, all entry instance in the list.</li><li>if not will remove just the first one found</li></ul><p>Save parameter automatically saves the document in the database. It has to be turned off when this operation is used in the context of the empty document created, about to create, before document modification, document modified events.</p>","operationClass":"org.nuxeo.ecm.automation.core.operations.document.RemoveEntryOfMultiValuedProperty","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.RemoveEntryOfMultivaluedProperty","label":"Remove Entry Of Multivalued Property","requires":null,"since":"","params":[{"name":"value","description":"","type":"serializable","widget":null,"values":[],"order":0,"isRequired":true},{"name":"xpath","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"is Remove All","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.RemoveFacet","version":"unknown","aliases":["Document.RemoveFacet"],"description":"Removes the facet from the document. <p>WARNING: The save parameter is true by default, which means the document is saved in the database after removing the facet. It must be set to false when the operation is used in the context of an event that will fail if the document is saved (empty document created, about to create, before modification, ...).</p>","operationClass":"org.nuxeo.ecm.automation.core.operations.document.RemoveFacet","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.RemoveFacet","label":"Remove Facet","requires":null,"since":"","params":[{"name":"facet","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.RemoveFromFavorites","version":"unknown","aliases":["Collection.RemoveFromFavorites"],"description":"Remove a list of documents from the favorites. No value is returned.","operationClass":"org.nuxeo.ecm.automation.core.operations.collections.RemoveFromFavoritesOperation","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["document","document","documents","documents"],"category":"Document","url":"Document.RemoveFromFavorites","label":"Remove from favorites","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Document.RemoveItemFromListProperty","version":"unknown","aliases":[],"description":"This operation removes an entry from a multivalued property, specified using a xpath (e.g.: contract:customers). A specific entry can be removed using its index number. If the index parameter is left empty, all entries in the property are removed. Activating the save parameter forces the changes to be written in database immediately (at the cost of performance loss), otherwise changes made to the document will be written in bulk when the chain succeeds. <p>Save parameter has to be turned off when this operation is used in the context of the empty document created, about to create, before document modification, document modified events.</p>","operationClass":"org.nuxeo.ecm.automation.core.operations.document.RemoveItemFromListProperty","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.RemoveItemFromListProperty","label":"Removes an Entry From a Multivalued Property","requires":null,"since":"","params":[{"name":"xpath","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"index","description":"","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.RemovePermission","version":"unknown","aliases":[],"description":"Remove a permission given its id or all permissions for a given user on the input document(s). Parameter 'id' or 'user' must be set. Returns the document(s).","operationClass":"org.nuxeo.ecm.automation.core.operations.document.RemovePermission","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.RemovePermission","label":"Remove Permission","requires":null,"since":"","params":[{"name":"acl","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"id","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"user","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.RemoveProperty","version":"unknown","aliases":[],"description":"Remove the given property of the input document(s) as specified by the 'xpath' parameter. If the property points to a list then clear the list. Removing a property means setting it to null. Return the document(s).","operationClass":"org.nuxeo.ecm.automation.core.operations.document.RemoveProperty","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.RemoveProperty","label":"Remove Property","requires":null,"since":"","params":[{"name":"xpath","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.RemoveProxies","version":"unknown","aliases":["Document.RemoveProxies"],"description":"Will remove all proxies pointing on the input document. Useful for instance to unpublish a document. Notice: this operation will remove all proxies, including the ones pointing to the current document version (live proxies). Activating the save parameter forces the changes to be written in database immediately (at the cost of performance loss).","operationClass":"org.nuxeo.ecm.automation.core.operations.document.RemoveProxies","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.RemoveProxies","label":"Remove Document Proxies","requires":null,"since":"","params":[{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.ReplacePermission","version":"unknown","aliases":[],"description":"Replace a given permission on the input document(s). Returns the document(s).","operationClass":"org.nuxeo.ecm.automation.core.operations.document.ReplacePermission","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.ReplacePermission","label":"Replace Permission","requires":null,"since":"","params":[{"name":"id","description":"ACE id.","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"permission","description":"ACE permission.","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"username","description":"ACE target user/group.","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"acl","description":"ACL name.","type":"string","widget":null,"values":["local"],"order":0,"isRequired":false},{"name":"begin","description":"ACE begin date.","type":"date","widget":null,"values":[],"order":0,"isRequired":false},{"name":"comment","description":"Comment","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"end","description":"ACE end date.","type":"date","widget":null,"values":[],"order":0,"isRequired":false},{"name":"notify","description":"Notify the user or not","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.RequestRetrievalFromColdStorage","version":"unknown","aliases":[],"description":"Request a retrieval from cold storage of the content associated with the document.","operationClass":"org.nuxeo.ecm.automation.core.operations.coldstorage.RequestRetrievalFromColdStorage","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["document","document","documents","documents"],"category":"Files","url":"Document.RequestRetrievalFromColdStorage","label":"Request retrieval from cold storage","requires":null,"since":"","params":[{"name":"numberOfDaysOfAvailability","description":"The number of days that you want your cold storage content to be accessible.","type":"int","widget":null,"values":[],"order":0,"isRequired":true},{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.ResetSchema","version":"unknown","aliases":[],"description":"Reset all properties for a given schema or xpath. If saveDocument is true, the document is saved. If save is true, the session is saved (setting save to true and saveDocument to false has no effect, the session will not be saved).<p>WARNING: Default values are true for both saveDocument and save, which means the document is saved by default. saveDocument must be set to false when the operation is used in the context of an event that will fail if the document is saved (empty document created, about to create, before modification, ...).</p>","operationClass":"org.nuxeo.ecm.automation.core.operations.document.ResetSchema","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.ResetSchema","label":"Reset Schema","requires":null,"since":"","params":[{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"saveDocument","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"schema","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"xpath","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.RestoreVersion","version":"unknown","aliases":[],"description":"Restores a document to the input version document. If createVersion is true, a version of the live document will be created before restoring it to the input version. If checkout is true, a checkout will be processed after restoring the document, visible in the UI by the '+' symbol beside the version number. Returns the restored document.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.RestoreVersion","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document"],"category":"Document","url":"Document.RestoreVersion","label":"Restore Version","requires":null,"since":"","params":[{"name":"checkout","description":"","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false},{"name":"createVersion","description":"","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.Save","version":"unknown","aliases":[],"description":"Save in the repository any modification that was done on the input document. This operation should not be used in the context of the empty document created, about to create, before document modification, document modified events. Returns the saved document.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.SaveDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.Save","label":"Save","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Document.SetBlob","version":"unknown","aliases":["Blob.Set"],"description":"Set the input file to the given property on the input document. If the xpath points to a blob list then the blob is appended to the list, otherwise the xpath should point to a blob property. If the save parameter is set the document modification will be automatically saved. Return the document.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.SetDocumentBlob","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.SetBlob","label":"Set File","requires":null,"since":"","params":[{"name":"file","description":"","type":"blob","widget":null,"values":[],"order":0,"isRequired":true},{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"xpath","description":"","type":"string","widget":null,"values":["file:content"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.SetBlobName","version":"unknown","aliases":["Blob.SetFilename"],"description":"Modify the filename of a file stored in the input document. The file is found in the input document given its xpath specified through the 'xpath' parameter. Return back the input document.","operationClass":"org.nuxeo.ecm.automation.core.operations.blob.SetBlobFileName","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Files","url":"Document.SetBlobName","label":"Set File Name","requires":null,"since":"","params":[{"name":"name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"xpath","description":"","type":"string","widget":null,"values":["file:content"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.SetProperty","version":"unknown","aliases":[],"description":"Set a single property value on the input document. The property is specified using its xpath. Save parameter automatically saves the document in the database. It has to be turned off when this operation is used in the context of the empty document created, about to create, before document modification, document modified events. Returns the modified document.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.SetDocumentProperty","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.SetProperty","label":"Update Property","requires":null,"since":"","params":[{"name":"xpath","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"value","description":"","type":"serializable","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.Trash","version":"unknown","aliases":[],"description":"Moves documents to the trash.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.TrashDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.Trash","label":"Trash","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Document.UnblockPermissionInheritance","version":"unknown","aliases":[],"description":"Unblock the permission inheritance on the input document(s). Returns the document(s).","operationClass":"org.nuxeo.ecm.automation.core.operations.document.UnblockPermissionInheritance","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.UnblockPermissionInheritance","label":"Unblock Permission Inheritance","requires":null,"since":"","params":[{"name":"acl","description":"ACL name.","type":"string","widget":null,"values":["local"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Document.Unlock","version":"unknown","aliases":[],"description":"Unlock the input document. The unlock will be executed in the name of the current user. An user can unlock a document only if has the UNLOCK permission granted on the document or if it the same user as the one that locked the document. Return the unlocked document","operationClass":"org.nuxeo.ecm.automation.core.operations.document.UnlockDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.Unlock","label":"Unlock","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Document.Untrash","version":"unknown","aliases":[],"description":"Undeletes documents (and ancestors if needed to make them visible)..","operationClass":"org.nuxeo.ecm.automation.core.operations.document.UntrashDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.Untrash","label":"Untrash","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Document.Update","version":"unknown","aliases":[],"description":"Set multiple properties on the input document. The properties are specified as <i>key=value</i> pairs separated by a new line. The key used for a property is the property xpath. To specify multi-line values you can use a \\ character followed by a new line. <p>Example:<pre>dc:title=The Document Title<br>dc:description=foo bar</pre>For updating a date, you will need to expose the value as ISO 8601 format, for instance : <p>Example:<pre>dc:title=The Document Title<br>dc:issued=@{org.nuxeo.ecm.core.schema.utils.DateParser.formatW3CDateTime(CurrentDate.date)}</pre><p>Returns back the updated document.<p>To update a multi-valued field with multiple values:<pre>custom:multivalued=a,b,c,d</pre><p>Save parameter automatically saves the document in the database. It has to be turned off when this operation is used in the context of the empty document created, about to create, before document modification, document modified events.</p>","operationClass":"org.nuxeo.ecm.automation.core.operations.document.UpdateDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Document.Update","label":"Update Properties","requires":null,"since":"","params":[{"name":"properties","description":"","type":"properties","widget":null,"values":[],"order":0,"isRequired":true},{"name":"changeToken","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"DocumentMultivaluedProperty.addItem","version":"unknown","aliases":["AddEntryToMultivaluedProperty"],"description":"Add value into the field expressed by the xpath parameter. This field must be a multivalued metadata.<p> 'checkExists' parameter enables to add value only if doesn't already exists in the field: <ul><li> if checked, the value will not be added if it exists already in the list</li><li>if not checked the value will be always added</li</ul>.<p> Remark: <b>only works for a field that stores a list of scalars (string, boolean, date, int, long) and not list of complex types.</b></p><p>Save parameter automatically saves the document in the database. It has to be turned off when this operation is used in the context of the empty document created, about to create, before document modification, document modified events.</p>","operationClass":"org.nuxeo.ecm.automation.core.operations.document.AddEntryToMultiValuedProperty","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"DocumentMultivaluedProperty.addItem","label":"Add entry into multi-valued metadata","requires":null,"since":"","params":[{"name":"value","description":"","type":"serializable","widget":null,"values":[],"order":0,"isRequired":true},{"name":"xpath","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"checkExists","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"save","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Event.Fire","version":"unknown","aliases":["Notification.SendEvent"],"description":"Send a Nuxeo event.","operationClass":"org.nuxeo.ecm.automation.core.events.operations.FireEvent","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","void"],"category":"Notification","url":"Event.Fire","label":"Send Event","requires":null,"since":"","params":[{"name":"name","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"properties","description":"","type":"properties","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Favorite.Fetch","version":"unknown","aliases":[],"description":"Fetch the favorites document root collection.","operationClass":"org.nuxeo.ecm.automation.core.operations.collections.FetchFavorites","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","document"],"category":"Document","url":"Favorite.Fetch","label":"Fetch favorites root collection","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Favorite.GetDocuments","version":"unknown","aliases":["Collection.GetElementsInFavorite"],"description":"Get the list of documents visible from the currentUser's favorites. This is returning a list of documents.","operationClass":"org.nuxeo.ecm.automation.core.operations.collections.GetDocumentsFromFavoritesOperation","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["document","documents"],"category":"Document","url":"Favorite.GetDocuments","label":"Get documents from favorites","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"FileManager.Import","version":"unknown","aliases":[],"description":"Create Document(s) from Blob(s) using the FileManagerService. The destination container must be passed in a Context variable named currentDocument.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.FileManagerImport","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["bloblist","documents","blob","document"],"category":"Services","url":"FileManager.Import","label":"Create Document from file","requires":null,"since":"","params":[{"name":"noMimeTypeCheck","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"overwite","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"FileManager.ImportWithMetaData","version":"unknown","aliases":[],"description":null,"operationClass":"org.nuxeo.ecm.automation.core.impl.OperationChainCompiler.CompiledChainImpl","contributingComponent":"BuiltIn","signature":["bloblist","documents","blob","document"],"category":"Chain","url":"FileManager.ImportWithMetaData","label":"FileManager.ImportWithMetaData","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"FileManager.ImportWithProperties","version":"unknown","aliases":[],"description":"Create Document(s) from Blob(s) using the FileManagerService and set multiple properties on them.The destination container must be passed in a Context variable named currentDocument. <p>The properties are specified as <i>key=value</i> pairs separated by a new line. The key used for a property is the property xpath. To specify multi-line values you can use a \\ character followed by a new line. <p>Example:<pre>dc:title=The Document Title<br>dc:description=foo bar</pre>For updating a date, you will need to expose the value as ISO 8601 format, for instance : <p>Example:<pre>dc:title=The Document Title<br>dc:issued=@{org.nuxeo.ecm.core.schema.utils.DateParser.formatW3CDateTime(CurrentDate.date)}</pre><p>Returns back the updated document.<p>To update a multi-valued field with multiple values:<pre>custom:multivalued=a,b,c,d</pre>","operationClass":"org.nuxeo.ecm.automation.core.operations.services.FileManagerImportWithProperties","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["bloblist","documents","blob","document"],"category":"Services","url":"FileManager.ImportWithProperties","label":"Create Document from file","requires":null,"since":"","params":[{"name":"properties","description":"","type":"properties","widget":null,"values":[],"order":0,"isRequired":true},{"name":"mimeTypeCheck","description":"Whether to check the blob's mime-type against the file name, defaults to true","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"overwrite","description":"Whether to overwrite an existing file with the same title, defaults to false","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Group.CreateOrUpdate","version":"unknown","aliases":[],"description":"Create or Update Group","operationClass":"org.nuxeo.ecm.automation.core.operations.users.CreateOrUpdateGroup","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","void"],"category":"Users & Groups","url":"Group.CreateOrUpdate","label":"Create or Update Group","requires":null,"since":"","params":[{"name":"groupname","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"description","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"grouplabel","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"members","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"mode","description":"","type":"string","widget":null,"values":["createOrUpdate","create","update"],"order":0,"isRequired":false},{"name":"parentGroups","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"properties","description":"","type":"properties","widget":null,"values":[],"order":0,"isRequired":false},{"name":"subGroups","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"tenantId","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"JsonStack.ToggleDisplay","version":"unknown","aliases":[],"description":"Toggle stack display in json response for all rest api calls in Nuxeo","operationClass":"org.nuxeo.ecm.automation.core.operations.traces.JsonStackToggleDisplayOperation","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","boolean"],"category":"Execution Context","url":"JsonStack.ToggleDisplay","label":"Json Error Stack Display","requires":null,"since":"6.0","params":[{"name":"enableTrace","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Log","version":"unknown","aliases":["LogOperation"],"description":"Logging with log4j","operationClass":"org.nuxeo.ecm.automation.core.operations.LogOperation","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","void"],"category":"Notification","url":"Log","label":"Log","requires":null,"since":"","params":[{"name":"level","description":"","type":"string","widget":"Option","values":["info","debug","warn","error"],"order":0,"isRequired":true},{"name":"message","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"category","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Metrics.Start","version":"unknown","aliases":[],"description":"Starts Metrics reporters.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.MetricsStart","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","void"],"category":"Services","url":"Metrics.Start","label":"Metrics","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Metrics.Stop","version":"unknown","aliases":[],"description":"Stops Metrics rerporer.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.MetricsStop","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","void"],"category":"Services","url":"Metrics.Stop","label":"Metrics","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Proxy.GetSourceDocument","version":"unknown","aliases":["GetLiveDocument"],"description":"Get the live document even if this is a Proxy or Version Document.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.GetLiveDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Document","url":"Proxy.GetSourceDocument","label":"Get Live Document","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"Render.Document","version":"unknown","aliases":[],"description":"Get a document or a list of document in input and outputs one or more blobs that contain a rendered view for each input document given a rendering template. The template attribute may contain either the template content either a template URI. Template URis are strings in the form 'template:template_name' and will be located using the runtime resource service. Return the rendered file(s) as blob(s)","operationClass":"org.nuxeo.ecm.automation.core.rendering.operations.RenderDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","blob","documents","bloblist"],"category":"Conversion","url":"Render.Document","label":"Render Document","requires":null,"since":"","params":[{"name":"template","description":"","type":"string","widget":"TemplateResource","values":[],"order":0,"isRequired":true},{"name":"filename","description":"","type":"string","widget":null,"values":["output.ftl"],"order":0,"isRequired":false},{"name":"mimetype","description":"","type":"string","widget":null,"values":["text/xml"],"order":0,"isRequired":false},{"name":"type","description":"","type":"string","widget":"Option","values":["ftl","mvel"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Render.DocumentFeed","version":"unknown","aliases":[],"description":"Get a list of documents as input and outputs a single blob containing the rendering of the document list. The template attribute may contain either the template content either a template URI. Template URis are strings in the form 'template:template_name' and will be located using the runtime resource service. Return the rendered blob","operationClass":"org.nuxeo.ecm.automation.core.rendering.operations.RenderDocumentFeed","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["documents","blob"],"category":"Conversion","url":"Render.DocumentFeed","label":"Render Document Feed","requires":null,"since":"","params":[{"name":"template","description":"","type":"string","widget":"TemplateResource","values":[],"order":0,"isRequired":true},{"name":"charset","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"filename","description":"","type":"string","widget":null,"values":["output.ftl"],"order":0,"isRequired":false},{"name":"mimetype","description":"","type":"string","widget":null,"values":["text/xml"],"order":0,"isRequired":false},{"name":"type","description":"","type":"string","widget":"Option","values":["ftl","mvel"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Repository.GetDocument","version":"unknown","aliases":["Document.Fetch"],"description":"Fetch a document from the repository given its reference (path or UID). The document will become the input of the next operation.","operationClass":"org.nuxeo.ecm.automation.core.operations.document.FetchDocument","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","document"],"category":"Fetch","url":"Repository.GetDocument","label":"Document","requires":null,"since":"","params":[{"name":"value","description":"","type":"document","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Repository.PageProvider","version":"unknown","aliases":["Document.PageProvider"],"description":"Perform a named provider query on the repository. Result is paginated. The query result will become the input for the next operation.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.DocumentPageProviderOperation","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","documents"],"category":"Fetch","url":"Repository.PageProvider","label":"PageProvider","requires":null,"since":"","params":[{"name":"providerName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"currentPageIndex","description":"","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"documentLinkBuilder","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"highlights","description":"Highlight properties (separated by comma)","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"language","description":"","type":"string","widget":"Option","values":["NXQL"],"order":0,"isRequired":false},{"name":"namedParameters","description":"Named parameters to pass to the page provider to fill in query variables.","type":"properties","widget":null,"values":[],"order":0,"isRequired":false},{"name":"pageSize","description":"","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"queryParams","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"quickFilters","description":"Quick filter properties (separated by comma)","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"sortBy","description":"Sort by properties (separated by comma)","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"sortOrder","description":"Sort order, ASC or DESC","type":"stringlist","widget":"Option","values":["ASC","DESC"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Repository.Query","version":"unknown","aliases":["Document.Query"],"description":"Perform a query on the repository. The document list returned will become the input for the next operation.If no provider name is given, a query returning all the documents that the user has access to will be executed.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.query.DocumentPaginatedQuery","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","documents"],"category":"Fetch","url":"Repository.Query","label":"Query","requires":null,"since":"6.0","params":[{"name":"currentPageIndex","description":"Target listing page.","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"language","description":"The query language.","type":"string","widget":"Option","values":["NXQL"],"order":0,"isRequired":false},{"name":"maxResults","description":"","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"namedParameters","description":"Named parameters to pass to the page provider to fill in query variables.","type":"properties","widget":null,"values":[],"order":0,"isRequired":false},{"name":"pageSize","description":"Entries number per page.","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"query","description":"The query to perform.","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"queryParams","description":"Ordered query parameters.","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"sortBy","description":"Sort by properties (separated by comma)","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"sortOrder","description":"Sort order, ASC or DESC","type":"stringlist","widget":"Option","values":["ASC","DESC"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Repository.ResultSetPageProvider","version":"unknown","aliases":["Resultset.PageProvider"],"description":"Perform a named provider query on the repository. Result is paginated.The result is returned as a RecordSet (QueryAndFetch) rather than as a List of DocumentThe query result will become the input for the next operation.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.ResultSetPageProviderOperation","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","recordset"],"category":"Fetch","url":"Repository.ResultSetPageProvider","label":"QueryAndFetch","requires":null,"since":"","params":[{"name":"currentPageIndex","description":"","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"language","description":"","type":"string","widget":"Option","values":["NXQL","CMIS"],"order":0,"isRequired":false},{"name":"maxResults","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"namedParameters","description":"Named parameters to pass to the page provider to fill in query variables.","type":"properties","widget":null,"values":[],"order":0,"isRequired":false},{"name":"pageSize","description":"","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"providerName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"queryParams","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"sortBy","description":"Sort by properties (separated by comma)","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"sortOrder","description":"Sort order, ASC or DESC","type":"stringlist","widget":"Option","values":["ASC","DESC"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Repository.ResultSetQuery","version":"unknown","aliases":["ResultSet.PaginatedQuery"],"description":"Perform a query on the repository. The result set returned will become the input for the next operation. If no query or provider name is given, a query returning all the documents that the user has access to will be executed.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.query.ResultSetPaginatedQuery","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","recordset"],"category":"Fetch","url":"Repository.ResultSetQuery","label":"ResultSet Query","requires":null,"since":"6.0","params":[{"name":"query","description":"The query to perform.","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"currentPageIndex","description":"Target listing page.","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"language","description":"The query language.","type":"string","widget":"Option","values":["NXQL","CMIS"],"order":0,"isRequired":false},{"name":"maxResults","description":"","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"namedParameters","description":"Named parameters to pass to the page provider to fill in query variables.","type":"properties","widget":null,"values":[],"order":0,"isRequired":false},{"name":"pageSize","description":"Entries number per page.","type":"integer","widget":null,"values":[],"order":0,"isRequired":false},{"name":"queryParams","description":"Ordered query parameters.","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"sortBy","description":"Sort by properties (separated by comma)","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"sortOrder","description":"Sort order, ASC or DESC","type":"stringlist","widget":"Option","values":["ASC","DESC"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Repository.SaveSession","version":"unknown","aliases":["Document.SaveSession"],"description":"Commit any changes made by the operation on the documents. This can be used to explicitly commit changes. This operation can be executed on any type of input. The input of this operation will be preserved as the input for the next operation in the chain.","operationClass":"org.nuxeo.ecm.automation.core.operations.execution.SaveSession","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","void"],"category":"Execution Flow","url":"Repository.SaveSession","label":"Save Session","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"RunDocumentOperation","version":"unknown","aliases":["Context.RunDocumentOperation"],"description":"Run an operation chain which is returning a document in the current context. The input for the chain ro run is the current input of the operation. Return the output of the chain as a document. The 'parameters' injected are accessible in the subcontext ChainParameters. For instance, @{ChainParameters['parameterKey']}.","operationClass":"org.nuxeo.ecm.automation.core.operations.execution.RunDocumentChain","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["document","document","documents","documents"],"category":"Execution Flow","url":"RunDocumentOperation","label":"Run Document Chain","requires":null,"since":"","params":[{"name":"id","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"isolate","description":"","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false},{"name":"newTx","description":"Define if the chain in parameter should be executed in new transaction.","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false},{"name":"parameters","description":"Accessible in the subcontext ChainParameters. For instance, @{ChainParameters['parameterKey']}.","type":"properties","widget":null,"values":[],"order":0,"isRequired":false},{"name":"rollbackGlobalOnError","description":"Define if transaction should rollback or not (default to true)","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"timeout","description":"Define transaction timeout (default to 60 sec).","type":"integer","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"RunFileOperation","version":"unknown","aliases":["Context.RunFileOperation"],"description":"Run an operation chain which is returning a file in the current context. The input for the chain to run is a file or a list of files. Return the output of the chain as a file or a list of files. The 'parameters' injected are accessible in the subcontext ChainParameters. For instance, @{ChainParameters['parameterKey']}.","operationClass":"org.nuxeo.ecm.automation.core.operations.execution.RunFileChain","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["bloblist","bloblist","blob","blob"],"category":"Execution Flow","url":"RunFileOperation","label":"Run File Chain","requires":null,"since":"","params":[{"name":"id","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"isolate","description":"","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false},{"name":"newTx","description":"Define if the chain in parameter should be executed in new transaction.","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false},{"name":"parameters","description":"Accessible in the subcontext ChainParameters. For instance, @{ChainParameters['parameterKey']}.","type":"properties","widget":null,"values":[],"order":0,"isRequired":false},{"name":"rollbackGlobalOnError","description":"Define if transaction should rollback or not (default to true)","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"timeout","description":"Define transaction timeout (default to 60 sec).","type":"integer","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"RunInputScript","version":"unknown","aliases":["Context.RunInputScript"],"description":"Run a script from the input blob. A blob comtaining script result is returned.","operationClass":"org.nuxeo.ecm.automation.core.operations.RunInputScript","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["blob","blob"],"category":"Scripting","url":"RunInputScript","label":"Run Input Script","requires":null,"since":"","params":[{"name":"type","description":"","type":"string","widget":"Option","values":["mvel","groovy"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"RunOperation","version":"unknown","aliases":["Context.RunOperation"],"description":"Run an operation chain in the current context. The 'parameters' injected are accessible in the subcontext ChainParameters. For instance, @{ChainParameters['parameterKey']}.","operationClass":"org.nuxeo.ecm.automation.core.operations.execution.RunOperation","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","void"],"category":"Execution Flow","url":"RunOperation","label":"Run Chain","requires":null,"since":"","params":[{"name":"id","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"isolate","description":"","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false},{"name":"parameters","description":"Accessible in the subcontext ChainParameters. For instance, @{ChainParameters['parameterKey']}.","type":"properties","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"RunOperationOnList","version":"unknown","aliases":["Context.RunOperationOnList"],"description":"Run an operation for each element from the list defined by the 'list' parameter. The 'list' parameter is pointing to a context variable that represents the list which will be iterated. The 'item' parameter represents the name of the context variable which will point to the current element in the list at each iteration. You can use the 'isolate' parameter to specify whether or not the evalution context is the same as the parent context or a copy of it. If the 'isolate' parameter is 'true' then a copy of the current context is used and so that modifications in this context will not affect the parent context. Any input is accepted. The input is returned back as output when operation terminates. The 'parameters' injected are accessible in the subcontext ChainParameters. For instance, @{ChainParameters['parameterKey']}.","operationClass":"org.nuxeo.ecm.automation.core.operations.execution.RunOperationOnList","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","void"],"category":"Execution Flow","url":"RunOperationOnList","label":"Run For Each","requires":null,"since":"","params":[{"name":"id","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"list","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"isolate","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"item","description":"","type":"string","widget":null,"values":["item"],"order":0,"isRequired":false},{"name":"newTx","description":"Define if the chain in parameter should be executed in new transaction.","type":"boolean","widget":null,"values":["false"],"order":0,"isRequired":false},{"name":"parameters","description":"Accessible in the subcontext ChainParameters. For instance, @{ChainParameters['parameterKey']}.","type":"properties","widget":null,"values":[],"order":0,"isRequired":false},{"name":"rollbackGlobalOnError","description":"Define if transaction should rollback or not (default to true)","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"timeout","description":"Define transaction timeout (default to 60 sec).","type":"integer","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"RunOperationOnListInNewTx","version":"unknown","aliases":["Context.RunOperationOnListInNewTx"],"description":"Run an operation/chain in a new Transaction for each element from the list defined by the 'list' parameter. The 'list' parameter is pointing to a context variable that represents the list which will be iterated. The 'itemName' parameter represents the name of the context variable which will point to the current element in the list at each iteration. You can use the 'isolate' parameter to specify whether or not the evalution context is the same as the parent context or a copy of it. If the 'isolate' parameter is 'true' then a copy of the current context is used and so that modifications in this context will not affect the parent context. Any input is accepted. The input is returned back as output when operation terminates.","operationClass":"org.nuxeo.ecm.automation.core.operations.execution.RunOperationOnListInNewTransaction","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","void"],"category":"Execution Flow","url":"RunOperationOnListInNewTx","label":"Run For Each in new TX","requires":null,"since":"","params":[{"name":"id","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"list","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"isolate","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false},{"name":"itemName","description":"","type":"string","widget":null,"values":["item"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"RunOperationOnProvider","version":"unknown","aliases":["Context.RunOperationOnProvider"],"description":"Run an operation for each page of the provider defined by the provider name, the operation input is the curent page ","operationClass":"org.nuxeo.ecm.automation.core.operations.services.RunOperationOnProvider","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["documents","void"],"category":"Execution Flow","url":"RunOperationOnProvider","label":"Run For Each Page","requires":null,"since":"","params":[{"name":"id","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"isolate","description":"","type":"boolean","widget":null,"values":["true"],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"RunScript","version":"unknown","aliases":["Context.RunScript"],"description":"Run a script which content is specified as text in the 'script' parameter","operationClass":"org.nuxeo.ecm.automation.core.operations.RunScript","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","void"],"category":"Scripting","url":"RunScript","label":"Run Script","requires":null,"since":"","params":[{"name":"script","description":"","type":"string","widget":"TextArea","values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"Traces.Get","version":"unknown","aliases":[],"description":"Retrieve trace associated to a Chain or an Operation","operationClass":"org.nuxeo.ecm.automation.core.operations.traces.AutomationTraceGetOperation","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","string"],"category":"Execution Context","url":"Traces.Get","label":"Traces.getTrace","requires":null,"since":"","params":[{"name":"index","description":"","type":"int","widget":null,"values":[],"order":0,"isRequired":false},{"name":"traceKey","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"Traces.ToggleRecording","version":"unknown","aliases":[],"description":"Toggle Automation call tracing (you can set the 'enableTrace' parameter if you want to explicitly set the traceEnable value","operationClass":"org.nuxeo.ecm.automation.core.operations.traces.AutomationTraceToggleOperation","contributingComponent":"org.nuxeo.ecm.core.automation.coreContrib","signature":["void","boolean"],"category":"Execution Context","url":"Traces.ToggleRecording","label":"Traces.toggleRecording","requires":null,"since":"","params":[{"name":"enableTrace","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"readOnly","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"User.CreateOrUpdate","version":"unknown","aliases":["Services.CreateUser"],"description":"Create or Update User.","operationClass":"org.nuxeo.ecm.automation.core.operations.users.CreateOrUpdateUser","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","void"],"category":"Users & Groups","url":"User.CreateOrUpdate","label":"Create or Update User","requires":null,"since":"","params":[{"name":"username","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true},{"name":"company","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"email","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"firstName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"groups","description":"","type":"stringlist","widget":null,"values":[],"order":0,"isRequired":false},{"name":"lastName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"mode","description":"","type":"string","widget":null,"values":["createOrUpdate","create","update"],"order":0,"isRequired":false},{"name":"password","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"properties","description":"","type":"properties","widget":null,"values":[],"order":0,"isRequired":false},{"name":"tenantId","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"User.Get","version":"unknown","aliases":["NuxeoPrincipal.Get"],"description":"Retrieve Nuxeo principal and export it as a DocumentModel, if login parameter is not set the Operation will return informations about the current user, otherwise Directory Administration rights are required.","operationClass":"org.nuxeo.ecm.automation.core.operations.users.GetNuxeoPrincipal","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","document"],"category":"Users & Groups","url":"User.Get","label":"Get Nuxeo Principal","requires":null,"since":"","params":[{"name":"login","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"User.GetCollections","version":"unknown","aliases":["Collection.GetCollections"],"description":"Get the list of all the collections visible by the currentUser. This is returning a list of collections.","operationClass":"org.nuxeo.ecm.automation.core.operations.collections.GetCollectionsOperation","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","documents"],"category":"Document","url":"User.GetCollections","label":"Get collections","requires":null,"since":"","params":[{"name":"searchTerm","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":true}]},{"@type":"NXOperation","name":"User.GetUserWorkspace","version":"unknown","aliases":["UserWorkspace.Get"],"description":"Retrieve user's personal workspace.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.UserWorkspace","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","document"],"category":"Users & Groups","url":"User.GetUserWorkspace","label":"Get Home","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"User.Invite","version":"unknown","aliases":[],"description":"Stores a registration request and returns its ID.","operationClass":"org.nuxeo.ecm.automation.core.operations.services.UserInvite","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["nuxeoprincipal","string"],"category":"Users & Groups","url":"User.Invite","label":"Invite a user","requires":null,"since":"","params":[{"name":"autoAccept","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"comment","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"info","description":"","type":"map","widget":null,"values":[],"order":0,"isRequired":false},{"name":"validationMethod","description":"","type":"validationmethod","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"User.Query","version":"unknown","aliases":["Services.QueryUsers"],"description":"Query users on a combination of their username, firstName and lastName fields, or on any of them (pattern).","operationClass":"org.nuxeo.ecm.automation.core.operations.users.QueryUsers","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","blob"],"category":"Users & Groups","url":"User.Query","label":"Query users","requires":null,"since":"","params":[{"name":"firstName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"lastName","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"pattern","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"tenantId","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"username","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"UserGroup.Suggestion","version":"unknown","aliases":[],"description":"Get the user/group list of the running instance. This is returning a blob containing a serialized JSON array..","operationClass":"org.nuxeo.ecm.automation.core.operations.users.SuggestUserEntries","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","blob"],"category":"Services","url":"UserGroup.Suggestion","label":"Get user/group suggestion","requires":null,"since":"","params":[{"name":"displayEmailInSuggestion","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"firstLabelField","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"groupRestriction","description":"Enter the id of a group to suggest only user from this group.","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"hideAdminGroups","description":"If set, remove all administrator groups from the suggestions","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"hideFirstLabel","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"hideIcon","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"hidePowerUsersGroup","description":"If set, remove power users group from the suggestions","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"hideSecondLabel","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"hideThirdLabel","description":"","type":"boolean","widget":null,"values":[],"order":0,"isRequired":false},{"name":"lang","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"searchTerm","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"searchType","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"secondLabelField","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"thirdLabelField","description":"","type":"string","widget":null,"values":[],"order":0,"isRequired":false},{"name":"userSuggestionMaxSearchResults","description":"","type":"integer","widget":null,"values":[],"order":0,"isRequired":false}]},{"@type":"NXOperation","name":"VersionAndAttachFile","version":"unknown","aliases":[],"description":null,"operationClass":"org.nuxeo.ecm.automation.core.impl.OperationChainCompiler.CompiledChainImpl","contributingComponent":"BuiltIn","signature":["bloblist","document"],"category":"Chain","url":"VersionAndAttachFile","label":"VersionAndAttachFile","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"VersionAndAttachFiles","version":"unknown","aliases":[],"description":null,"operationClass":"org.nuxeo.ecm.automation.core.impl.OperationChainCompiler.CompiledChainImpl","contributingComponent":"BuiltIn","signature":["bloblist","document"],"category":"Chain","url":"VersionAndAttachFiles","label":"VersionAndAttachFiles","requires":null,"since":"","params":[]},{"@type":"NXOperation","name":"WorkManager.RunWorkInFailure","version":"unknown","aliases":[],"description":"Try to execute again Works that have been send to a dead letter queue by the WorkManager after failure","operationClass":"org.nuxeo.ecm.automation.core.operations.services.workmanager.WorkManagerRunWorkInFailure","contributingComponent":"org.nuxeo.ecm.core.automation.features.operations","signature":["void","blob"],"category":"Services","url":"WorkManager.RunWorkInFailure","label":"Executes Works stored in the dead letter queue","requires":null,"since":"","params":[{"name":"timeoutSeconds","description":"","type":"long","widget":null,"values":[],"order":0,"isRequired":false}]}],"latestFT":false,"latestLTS":false,"pluginSnapshots":{},"bundles":[{"@type":"NXBundle","bundleId":"org.nuxeo.runtime.stream","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 1\nBundle-Name: Nuxeo Runtime Stream\nBundle-SymbolicName: org.nuxeo.runtime.stream;singleton:=true\nBundle-Vendor: Nuxeo\nNuxeo-Component: OSGI-INF/kafka-config-service.xml,\n OSGI-INF/stream-service.xml,\n OSGI-INF/stream-management-contrib.xml,\n OSGI-INF/avro-service.xml,\n OSGI-INF/codec-service.xml,\n OSGI-INF/avro-contrib.xml\n","requirements":null,"groupId":"org.nuxeo.runtime","artifactId":"nuxeo-runtime-stream","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.runtime","name":"org.nuxeo.runtime","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.runtime","org.nuxeo.runtime.cluster","org.nuxeo.runtime.datasource","org.nuxeo.runtime.jtajca","org.nuxeo.runtime.kv","org.nuxeo.runtime.management","org.nuxeo.runtime.metrics","org.nuxeo.runtime.migration","org.nuxeo.runtime.mongodb","org.nuxeo.runtime.pubsub","org.nuxeo.runtime.reload","org.nuxeo.runtime.stream","org.nuxeo.runtime.stream.test"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-stream/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.runtime.stream.kafka.service","extensionPoints":[{"@type":"NXExtensionPoint","name":"kafkaConfig","descriptors":["org.nuxeo.runtime.kafka.KafkaConfigDescriptor"],"documentation":null,"id":"org.nuxeo.runtime.stream.kafka.service--kafkaConfig","version":"11.1-SNAPSHOT","label":"kafkaConfig (org.nuxeo.runtime.stream.kafka.service)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.stream.kafka.service/ExtensionPoints/org.nuxeo.runtime.stream.kafka.service--kafkaConfig","documentationHtml":"","componentId":"org.nuxeo.runtime.stream.kafka.service"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.kafka.KafkaConfigService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.stream.kafka.service/Services/org.nuxeo.runtime.kafka.KafkaConfigService","componentId":"org.nuxeo.runtime.stream.kafka.service"}],"extensions":[],"componentClass":"org.nuxeo.runtime.kafka.KafkaConfigServiceImpl","documentation":"\n    The component allows to register Kafka configuration and producer and consumer properties.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.stream.kafka.service","documentationHtml":"<p/>\nThe component allows to register Kafka configuration and producer and consumer properties.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-stream/bin/main/OSGI-INF/kafka-config-service.xml","xmlFileContent":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<component name=\"org.nuxeo.runtime.stream.kafka.service\" version=\"1.0\">\n\n  <documentation>\n    The component allows to register Kafka configuration and producer and consumer properties.\n  </documentation>\n\n  <implementation class=\"org.nuxeo.runtime.kafka.KafkaConfigServiceImpl\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.kafka.KafkaConfigService\" />\n  </service>\n\n  <extension-point name=\"kafkaConfig\">\n    <object class=\"org.nuxeo.runtime.kafka.KafkaConfigDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.stream.service","extensionPoints":[{"@type":"NXExtensionPoint","name":"streamProcessor","descriptors":["org.nuxeo.runtime.stream.StreamProcessorDescriptor"],"documentation":null,"id":"org.nuxeo.runtime.stream.service--streamProcessor","version":"11.1-SNAPSHOT","label":"streamProcessor (org.nuxeo.runtime.stream.service)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.stream.service/ExtensionPoints/org.nuxeo.runtime.stream.service--streamProcessor","documentationHtml":"","componentId":"org.nuxeo.runtime.stream.service"},{"@type":"NXExtensionPoint","name":"logConfig","descriptors":["org.nuxeo.runtime.stream.LogConfigDescriptor"],"documentation":null,"id":"org.nuxeo.runtime.stream.service--logConfig","version":"11.1-SNAPSHOT","label":"logConfig (org.nuxeo.runtime.stream.service)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.stream.service/ExtensionPoints/org.nuxeo.runtime.stream.service--logConfig","documentationHtml":"","componentId":"org.nuxeo.runtime.stream.service"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.stream.StreamService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.stream.service/Services/org.nuxeo.runtime.stream.StreamService","componentId":"org.nuxeo.runtime.stream.service"}],"extensions":[],"componentClass":"org.nuxeo.runtime.stream.StreamServiceImpl","documentation":"\n    The component allows to register log configurations and Log and Stream processors.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.stream.service","documentationHtml":"<p/>\nThe component allows to register log configurations and Log and Stream processors.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-stream/bin/main/OSGI-INF/stream-service.xml","xmlFileContent":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<component name=\"org.nuxeo.runtime.stream.service\" version=\"1.0\">\n\n  <documentation>\n    The component allows to register log configurations and Log and Stream processors.\n  </documentation>\n\n  <implementation class=\"org.nuxeo.runtime.stream.StreamServiceImpl\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.stream.StreamService\" />\n  </service>\n\n  <extension-point name=\"logConfig\">\n    <object class=\"org.nuxeo.runtime.stream.LogConfigDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"streamProcessor\">\n    <object class=\"org.nuxeo.runtime.stream.StreamProcessorDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.codec.service","extensionPoints":[{"@type":"NXExtensionPoint","name":"codec","descriptors":["org.nuxeo.runtime.codec.CodecDescriptor"],"documentation":null,"id":"org.nuxeo.runtime.codec.service--codec","version":"11.1-SNAPSHOT","label":"codec (org.nuxeo.runtime.codec.service)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.codec.service/ExtensionPoints/org.nuxeo.runtime.codec.service--codec","documentationHtml":"","componentId":"org.nuxeo.runtime.codec.service"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.codec.CodecService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.codec.service/Services/org.nuxeo.runtime.codec.CodecService","componentId":"org.nuxeo.runtime.codec.service"}],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.runtime.codec.service--codec","extensionPoint":"org.nuxeo.runtime.codec.service--codec","documentation":null,"xml":"<extension point=\"codec\" target=\"org.nuxeo.runtime.codec.service\">\n    <codec class=\"org.nuxeo.runtime.codec.NoCodecFactory\" name=\"legacy\"/>\n    <codec class=\"org.nuxeo.runtime.codec.SerializableCodecFactory\" name=\"java\"/>\n    <codec class=\"org.nuxeo.runtime.codec.AvroCodecFactory\" name=\"avro\">\n      <option name=\"encoding\">message</option>\n    </codec>\n    <codec class=\"org.nuxeo.runtime.codec.AvroCodecFactory\" name=\"avroBinary\">\n      <option name=\"encoding\">binary</option>\n    </codec>\n    <codec class=\"org.nuxeo.runtime.codec.AvroCodecFactory\" name=\"avroJson\">\n      <option name=\"encoding\">json</option>\n    </codec>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.codec.service","rawName":"service:org.nuxeo.runtime.codec.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.codec.service/Contributions/org.nuxeo.runtime.codec.service--codec","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;codec class=&quot;org.nuxeo.runtime.codec.NoCodecFactory&quot; name=&quot;legacy&quot;/&gt;","id":"legacy","label":"codec legacy","rawXml":"<codec class=\"org.nuxeo.runtime.codec.NoCodecFactory\" name=\"legacy\"/>"},{"documentation":"","xml":"&lt;codec class=&quot;org.nuxeo.runtime.codec.SerializableCodecFactory&quot; name=&quot;java&quot;/&gt;","id":"java","label":"codec java","rawXml":"<codec class=\"org.nuxeo.runtime.codec.SerializableCodecFactory\" name=\"java\"/>"},{"documentation":"","xml":"&lt;codec class=&quot;org.nuxeo.runtime.codec.AvroCodecFactory&quot; name=&quot;avro&quot;&gt;\n      &lt;option name=&quot;encoding&quot;&gt;message&lt;/option&gt;\n    &lt;/codec&gt;","id":"avro","label":"codec avro","rawXml":"<codec class=\"org.nuxeo.runtime.codec.AvroCodecFactory\" name=\"avro\">\n      <option name=\"encoding\">message</option>\n    </codec>"},{"documentation":"","xml":"&lt;codec class=&quot;org.nuxeo.runtime.codec.AvroCodecFactory&quot; name=&quot;avroBinary&quot;&gt;\n      &lt;option name=&quot;encoding&quot;&gt;binary&lt;/option&gt;\n    &lt;/codec&gt;","id":"avroBinary","label":"codec avroBinary","rawXml":"<codec class=\"org.nuxeo.runtime.codec.AvroCodecFactory\" name=\"avroBinary\">\n      <option name=\"encoding\">binary</option>\n    </codec>"},{"documentation":"","xml":"&lt;codec class=&quot;org.nuxeo.runtime.codec.AvroCodecFactory&quot; name=&quot;avroJson&quot;&gt;\n      &lt;option name=&quot;encoding&quot;&gt;json&lt;/option&gt;\n    &lt;/codec&gt;","id":"avroJson","label":"codec avroJson","rawXml":"<codec class=\"org.nuxeo.runtime.codec.AvroCodecFactory\" name=\"avroJson\">\n      <option name=\"encoding\">json</option>\n    </codec>"}]}],"componentClass":"org.nuxeo.runtime.codec.CodecServiceImpl","documentation":"\n    The component allows you to register a Codec to encode records.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.codec.service","documentationHtml":"<p/>\nThe component allows you to register a Codec to encode records.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-stream/bin/main/OSGI-INF/codec-service.xml","xmlFileContent":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<component name=\"org.nuxeo.runtime.codec.service\" version=\"1.0\">\n\n  <documentation>\n    The component allows you to register a Codec to encode records.\n  </documentation>\n\n  <implementation class=\"org.nuxeo.runtime.codec.CodecServiceImpl\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.codec.CodecService\" />\n  </service>\n\n  <extension-point name=\"codec\">\n    <object class=\"org.nuxeo.runtime.codec.CodecDescriptor\" />\n  </extension-point>\n\n  <extension target=\"org.nuxeo.runtime.codec.service\" point=\"codec\">\n    <codec name=\"legacy\" class=\"org.nuxeo.runtime.codec.NoCodecFactory\" />\n    <codec name=\"java\" class=\"org.nuxeo.runtime.codec.SerializableCodecFactory\" />\n    <codec name=\"avro\" class=\"org.nuxeo.runtime.codec.AvroCodecFactory\">\n      <option name=\"encoding\">message</option>\n    </codec>\n    <codec name=\"avroBinary\" class=\"org.nuxeo.runtime.codec.AvroCodecFactory\">\n      <option name=\"encoding\">binary</option>\n    </codec>\n    <codec name=\"avroJson\" class=\"org.nuxeo.runtime.codec.AvroCodecFactory\">\n      <option name=\"encoding\">json</option>\n    </codec>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.stream.service.managment.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.runtime.stream.service.managment.contrib--probes","extensionPoint":"org.nuxeo.ecm.core.management.CoreManagementComponent--probes","documentation":null,"xml":"<extension point=\"probes\" target=\"org.nuxeo.ecm.core.management.CoreManagementComponent\">\n    <probe class=\"org.nuxeo.runtime.stream.StreamProbe\" name=\"streamStatus\">\n      <label>Stream probe</label>\n    </probe>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.management.CoreManagementComponent","rawName":"service:org.nuxeo.ecm.core.management.CoreManagementComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.stream.service.managment.contrib/Contributions/org.nuxeo.runtime.stream.service.managment.contrib--probes","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;probe class=&quot;org.nuxeo.runtime.stream.StreamProbe&quot; name=&quot;streamStatus&quot;&gt;\n      &lt;label&gt;Stream probe&lt;/label&gt;\n    &lt;/probe&gt;","id":"streamStatus","label":"probe streamStatus","rawXml":"<probe class=\"org.nuxeo.runtime.stream.StreamProbe\" name=\"streamStatus\">\n      <label>Stream probe</label>\n    </probe>"}]},{"@type":"NXContribution","id":"org.nuxeo.runtime.stream.service.managment.contrib--healthCheck","extensionPoint":"org.nuxeo.ecm.core.management.CoreManagementComponent--healthCheck","documentation":null,"xml":"<extension point=\"healthCheck\" target=\"org.nuxeo.ecm.core.management.CoreManagementComponent\">\n    <probe enabled=\"true\" name=\"streamStatus\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.management.CoreManagementComponent","rawName":"service:org.nuxeo.ecm.core.management.CoreManagementComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.stream.service.managment.contrib/Contributions/org.nuxeo.runtime.stream.service.managment.contrib--healthCheck","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;probe enabled=&quot;true&quot; name=&quot;streamStatus&quot;/&gt;","id":"streamStatus","label":"probe streamStatus","rawXml":"<probe enabled=\"true\" name=\"streamStatus\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.stream.service.managment.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-stream/bin/main/OSGI-INF/stream-management-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.stream.service.managment.contrib\">\n\n  <extension target=\"org.nuxeo.ecm.core.management.CoreManagementComponent\" point=\"probes\">\n    <probe name=\"streamStatus\" class=\"org.nuxeo.runtime.stream.StreamProbe\">\n      <label>Stream probe</label>\n    </probe>\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.management.CoreManagementComponent\" point=\"healthCheck\">\n    <probe name=\"streamStatus\" enabled=\"${nuxeo.stream.health.check.enabled:=true}\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.avro.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.runtime.avro.contrib--replacement","extensionPoint":"org.nuxeo.runtime.avro--replacement","documentation":null,"xml":"<extension point=\"replacement\" target=\"org.nuxeo.runtime.avro\">\n    <replacement forbidden=\"__\" priority=\"-100\" replacement=\"____\"/>\n    <replacement forbidden=\"-\" replacement=\"__dash__\"/>\n    <replacement forbidden=\":\" replacement=\"__colon__\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.avro","rawName":"service:org.nuxeo.runtime.avro"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.avro.contrib/Contributions/org.nuxeo.runtime.avro.contrib--replacement","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;replacement forbidden=&quot;__&quot; priority=&quot;-100&quot; replacement=&quot;____&quot;/&gt;","id":null,"label":"replacement","rawXml":"<replacement forbidden=\"__\" priority=\"-100\" replacement=\"____\"/>"},{"documentation":"","xml":"&lt;replacement forbidden=&quot;-&quot; replacement=&quot;__dash__&quot;/&gt;","id":null,"label":"replacement","rawXml":"<replacement forbidden=\"-\" replacement=\"__dash__\"/>"},{"documentation":"","xml":"&lt;replacement forbidden=&quot;:&quot; replacement=&quot;__colon__&quot;/&gt;","id":null,"label":"replacement","rawXml":"<replacement forbidden=\":\" replacement=\"__colon__\"/>"}]}],"componentClass":null,"documentation":"\n    Avro basic replacements.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.avro.contrib","documentationHtml":"<p/>\nAvro basic replacements.\n<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-stream/bin/main/OSGI-INF/avro-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.avro.contrib\" version=\"1.0.0\">\n  <documentation>\n    Avro basic replacements.\n  </documentation>\n  <extension target=\"org.nuxeo.runtime.avro\" point=\"replacement\">\n    <replacement forbidden=\"__\" replacement=\"____\" priority=\"-100\" />\n    <replacement forbidden=\"-\" replacement=\"__dash__\" />\n    <replacement forbidden=\":\" replacement=\"__colon__\" />\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.avro","extensionPoints":[{"@type":"NXExtensionPoint","name":"schema","descriptors":["org.nuxeo.runtime.avro.AvroSchemaDescriptor"],"documentation":"\n      Allows to register an Avro schema file with a name.\n    \n","id":"org.nuxeo.runtime.avro--schema","version":"11.1-SNAPSHOT","label":"schema (org.nuxeo.runtime.avro)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.avro/ExtensionPoints/org.nuxeo.runtime.avro--schema","documentationHtml":"<p/>\nAllows to register an Avro schema file with a name.\n<p/>","componentId":"org.nuxeo.runtime.avro"},{"@type":"NXExtensionPoint","name":"factory","descriptors":["org.nuxeo.runtime.avro.AvroSchemaFactoryDescriptor"],"documentation":"\n      Allows to register an Avro Factory implementation dedicated to a custom type.\n    \n","id":"org.nuxeo.runtime.avro--factory","version":"11.1-SNAPSHOT","label":"factory (org.nuxeo.runtime.avro)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.avro/ExtensionPoints/org.nuxeo.runtime.avro--factory","documentationHtml":"<p/>\nAllows to register an Avro Factory implementation dedicated to a custom type.\n<p/>","componentId":"org.nuxeo.runtime.avro"},{"@type":"NXExtensionPoint","name":"replacement","descriptors":["org.nuxeo.runtime.avro.AvroReplacementDescriptor"],"documentation":"\n      Allows to register a replacement scheme for any string not supported by Avro.\n    \n","id":"org.nuxeo.runtime.avro--replacement","version":"11.1-SNAPSHOT","label":"replacement (org.nuxeo.runtime.avro)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.avro/ExtensionPoints/org.nuxeo.runtime.avro--replacement","documentationHtml":"<p/>\nAllows to register a replacement scheme for any string not supported by Avro.\n<p/>","componentId":"org.nuxeo.runtime.avro"},{"@type":"NXExtensionPoint","name":"mapper","descriptors":["org.nuxeo.runtime.avro.AvroMapperDescriptor"],"documentation":"\n      Allows to register an Avro Mapper implementation dedicated to a custom type.\n    \n","id":"org.nuxeo.runtime.avro--mapper","version":"11.1-SNAPSHOT","label":"mapper (org.nuxeo.runtime.avro)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.avro/ExtensionPoints/org.nuxeo.runtime.avro--mapper","documentationHtml":"<p/>\nAllows to register an Avro Mapper implementation dedicated to a custom type.\n<p/>","componentId":"org.nuxeo.runtime.avro"}],"services":[{"@type":"NXService","id":"org.apache.avro.message.SchemaStore","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.avro/Services/org.apache.avro.message.SchemaStore","componentId":"org.nuxeo.runtime.avro"},{"@type":"NXService","id":"org.nuxeo.runtime.avro.AvroService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.avro/Services/org.nuxeo.runtime.avro.AvroService","componentId":"org.nuxeo.runtime.avro"}],"extensions":[],"componentClass":"org.nuxeo.runtime.avro.AvroComponent","documentation":"\n    The Avro component.\n    It provides services\n    - that allow to register and retrieve schemas\n    - that allow to create Avro schemas from custom types\n    - that allow to map Avro records from/to custom types\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.stream/org.nuxeo.runtime.avro","documentationHtml":"<p/>\nThe Avro component.\nIt provides services\n- that allow to register and retrieve schemas\n- that allow to create Avro schemas from custom types\n- that allow to map Avro records from/to custom types\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-stream/bin/main/OSGI-INF/avro-service.xml","xmlFileContent":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<component name=\"org.nuxeo.runtime.avro\" version=\"1.0\">\n\n  <documentation>\n    The Avro component.\n    It provides services\n    - that allow to register and retrieve schemas\n    - that allow to create Avro schemas from custom types\n    - that allow to map Avro records from/to custom types\n  </documentation>\n\n  <implementation class=\"org.nuxeo.runtime.avro.AvroComponent\" />\n\n  <service>\n    <provide interface=\"org.apache.avro.message.SchemaStore\" />\n    <provide interface=\"org.nuxeo.runtime.avro.AvroService\" />\n  </service>\n\n  <extension-point name=\"schema\">\n    <documentation>\n      Allows to register an Avro schema file with a name.\n    </documentation>\n    <object class=\"org.nuxeo.runtime.avro.AvroSchemaDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"factory\">\n    <documentation>\n      Allows to register an Avro Factory implementation dedicated to a custom type.\n    </documentation>\n    <object class=\"org.nuxeo.runtime.avro.AvroSchemaFactoryDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"replacement\">\n    <documentation>\n      Allows to register a replacement scheme for any string not supported by Avro.\n    </documentation>\n    <object class=\"org.nuxeo.runtime.avro.AvroReplacementDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"mapper\">\n    <documentation>\n      Allows to register an Avro Mapper implementation dedicated to a custom type.\n    </documentation>\n    <object class=\"org.nuxeo.runtime.avro.AvroMapperDescriptor\" />\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.apidoc.core","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-SymbolicName: org.nuxeo.apidoc.core;singleton:=true\nBundle-Name: nuxeo api documentation server\nBundle-Version: 0.0.1\nBundle-ManifestVersion: 1\nBundle-Vendor: Nuxeo\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-apidoc-core","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform","name":"org.nuxeo.ecm.platform","liveDoc":{},"subGroups":[{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.directory","name":"org.nuxeo.ecm.directory","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.directory","org.nuxeo.ecm.directory.api","org.nuxeo.ecm.directory.sql","org.nuxeo.ecm.directory.types.contrib"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.query","name":"org.nuxeo.ecm.platform.query","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.query.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.usermanager","name":"org.nuxeo.ecm.platform.usermanager","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.usermanager","org.nuxeo.ecm.platform.usermanager.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]}],"bundleIds":["org.nuxeo.apidoc.core","org.nuxeo.apidoc.repo","org.nuxeo.directory.mongodb","org.nuxeo.ecm.actions","org.nuxeo.ecm.platform.api","org.nuxeo.ecm.platform.commandline.executor","org.nuxeo.ecm.platform.content.template","org.nuxeo.ecm.platform.dublincore","org.nuxeo.ecm.platform.forms.layout.export","org.nuxeo.ecm.platform.login","org.nuxeo.ecm.platform.web.common","org.nuxeo.osgi.app"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/bin/main","components":[]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.event","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.core.event,\n org.nuxeo.ecm.core.event.impl,\n org.nuxeo.ecm.core.event.jms;api=split,\n org.nuxeo.ecm.core.event.script,\n org.nuxeo.ecm.core.event.tx,\n org.nuxeo.ecm.core.work,\n org.nuxeo.ecm.core.work.api\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Name: org.nuxeo.ecm.core.event\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Version: 5.4.2.qualifier\nBundle-ManifestVersion: 2\nImport-Package: javax.naming,\n javax.script,\n javax.security.auth.login,\n javax.transaction;version=\"1.1\",\n org.apache.commons.logging,\n org.nuxeo.common.collections,\n org.nuxeo.common.utils,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.impl,\n org.nuxeo.ecm.core.api.model,\n org.nuxeo.ecm.core.api.repository,\n org.nuxeo.ecm.core.api.security,\n org.nuxeo.ecm.core.schema,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model,\n org.nuxeo.runtime.transaction,\n org.osgi.framework;version=\"1.4\",\n org.nuxeo.common,\n org.nuxeo.runtime,\n com.codahale.metrics\nBundle-SymbolicName: org.nuxeo.ecm.core.event;singleton:=true\nNuxeo-Component: OSGI-INF/EventService.xml,\n OSGI-INF/workmanager-service.xml,\n OSGI-INF/workmanager-config.xml,\n OSGI-INF/scheduler-service.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-event","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-event/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.work.config","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.work.config--implementation","extensionPoint":"org.nuxeo.ecm.core.work.service--implementation","documentation":null,"xml":"<extension point=\"implementation\" target=\"org.nuxeo.ecm.core.work.service\">\n    <queuing class=\"org.nuxeo.ecm.core.work.MemoryWorkQueuing\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.work.service","rawName":"service:org.nuxeo.ecm.core.work.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.work.config/Contributions/org.nuxeo.ecm.core.work.config--implementation","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;queuing class=&quot;org.nuxeo.ecm.core.work.MemoryWorkQueuing&quot;/&gt;","id":null,"label":"queuing","rawXml":"<queuing class=\"org.nuxeo.ecm.core.work.MemoryWorkQueuing\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.work.config--queues","extensionPoint":"org.nuxeo.ecm.core.work.service--queues","documentation":null,"xml":"<extension point=\"queues\" target=\"org.nuxeo.ecm.core.work.service\">\n    <queue id=\"default\">\n      <name>Default queue</name>\n      <maxThreads>4</maxThreads>\n      <!-- clear completed work instances older than 10 minutes -->\n      <clearCompletedAfterSeconds>600</clearCompletedAfterSeconds>\n    </queue>\n    <queue id=\"fulltextUpdater\">\n      <name>Fulltext updater queue</name>\n      <!-- fulltext updates are single-threaded to avoid concurrent\n        writes to the same column -->\n      <maxThreads>1</maxThreads>\n      <category>fulltextUpdater</category>\n      <!-- clear completed work quickly as it contains (potentially large)\n        text data -->\n      <clearCompletedAfterSeconds>300</clearCompletedAfterSeconds>\n    </queue>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.work.service","rawName":"service:org.nuxeo.ecm.core.work.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.work.config/Contributions/org.nuxeo.ecm.core.work.config--queues","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;queue id=&quot;default&quot;&gt;\n      &lt;name&gt;Default queue&lt;/name&gt;\n      &lt;maxThreads&gt;4&lt;/maxThreads&gt;\n      &lt;!-- clear completed work instances older than 10 minutes --&gt;\n      &lt;clearCompletedAfterSeconds&gt;600&lt;/clearCompletedAfterSeconds&gt;\n    &lt;/queue&gt;","id":"default","label":"queue default","rawXml":"<queue id=\"default\">\n      <name>Default queue</name>\n      <maxThreads>4</maxThreads>\n      <!-- clear completed work instances older than 10 minutes -->\n      <clearCompletedAfterSeconds>600</clearCompletedAfterSeconds>\n    </queue>"},{"documentation":"","xml":"&lt;queue id=&quot;fulltextUpdater&quot;&gt;\n      &lt;name&gt;Fulltext updater queue&lt;/name&gt;\n      &lt;!-- fulltext updates are single-threaded to avoid concurrent\n        writes to the same column --&gt;\n      &lt;maxThreads&gt;1&lt;/maxThreads&gt;\n      &lt;category&gt;fulltextUpdater&lt;/category&gt;\n      &lt;!-- clear completed work quickly as it contains (potentially large)\n        text data --&gt;\n      &lt;clearCompletedAfterSeconds&gt;300&lt;/clearCompletedAfterSeconds&gt;\n    &lt;/queue&gt;","id":"fulltextUpdater","label":"queue fulltextUpdater","rawXml":"<queue id=\"fulltextUpdater\">\n      <name>Fulltext updater queue</name>\n      <!-- fulltext updates are single-threaded to avoid concurrent\n        writes to the same column -->\n      <maxThreads>1</maxThreads>\n      <category>fulltextUpdater</category>\n      <!-- clear completed work quickly as it contains (potentially large)\n        text data -->\n      <clearCompletedAfterSeconds>300</clearCompletedAfterSeconds>\n    </queue>"}]}],"componentClass":null,"documentation":"\n    The default queue configuration for the work manager,\n    the scheduled job to cleanup the completed work instances,\n    and the related listener.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.work.config","documentationHtml":"<p/>\nThe default queue configuration for the work manager,\nthe scheduled job to cleanup the completed work instances,\nand the related listener.\n<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-event/bin/main/OSGI-INF/workmanager-config.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.work.config\" version=\"1.0\">\n\n  <documentation>\n    The default queue configuration for the work manager,\n    the scheduled job to cleanup the completed work instances,\n    and the related listener.\n  </documentation>\n\n  <extension target=\"org.nuxeo.ecm.core.work.service\" point=\"implementation\">\n    <queuing class=\"org.nuxeo.ecm.core.work.MemoryWorkQueuing\"/>\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.work.service\" point=\"queues\">\n    <queue id=\"default\">\n      <name>Default queue</name>\n      <maxThreads>4</maxThreads>\n      <!-- clear completed work instances older than 10 minutes -->\n      <clearCompletedAfterSeconds>600</clearCompletedAfterSeconds>\n    </queue>\n    <queue id=\"fulltextUpdater\">\n      <name>Fulltext updater queue</name>\n      <!-- fulltext updates are single-threaded to avoid concurrent\n        writes to the same column -->\n      <maxThreads>1</maxThreads>\n      <category>fulltextUpdater</category>\n      <!-- clear completed work quickly as it contains (potentially large)\n        text data -->\n      <clearCompletedAfterSeconds>300</clearCompletedAfterSeconds>\n    </queue>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.work.service","extensionPoints":[{"@type":"NXExtensionPoint","name":"implementation","descriptors":["org.nuxeo.ecm.core.work.api.WorkQueuingDescriptor"],"documentation":"\n      Defines the implementation of the queuing mechanism:\n      <code>\n    <queuing class=\"org.nuxeo.ecm.core.redis.contribs.RedisWorkQueuing\"/>\n</code>\n\n      The class must be a subclass of org.nuxeo.ecm.core.work.WorkQueuing.\n    \n","id":"org.nuxeo.ecm.core.work.service--implementation","version":"11.1-SNAPSHOT","label":"implementation (org.nuxeo.ecm.core.work.service)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.work.service/ExtensionPoints/org.nuxeo.ecm.core.work.service--implementation","documentationHtml":"<p/>\nDefines the implementation of the queuing mechanism:\n<p/><pre><code>    &lt;queuing class=\"org.nuxeo.ecm.core.redis.contribs.RedisWorkQueuing\"/>\n</code></pre><p/>\nThe class must be a subclass of org.nuxeo.ecm.core.work.WorkQueuing.\n<p/>","componentId":"org.nuxeo.ecm.core.work.service"},{"@type":"NXExtensionPoint","name":"queues","descriptors":["org.nuxeo.ecm.core.work.api.WorkQueueDescriptor"],"documentation":"\n      Defines the characteristics of work queues:\n      <code>\n    <queue id=\"myqueue\">\n        <name>My Queue</name>\n        <maxThreads>4</maxThreads>\n        <capacity>100</capacity>\n        <clearCompletedAfterSeconds>300</clearCompletedAfterSeconds>\n        <category>somecategory1</category>\n        <category>somecategory2</category>\n    </queue>\n</code>\n\n      - id is the queue id.\n\n      - name is the human-readable name.\n\n      - maxThreads maximum number of worker threads (default 4).\n\n      - capacity when specified make the queue bounded, the scheduling of\n      new work is blocking when the queue is full (default unlimited).\n\n      - clearCompletedAfterSeconds (default 3600) is the delay after which completed work\n       may be automatically cleared from its queue. 0 means never.\n\n      - category is a list of Work categories that this queue will receive.\n      For event listeners work, the category is the listener name (or its simple class name).\n    \n","id":"org.nuxeo.ecm.core.work.service--queues","version":"11.1-SNAPSHOT","label":"queues (org.nuxeo.ecm.core.work.service)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.work.service/ExtensionPoints/org.nuxeo.ecm.core.work.service--queues","documentationHtml":"<p/>\nDefines the characteristics of work queues:\n<p/><pre><code>    &lt;queue id=\"myqueue\">\n        &lt;name>My Queue&lt;/name>\n        &lt;maxThreads>4&lt;/maxThreads>\n        &lt;capacity>100&lt;/capacity>\n        &lt;clearCompletedAfterSeconds>300&lt;/clearCompletedAfterSeconds>\n        &lt;category>somecategory1&lt;/category>\n        &lt;category>somecategory2&lt;/category>\n    &lt;/queue>\n</code></pre><p/>\n- id is the queue id.\n<p/>\n- name is the human-readable name.\n<p/>\n- maxThreads maximum number of worker threads (default 4).\n<p/>\n- capacity when specified make the queue bounded, the scheduling of\nnew work is blocking when the queue is full (default unlimited).\n<p/>\n- clearCompletedAfterSeconds (default 3600) is the delay after which completed work\nmay be automatically cleared from its queue. 0 means never.\n<p/>\n- category is a list of Work categories that this queue will receive.\nFor event listeners work, the category is the listener name (or its simple class name).\n<p/>","componentId":"org.nuxeo.ecm.core.work.service"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.work.api.WorkManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.work.service/Services/org.nuxeo.ecm.core.work.api.WorkManager","componentId":"org.nuxeo.ecm.core.work.service"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.work.WorkManagerImpl","documentation":"\n    The WorkManager executes Work instances asynchronously.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.work.service","documentationHtml":"<p/>\nThe WorkManager executes Work instances asynchronously.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-event/bin/main/OSGI-INF/workmanager-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.work.service\" version=\"1.0\">\n\n  <documentation>\n    The WorkManager executes Work instances asynchronously.\n  </documentation>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.work.api.WorkManager\" />\n  </service>\n\n  <implementation class=\"org.nuxeo.ecm.core.work.WorkManagerImpl\" />\n\n  <extension-point name=\"queues\">\n    <documentation>\n      Defines the characteristics of work queues:\n      <code>\n        <queue id=\"myqueue\">\n          <name>My Queue</name>\n          <maxThreads>4</maxThreads>\n          <capacity>100</capacity>\n          <clearCompletedAfterSeconds>300</clearCompletedAfterSeconds>\n          <category>somecategory1</category>\n          <category>somecategory2</category>\n        </queue>\n      </code>\n      - id is the queue id.\n\n      - name is the human-readable name.\n\n      - maxThreads maximum number of worker threads (default 4).\n\n      - capacity when specified make the queue bounded, the scheduling of\n      new work is blocking when the queue is full (default unlimited).\n\n      - clearCompletedAfterSeconds (default 3600) is the delay after which completed work\n       may be automatically cleared from its queue. 0 means never.\n\n      - category is a list of Work categories that this queue will receive.\n      For event listeners work, the category is the listener name (or its simple class name).\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.work.api.WorkQueueDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"implementation\">\n    <documentation>\n      Defines the implementation of the queuing mechanism:\n      <code>\n        <queuing class=\"org.nuxeo.ecm.core.redis.contribs.RedisWorkQueuing\"/>\n      </code>\n      The class must be a subclass of org.nuxeo.ecm.core.work.WorkQueuing.\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.work.api.WorkQueuingDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.event.EventServiceComponent","extensionPoints":[{"@type":"NXExtensionPoint","name":"pipe","descriptors":["org.nuxeo.ecm.core.event.pipe.EventPipeDescriptor"],"documentation":"\n      Extension point to contribute event pipe.\n\n      An event pipe is a where Nuxeo events will be sent for asynchronous processing.\n\n      Example pipe definition:\n      <code>\n    <eventPipe class=\"org.nuxeo.ecm.core.event.pipe.DummyPipe\"\n        name=\"dummyPipe1\" priority=\"0\">\n        <parameters>\n            <parameter name=\"foo\">bar</parameter>\n        </parameters>\n    </eventPipe>\n</code>\n","id":"org.nuxeo.ecm.core.event.EventServiceComponent--pipe","version":"11.1-SNAPSHOT","label":"pipe (org.nuxeo.ecm.core.event.EventServiceComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.event.EventServiceComponent/ExtensionPoints/org.nuxeo.ecm.core.event.EventServiceComponent--pipe","documentationHtml":"<p/>\nExtension point to contribute event pipe.\n<p/>\nAn event pipe is a where Nuxeo events will be sent for asynchronous processing.\n<p/>\nExample pipe definition:\n<p/><pre><code>    &lt;eventPipe class=\"org.nuxeo.ecm.core.event.pipe.DummyPipe\"\n        name=\"dummyPipe1\" priority=\"0\">\n        &lt;parameters>\n            &lt;parameter name=\"foo\">bar&lt;/parameter>\n        &lt;/parameters>\n    &lt;/eventPipe>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.core.event.EventServiceComponent"},{"@type":"NXExtensionPoint","name":"listener","descriptors":["org.nuxeo.ecm.core.event.impl.EventListenerDescriptor"],"documentation":"\n      Extension point defining event listeners.\n\n      An event listener describes some Java code that can be executed\n      synchronously or asynchronously when an event is fired by Nuxeo code.\n\n      Example listener:\n      <code>\n    <listener async=\"false\"\n        class=\"org.nuxeo.ecm.platform.dublincore.listener.DublinCoreListener\"\n        enabled=\"true\" name=\"mylistener\" postCommit=\"false\"\n        priority=\"50\" retryCount=\"1\">\n        <event>documentCreated</event>\n        <event>documentModified</event>\n    </listener>\n</code>\n\n\n      The events listed are those for which the listener will be called.\n      If there are none, the listener is called for all events, but this is strongly\n      discouraged for performance reasons.\n\n      Listeners belong to one of three categories:\n\n      If postCommit=false then the listener is purely synchronous\n      (also called \"inline\") and executed in the same thread and transaction\n      as the code firing the event, as a regular method call.\n      The class must implement org.nuxeo.ecm.core.event.EventListener,\n      which receives events one at a time.\n\n      If postCommit=true and async=true then the listener is purely\n      asynchronous and executed at an arbitrary later point in time\n      (but after the original transaction is committed), in its own thread and transaction.\n      It may be retried if a ConcurrentUpdateException is detected.\n      The listener is executed asynchronously by the WorkManager via a Work instance\n      whose category (which determines the Work queue used) is the listener's name.\n      The class must implement org.nuxeo.ecm.core.event.PostCommitEventListener,\n      which receives a bundle of all the events raised by the original transaction.\n\n      If postCommit=true and async=false then the listener is executed synchronously\n      immediately after the original transaction is committed, but in a separate transaction.\n      It is not executed if the original transaction does a rollback.\n      All listeners in this category are executed one after the other (in priority order),\n      and only after they are all done does the main thread continue execution.\n      (However if one of the listeners takes too long it is left to run purely asynchronously\n      and the other listeners in this category are processed.)\n      The class must implement org.nuxeo.ecm.core.event.PostCommitEventListener,\n      which receives a bundle of all the events raised by the original transaction.\n\n      The priority gives a global ordering of all the listeners\n      in the same category executed for a given event.\n      The default is 0.\n\n      The retryCount specifies how many times a purely asynchronous listener\n      may retry execution if it resulted in a ConcurrentUpdateException.\n      The default is 1.\n    \n","id":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","version":"11.1-SNAPSHOT","label":"listener (org.nuxeo.ecm.core.event.EventServiceComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.event.EventServiceComponent/ExtensionPoints/org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentationHtml":"<p/>\nExtension point defining event listeners.\n<p/>\nAn event listener describes some Java code that can be executed\nsynchronously or asynchronously when an event is fired by Nuxeo code.\n<p/>\nExample listener:\n<p/><pre><code>    &lt;listener async=\"false\"\n        class=\"org.nuxeo.ecm.platform.dublincore.listener.DublinCoreListener\"\n        enabled=\"true\" name=\"mylistener\" postCommit=\"false\"\n        priority=\"50\" retryCount=\"1\">\n        &lt;event>documentCreated&lt;/event>\n        &lt;event>documentModified&lt;/event>\n    &lt;/listener>\n</code></pre><p/>\nThe events listed are those for which the listener will be called.\nIf there are none, the listener is called for all events, but this is strongly\ndiscouraged for performance reasons.\n<p/>\nListeners belong to one of three categories:\n<p/>\nIf postCommit=false then the listener is purely synchronous\n(also called \"inline\") and executed in the same thread and transaction\nas the code firing the event, as a regular method call.\nThe class must implement org.nuxeo.ecm.core.event.EventListener,\nwhich receives events one at a time.\n<p/>\nIf postCommit=true and async=true then the listener is purely\nasynchronous and executed at an arbitrary later point in time\n(but after the original transaction is committed), in its own thread and transaction.\nIt may be retried if a ConcurrentUpdateException is detected.\nThe listener is executed asynchronously by the WorkManager via a Work instance\nwhose category (which determines the Work queue used) is the listener's name.\nThe class must implement org.nuxeo.ecm.core.event.PostCommitEventListener,\nwhich receives a bundle of all the events raised by the original transaction.\n<p/>\nIf postCommit=true and async=false then the listener is executed synchronously\nimmediately after the original transaction is committed, but in a separate transaction.\nIt is not executed if the original transaction does a rollback.\nAll listeners in this category are executed one after the other (in priority order),\nand only after they are all done does the main thread continue execution.\n(However if one of the listeners takes too long it is left to run purely asynchronously\nand the other listeners in this category are processed.)\nThe class must implement org.nuxeo.ecm.core.event.PostCommitEventListener,\nwhich receives a bundle of all the events raised by the original transaction.\n<p/>\nThe priority gives a global ordering of all the listeners\nin the same category executed for a given event.\nThe default is 0.\n<p/>\nThe retryCount specifies how many times a purely asynchronous listener\nmay retry execution if it resulted in a ConcurrentUpdateException.\nThe default is 1.\n<p/>","componentId":"org.nuxeo.ecm.core.event.EventServiceComponent"},{"@type":"NXExtensionPoint","name":"dispatcher","descriptors":["org.nuxeo.ecm.core.event.pipe.dispatch.EventDispatcherDescriptor"],"documentation":"\n      Extension point to define the dispatcher used to dispatch event between pipes.\n\n      Example dispatcher definition:\n      <code>\n    <eventDispatcher\n        class=\"org.nuxeo.ecm.core.event.pipe.dispatch.SimpleEventBundlePipeDispatcher\" name=\"dispatcher\">\n        <parameters>\n            <parameter name=\"foo\">bar</parameter>\n        </parameters>\n    </eventDispatcher>\n</code>\n","id":"org.nuxeo.ecm.core.event.EventServiceComponent--dispatcher","version":"11.1-SNAPSHOT","label":"dispatcher (org.nuxeo.ecm.core.event.EventServiceComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.event.EventServiceComponent/ExtensionPoints/org.nuxeo.ecm.core.event.EventServiceComponent--dispatcher","documentationHtml":"<p/>\nExtension point to define the dispatcher used to dispatch event between pipes.\n<p/>\nExample dispatcher definition:\n<p/><pre><code>    &lt;eventDispatcher\n        class=\"org.nuxeo.ecm.core.event.pipe.dispatch.SimpleEventBundlePipeDispatcher\" name=\"dispatcher\">\n        &lt;parameters>\n            &lt;parameter name=\"foo\">bar&lt;/parameter>\n        &lt;/parameters>\n    &lt;/eventDispatcher>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.core.event.EventServiceComponent"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.event.EventService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.event.EventServiceComponent/Services/org.nuxeo.ecm.core.event.EventService","componentId":"org.nuxeo.ecm.core.event.EventServiceComponent"},{"@type":"NXService","id":"org.nuxeo.ecm.core.event.EventProducer","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.event.EventServiceComponent/Services/org.nuxeo.ecm.core.event.EventProducer","componentId":"org.nuxeo.ecm.core.event.EventServiceComponent"},{"@type":"NXService","id":"org.nuxeo.ecm.core.event.EventServiceAdmin","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.event.EventServiceComponent/Services/org.nuxeo.ecm.core.event.EventServiceAdmin","componentId":"org.nuxeo.ecm.core.event.EventServiceComponent"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.event.EventServiceComponent","documentation":"\n    Event service\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.event.EventServiceComponent","documentationHtml":"<p/>\nEvent service\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-event/bin/main/OSGI-INF/EventService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.event.EventServiceComponent\" version=\"1.0\">\n  <documentation>\n    Event service\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.event.EventServiceComponent\"/>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.event.EventService\"/>\n    <provide interface=\"org.nuxeo.ecm.core.event.EventProducer\"/>\n    <provide interface=\"org.nuxeo.ecm.core.event.EventServiceAdmin\"/>\n  </service>\n\n  <extension-point name=\"listener\">\n    <documentation>\n      Extension point defining event listeners.\n\n      An event listener describes some Java code that can be executed\n      synchronously or asynchronously when an event is fired by Nuxeo code.\n\n      Example listener:\n      <code>\n        <listener name=\"mylistener\" enabled=\"true\"\n            postCommit=\"false\" async=\"false\"\n            class=\"org.nuxeo.ecm.platform.dublincore.listener.DublinCoreListener\"\n            priority=\"50\" retryCount=\"1\">\n          <event>documentCreated</event>\n          <event>documentModified</event>\n        </listener>\n      </code>\n\n      The events listed are those for which the listener will be called.\n      If there are none, the listener is called for all events, but this is strongly\n      discouraged for performance reasons.\n\n      Listeners belong to one of three categories:\n\n      If postCommit=false then the listener is purely synchronous\n      (also called \"inline\") and executed in the same thread and transaction\n      as the code firing the event, as a regular method call.\n      The class must implement org.nuxeo.ecm.core.event.EventListener,\n      which receives events one at a time.\n\n      If postCommit=true and async=true then the listener is purely\n      asynchronous and executed at an arbitrary later point in time\n      (but after the original transaction is committed), in its own thread and transaction.\n      It may be retried if a ConcurrentUpdateException is detected.\n      The listener is executed asynchronously by the WorkManager via a Work instance\n      whose category (which determines the Work queue used) is the listener's name.\n      The class must implement org.nuxeo.ecm.core.event.PostCommitEventListener,\n      which receives a bundle of all the events raised by the original transaction.\n\n      If postCommit=true and async=false then the listener is executed synchronously\n      immediately after the original transaction is committed, but in a separate transaction.\n      It is not executed if the original transaction does a rollback.\n      All listeners in this category are executed one after the other (in priority order),\n      and only after they are all done does the main thread continue execution.\n      (However if one of the listeners takes too long it is left to run purely asynchronously\n      and the other listeners in this category are processed.)\n      The class must implement org.nuxeo.ecm.core.event.PostCommitEventListener,\n      which receives a bundle of all the events raised by the original transaction.\n\n      The priority gives a global ordering of all the listeners\n      in the same category executed for a given event.\n      The default is 0.\n\n      The retryCount specifies how many times a purely asynchronous listener\n      may retry execution if it resulted in a ConcurrentUpdateException.\n      The default is 1.\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.event.impl.EventListenerDescriptor\"/>\n  </extension-point>\n\n  <extension-point name=\"pipe\">\n    <documentation>\n      Extension point to contribute event pipe.\n\n      An event pipe is a where Nuxeo events will be sent for asynchronous processing.\n\n      Example pipe definition:\n      <code>\n        <eventPipe name=\"dummyPipe1\" class=\"org.nuxeo.ecm.core.event.pipe.DummyPipe\" priority=\"0\">\n\t      <parameters>\n\t        <parameter name=\"foo\">bar</parameter>\n\t      </parameters>\n\t    </eventPipe>\n      </code>\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.event.pipe.EventPipeDescriptor\"/>\n  </extension-point>\n\n  <extension-point name=\"dispatcher\">\n    <documentation>\n      Extension point to define the dispatcher used to dispatch event between pipes.\n\n      Example dispatcher definition:\n      <code>\n        <eventDispatcher name=\"dispatcher\"\n                         class=\"org.nuxeo.ecm.core.event.pipe.dispatch.SimpleEventBundlePipeDispatcher\">\n           <parameters>\n             <parameter name=\"foo\">bar</parameter>\n           </parameters>\n        </eventDispatcher>\n      </code>\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.event.pipe.dispatch.EventDispatcherDescriptor\"/>\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.scheduler.SchedulerService","extensionPoints":[{"@type":"NXExtensionPoint","name":"schedule","descriptors":["org.nuxeo.ecm.core.scheduler.ScheduleImpl"],"documentation":"\n      Extension allowing the registration of schedules.\n      This is similar to a cron job sending events. Note that\n      contrary to UNIX cron there is an additional \"seconds\" field\n      in the cron expression.\n      <p/>\n\n      A scheduler definition contains information about what event is sent,\n      when, and under what identity.\n      <p/>\n\n      For instance :\n      <code>\n    <schedule id=\"mySchedule\" jobFactoryClass=\"org.nuxeo.ecm.core.scheduler.DefaultEventJobFactory\">\n        <username>Administrator</username>\n        <event>myEvent</event>\n        <eventCategory>default</eventCategory>\n        <!-- Every first of the month at 3am -->\n        <cronExpression>0 0 3 1 * ?</cronExpression>\n        <timezone>UTC</timezone>\n    </schedule>\n</code>\n\n      jobFactoryClass is optional and defaults to org.nuxeo.ecm.core.scheduler.DefaultEventJobFactory.\n      timezone is optional and defaults to system default.\n\n      @see org.quartz.CronTrigger\n      @see org.nuxeo.ecm.core.scheduler.EventJobFactory\n      @see http://www.quartz-scheduler.org/docs/api/1.8.1/org/quartz/CronExpression.html\n      @see http://www.quartz-scheduler.org/docs/tutorials/crontrigger.html\n    \n","id":"org.nuxeo.ecm.core.scheduler.SchedulerService--schedule","version":"11.1-SNAPSHOT","label":"schedule (org.nuxeo.ecm.core.scheduler.SchedulerService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.scheduler.SchedulerService/ExtensionPoints/org.nuxeo.ecm.core.scheduler.SchedulerService--schedule","documentationHtml":"<p/>\nExtension allowing the registration of schedules.\nThis is similar to a cron job sending events. Note that\ncontrary to UNIX cron there is an additional \"seconds\" field\nin the cron expression.\n<p/>\nA scheduler definition contains information about what event is sent,\nwhen, and under what identity.\n<p/>\nFor instance :\n<p/><pre><code>    &lt;schedule id=\"mySchedule\" jobFactoryClass=\"org.nuxeo.ecm.core.scheduler.DefaultEventJobFactory\">\n        &lt;username>Administrator&lt;/username>\n        &lt;event>myEvent&lt;/event>\n        &lt;eventCategory>default&lt;/eventCategory>\n        &lt;!-- Every first of the month at 3am -->\n        &lt;cronExpression>0 0 3 1 * ?&lt;/cronExpression>\n        &lt;timezone>UTC&lt;/timezone>\n    &lt;/schedule>\n</code></pre><p/>\njobFactoryClass is optional and defaults to org.nuxeo.ecm.core.scheduler.DefaultEventJobFactory.\ntimezone is optional and defaults to system default.\n<p/>\n@see org.quartz.CronTrigger\n@see org.nuxeo.ecm.core.scheduler.EventJobFactory\n@see http://www.quartz-scheduler.org/docs/api/1.8.1/org/quartz/CronExpression.html\n@see http://www.quartz-scheduler.org/docs/tutorials/crontrigger.html\n<p/>","componentId":"org.nuxeo.ecm.core.scheduler.SchedulerService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.scheduler.SchedulerService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.scheduler.SchedulerService/Services/org.nuxeo.ecm.core.scheduler.SchedulerService","componentId":"org.nuxeo.ecm.core.scheduler.SchedulerService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.scheduler.SchedulerServiceImpl","documentation":"\n     Core scheduler registry service.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event/org.nuxeo.ecm.core.scheduler.SchedulerService","documentationHtml":"<p/>\nCore scheduler registry service.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-event/bin/main/OSGI-INF/scheduler-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.scheduler.SchedulerService\">\n  <alias>org.nuxeo.ecm.platform.scheduler.core.service.SchedulerRegistryService</alias>\n\n  <require>org.nuxeo.runtime.cluster.ClusterService</require>\n\n  <documentation>\n     Core scheduler registry service.\n  </documentation>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.scheduler.SchedulerService\" />\n  </service>\n\n  <implementation class=\"org.nuxeo.ecm.core.scheduler.SchedulerServiceImpl\" />\n\n  <extension-point name=\"schedule\">\n\n    <documentation>\n      Extension allowing the registration of schedules.\n      This is similar to a cron job sending events. Note that\n      contrary to UNIX cron there is an additional \"seconds\" field\n      in the cron expression.\n      <p/>\n      A scheduler definition contains information about what event is sent,\n      when, and under what identity.\n      <p/>\n      For instance :\n      <code>\n        <schedule id=\"mySchedule\" jobFactoryClass=\"org.nuxeo.ecm.core.scheduler.DefaultEventJobFactory\">\n          <username>Administrator</username>\n          <event>myEvent</event>\n          <eventCategory>default</eventCategory>\n          <!-- Every first of the month at 3am -->\n          <cronExpression>0 0 3 1 * ?</cronExpression>\n          <timezone>UTC</timezone>\n        </schedule>\n      </code>\n      jobFactoryClass is optional and defaults to org.nuxeo.ecm.core.scheduler.DefaultEventJobFactory.\n      timezone is optional and defaults to system default.\n\n      @see org.quartz.CronTrigger\n      @see org.nuxeo.ecm.core.scheduler.EventJobFactory\n      @see http://www.quartz-scheduler.org/docs/api/1.8.1/org/quartz/CronExpression.html\n      @see http://www.quartz-scheduler.org/docs/tutorials/crontrigger.html\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.scheduler.ScheduleImpl\"/>\n\n  </extension-point>\n\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.automation.features","fileName":"classes","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 2\nBundle-Name: Nuxeo Automation Features\nBundle-SymbolicName: org.nuxeo.ecm.automation.features;singleton:=true\nBundle-Vendor: Nuxeo\nBundle-Localization: bundle\nRequire-Bundle: org.nuxeo.ecm.automation.core\nExport-Package: org.nuxeo.ecm.automation.core\nEclipse-LazyStart: true\nNuxeo-Component: OSGI-INF/operations-contrib.xml,\n OSGI-INF/bindings-contrib.xml,\n OSGI-INF/pageprovider-contrib.xml,\n OSGI-INF/helpers-contrib.xml,\n OSGI-INF/filters-contrib.xml,\n OSGI-INF/bulk-contrib.xml\nBundle-Activator: org.nuxeo.ecm.automation.features.Activator\n","requirements":null,"groupId":"org.nuxeo.ecm.automation","artifactId":"nuxeo-automation-features","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.automation","name":"org.nuxeo.ecm.automation","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.automation.core","org.nuxeo.ecm.automation.features","org.nuxeo.ecm.automation.io","org.nuxeo.ecm.automation.scripting","org.nuxeo.ecm.automation.server"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-features/target/classes","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.automation.features.bulk","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.automation.features.bulk--actions","extensionPoint":"org.nuxeo.ecm.core.bulk--actions","documentation":null,"xml":"<extension point=\"actions\" target=\"org.nuxeo.ecm.core.bulk\">\n    <action batchSize=\"10\" bucketSize=\"100\" httpEnabled=\"true\" name=\"automation\" validationClass=\"org.nuxeo.ecm.automation.core.operations.services.bulk.validation.AutomationBulkValidation\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.bulk","rawName":"service:org.nuxeo.ecm.core.bulk"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.features/org.nuxeo.ecm.core.automation.features.bulk/Contributions/org.nuxeo.ecm.core.automation.features.bulk--actions","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;action batchSize=&quot;10&quot; bucketSize=&quot;100&quot; httpEnabled=&quot;true&quot; name=&quot;automation&quot; validationClass=&quot;org.nuxeo.ecm.automation.core.operations.services.bulk.validation.AutomationBulkValidation&quot;/&gt;","id":"automation","label":"action automation","rawXml":"<action batchSize=\"10\" bucketSize=\"100\" httpEnabled=\"true\" name=\"automation\" validationClass=\"org.nuxeo.ecm.automation.core.operations.services.bulk.validation.AutomationBulkValidation\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.automation.features.bulk--streamProcessor","extensionPoint":"org.nuxeo.runtime.stream.service--streamProcessor","documentation":null,"xml":"<extension point=\"streamProcessor\" target=\"org.nuxeo.runtime.stream.service\">\n    <streamProcessor class=\"org.nuxeo.ecm.automation.core.operations.services.bulk.AutomationBulkAction\" defaultConcurrency=\"2\" defaultPartitions=\"2\" logConfig=\"bulk\" name=\"automation\">\n      <policy continueOnFailure=\"true\" delay=\"1s\" maxRetries=\"3\" name=\"automation\"/>\n    </streamProcessor>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.stream.service","rawName":"service:org.nuxeo.runtime.stream.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.features/org.nuxeo.ecm.core.automation.features.bulk/Contributions/org.nuxeo.ecm.core.automation.features.bulk--streamProcessor","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;streamProcessor class=&quot;org.nuxeo.ecm.automation.core.operations.services.bulk.AutomationBulkAction&quot; defaultConcurrency=&quot;2&quot; defaultPartitions=&quot;2&quot; logConfig=&quot;bulk&quot; name=&quot;automation&quot;&gt;\n      &lt;policy continueOnFailure=&quot;true&quot; delay=&quot;1s&quot; maxRetries=&quot;3&quot; name=&quot;automation&quot;/&gt;\n    &lt;/streamProcessor&gt;","id":"automation","label":"streamProcessor automation","rawXml":"<streamProcessor class=\"org.nuxeo.ecm.automation.core.operations.services.bulk.AutomationBulkAction\" defaultConcurrency=\"2\" defaultPartitions=\"2\" logConfig=\"bulk\" name=\"automation\">\n      <policy continueOnFailure=\"true\" delay=\"1s\" maxRetries=\"3\" name=\"automation\"/>\n    </streamProcessor>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.features/org.nuxeo.ecm.core.automation.features.bulk","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-features/target/classes/OSGI-INF/bulk-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.automation.features.bulk\" version=\"1.0.0\">\n\n  <require>org.nuxeo.ecm.core.bulk.config</require>\n\n  <extension target=\"org.nuxeo.ecm.core.bulk\" point=\"actions\">\n    <action name=\"automation\" bucketSize=\"100\" batchSize=\"10\" httpEnabled=\"true\"\n      validationClass=\"org.nuxeo.ecm.automation.core.operations.services.bulk.validation.AutomationBulkValidation\"/>\n  </extension>\n\n  <extension target=\"org.nuxeo.runtime.stream.service\" point=\"streamProcessor\">\n    <streamProcessor name=\"automation\"\n      class=\"org.nuxeo.ecm.automation.core.operations.services.bulk.AutomationBulkAction\" logConfig=\"bulk\"\n      defaultConcurrency=\"2\" defaultPartitions=\"2\">\n      <policy name=\"automation\" maxRetries=\"3\" delay=\"1s\" continueOnFailure=\"true\" />\n    </streamProcessor>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.directory.actions.core","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.directory.actions.core--filters","extensionPoint":"org.nuxeo.ecm.platform.actions.ActionService--filters","documentation":null,"xml":"<extension point=\"filters\" target=\"org.nuxeo.ecm.platform.actions.ActionService\">\n\n    <filter id=\"directoriesManagementAccess\">\n      <rule grant=\"true\">\n        <condition>currentUser.administrator</condition>\n        <condition>currentUser.isMemberOf('powerusers')</condition>\n      </rule>\n    </filter>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.actions.ActionService","rawName":"service:org.nuxeo.ecm.platform.actions.ActionService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.features/org.nuxeo.ecm.directory.actions.core/Contributions/org.nuxeo.ecm.directory.actions.core--filters","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;filter id=&quot;directoriesManagementAccess&quot;&gt;\n      &lt;rule grant=&quot;true&quot;&gt;\n        &lt;condition&gt;currentUser.administrator&lt;/condition&gt;\n        &lt;condition&gt;currentUser.isMemberOf('powerusers')&lt;/condition&gt;\n      &lt;/rule&gt;\n    &lt;/filter&gt;","id":"directoriesManagementAccess","label":"filter directoriesManagementAccess","rawXml":"<filter id=\"directoriesManagementAccess\">\n      <rule grant=\"true\">\n        <condition>currentUser.administrator</condition>\n        <condition>currentUser.isMemberOf('powerusers')</condition>\n      </rule>\n    </filter>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.features/org.nuxeo.ecm.directory.actions.core","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-features/target/classes/OSGI-INF/filters-contrib.xml","xmlFileContent":"<component name=\"org.nuxeo.ecm.directory.actions.core\">\n\n  <extension target=\"org.nuxeo.ecm.platform.actions.ActionService\"\n    point=\"filters\">\n\n    <filter id=\"directoriesManagementAccess\">\n      <rule grant=\"true\">\n        <condition>currentUser.administrator</condition>\n        <condition>currentUser.isMemberOf('powerusers')</condition>\n      </rule>\n    </filter>\n\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.automation.features.bindings","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.automation.features.bindings--bindings","extensionPoint":"org.nuxeo.ecm.automation.server.AutomationServer--bindings","documentation":null,"xml":"<extension point=\"bindings\" target=\"org.nuxeo.ecm.automation.server.AutomationServer\">\n    <!-- don't allow direct access to Audit log -->\n    <binding name=\"Audit.Query\">\n      <administrator>true</administrator>\n    </binding>\n    <binding name=\"Audit.QueryWithPageProvider\">\n      <administrator>true</administrator>\n    </binding>\n    <!-- don't allow direct access to user operations -->\n    <binding name=\"User.CreateOrUpdate\">\n      <administrator>true</administrator>\n    </binding>\n    <binding name=\"Group.CreateOrUpdate\">\n      <administrator>true</administrator>\n    </binding>\n    <binding name=\"Bulk.WaitForAction\">\n      <administrator>true</administrator>\n    </binding>\n    <binding name=\"Metrics.Start\">\n      <administrator>true</administrator>\n    </binding>\n    <binding name=\"Metrics.Stop\">\n      <administrator>true</administrator>\n    </binding>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.automation.server.AutomationServer","rawName":"service:org.nuxeo.ecm.automation.server.AutomationServer"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.features/org.nuxeo.ecm.core.automation.features.bindings/Contributions/org.nuxeo.ecm.core.automation.features.bindings--bindings","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;binding name=&quot;Audit.Query&quot;&gt;\n      &lt;administrator&gt;true&lt;/administrator&gt;\n    &lt;/binding&gt;","id":"Audit.Query","label":"binding Audit.Query","rawXml":"<binding name=\"Audit.Query\">\n      <administrator>true</administrator>\n    </binding>"},{"documentation":"","xml":"&lt;binding name=&quot;Audit.QueryWithPageProvider&quot;&gt;\n      &lt;administrator&gt;true&lt;/administrator&gt;\n    &lt;/binding&gt;","id":"Audit.QueryWithPageProvider","label":"binding Audit.QueryWithPageProvider","rawXml":"<binding name=\"Audit.QueryWithPageProvider\">\n      <administrator>true</administrator>\n    </binding>"},{"documentation":"","xml":"&lt;binding name=&quot;User.CreateOrUpdate&quot;&gt;\n      &lt;administrator&gt;true&lt;/administrator&gt;\n    &lt;/binding&gt;","id":"User.CreateOrUpdate","label":"binding User.CreateOrUpdate","rawXml":"<binding name=\"User.CreateOrUpdate\">\n      <administrator>true</administrator>\n    </binding>"},{"documentation":"","xml":"&lt;binding name=&quot;Group.CreateOrUpdate&quot;&gt;\n      &lt;administrator&gt;true&lt;/administrator&gt;\n    &lt;/binding&gt;","id":"Group.CreateOrUpdate","label":"binding Group.CreateOrUpdate","rawXml":"<binding name=\"Group.CreateOrUpdate\">\n      <administrator>true</administrator>\n    </binding>"},{"documentation":"","xml":"&lt;binding name=&quot;Bulk.WaitForAction&quot;&gt;\n      &lt;administrator&gt;true&lt;/administrator&gt;\n    &lt;/binding&gt;","id":"Bulk.WaitForAction","label":"binding Bulk.WaitForAction","rawXml":"<binding name=\"Bulk.WaitForAction\">\n      <administrator>true</administrator>\n    </binding>"},{"documentation":"","xml":"&lt;binding name=&quot;Metrics.Start&quot;&gt;\n      &lt;administrator&gt;true&lt;/administrator&gt;\n    &lt;/binding&gt;","id":"Metrics.Start","label":"binding Metrics.Start","rawXml":"<binding name=\"Metrics.Start\">\n      <administrator>true</administrator>\n    </binding>"},{"documentation":"","xml":"&lt;binding name=&quot;Metrics.Stop&quot;&gt;\n      &lt;administrator&gt;true&lt;/administrator&gt;\n    &lt;/binding&gt;","id":"Metrics.Stop","label":"binding Metrics.Stop","rawXml":"<binding name=\"Metrics.Stop\">\n      <administrator>true</administrator>\n    </binding>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.features/org.nuxeo.ecm.core.automation.features.bindings","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-features/target/classes/OSGI-INF/bindings-contrib.xml","xmlFileContent":"<component name=\"org.nuxeo.ecm.core.automation.features.bindings\">\n  <extension target=\"org.nuxeo.ecm.automation.server.AutomationServer\"\n    point=\"bindings\">\n    <!-- don't allow direct access to Audit log -->\n    <binding name=\"Audit.Query\">\n      <administrator>true</administrator>\n    </binding>\n    <binding name=\"Audit.QueryWithPageProvider\">\n      <administrator>true</administrator>\n    </binding>\n    <!-- don't allow direct access to user operations -->\n    <binding name=\"User.CreateOrUpdate\">\n      <administrator>true</administrator>\n    </binding>\n    <binding name=\"Group.CreateOrUpdate\">\n      <administrator>true</administrator>\n    </binding>\n    <binding name=\"Bulk.WaitForAction\">\n      <administrator>true</administrator>\n    </binding>\n    <binding name=\"Metrics.Start\">\n      <administrator>true</administrator>\n    </binding>\n    <binding name=\"Metrics.Stop\">\n      <administrator>true</administrator>\n    </binding>\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.audit.PageProviderservice.automation.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.audit.PageProviderservice.automation.contrib--providers","extensionPoint":"org.nuxeo.ecm.platform.query.api.PageProviderService--providers","documentation":null,"xml":"<extension point=\"providers\" target=\"org.nuxeo.ecm.platform.query.api.PageProviderService\">\n\n    <genericPageProvider class=\"org.nuxeo.ecm.platform.audit.api.AuditPageProvider\" name=\"AUDIT_BROWSER\">\n      <whereClause docType=\"BasicAuditSearch\">\n        <predicate operator=\">\" parameter=\"log.id\">\n          <field name=\"logId\" schema=\"basicauditsearch\"/>\n        </predicate>\n        <predicate operator=\"BETWEEN\" parameter=\"log.eventDate\">\n          <field name=\"startDate\" schema=\"basicauditsearch\"/>\n          <field name=\"endDate\" schema=\"basicauditsearch\"/>\n        </predicate>\n        <predicate operator=\"IN\" parameter=\"log.category\">\n          <field name=\"eventCategories\" schema=\"basicauditsearch\"/>\n        </predicate>\n        <predicate operator=\"IN\" parameter=\"log.eventId\">\n          <field name=\"eventIds\" schema=\"basicauditsearch\"/>\n        </predicate>\n        <predicate operator=\"IN\" parameter=\"log.principalName\">\n          <field name=\"principalNames\" schema=\"basicauditsearch\"/>\n        </predicate>\n      </whereClause>\n      <sort ascending=\"true\" column=\"log.eventDate\"/>\n      <sort ascending=\"true\" column=\"log.id\"/>\n      <pageSize>10</pageSize>\n    </genericPageProvider>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.query.api.PageProviderService","rawName":"service:org.nuxeo.ecm.platform.query.api.PageProviderService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.features/org.nuxeo.ecm.platform.audit.PageProviderservice.automation.contrib/Contributions/org.nuxeo.ecm.platform.audit.PageProviderservice.automation.contrib--providers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;genericPageProvider class=&quot;org.nuxeo.ecm.platform.audit.api.AuditPageProvider&quot; name=&quot;AUDIT_BROWSER&quot;&gt;\n      &lt;whereClause docType=&quot;BasicAuditSearch&quot;&gt;\n        &lt;predicate operator=&quot;&amp;gt;&quot; parameter=&quot;log.id&quot;&gt;\n          &lt;field name=&quot;logId&quot; schema=&quot;basicauditsearch&quot;/&gt;\n        &lt;/predicate&gt;\n        &lt;predicate operator=&quot;BETWEEN&quot; parameter=&quot;log.eventDate&quot;&gt;\n          &lt;field name=&quot;startDate&quot; schema=&quot;basicauditsearch&quot;/&gt;\n          &lt;field name=&quot;endDate&quot; schema=&quot;basicauditsearch&quot;/&gt;\n        &lt;/predicate&gt;\n        &lt;predicate operator=&quot;IN&quot; parameter=&quot;log.category&quot;&gt;\n          &lt;field name=&quot;eventCategories&quot; schema=&quot;basicauditsearch&quot;/&gt;\n        &lt;/predicate&gt;\n        &lt;predicate operator=&quot;IN&quot; parameter=&quot;log.eventId&quot;&gt;\n          &lt;field name=&quot;eventIds&quot; schema=&quot;basicauditsearch&quot;/&gt;\n        &lt;/predicate&gt;\n        &lt;predicate operator=&quot;IN&quot; parameter=&quot;log.principalName&quot;&gt;\n          &lt;field name=&quot;principalNames&quot; schema=&quot;basicauditsearch&quot;/&gt;\n        &lt;/predicate&gt;\n      &lt;/whereClause&gt;\n      &lt;sort ascending=&quot;true&quot; column=&quot;log.eventDate&quot;/&gt;\n      &lt;sort ascending=&quot;true&quot; column=&quot;log.id&quot;/&gt;\n      &lt;pageSize&gt;10&lt;/pageSize&gt;\n    &lt;/genericPageProvider&gt;","id":"AUDIT_BROWSER","label":"genericPageProvider AUDIT_BROWSER","rawXml":"<genericPageProvider class=\"org.nuxeo.ecm.platform.audit.api.AuditPageProvider\" name=\"AUDIT_BROWSER\">\n      <whereClause docType=\"BasicAuditSearch\">\n        <predicate operator=\"&gt;\" parameter=\"log.id\">\n          <field name=\"logId\" schema=\"basicauditsearch\"/>\n        </predicate>\n        <predicate operator=\"BETWEEN\" parameter=\"log.eventDate\">\n          <field name=\"startDate\" schema=\"basicauditsearch\"/>\n          <field name=\"endDate\" schema=\"basicauditsearch\"/>\n        </predicate>\n        <predicate operator=\"IN\" parameter=\"log.category\">\n          <field name=\"eventCategories\" schema=\"basicauditsearch\"/>\n        </predicate>\n        <predicate operator=\"IN\" parameter=\"log.eventId\">\n          <field name=\"eventIds\" schema=\"basicauditsearch\"/>\n        </predicate>\n        <predicate operator=\"IN\" parameter=\"log.principalName\">\n          <field name=\"principalNames\" schema=\"basicauditsearch\"/>\n        </predicate>\n      </whereClause>\n      <sort ascending=\"true\" column=\"log.eventDate\"/>\n      <sort ascending=\"true\" column=\"log.id\"/>\n      <pageSize>10</pageSize>\n    </genericPageProvider>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.features/org.nuxeo.ecm.platform.audit.PageProviderservice.automation.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-features/target/classes/OSGI-INF/pageprovider-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.platform.audit.PageProviderservice.automation.contrib\">\n\n\n  <extension target=\"org.nuxeo.ecm.platform.query.api.PageProviderService\"\n    point=\"providers\">\n\n    <genericPageProvider name=\"AUDIT_BROWSER\"\n      class=\"org.nuxeo.ecm.platform.audit.api.AuditPageProvider\">\n      <whereClause docType=\"BasicAuditSearch\">\n        <predicate parameter=\"log.id\" operator=\"&gt;\">\n          <field schema=\"basicauditsearch\" name=\"logId\" />\n        </predicate>\n        <predicate parameter=\"log.eventDate\" operator=\"BETWEEN\">\n          <field schema=\"basicauditsearch\" name=\"startDate\" />\n          <field schema=\"basicauditsearch\" name=\"endDate\" />\n        </predicate>\n        <predicate parameter=\"log.category\" operator=\"IN\">\n          <field schema=\"basicauditsearch\" name=\"eventCategories\" />\n        </predicate>\n        <predicate parameter=\"log.eventId\" operator=\"IN\">\n          <field schema=\"basicauditsearch\" name=\"eventIds\" />\n        </predicate>\n        <predicate parameter=\"log.principalName\" operator=\"IN\">\n          <field schema=\"basicauditsearch\" name=\"principalNames\" />\n        </predicate>\n      </whereClause>\n      <sort column=\"log.eventDate\" ascending=\"true\" />\n      <sort column=\"log.id\" ascending=\"true\" />\n      <pageSize>10</pageSize>\n    </genericPageProvider>\n\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.automation.features.operations","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.automation.features.operations--operations","extensionPoint":"org.nuxeo.ecm.core.operation.OperationServiceComponent--operations","documentation":null,"xml":"<extension point=\"operations\" target=\"org.nuxeo.ecm.core.operation.OperationServiceComponent\">\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.query.DocumentPaginatedQuery\">\n      <widgets>\n        <widget name=\"query\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">Query</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">nxql</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>query</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.query.ResultSetPaginatedQuery\">\n      <widgets>\n        <widget name=\"query\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">ResultSet Query</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">nxql</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>query</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.AuditLog\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.AuditQuery\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.AuditPageProviderOperation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.AuditRestore\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.CreateRelation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.GetRelations\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.DeleteRelation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.DocumentPageProviderOperation\">\n      <widgets>\n        <widget name=\"query\" type=\"codearea\">\n            <labels>\n              <label mode=\"any\">NXQL query</label>\n            </labels>\n            <properties mode=\"any\">\n              <property name=\"language\">nxql</property>\n              <property name=\"width\">100%</property>\n              <property name=\"height\">100%</property>\n            </properties>\n             <fields>\n              <field>query</field>\n            </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.ResultSetPageProviderOperation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.users.GetDocumentPrincipalEmails\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.users.GetDocumentUsersAndGroups\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.users.QueryUsers\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.users.CreateOrUpdateUser\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.users.CreateOrUpdateGroup\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.notification.SendMail\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.FileManagerImport\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.FileManagerImportWithProperties\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.BlobHolderAttach\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.GetActions\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.management.GetCounters\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.GetDirectoryEntries\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.UserInvite\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.UserWorkspace\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.RunOperationOnProvider\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.directory.CreateDirectoryEntries\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.directory.CreateVocabularyEntry\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.directory.DeleteDirectoryEntries\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.directory.UpdateDirectoryEntries\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.directory.ReadDirectoryEntries\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.directory.DirectoryProjection\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.directory.LoadFromCSV\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.users.GetNuxeoPrincipal\"/>\n\n  \t<operation class=\"org.nuxeo.ecm.automation.core.operations.users.SuggestUserEntries\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.directory.SuggestDirectoryEntries\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.bulk.BulkRunAction\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.bulk.BulkWaitForAction\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.SuggestCollectionEntry\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.CreateCollectionOperation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.AddToCollectionOperation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.RemoveFromCollectionOperation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.RemoveFromFavoritesOperation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.AddToFavoritesOperation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.GetCollectionsOperation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.GetDocumentsFromCollectionOperation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.GetDocumentsFromFavoritesOperation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.FetchFavorites\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.MoveCollectionMemberOperation\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.workmanager.WorkManagerRunWorkInFailure\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.coldstorage.MoveToColdStorage\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.coldstorage.RequestRetrievalFromColdStorage\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.MetricsStart\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.MetricsStop\"/>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.operation.OperationServiceComponent","rawName":"service:org.nuxeo.ecm.core.operation.OperationServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.features/org.nuxeo.ecm.core.automation.features.operations/Contributions/org.nuxeo.ecm.core.automation.features.operations--operations","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.query.DocumentPaginatedQuery&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;query&quot; type=&quot;codearea&quot;&gt;\n          &lt;labels&gt;\n            &lt;label mode=&quot;any&quot;&gt;Query&lt;/label&gt;\n          &lt;/labels&gt;\n          &lt;properties mode=&quot;any&quot;&gt;\n            &lt;property name=&quot;language&quot;&gt;nxql&lt;/property&gt;\n            &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n            &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n          &lt;/properties&gt;\n          &lt;fields&gt;\n            &lt;field&gt;query&lt;/field&gt;\n          &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.query.DocumentPaginatedQuery\">\n      <widgets>\n        <widget name=\"query\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">Query</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">nxql</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>query</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.query.ResultSetPaginatedQuery&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;query&quot; type=&quot;codearea&quot;&gt;\n          &lt;labels&gt;\n            &lt;label mode=&quot;any&quot;&gt;ResultSet Query&lt;/label&gt;\n          &lt;/labels&gt;\n          &lt;properties mode=&quot;any&quot;&gt;\n            &lt;property name=&quot;language&quot;&gt;nxql&lt;/property&gt;\n            &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n            &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n          &lt;/properties&gt;\n          &lt;fields&gt;\n            &lt;field&gt;query&lt;/field&gt;\n          &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.query.ResultSetPaginatedQuery\">\n      <widgets>\n        <widget name=\"query\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">ResultSet Query</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">nxql</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>query</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.AuditLog&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.AuditLog\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.AuditQuery&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.AuditQuery\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.AuditPageProviderOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.AuditPageProviderOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.AuditRestore&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.AuditRestore\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.CreateRelation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.CreateRelation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.GetRelations&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.GetRelations\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.DeleteRelation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.DeleteRelation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.DocumentPageProviderOperation&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;query&quot; type=&quot;codearea&quot;&gt;\n            &lt;labels&gt;\n              &lt;label mode=&quot;any&quot;&gt;NXQL query&lt;/label&gt;\n            &lt;/labels&gt;\n            &lt;properties mode=&quot;any&quot;&gt;\n              &lt;property name=&quot;language&quot;&gt;nxql&lt;/property&gt;\n              &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n              &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n            &lt;/properties&gt;\n             &lt;fields&gt;\n              &lt;field&gt;query&lt;/field&gt;\n            &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.DocumentPageProviderOperation\">\n      <widgets>\n        <widget name=\"query\" type=\"codearea\">\n            <labels>\n              <label mode=\"any\">NXQL query</label>\n            </labels>\n            <properties mode=\"any\">\n              <property name=\"language\">nxql</property>\n              <property name=\"width\">100%</property>\n              <property name=\"height\">100%</property>\n            </properties>\n             <fields>\n              <field>query</field>\n            </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.ResultSetPageProviderOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.ResultSetPageProviderOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.users.GetDocumentPrincipalEmails&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.users.GetDocumentPrincipalEmails\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.users.GetDocumentUsersAndGroups&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.users.GetDocumentUsersAndGroups\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.users.QueryUsers&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.users.QueryUsers\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.users.CreateOrUpdateUser&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.users.CreateOrUpdateUser\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.users.CreateOrUpdateGroup&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.users.CreateOrUpdateGroup\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.notification.SendMail&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.notification.SendMail\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.FileManagerImport&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.FileManagerImport\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.FileManagerImportWithProperties&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.FileManagerImportWithProperties\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.BlobHolderAttach&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.BlobHolderAttach\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.GetActions&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.GetActions\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.management.GetCounters&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.management.GetCounters\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.GetDirectoryEntries&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.GetDirectoryEntries\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.UserInvite&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.UserInvite\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.UserWorkspace&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.UserWorkspace\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.RunOperationOnProvider&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.RunOperationOnProvider\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.directory.CreateDirectoryEntries&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.directory.CreateDirectoryEntries\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.directory.CreateVocabularyEntry&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.directory.CreateVocabularyEntry\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.directory.DeleteDirectoryEntries&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.directory.DeleteDirectoryEntries\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.directory.UpdateDirectoryEntries&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.directory.UpdateDirectoryEntries\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.directory.ReadDirectoryEntries&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.directory.ReadDirectoryEntries\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.directory.DirectoryProjection&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.directory.DirectoryProjection\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.directory.LoadFromCSV&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.directory.LoadFromCSV\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.users.GetNuxeoPrincipal&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.users.GetNuxeoPrincipal\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.users.SuggestUserEntries&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.users.SuggestUserEntries\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.directory.SuggestDirectoryEntries&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.directory.SuggestDirectoryEntries\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.bulk.BulkRunAction&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.bulk.BulkRunAction\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.bulk.BulkWaitForAction&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.bulk.BulkWaitForAction\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.collections.SuggestCollectionEntry&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.collections.SuggestCollectionEntry\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.collections.CreateCollectionOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.collections.CreateCollectionOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.collections.AddToCollectionOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.collections.AddToCollectionOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.collections.RemoveFromCollectionOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.collections.RemoveFromCollectionOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.collections.RemoveFromFavoritesOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.collections.RemoveFromFavoritesOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.collections.AddToFavoritesOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.collections.AddToFavoritesOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.collections.GetCollectionsOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.collections.GetCollectionsOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.collections.GetDocumentsFromCollectionOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.collections.GetDocumentsFromCollectionOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.collections.GetDocumentsFromFavoritesOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.collections.GetDocumentsFromFavoritesOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.collections.FetchFavorites&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.collections.FetchFavorites\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.collections.MoveCollectionMemberOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.collections.MoveCollectionMemberOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.workmanager.WorkManagerRunWorkInFailure&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.workmanager.WorkManagerRunWorkInFailure\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.coldstorage.MoveToColdStorage&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.coldstorage.MoveToColdStorage\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.coldstorage.RequestRetrievalFromColdStorage&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.coldstorage.RequestRetrievalFromColdStorage\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.MetricsStart&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.MetricsStart\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.services.MetricsStop&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.services.MetricsStop\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.automation.features.operations--chains","extensionPoint":"org.nuxeo.ecm.core.operation.OperationServiceComponent--chains","documentation":null,"xml":"<extension point=\"chains\" target=\"org.nuxeo.ecm.core.operation.OperationServiceComponent\">\n    <chain id=\"VersionAndAttachFile\">\n      <operation id=\"Context.PushBlobList\">\n      </operation>\n      <operation id=\"Repository.GetDocument\">\n        <param name=\"value\" type=\"string\">expr:Context.get(\"currentDocument\")</param>\n      </operation>\n      <operation id=\"Document.CheckIn\">\n        <param name=\"version\" type=\"string\">minor</param>\n        <param name=\"comment\" type=\"string\">Automatic checkin before file update</param>\n      </operation>\n      <operation id=\"Context.SetInputAsVar\">\n        <param name=\"name\" type=\"string\">newDocument</param>\n      </operation>\n      <operation id=\"Context.SetVar\">\n        <param name=\"name\" type=\"string\">currentDocument</param>\n        <param name=\"value\" type=\"string\">expr:Context.get(\"newDocument\").id</param>\n      </operation>\n      <operation id=\"Context.PopBlobList\">\n      </operation>\n      <operation id=\"BlobHolder.AttachOnCurrentDocument\">\n        <param name=\"useMainBlob\" type=\"boolean\">true</param>\n      </operation>\n    </chain>\n    <chain id=\"AttachFiles\">\n      <operation id=\"BlobHolder.AttachOnCurrentDocument\">\n        <param name=\"useMainBlob\" type=\"boolean\">false</param>\n      </operation>\n    </chain>\n    <chain id=\"VersionAndAttachFiles\">\n      <operation id=\"Context.PushBlobList\">\n      </operation>\n      <operation id=\"Repository.GetDocument\">\n        <param name=\"value\" type=\"string\">expr:Context.get(\"currentDocument\")</param>\n      </operation>\n      <operation id=\"Document.CheckIn\">\n        <param name=\"version\" type=\"string\">minor</param>\n        <param name=\"comment\" type=\"string\">Automatic checkin before files update</param>\n      </operation>\n      <operation id=\"Context.SetInputAsVar\">\n        <param name=\"name\" type=\"string\">newDocument</param>\n      </operation>\n      <operation id=\"Context.SetVar\">\n        <param name=\"name\" type=\"string\">currentDocument</param>\n        <param name=\"value\" type=\"string\">expr:Context.get(\"newDocument\").id</param>\n      </operation>\n      <operation id=\"Context.PopBlobList\">\n      </operation>\n      <operation id=\"BlobHolder.AttachOnCurrentDocument\">\n        <param name=\"useMainBlob\" type=\"boolean\">false</param>\n      </operation>\n    </chain>\n    <chain id=\"FileManager.ImportWithMetaData\">\n      <operation id=\"FileManager.ImportWithProperties\">\n        <param name=\"overwrite\" type=\"boolean\">true</param>\n        <param name=\"properties\" type=\"properties\">expr:Context.get(\"docMetaData\")</param>\n      </operation>\n    </chain>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.operation.OperationServiceComponent","rawName":"service:org.nuxeo.ecm.core.operation.OperationServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.features/org.nuxeo.ecm.core.automation.features.operations/Contributions/org.nuxeo.ecm.core.automation.features.operations--chains","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;chain id=&quot;VersionAndAttachFile&quot;&gt;\n      &lt;operation id=&quot;Context.PushBlobList&quot;&gt;\n      &lt;/operation&gt;\n      &lt;operation id=&quot;Repository.GetDocument&quot;&gt;\n        &lt;param name=&quot;value&quot; type=&quot;string&quot;&gt;expr:Context.get(&quot;currentDocument&quot;)&lt;/param&gt;\n      &lt;/operation&gt;\n      &lt;operation id=&quot;Document.CheckIn&quot;&gt;\n        &lt;param name=&quot;version&quot; type=&quot;string&quot;&gt;minor&lt;/param&gt;\n        &lt;param name=&quot;comment&quot; type=&quot;string&quot;&gt;Automatic checkin before file update&lt;/param&gt;\n      &lt;/operation&gt;\n      &lt;operation id=&quot;Context.SetInputAsVar&quot;&gt;\n        &lt;param name=&quot;name&quot; type=&quot;string&quot;&gt;newDocument&lt;/param&gt;\n      &lt;/operation&gt;\n      &lt;operation id=&quot;Context.SetVar&quot;&gt;\n        &lt;param name=&quot;name&quot; type=&quot;string&quot;&gt;currentDocument&lt;/param&gt;\n        &lt;param name=&quot;value&quot; type=&quot;string&quot;&gt;expr:Context.get(&quot;newDocument&quot;).id&lt;/param&gt;\n      &lt;/operation&gt;\n      &lt;operation id=&quot;Context.PopBlobList&quot;&gt;\n      &lt;/operation&gt;\n      &lt;operation id=&quot;BlobHolder.AttachOnCurrentDocument&quot;&gt;\n        &lt;param name=&quot;useMainBlob&quot; type=&quot;boolean&quot;&gt;true&lt;/param&gt;\n      &lt;/operation&gt;\n    &lt;/chain&gt;","id":"VersionAndAttachFile","label":"chain VersionAndAttachFile","rawXml":"<chain id=\"VersionAndAttachFile\">\n      <operation id=\"Context.PushBlobList\">\n      </operation>\n      <operation id=\"Repository.GetDocument\">\n        <param name=\"value\" type=\"string\">expr:Context.get(\"currentDocument\")</param>\n      </operation>\n      <operation id=\"Document.CheckIn\">\n        <param name=\"version\" type=\"string\">minor</param>\n        <param name=\"comment\" type=\"string\">Automatic checkin before file update</param>\n      </operation>\n      <operation id=\"Context.SetInputAsVar\">\n        <param name=\"name\" type=\"string\">newDocument</param>\n      </operation>\n      <operation id=\"Context.SetVar\">\n        <param name=\"name\" type=\"string\">currentDocument</param>\n        <param name=\"value\" type=\"string\">expr:Context.get(\"newDocument\").id</param>\n      </operation>\n      <operation id=\"Context.PopBlobList\">\n      </operation>\n      <operation id=\"BlobHolder.AttachOnCurrentDocument\">\n        <param name=\"useMainBlob\" type=\"boolean\">true</param>\n      </operation>\n    </chain>"},{"documentation":"","xml":"&lt;chain id=&quot;AttachFiles&quot;&gt;\n      &lt;operation id=&quot;BlobHolder.AttachOnCurrentDocument&quot;&gt;\n        &lt;param name=&quot;useMainBlob&quot; type=&quot;boolean&quot;&gt;false&lt;/param&gt;\n      &lt;/operation&gt;\n    &lt;/chain&gt;","id":"AttachFiles","label":"chain AttachFiles","rawXml":"<chain id=\"AttachFiles\">\n      <operation id=\"BlobHolder.AttachOnCurrentDocument\">\n        <param name=\"useMainBlob\" type=\"boolean\">false</param>\n      </operation>\n    </chain>"},{"documentation":"","xml":"&lt;chain id=&quot;VersionAndAttachFiles&quot;&gt;\n      &lt;operation id=&quot;Context.PushBlobList&quot;&gt;\n      &lt;/operation&gt;\n      &lt;operation id=&quot;Repository.GetDocument&quot;&gt;\n        &lt;param name=&quot;value&quot; type=&quot;string&quot;&gt;expr:Context.get(&quot;currentDocument&quot;)&lt;/param&gt;\n      &lt;/operation&gt;\n      &lt;operation id=&quot;Document.CheckIn&quot;&gt;\n        &lt;param name=&quot;version&quot; type=&quot;string&quot;&gt;minor&lt;/param&gt;\n        &lt;param name=&quot;comment&quot; type=&quot;string&quot;&gt;Automatic checkin before files update&lt;/param&gt;\n      &lt;/operation&gt;\n      &lt;operation id=&quot;Context.SetInputAsVar&quot;&gt;\n        &lt;param name=&quot;name&quot; type=&quot;string&quot;&gt;newDocument&lt;/param&gt;\n      &lt;/operation&gt;\n      &lt;operation id=&quot;Context.SetVar&quot;&gt;\n        &lt;param name=&quot;name&quot; type=&quot;string&quot;&gt;currentDocument&lt;/param&gt;\n        &lt;param name=&quot;value&quot; type=&quot;string&quot;&gt;expr:Context.get(&quot;newDocument&quot;).id&lt;/param&gt;\n      &lt;/operation&gt;\n      &lt;operation id=&quot;Context.PopBlobList&quot;&gt;\n      &lt;/operation&gt;\n      &lt;operation id=&quot;BlobHolder.AttachOnCurrentDocument&quot;&gt;\n        &lt;param name=&quot;useMainBlob&quot; type=&quot;boolean&quot;&gt;false&lt;/param&gt;\n      &lt;/operation&gt;\n    &lt;/chain&gt;","id":"VersionAndAttachFiles","label":"chain VersionAndAttachFiles","rawXml":"<chain id=\"VersionAndAttachFiles\">\n      <operation id=\"Context.PushBlobList\">\n      </operation>\n      <operation id=\"Repository.GetDocument\">\n        <param name=\"value\" type=\"string\">expr:Context.get(\"currentDocument\")</param>\n      </operation>\n      <operation id=\"Document.CheckIn\">\n        <param name=\"version\" type=\"string\">minor</param>\n        <param name=\"comment\" type=\"string\">Automatic checkin before files update</param>\n      </operation>\n      <operation id=\"Context.SetInputAsVar\">\n        <param name=\"name\" type=\"string\">newDocument</param>\n      </operation>\n      <operation id=\"Context.SetVar\">\n        <param name=\"name\" type=\"string\">currentDocument</param>\n        <param name=\"value\" type=\"string\">expr:Context.get(\"newDocument\").id</param>\n      </operation>\n      <operation id=\"Context.PopBlobList\">\n      </operation>\n      <operation id=\"BlobHolder.AttachOnCurrentDocument\">\n        <param name=\"useMainBlob\" type=\"boolean\">false</param>\n      </operation>\n    </chain>"},{"documentation":"","xml":"&lt;chain id=&quot;FileManager.ImportWithMetaData&quot;&gt;\n      &lt;operation id=&quot;FileManager.ImportWithProperties&quot;&gt;\n        &lt;param name=&quot;overwrite&quot; type=&quot;boolean&quot;&gt;true&lt;/param&gt;\n        &lt;param name=&quot;properties&quot; type=&quot;properties&quot;&gt;expr:Context.get(&quot;docMetaData&quot;)&lt;/param&gt;\n      &lt;/operation&gt;\n    &lt;/chain&gt;","id":"FileManager.ImportWithMetaData","label":"chain FileManager.ImportWithMetaData","rawXml":"<chain id=\"FileManager.ImportWithMetaData\">\n      <operation id=\"FileManager.ImportWithProperties\">\n        <param name=\"overwrite\" type=\"boolean\">true</param>\n        <param name=\"properties\" type=\"properties\">expr:Context.get(\"docMetaData\")</param>\n      </operation>\n    </chain>"}]}],"componentClass":null,"documentation":"@author Bogdan Stefanescu (bs@nuxeo.com)\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.features/org.nuxeo.ecm.core.automation.features.operations","documentationHtml":"<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-features/target/classes/OSGI-INF/operations-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.automation.features.operations\" version=\"1.0\">\n\n  <alias>org.nuxeo.ecm.core.automation.featuresContrib</alias>\n\n  <documentation>@author Bogdan Stefanescu (bs@nuxeo.com)</documentation>\n\n  <extension target=\"org.nuxeo.ecm.core.operation.OperationServiceComponent\"\n    point=\"operations\">\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.query.DocumentPaginatedQuery\">\n      <widgets>\n        <widget name=\"query\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">Query</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">nxql</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>query</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.query.ResultSetPaginatedQuery\">\n      <widgets>\n        <widget name=\"query\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">ResultSet Query</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">nxql</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>query</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.AuditLog\" />\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.AuditQuery\" />\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.AuditPageProviderOperation\" />\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.AuditRestore\" />\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.CreateRelation\" />\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.GetRelations\" />\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.DeleteRelation\" />\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.DocumentPageProviderOperation\" >\n      <widgets>\n        <widget name=\"query\" type=\"codearea\">\n            <labels>\n              <label mode=\"any\">NXQL query</label>\n            </labels>\n            <properties mode=\"any\">\n              <property name=\"language\">nxql</property>\n              <property name=\"width\">100%</property>\n              <property name=\"height\">100%</property>\n            </properties>\n             <fields>\n              <field>query</field>\n            </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.ResultSetPageProviderOperation\" />\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.users.GetDocumentPrincipalEmails\" />\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.users.GetDocumentUsersAndGroups\" />\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.users.QueryUsers\" />\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.users.CreateOrUpdateUser\" />\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.users.CreateOrUpdateGroup\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.notification.SendMail\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.FileManagerImport\" />\n\n    <operation  class=\"org.nuxeo.ecm.automation.core.operations.services.FileManagerImportWithProperties\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.BlobHolderAttach\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.GetActions\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.management.GetCounters\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.GetDirectoryEntries\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.UserInvite\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.UserWorkspace\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.RunOperationOnProvider\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.directory.CreateDirectoryEntries\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.directory.CreateVocabularyEntry\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.directory.DeleteDirectoryEntries\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.directory.UpdateDirectoryEntries\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.directory.ReadDirectoryEntries\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.directory.DirectoryProjection\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.directory.LoadFromCSV\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.users.GetNuxeoPrincipal\" />\n\n  \t<operation\n      class=\"org.nuxeo.ecm.automation.core.operations.users.SuggestUserEntries\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.directory.SuggestDirectoryEntries\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.bulk.BulkRunAction\" />\n\n    <operation\n      class=\"org.nuxeo.ecm.automation.core.operations.services.bulk.BulkWaitForAction\" />\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.SuggestCollectionEntry\" />\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.CreateCollectionOperation\" />\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.AddToCollectionOperation\" />\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.RemoveFromCollectionOperation\" />\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.RemoveFromFavoritesOperation\" />\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.AddToFavoritesOperation\" />\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.GetCollectionsOperation\" />\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.GetDocumentsFromCollectionOperation\" />\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.GetDocumentsFromFavoritesOperation\" />\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.FetchFavorites\" />\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.collections.MoveCollectionMemberOperation\" />\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.workmanager.WorkManagerRunWorkInFailure\" />\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.coldstorage.MoveToColdStorage\" />\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.coldstorage.RequestRetrievalFromColdStorage\" />\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.MetricsStart\" />\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.services.MetricsStop\" />\n\n  </extension>\n\n  <extension point=\"chains\"\n    target=\"org.nuxeo.ecm.core.operation.OperationServiceComponent\">\n    <chain id=\"VersionAndAttachFile\">\n      <operation id=\"Context.PushBlobList\">\n      </operation>\n      <operation id =\"Repository.GetDocument\">\n        <param type=\"string\" name=\"value\">expr:Context.get(\"currentDocument\")</param>\n      </operation>\n      <operation id=\"Document.CheckIn\">\n        <param type=\"string\" name=\"version\">minor</param>\n        <param type=\"string\" name=\"comment\">Automatic checkin before file update</param>\n      </operation>\n      <operation id=\"Context.SetInputAsVar\">\n        <param type=\"string\" name=\"name\">newDocument</param>\n      </operation>\n      <operation id=\"Context.SetVar\">\n        <param type=\"string\" name=\"name\">currentDocument</param>\n        <param type=\"string\" name=\"value\">expr:Context.get(\"newDocument\").id</param>\n      </operation>\n      <operation id=\"Context.PopBlobList\">\n      </operation>\n      <operation id=\"BlobHolder.AttachOnCurrentDocument\">\n        <param type=\"boolean\" name=\"useMainBlob\">true</param>\n      </operation>\n    </chain>\n    <chain id=\"AttachFiles\">\n      <operation id=\"BlobHolder.AttachOnCurrentDocument\">\n        <param type=\"boolean\" name=\"useMainBlob\">false</param>\n      </operation>\n    </chain>\n    <chain id=\"VersionAndAttachFiles\">\n      <operation id=\"Context.PushBlobList\">\n      </operation>\n      <operation id =\"Repository.GetDocument\">\n        <param type=\"string\" name=\"value\">expr:Context.get(\"currentDocument\")</param>\n      </operation>\n      <operation id=\"Document.CheckIn\">\n        <param type=\"string\" name=\"version\">minor</param>\n        <param type=\"string\" name=\"comment\">Automatic checkin before files update</param>\n      </operation>\n      <operation id=\"Context.SetInputAsVar\">\n        <param type=\"string\" name=\"name\">newDocument</param>\n      </operation>\n      <operation id=\"Context.SetVar\">\n        <param type=\"string\" name=\"name\">currentDocument</param>\n        <param type=\"string\" name=\"value\">expr:Context.get(\"newDocument\").id</param>\n      </operation>\n      <operation id=\"Context.PopBlobList\">\n      </operation>\n      <operation id=\"BlobHolder.AttachOnCurrentDocument\">\n        <param type=\"boolean\" name=\"useMainBlob\">false</param>\n      </operation>\n    </chain>\n    <chain id=\"FileManager.ImportWithMetaData\">\n      <operation id=\"FileManager.ImportWithProperties\">\n        <param type=\"boolean\" name=\"overwrite\">true</param>\n        <param type=\"properties\" name=\"properties\">expr:Context.get(\"docMetaData\")</param>\n      </operation>\n    </chain>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.automation.contextContrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.automation.contextContrib--contextHelpers","extensionPoint":"org.nuxeo.ecm.core.operation.OperationServiceComponent--contextHelpers","documentation":null,"xml":"<extension point=\"contextHelpers\" target=\"org.nuxeo.ecm.core.operation.OperationServiceComponent\">\n    <contextHelper class=\"org.nuxeo.ecm.automation.features.PlatformFunctions\" id=\"Fn\"/>\n    <contextHelper class=\"org.nuxeo.ecm.automation.features.HTTPHelper\" id=\"HTTP\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.operation.OperationServiceComponent","rawName":"service:org.nuxeo.ecm.core.operation.OperationServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.features/org.nuxeo.ecm.core.automation.contextContrib/Contributions/org.nuxeo.ecm.core.automation.contextContrib--contextHelpers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;contextHelper class=&quot;org.nuxeo.ecm.automation.features.PlatformFunctions&quot; id=&quot;Fn&quot;/&gt;","id":"Fn","label":"contextHelper Fn","rawXml":"<contextHelper class=\"org.nuxeo.ecm.automation.features.PlatformFunctions\" id=\"Fn\"/>"},{"documentation":"","xml":"&lt;contextHelper class=&quot;org.nuxeo.ecm.automation.features.HTTPHelper&quot; id=&quot;HTTP&quot;/&gt;","id":"HTTP","label":"contextHelper HTTP","rawXml":"<contextHelper class=\"org.nuxeo.ecm.automation.features.HTTPHelper\" id=\"HTTP\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.automation.contextContrib--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n      Contribution to determine which uid sequence generator to use, either the defaultSequencer or hibernateSequencer.\n      Since 10.1 the default value is false, so it will use the defaultSequencer.\n    \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <documentation>\n      Contribution to determine which uid sequence generator to use, either the defaultSequencer or hibernateSequencer.\n      Since 10.1 the default value is false, so it will use the defaultSequencer.\n    </documentation>\n    <property name=\"org.nuxeo.ecm.core.uidgen.sequencer.hibernate\">false</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.features/org.nuxeo.ecm.core.automation.contextContrib/Contributions/org.nuxeo.ecm.core.automation.contextContrib--configuration","documentationHtml":"<p/>\nContribution to determine which uid sequence generator to use, either the defaultSequencer or hibernateSequencer.\nSince 10.1 the default value is false, so it will use the defaultSequencer.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;org.nuxeo.ecm.core.uidgen.sequencer.hibernate&quot;&gt;false&lt;/property&gt;","id":"org.nuxeo.ecm.core.uidgen.sequencer.hibernate","label":"property org.nuxeo.ecm.core.uidgen.sequencer.hibernate","rawXml":"<property name=\"org.nuxeo.ecm.core.uidgen.sequencer.hibernate\">false</property>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.features/org.nuxeo.ecm.core.automation.contextContrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-features/target/classes/OSGI-INF/helpers-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.automation.contextContrib\" version=\"1.0\">\n\n  <extension target=\"org.nuxeo.ecm.core.operation.OperationServiceComponent\"\n             point=\"contextHelpers\">\n    <contextHelper id=\"Fn\" class=\"org.nuxeo.ecm.automation.features.PlatformFunctions\"/>\n    <contextHelper id=\"HTTP\" class=\"org.nuxeo.ecm.automation.features.HTTPHelper\"/>\n  </extension>\n\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n    <documentation>\n      Contribution to determine which uid sequence generator to use, either the defaultSequencer or hibernateSequencer.\n      Since 10.1 the default value is false, so it will use the defaultSequencer.\n    </documentation>\n    <property name=\"org.nuxeo.ecm.core.uidgen.sequencer.hibernate\">false</property>\n  </extension>\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.schema","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.core.schema,\n org.nuxeo.ecm.core.schema.types,\n org.nuxeo.ecm.core.schema.types.constraints,\n org.nuxeo.ecm.core.schema.types.primitives,\n org.nuxeo.ecm.core.schema.utils\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Name: org.nuxeo.ecm.core.schema\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Version: 5.4.2.qualifier\nBundle-ManifestVersion: 2\nNuxeo-Component: OSGI-INF/ObjectResolverService.xml,\n  OSGI-INF/SchemaService.xml\nImport-Package: com.sun.xml.xsom,\n com.sun.xml.xsom.impl,\n com.sun.xml.xsom.parser,\n org.apache.commons.logging,\n org.nuxeo.common.utils,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model,\n org.xml.sax\nBundle-SymbolicName: org.nuxeo.ecm.core.schema;singleton:=true\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-schema","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-schema/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.schema.TypeService","extensionPoints":[{"@type":"NXExtensionPoint","name":"schema","descriptors":["org.nuxeo.ecm.core.schema.SchemaBindingDescriptor","org.nuxeo.ecm.core.schema.PropertyDescriptor"],"documentation":"\n      Extension Point to register new schemas.\n      <p/>\n\n      Schemas are defined using XSD files.\n      The schema extension XML may containg several 'schema' objects as\n      the following ones:\n      <code>\n    <schema name=\"common\" src=\"schema/common.xsd\"/>\n    <schema name=\"dublincore\" prefix=\"dc\" src=\"schema/dublincore.xsd\"/>\n</code>\n\n      The <i>name</i>\n attribute uniquely identify the schema, the <i>src</i>\n attribute specify\n      the path to that schema (relative to the bundle root) and the <i>prefix</i>\n is used as\n      a prefix (short name) of the schema namespace.\n      The schema namespace is the targetNamespace defined inside the XSD file\n      <p/>\n\n      Note that multiple schemas can share the same target namespace and prefix\n      <p/>\n\n      You can also create a Nuxeo Schema from a sub part of the XSD schema.\n      For that you can use the xsdRootElement attribute to indicate the complex type to use.\n      <code>\n    <schema name=\"employeeSchema\" src=\"schema/testExtension.xsd\" xsdRootElement=\"employee\"/>\n</code>\n\n      A schema can be completely disabled with:\n      <code>\n    <schema enabled=\"false\" name=\"myOldSchema\"/>\n</code>\n\n      Schemas with enabled=false will be ignored in all document types and facets\n      still referencing them, and will not be returned when listing available schemas.\n\n      Extension Point is also used to register additional property information, called property characteristic, such as:\n      <ul>\n    <li>secured: only administrators can edit it</li>\n    <li>deprecation: flag property as deprecated or removed</li>\n</ul>\n\n      XML extensions may contain any number of 'property' elements of the form:\n      <code>\n    <property name=\"creator\" schema=\"dublincore\" secured=\"true\"/>\n    <property deprecation=\"deprecated\" name=\"size\" schema=\"common\"/>\n    <property deprecation=\"removed\" fallback=\"content/name\"\n        name=\"filename\" schema=\"file\"/>\n</code>\n\n\n      Properties declared with secured attribute can only be edited by administrators.\n      <p/>\n\n      Properties declared with deprecation attribute enable deprecation mechanism inside Nuxeo Platform.\n      This generates WARN message of usage to help to remove deprecated usage.\n      <p/>\n\n      A contribution is one of these types:\n      <ul>\n    <li>deprecated: property still exists in schema definition, but it'll be removed in next version</li>\n    <li>removed: property has been removed from schema definition, relax platform behavior. This will avoid Nuxeo\n          property not found exceptions for remaining use of the property\n        </li>\n</ul>\n\n      The fallback attribute is optional, its value has to be a xpath referencing an existing property in the same\n      schema than deprecated/removed property.\n      When presents, it is used:\n      <ul>\n    <li>to set the value to the fallback property</li>\n    <li>to get the value from the fallback property if it exists</li>\n</ul>\n\n      Note: for a deprecated property, setValue also set value to property and getValue get value from property if\n      fallback value is null.\n      <p/>\n\n      For example, the contribution below enables WARN message of usage of property <i>file:filename</i>\n. This will also\n      get/set the value from/to <i>file:content/name</i>\n for deprecated usage of <i>file:filename</i>\n property.\n      <code>\n    <property deprecation=\"deprecated\" fallback=\"content/name\"\n        name=\"filename\" schema=\"file\"/>\n</code>\n\n      As it, each usage of this property will automatically fallback on the fallback and avoid exception from platform.\n      This will also allows to import document declaring the removed property.\n    \n","id":"org.nuxeo.ecm.core.schema.TypeService--schema","version":"11.1-SNAPSHOT","label":"schema (org.nuxeo.ecm.core.schema.TypeService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.schema/org.nuxeo.ecm.core.schema.TypeService/ExtensionPoints/org.nuxeo.ecm.core.schema.TypeService--schema","documentationHtml":"<p/>\nExtension Point to register new schemas.\n<p/>\nSchemas are defined using XSD files.\nThe schema extension XML may containg several 'schema' objects as\nthe following ones:\n<p/><pre><code>    &lt;schema name=\"common\" src=\"schema/common.xsd\"/>\n    &lt;schema name=\"dublincore\" prefix=\"dc\" src=\"schema/dublincore.xsd\"/>\n</code></pre><p/>\nThe <i>name</i>\nattribute uniquely identify the schema, the <i>src</i>\nattribute specify\nthe path to that schema (relative to the bundle root) and the <i>prefix</i>\nis used as\na prefix (short name) of the schema namespace.\nThe schema namespace is the targetNamespace defined inside the XSD file\n<p/>\nNote that multiple schemas can share the same target namespace and prefix\n<p/>\nYou can also create a Nuxeo Schema from a sub part of the XSD schema.\nFor that you can use the xsdRootElement attribute to indicate the complex type to use.\n<p/><pre><code>    &lt;schema name=\"employeeSchema\" src=\"schema/testExtension.xsd\" xsdRootElement=\"employee\"/>\n</code></pre><p/>\nA schema can be completely disabled with:\n<p/><pre><code>    &lt;schema enabled=\"false\" name=\"myOldSchema\"/>\n</code></pre><p/>\nSchemas with enabled=false will be ignored in all document types and facets\nstill referencing them, and will not be returned when listing available schemas.\n<p/>\nExtension Point is also used to register additional property information, called property characteristic, such as:\n<ul>\n<li>secured: only administrators can edit it</li>\n<li>deprecation: flag property as deprecated or removed</li>\n</ul>\n<p/>\nXML extensions may contain any number of 'property' elements of the form:\n<p/><pre><code>    &lt;property name=\"creator\" schema=\"dublincore\" secured=\"true\"/>\n    &lt;property deprecation=\"deprecated\" name=\"size\" schema=\"common\"/>\n    &lt;property deprecation=\"removed\" fallback=\"content/name\"\n        name=\"filename\" schema=\"file\"/>\n</code></pre><p/>\nProperties declared with secured attribute can only be edited by administrators.\n<p/>\nProperties declared with deprecation attribute enable deprecation mechanism inside Nuxeo Platform.\nThis generates WARN message of usage to help to remove deprecated usage.\n<p/>\nA contribution is one of these types:\n<ul>\n<li>deprecated: property still exists in schema definition, but it'll be removed in next version</li>\n<li>removed: property has been removed from schema definition, relax platform behavior. This will avoid Nuxeo\nproperty not found exceptions for remaining use of the property\n</li>\n</ul>\n<p/>\nThe fallback attribute is optional, its value has to be a xpath referencing an existing property in the same\nschema than deprecated/removed property.\nWhen presents, it is used:\n<ul>\n<li>to set the value to the fallback property</li>\n<li>to get the value from the fallback property if it exists</li>\n</ul>\n<p/>\nNote: for a deprecated property, setValue also set value to property and getValue get value from property if\nfallback value is null.\n<p/>\nFor example, the contribution below enables WARN message of usage of property <i>file:filename</i>\n. This will also\nget/set the value from/to <i>file:content/name</i>\nfor deprecated usage of <i>file:filename</i>\nproperty.\n<p/><pre><code>    &lt;property deprecation=\"deprecated\" fallback=\"content/name\"\n        name=\"filename\" schema=\"file\"/>\n</code></pre><p/>\nAs it, each usage of this property will automatically fallback on the fallback and avoid exception from platform.\nThis will also allows to import document declaring the removed property.\n<p/>","componentId":"org.nuxeo.ecm.core.schema.TypeService"},{"@type":"NXExtensionPoint","name":"configuration","descriptors":["org.nuxeo.ecm.core.schema.TypeConfiguration"],"documentation":"\n      Type manager configuration.\n      <p/>\n\n      This contains default prefetch options and clearComplexPropertyBeforeSet options. For example:\n      <code>\n    <configuration>\n        <prefetch>common, dublincore</prefetch>\n        <clearComplexPropertyBeforeSet>true</clearComplexPropertyBeforeSet>\n        <allowVersionWriteForDublinCore>false</allowVersionWriteForDublinCore>\n    </configuration>\n</code>\n\n      Note that since 11.1, setting fields, such as dc:modified, as prefetch is DEPRECATED:\n      only schema names are supported.\n\n      Note that setting clearComplexPropertyBeforeSet to false is DEPRECATED since 9.3.\n      Note that setting allowVersionWriteForDublinCore to true is DEPRECATED since 10.3.\n    \n","id":"org.nuxeo.ecm.core.schema.TypeService--configuration","version":"11.1-SNAPSHOT","label":"configuration (org.nuxeo.ecm.core.schema.TypeService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.schema/org.nuxeo.ecm.core.schema.TypeService/ExtensionPoints/org.nuxeo.ecm.core.schema.TypeService--configuration","documentationHtml":"<p/>\nType manager configuration.\n<p/>\nThis contains default prefetch options and clearComplexPropertyBeforeSet options. For example:\n<p/><pre><code>    &lt;configuration>\n        &lt;prefetch>common, dublincore&lt;/prefetch>\n        &lt;clearComplexPropertyBeforeSet>true&lt;/clearComplexPropertyBeforeSet>\n        &lt;allowVersionWriteForDublinCore>false&lt;/allowVersionWriteForDublinCore>\n    &lt;/configuration>\n</code></pre><p/>\nNote that since 11.1, setting fields, such as dc:modified, as prefetch is DEPRECATED:\nonly schema names are supported.\n<p/>\nNote that setting clearComplexPropertyBeforeSet to false is DEPRECATED since 9.3.\nNote that setting allowVersionWriteForDublinCore to true is DEPRECATED since 10.3.\n<p/>","componentId":"org.nuxeo.ecm.core.schema.TypeService"},{"@type":"NXExtensionPoint","name":"deprecation","descriptors":["org.nuxeo.ecm.core.schema.PropertyDeprecationDescriptor"],"documentation":"\n      Extension Point to register deprecated/removed properties.\n      XML extensions may contain any number of 'property' elements of the form:\n      <code>\n    <property deprecated=\"true\" name=\"size\" schema=\"common\"/>\n    <property fallback=\"content/name\" name=\"filename\" schema=\"file\"/>\n</code>\n\n      A property contributed to this extension point enables deprecation mechanisms inside Nuxeo Platform.\n      This generates WARN message of usage to help to remove deprecated usage.\n      <p/>\n\n      A contribution is one of these types:\n      <ul>\n    <li>deprecated: property still exists in schema definition, but it'll be removed in next version</li>\n    <li>removed: property has been removed from schema definition, relax platform behavior. This will avoid Nuxeo\n          property not found exceptions for remaining use of the property\n        </li>\n</ul>\n\n      The fallback attribute is optional, its value has to be a xpath referencing an existing property in the same\n      schema than removed/deprecated property.\n      When presents, it is used:\n      <ul>\n    <li>to set the value to the fallback property</li>\n    <li>to get the value from the fallback property if it exists</li>\n</ul>\n\n      Note: for a deprecated property, setValue also set value to property and getValue get value from property if\n      fallback value is null.\n      <p/>\n\n      For example, the contribution below enables WARN message of usage of property <i>file:filename</i>\n. This will also\n      get/set the value from/to <i>file:content/name</i>\n for deprecated usage of <i>file:filename</i>\n property.\n      <code>\n    <property fallback=\"content/name\" name=\"filename\" schema=\"file\"/>\n</code>\n\n      As it, each usage of this property will automatically fallback on the fallback and avoid exception from platform.\n      This will also allows to import document declaring the removed property.\n      <p/>\n\n      @since 9.2\n      @deprecated since 11.1, use schema extension point with PropertyDescriptor object\n    \n","id":"org.nuxeo.ecm.core.schema.TypeService--deprecation","version":"11.1-SNAPSHOT","label":"deprecation (org.nuxeo.ecm.core.schema.TypeService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.schema/org.nuxeo.ecm.core.schema.TypeService/ExtensionPoints/org.nuxeo.ecm.core.schema.TypeService--deprecation","documentationHtml":"<p/>\nExtension Point to register deprecated/removed properties.\nXML extensions may contain any number of 'property' elements of the form:\n<p/><pre><code>    &lt;property deprecated=\"true\" name=\"size\" schema=\"common\"/>\n    &lt;property fallback=\"content/name\" name=\"filename\" schema=\"file\"/>\n</code></pre><p/>\nA property contributed to this extension point enables deprecation mechanisms inside Nuxeo Platform.\nThis generates WARN message of usage to help to remove deprecated usage.\n<p/>\nA contribution is one of these types:\n<ul>\n<li>deprecated: property still exists in schema definition, but it'll be removed in next version</li>\n<li>removed: property has been removed from schema definition, relax platform behavior. This will avoid Nuxeo\nproperty not found exceptions for remaining use of the property\n</li>\n</ul>\n<p/>\nThe fallback attribute is optional, its value has to be a xpath referencing an existing property in the same\nschema than removed/deprecated property.\nWhen presents, it is used:\n<ul>\n<li>to set the value to the fallback property</li>\n<li>to get the value from the fallback property if it exists</li>\n</ul>\n<p/>\nNote: for a deprecated property, setValue also set value to property and getValue get value from property if\nfallback value is null.\n<p/>\nFor example, the contribution below enables WARN message of usage of property <i>file:filename</i>\n. This will also\nget/set the value from/to <i>file:content/name</i>\nfor deprecated usage of <i>file:filename</i>\nproperty.\n<p/><pre><code>    &lt;property fallback=\"content/name\" name=\"filename\" schema=\"file\"/>\n</code></pre><p/>\nAs it, each usage of this property will automatically fallback on the fallback and avoid exception from platform.\nThis will also allows to import document declaring the removed property.\n<p/>\n@since 9.2\n@deprecated since 11.1, use schema extension point with PropertyDescriptor object\n<p/>","componentId":"org.nuxeo.ecm.core.schema.TypeService"},{"@type":"NXExtensionPoint","name":"doctype","descriptors":["org.nuxeo.ecm.core.schema.DocumentTypeDescriptor","org.nuxeo.ecm.core.schema.FacetDescriptor","org.nuxeo.ecm.core.schema.ProxiesDescriptor"],"documentation":"\n      Extension Point to register new document types and facets.\n      <p/>\n\n      Document types may implement several schemas and extends other\n      document types. You can compare document types with java\n      classes and schemas with java interfaces. Document types may\n      also contains several facets that define a behavior.\n      <p/>\n\n      The prefetch element defines what fields are synchronously\n      indexed, and are made available in search results listings.\n      <p/>\n\n      A doctype XML extension may contain several 'doctype' elements.\n      A doctype element may look like this:\n\n      <code>\n    <doctype extends=\"Document\" name=\"File\">\n        <schema name=\"common\"/>\n        <schema name=\"file\"/>\n        <schema name=\"dublincore\"/>\n        <schema name=\"uid\"/>\n        <facet name=\"Downloadable\"/>\n        <facet name=\"Versionable\"/>\n        <prefetch>dc:title, dc:modified, uid.uid</prefetch>\n    </doctype>\n</code>\n\n\n      Document types may also specify subtypes, which are sets of other\n      document types that can be created inside the this document type\n      being defined.\n      <p/>\n\n      This configuration only applies in the UI and will not affect\n      documents created through APIs (e.g. REST, Java)\n      This can be achieved as follows:\n\n      <code>\n    <doctype extends=\"Document\" name=\"SomeFolder\">\n        <subtypes>\n            <type>File</type>\n        </subtypes>\n    </doctype>\n</code>\n\n\n      When extending a doctype, forbidden subtypes can also be specified\n      to prevent a specific type from being created.\n      <p/>\n\n      This configuration only applies in the UI and will not affect\n      documents created through APIs (e.g. REST, Java)\n\n      <code>\n    <doctype append=\"true\" name=\"SomeFolder\">\n        <subtypes>\n            <type>SomeOtherFile</type>\n        </subtypes>\n        <subtypes-forbidden>\n            <type>File</type>\n        </subtypes-forbidden>\n    </doctype>\n</code>\n\n\n      Facets are also defined by this extension point.\n      They can have zero or more schemas:\n\n      <code>\n    <facet name=\"MyFacet\" perDocumentQuery=\"false\"/>\n    <facet name=\"MyFacetWithData\">\n        <schema name=\"myschema\"/>\n        <schema name=\"otherschema\"/>\n    </facet>\n    <facet enabled=\"false\" name=\"MyOldFacet\"/>\n</code>\n\n\n      Queries using ecm:mixinType on facets marked with\n      perDocumentQuery=\"false\" will not match any document where\n      this facet has been added using DocumentModel.addFacet() and does\n      not belong to the document type (this is done for performance reasons).\n\n      Facets with enabled=false will be ignored in all document types\n      still referencing them, and will not be returned when listing available facets.\n\n      It's also possible to associate one or more schemas to all proxies:\n      <code>\n    <proxies>\n        <schema name=\"myschema\"/>\n    </proxies>\n</code>\n","id":"org.nuxeo.ecm.core.schema.TypeService--doctype","version":"11.1-SNAPSHOT","label":"doctype (org.nuxeo.ecm.core.schema.TypeService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.schema/org.nuxeo.ecm.core.schema.TypeService/ExtensionPoints/org.nuxeo.ecm.core.schema.TypeService--doctype","documentationHtml":"<p/>\nExtension Point to register new document types and facets.\n<p/>\nDocument types may implement several schemas and extends other\ndocument types. You can compare document types with java\nclasses and schemas with java interfaces. Document types may\nalso contains several facets that define a behavior.\n<p/>\nThe prefetch element defines what fields are synchronously\nindexed, and are made available in search results listings.\n<p/>\nA doctype XML extension may contain several 'doctype' elements.\nA doctype element may look like this:\n<p/>\n<pre><code>    &lt;doctype extends=\"Document\" name=\"File\">\n        &lt;schema name=\"common\"/>\n        &lt;schema name=\"file\"/>\n        &lt;schema name=\"dublincore\"/>\n        &lt;schema name=\"uid\"/>\n        &lt;facet name=\"Downloadable\"/>\n        &lt;facet name=\"Versionable\"/>\n        &lt;prefetch>dc:title, dc:modified, uid.uid&lt;/prefetch>\n    &lt;/doctype>\n</code></pre><p/>\nDocument types may also specify subtypes, which are sets of other\ndocument types that can be created inside the this document type\nbeing defined.\n<p/>\nThis configuration only applies in the UI and will not affect\ndocuments created through APIs (e.g. REST, Java)\nThis can be achieved as follows:\n<p/>\n<pre><code>    &lt;doctype extends=\"Document\" name=\"SomeFolder\">\n        &lt;subtypes>\n            &lt;type>File&lt;/type>\n        &lt;/subtypes>\n    &lt;/doctype>\n</code></pre><p/>\nWhen extending a doctype, forbidden subtypes can also be specified\nto prevent a specific type from being created.\n<p/>\nThis configuration only applies in the UI and will not affect\ndocuments created through APIs (e.g. REST, Java)\n<p/>\n<pre><code>    &lt;doctype append=\"true\" name=\"SomeFolder\">\n        &lt;subtypes>\n            &lt;type>SomeOtherFile&lt;/type>\n        &lt;/subtypes>\n        &lt;subtypes-forbidden>\n            &lt;type>File&lt;/type>\n        &lt;/subtypes-forbidden>\n    &lt;/doctype>\n</code></pre><p/>\nFacets are also defined by this extension point.\nThey can have zero or more schemas:\n<p/>\n<pre><code>    &lt;facet name=\"MyFacet\" perDocumentQuery=\"false\"/>\n    &lt;facet name=\"MyFacetWithData\">\n        &lt;schema name=\"myschema\"/>\n        &lt;schema name=\"otherschema\"/>\n    &lt;/facet>\n    &lt;facet enabled=\"false\" name=\"MyOldFacet\"/>\n</code></pre><p/>\nQueries using ecm:mixinType on facets marked with\nperDocumentQuery=\"false\" will not match any document where\nthis facet has been added using DocumentModel.addFacet() and does\nnot belong to the document type (this is done for performance reasons).\n<p/>\nFacets with enabled=false will be ignored in all document types\nstill referencing them, and will not be returned when listing available facets.\n<p/>\nIt's also possible to associate one or more schemas to all proxies:\n<p/><pre><code>    &lt;proxies>\n        &lt;schema name=\"myschema\"/>\n    &lt;/proxies>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.core.schema.TypeService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.schema.SchemaManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.schema/org.nuxeo.ecm.core.schema.TypeService/Services/org.nuxeo.ecm.core.schema.SchemaManager","componentId":"org.nuxeo.ecm.core.schema.TypeService"},{"@type":"NXService","id":"org.nuxeo.ecm.core.schema.TypeProvider","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.schema/org.nuxeo.ecm.core.schema.TypeService/Services/org.nuxeo.ecm.core.schema.TypeProvider","componentId":"org.nuxeo.ecm.core.schema.TypeService"},{"@type":"NXService","id":"org.nuxeo.ecm.core.schema.PropertyCharacteristicHandler","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.schema/org.nuxeo.ecm.core.schema.TypeService/Services/org.nuxeo.ecm.core.schema.PropertyCharacteristicHandler","componentId":"org.nuxeo.ecm.core.schema.TypeService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.schema.TypeService","documentation":"\n    Manage document types and schemas.\n    Allows registrering new types defined using XSD schemas\n    @author Bogdan Stefanescu (bs@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.schema/org.nuxeo.ecm.core.schema.TypeService","documentationHtml":"<p/>\nManage document types and schemas.\nAllows registrering new types defined using XSD schemas\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-schema/bin/main/OSGI-INF/SchemaService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.schema.TypeService\" version=\"1.0.0\">\n  <documentation>\n    Manage document types and schemas.\n    Allows registrering new types defined using XSD schemas\n    @author Bogdan Stefanescu (bs@nuxeo.com)\n  </documentation>\n\n  <require>org.nuxeo.ecm.core.schema.ObjectResolverService</require>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.schema.SchemaManager\" />\n    <provide interface=\"org.nuxeo.ecm.core.schema.TypeProvider\" />\n    <provide interface=\"org.nuxeo.ecm.core.schema.PropertyCharacteristicHandler\" />\n  </service>\n\n  <implementation class=\"org.nuxeo.ecm.core.schema.TypeService\" />\n\n  <extension-point name=\"configuration\">\n\n    <documentation>\n      Type manager configuration.\n      <p />\n      This contains default prefetch options and clearComplexPropertyBeforeSet options. For example:\n      <code>\n        <configuration>\n          <prefetch>common, dublincore</prefetch>\n          <clearComplexPropertyBeforeSet>true</clearComplexPropertyBeforeSet>\n          <allowVersionWriteForDublinCore>false</allowVersionWriteForDublinCore>\n        </configuration>\n      </code>\n      Note that since 11.1, setting fields, such as dc:modified, as prefetch is DEPRECATED:\n      only schema names are supported.\n\n      Note that setting clearComplexPropertyBeforeSet to false is DEPRECATED since 9.3.\n      Note that setting allowVersionWriteForDublinCore to true is DEPRECATED since 10.3.\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.schema.TypeConfiguration\" />\n\n  </extension-point>\n\n  <extension-point name=\"doctype\">\n\n    <documentation>\n      Extension Point to register new document types and facets.\n      <p />\n      Document types may implement several schemas and extends other\n      document types. You can compare document types with java\n      classes and schemas with java interfaces. Document types may\n      also contains several facets that define a behavior.\n      <p />\n      The prefetch element defines what fields are synchronously\n      indexed, and are made available in search results listings.\n      <p />\n      A doctype XML extension may contain several 'doctype' elements.\n      A doctype element may look like this:\n\n      <code>\n        <doctype name=\"File\" extends=\"Document\">\n          <schema name=\"common\" />\n          <schema name=\"file\" />\n          <schema name=\"dublincore\" />\n          <schema name=\"uid\" />\n          <facet name=\"Downloadable\" />\n          <facet name=\"Versionable\" />\n          <prefetch>dc:title, dc:modified, uid.uid</prefetch>\n        </doctype>\n      </code>\n\n      Document types may also specify subtypes, which are sets of other\n      document types that can be created inside the this document type\n      being defined.\n      <p />\n      This configuration only applies in the UI and will not affect\n      documents created through APIs (e.g. REST, Java)\n      This can be achieved as follows:\n\n      <code>\n        <doctype name=\"SomeFolder\" extends=\"Document\">\n          <subtypes>\n            <type>File</type>\n          </subtypes>\n        </doctype>\n      </code>\n\n      When extending a doctype, forbidden subtypes can also be specified\n      to prevent a specific type from being created.\n      <p />\n      This configuration only applies in the UI and will not affect\n      documents created through APIs (e.g. REST, Java)\n\n      <code>\n        <doctype name=\"SomeFolder\" append=\"true\">\n          <subtypes>\n            <type>SomeOtherFile</type>\n          </subtypes>\n          <subtypes-forbidden>\n            <type>File</type>\n          </subtypes-forbidden>\n        </doctype>\n      </code>\n\n      Facets are also defined by this extension point.\n      They can have zero or more schemas:\n\n      <code>\n        <facet name=\"MyFacet\" perDocumentQuery=\"false\" />\n        <facet name=\"MyFacetWithData\">\n          <schema name=\"myschema\" />\n          <schema name=\"otherschema\" />\n        </facet>\n        <facet name=\"MyOldFacet\" enabled=\"false\" />\n      </code>\n\n      Queries using ecm:mixinType on facets marked with\n      perDocumentQuery=\"false\" will not match any document where\n      this facet has been added using DocumentModel.addFacet() and does\n      not belong to the document type (this is done for performance reasons).\n\n      Facets with enabled=false will be ignored in all document types\n      still referencing them, and will not be returned when listing available facets.\n\n      It's also possible to associate one or more schemas to all proxies:\n      <code>\n        <proxies>\n          <schema name=\"myschema\" />\n        </proxies>\n      </code>\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.schema.DocumentTypeDescriptor\" />\n    <object class=\"org.nuxeo.ecm.core.schema.FacetDescriptor\" />\n    <object class=\"org.nuxeo.ecm.core.schema.ProxiesDescriptor\" />\n\n  </extension-point>\n\n  <extension-point name=\"schema\">\n\n    <documentation>\n      Extension Point to register new schemas.\n      <p />\n      Schemas are defined using XSD files.\n      The schema extension XML may containg several 'schema' objects as\n      the following ones:\n      <code>\n        <schema name=\"common\" src=\"schema/common.xsd\" />\n        <schema name=\"dublincore\" prefix=\"dc\" src=\"schema/dublincore.xsd\" />\n      </code>\n      The <i>name</i> attribute uniquely identify the schema, the <i>src</i> attribute specify\n      the path to that schema (relative to the bundle root) and the <i>prefix</i> is used as\n      a prefix (short name) of the schema namespace.\n      The schema namespace is the targetNamespace defined inside the XSD file\n      <p />\n      Note that multiple schemas can share the same target namespace and prefix\n      <p />\n      You can also create a Nuxeo Schema from a sub part of the XSD schema.\n      For that you can use the xsdRootElement attribute to indicate the complex type to use.\n      <code>\n        <schema name=\"employeeSchema\" src=\"schema/testExtension.xsd\" xsdRootElement=\"employee\" />\n      </code>\n      A schema can be completely disabled with:\n      <code>\n        <schema name=\"myOldSchema\" enabled=\"false\" />\n      </code>\n      Schemas with enabled=false will be ignored in all document types and facets\n      still referencing them, and will not be returned when listing available schemas.\n\n      Extension Point is also used to register additional property information, called property characteristic, such as:\n      <ul>\n        <li>secured: only administrators can edit it</li>\n        <li>deprecation: flag property as deprecated or removed</li>\n      </ul>\n      XML extensions may contain any number of 'property' elements of the form:\n      <code>\n        <property schema=\"dublincore\" name=\"creator\" secured=\"true\" />\n        <property schema=\"common\" name=\"size\" deprecation=\"deprecated\" />\n        <property schema=\"file\" name=\"filename\" deprecation=\"removed\" fallback=\"content/name\" />\n      </code>\n\n      Properties declared with secured attribute can only be edited by administrators.\n      <p />\n      Properties declared with deprecation attribute enable deprecation mechanism inside Nuxeo Platform.\n      This generates WARN message of usage to help to remove deprecated usage.\n      <p />\n      A contribution is one of these types:\n      <ul>\n        <li>deprecated: property still exists in schema definition, but it'll be removed in next version</li>\n        <li>removed: property has been removed from schema definition, relax platform behavior. This will avoid Nuxeo\n          property not found exceptions for remaining use of the property\n        </li>\n      </ul>\n      The fallback attribute is optional, its value has to be a xpath referencing an existing property in the same\n      schema than deprecated/removed property.\n      When presents, it is used:\n      <ul>\n        <li>to set the value to the fallback property</li>\n        <li>to get the value from the fallback property if it exists</li>\n      </ul>\n      Note: for a deprecated property, setValue also set value to property and getValue get value from property if\n      fallback value is null.\n      <p />\n      For example, the contribution below enables WARN message of usage of property <i>file:filename</i>. This will also\n      get/set the value from/to <i>file:content/name</i> for deprecated usage of <i>file:filename</i> property.\n      <code>\n        <property schema=\"file\" name=\"filename\" deprecation=\"deprecated\" fallback=\"content/name\" />\n      </code>\n      As it, each usage of this property will automatically fallback on the fallback and avoid exception from platform.\n      This will also allows to import document declaring the removed property.\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.schema.SchemaBindingDescriptor\" />\n    <object class=\"org.nuxeo.ecm.core.schema.PropertyDescriptor\" />\n\n  </extension-point>\n\n  <extension-point name=\"deprecation\">\n\n    <documentation>\n      Extension Point to register deprecated/removed properties.\n      XML extensions may contain any number of 'property' elements of the form:\n      <code>\n        <property schema=\"common\" name=\"size\" deprecated=\"true\" />\n        <property schema=\"file\" name=\"filename\" fallback=\"content/name\" />\n      </code>\n      A property contributed to this extension point enables deprecation mechanisms inside Nuxeo Platform.\n      This generates WARN message of usage to help to remove deprecated usage.\n      <p />\n      A contribution is one of these types:\n      <ul>\n        <li>deprecated: property still exists in schema definition, but it'll be removed in next version</li>\n        <li>removed: property has been removed from schema definition, relax platform behavior. This will avoid Nuxeo\n          property not found exceptions for remaining use of the property\n        </li>\n      </ul>\n      The fallback attribute is optional, its value has to be a xpath referencing an existing property in the same\n      schema than removed/deprecated property.\n      When presents, it is used:\n      <ul>\n        <li>to set the value to the fallback property</li>\n        <li>to get the value from the fallback property if it exists</li>\n      </ul>\n      Note: for a deprecated property, setValue also set value to property and getValue get value from property if\n      fallback value is null.\n      <p />\n      For example, the contribution below enables WARN message of usage of property <i>file:filename</i>. This will also\n      get/set the value from/to <i>file:content/name</i> for deprecated usage of <i>file:filename</i> property.\n      <code>\n        <property schema=\"file\" name=\"filename\" fallback=\"content/name\" />\n      </code>\n      As it, each usage of this property will automatically fallback on the fallback and avoid exception from platform.\n      This will also allows to import document declaring the removed property.\n      <p />\n      @since 9.2\n      @deprecated since 11.1, use schema extension point with PropertyDescriptor object\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.schema.PropertyDeprecationDescriptor\" />\n\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.schema.ObjectResolverService","extensionPoints":[{"@type":"NXExtensionPoint","name":"resolvers","descriptors":["org.nuxeo.ecm.core.schema.types.resolver.ObjectResolverDescriptor"],"documentation":"\n\n      Extension Point to register an external entity resolver. You must provide an XSD type derived from xs:string and\n      registered under namespace http://www.nuxeo.org/ecm/schemas/core/external-references/. The resolver class must\n      implement org.nuxeo.ecm.core.schema.types.resolver.ObjectResolver.\n      Example :\n      <resolver\n    class=\"org.mycompany.product.ProductNuxeoResolver\" type=\"productReference\"/>\n\n\n\n      By default, a constraint is added to documents about to be saved in order to validate if the property reference\n      an existing external entity. You can disable this validation by setting attribute validation to false, for instance:\n      <code\n    xmlns:ref=\"http://www.nuxeo.org/ecm/schemas/core/external-references/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n    <xs:element name=\"lastContributor\">\n        <xs:simpleType>\n            <xs:restriction base=\"xs:string\"\n                ref:resolver=\"userManagerResolver\" ref:type=\"user\" ref:validation=\"false\"/>\n        </xs:simpleType>\n    </xs:element>\n</code>\n","id":"org.nuxeo.ecm.core.schema.ObjectResolverService--resolvers","version":"11.1-SNAPSHOT","label":"resolvers (org.nuxeo.ecm.core.schema.ObjectResolverService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.schema/org.nuxeo.ecm.core.schema.ObjectResolverService/ExtensionPoints/org.nuxeo.ecm.core.schema.ObjectResolverService--resolvers","documentationHtml":"<p/>\nExtension Point to register an external entity resolver. You must provide an XSD type derived from xs:string and\nregistered under namespace http://www.nuxeo.org/ecm/schemas/core/external-references/. The resolver class must\nimplement org.nuxeo.ecm.core.schema.types.resolver.ObjectResolver.\nExample :\n<resolver\nclass=\"org.mycompany.product.ProductNuxeoResolver\" type=\"productReference\"/>\n<p/>\nBy default, a constraint is added to documents about to be saved in order to validate if the property reference\nan existing external entity. You can disable this validation by setting attribute validation to false, for instance:\n<code\nxmlns:ref=\"http://www.nuxeo.org/ecm/schemas/core/external-references/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n<xs:element name=\"lastContributor\">\n<xs:simpleType>\n<xs:restriction base=\"xs:string\"\nref:resolver=\"userManagerResolver\" ref:type=\"user\" ref:validation=\"false\"/>\n</xs:simpleType>\n</xs:element>\n</code>","componentId":"org.nuxeo.ecm.core.schema.ObjectResolverService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.schema.types.resolver.ObjectResolverService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.schema/org.nuxeo.ecm.core.schema.ObjectResolverService/Services/org.nuxeo.ecm.core.schema.types.resolver.ObjectResolverService","componentId":"org.nuxeo.ecm.core.schema.ObjectResolverService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.schema.types.resolver.ObjectResolverServiceImpl","documentation":"\n    This components allows to extend XSD field definition by providing a way to resolve simple type as\n    external entity references.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.schema/org.nuxeo.ecm.core.schema.ObjectResolverService","documentationHtml":"<p/>\nThis components allows to extend XSD field definition by providing a way to resolve simple type as\nexternal entity references.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-schema/bin/main/OSGI-INF/ObjectResolverService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.core.schema.ObjectResolverService\" version=\"1.0.0\">\n  <documentation>\n    This components allows to extend XSD field definition by providing a way to resolve simple type as\n    external entity references.\n  </documentation>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.schema.types.resolver.ObjectResolverService\" />\n  </service>\n\n  <implementation class=\"org.nuxeo.ecm.core.schema.types.resolver.ObjectResolverServiceImpl\" />\n\n  <extension-point name=\"resolvers\">\n\n    <documentation>\n      Extension Point to register an external entity resolver. You must provide an XSD type derived from xs:string and\n      registered under namespace http://www.nuxeo.org/ecm/schemas/core/external-references/. The resolver class must\n      implement org.nuxeo.ecm.core.schema.types.resolver.ObjectResolver.\n      Example :\n      <resolver type=\"productReference\" class=\"org.mycompany.product.ProductNuxeoResolver\" />\n\n      By default, a constraint is added to documents about to be saved in order to validate if the property reference\n      an existing external entity. You can disable this validation by setting attribute validation to false, for instance:\n      <code xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n            xmlns:ref=\"http://www.nuxeo.org/ecm/schemas/core/external-references/\">\n        <xs:element name=\"lastContributor\">\n          <xs:simpleType>\n            <xs:restriction base=\"xs:string\" ref:resolver=\"userManagerResolver\" ref:type=\"user\" ref:validation=\"false\" />\n          </xs:simpleType>\n        </xs:element>\n      </code>\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.schema.types.resolver.ObjectResolverDescriptor\" />\n\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.runtime.jtajca","fileName":"main","manifest":"Export-Package: org.nuxeo.runtime.jtajca\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Category: runtime\nBundle-Name: Nuxeo Runtime JTA/JCA Implementation\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Version: 5.4.2.qualifier\nEclipse-BuddyPolicy: registered\nBundle-ManifestVersion: 2\nImport-Package: javax.annotation,\n javax.naming,\n javax.naming.spi,\n javax.resource,\n javax.resource.spi,\n javax.security.auth,\n javax.transaction,\n org.apache.commons.beanutils,\n org.apache.commons.logging,\n org.apache.geronimo.connector.outbound,\n org.apache.geronimo.connector.outbound.connectionmanagerconfig,\n org.apache.geronimo.connector.outbound.connectiontracking,\n org.apache.geronimo.transaction,\n org.apache.geronimo.transaction.manager,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.transaction,\n org.osgi.framework\nBundle-SymbolicName: org.nuxeo.runtime.jtajca;singleton:=true\nNuxeo-Component: OSGI-INF/JtaActivator.xml\n","requirements":null,"groupId":"org.nuxeo.runtime","artifactId":"nuxeo-runtime-jtajca","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.runtime","name":"org.nuxeo.runtime","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.runtime","org.nuxeo.runtime.cluster","org.nuxeo.runtime.datasource","org.nuxeo.runtime.jtajca","org.nuxeo.runtime.kv","org.nuxeo.runtime.management","org.nuxeo.runtime.metrics","org.nuxeo.runtime.migration","org.nuxeo.runtime.mongodb","org.nuxeo.runtime.pubsub","org.nuxeo.runtime.reload","org.nuxeo.runtime.stream","org.nuxeo.runtime.stream.test"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-jtajca/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.runtime.jtajca.JtaActivator","extensionPoints":[],"services":[],"extensions":[],"componentClass":"org.nuxeo.runtime.jtajca.JtaActivator","documentation":"\n  Activates JTA/JCA. By default activation is disabled. To enable it define the following runtime property:\n\n  NuxeoContainer.autoactivation=true\n\n  @author Bogdan Stefanescu (bs@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.jtajca/org.nuxeo.runtime.jtajca.JtaActivator","documentationHtml":"<p/>\nActivates JTA/JCA. By default activation is disabled. To enable it define the following runtime property:\n<p/>\nNuxeoContainer.autoactivation=true\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-jtajca/bin/main/OSGI-INF/JtaActivator.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.runtime.jtajca.JtaActivator\" version=\"1.0\">\n  <documentation>\n  Activates JTA/JCA. By default activation is disabled. To enable it define the following runtime property:\n\n  NuxeoContainer.autoactivation=true\n\n  @author Bogdan Stefanescu (bs@nuxeo.com)\n  </documentation>\n\n  <implementation class=\"org.nuxeo.runtime.jtajca.JtaActivator\"/>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.directory.types.contrib","fileName":"classes","manifest":"Export-Package: directoryschema\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Category: core\nBundle-Localization: bundle\nBundle-Name: Nuxeo Directory\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Vendor: Nuxeo\nBundle-Version: 0.0.0.SNAPSHOT\nNuxeo-Component: OSGI-INF/DirectoryTypes.xml\nBundle-ManifestVersion: 2\nImport-Package: javax.annotation;version=\"1.0\",\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.directory;api=split\nBundle-SymbolicName: org.nuxeo.ecm.directory.types.contrib;singleton:=true\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-platform-directory-types-contrib","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.directory","name":"org.nuxeo.ecm.directory","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.directory","org.nuxeo.ecm.directory.api","org.nuxeo.ecm.directory.sql","org.nuxeo.ecm.directory.types.contrib"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-directory/nuxeo-platform-directory-types-contrib/target/classes","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.directory.types","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.directory.types--schema","extensionPoint":"org.nuxeo.ecm.core.schema.TypeService--schema","documentation":null,"xml":"<extension point=\"schema\" target=\"org.nuxeo.ecm.core.schema.TypeService\">\n    <schema name=\"user\" src=\"directoryschema/user.xsd\"/>\n    <schema name=\"group\" src=\"directoryschema/group.xsd\"/>\n    <schema name=\"vocabulary\" src=\"directoryschema/vocabulary.xsd\"/>\n    <schema name=\"xvocabulary\" src=\"directoryschema/xvocabulary.xsd\"/>\n    <schema name=\"l10nvocabulary\" src=\"directoryschema/l10nvocabulary.xsd\"/>\n    <schema name=\"l10nxvocabulary\" src=\"directoryschema/l10nxvocabulary.xsd\"/>\n    <schema name=\"documentsLists\" src=\"directoryschema/documentsLists.xsd\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.schema.TypeService","rawName":"service:org.nuxeo.ecm.core.schema.TypeService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.types.contrib/org.nuxeo.ecm.directory.types/Contributions/org.nuxeo.ecm.directory.types--schema","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;schema name=&quot;user&quot; src=&quot;directoryschema/user.xsd&quot;/&gt;","id":"user","label":"schema user","rawXml":"<schema name=\"user\" src=\"directoryschema/user.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;group&quot; src=&quot;directoryschema/group.xsd&quot;/&gt;","id":"group","label":"schema group","rawXml":"<schema name=\"group\" src=\"directoryschema/group.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;vocabulary&quot; src=&quot;directoryschema/vocabulary.xsd&quot;/&gt;","id":"vocabulary","label":"schema vocabulary","rawXml":"<schema name=\"vocabulary\" src=\"directoryschema/vocabulary.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;xvocabulary&quot; src=&quot;directoryschema/xvocabulary.xsd&quot;/&gt;","id":"xvocabulary","label":"schema xvocabulary","rawXml":"<schema name=\"xvocabulary\" src=\"directoryschema/xvocabulary.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;l10nvocabulary&quot; src=&quot;directoryschema/l10nvocabulary.xsd&quot;/&gt;","id":"l10nvocabulary","label":"schema l10nvocabulary","rawXml":"<schema name=\"l10nvocabulary\" src=\"directoryschema/l10nvocabulary.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;l10nxvocabulary&quot; src=&quot;directoryschema/l10nxvocabulary.xsd&quot;/&gt;","id":"l10nxvocabulary","label":"schema l10nxvocabulary","rawXml":"<schema name=\"l10nxvocabulary\" src=\"directoryschema/l10nxvocabulary.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;documentsLists&quot; src=&quot;directoryschema/documentsLists.xsd&quot;/&gt;","id":"documentsLists","label":"schema documentsLists","rawXml":"<schema name=\"documentsLists\" src=\"directoryschema/documentsLists.xsd\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.types.contrib/org.nuxeo.ecm.directory.types","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-directory/nuxeo-platform-directory-types-contrib/target/classes/OSGI-INF/DirectoryTypes.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.directory.types\">\n\n  <require>org.nuxeo.ecm.core.CoreExtensions</require>\n\n  <extension target=\"org.nuxeo.ecm.core.schema.TypeService\" point=\"schema\">\n    <schema name=\"user\" src=\"directoryschema/user.xsd\"/>\n    <schema name=\"group\" src=\"directoryschema/group.xsd\"/>\n    <schema name=\"vocabulary\" src=\"directoryschema/vocabulary.xsd\"/>\n    <schema name=\"xvocabulary\" src=\"directoryschema/xvocabulary.xsd\"/>\n    <schema name=\"l10nvocabulary\" src=\"directoryschema/l10nvocabulary.xsd\"/>\n    <schema name=\"l10nxvocabulary\" src=\"directoryschema/l10nxvocabulary.xsd\"/>\n    <schema name=\"documentsLists\" src=\"directoryschema/documentsLists.xsd\" />\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.directory.sql","fileName":"classes","manifest":"Export-Package: org.nuxeo.ecm.directory.sql;core=split,\n org.nuxeo.ecm.directory.sql.repository;core=split\nPrivate-Package: .\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Localization: bundle\nBundle-Name: Nuxeo ECM SQL Directory\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nRequire-Bundle: org.nuxeo.ecm.directory.api;visibility:=reexport\nBundle-Vendor: Nuxeo\nEclipse-LazyStart: true\nEclipse-BuddyPolicy: dependent\nBundle-BuddyPolicy: dependent\nBundle-Version: 0.0.0.SNAPSHOT\nNuxeo-Component: OSGI-INF/SQLDirectoryFactory.xml\nBundle-ManifestVersion: 2\nImport-Package: au.com.bytecode.opencsv,\n javax.annotation;version=\"1.0\",\n javax.resource;version=\"2.0.0\",\n javax.resource.cci;version=\"2.0.0\",\n javax.sql,\n org.apache.commons.lang,\n org.apache.commons.logging,\n org.nuxeo.common.utils,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.impl,\n org.nuxeo.ecm.core.api.model,\n org.nuxeo.ecm.core.schema,\n org.nuxeo.ecm.core.schema.types,\n org.nuxeo.ecm.core.storage,\n org.nuxeo.ecm.core.storage.sql,\n org.nuxeo.ecm.core.storage.sql.jdbc,\n org.nuxeo.ecm.core.storage.sql.jdbc.db,\n org.nuxeo.ecm.core.utils,\n org.nuxeo.ecm.directory,\n org.nuxeo.osgi,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model,\n org.osgi.framework\nBundle-SymbolicName: org.nuxeo.ecm.directory.sql;singleton:=true\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-platform-directory-sql","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.directory","name":"org.nuxeo.ecm.directory","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.directory","org.nuxeo.ecm.directory.api","org.nuxeo.ecm.directory.sql","org.nuxeo.ecm.directory.types.contrib"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-directory/nuxeo-platform-directory-sql/target/classes","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.directory.sql.SQLDirectoryFactory","extensionPoints":[{"@type":"NXExtensionPoint","name":"directories","descriptors":["org.nuxeo.ecm.directory.sql.SQLDirectoryDescriptor"],"documentation":"\n      This extension point can be used to register new SQL-based\n      directories. The\n      extension can contain any number of directories\n      declarations of the form:\n      <code>\n    <directory name=\"userDirectory\">\n        <schema>vocabulary</schema>\n        <types>\n            <type>system</type>\n        </types>\n        <dataSource>java:/nxsqldirectory</dataSource>\n        <table>t</table>\n        <nativeCase>false</nativeCase>\n        <idField>username</idField>\n        <passwordField>password</passwordField>\n        <passwordHashAlgorithm>SSHA</passwordHashAlgorithm>\n        <autoincrementIdField>false</autoincrementIdField>\n        <createTablePolicy>on_missing_columns</createTablePolicy>\n        <dataFile>setup-mydb.csv</dataFile>\n        <dataFileCharacterSeparator>,</dataFileCharacterSeparator>\n        <querySizeLimit>1000</querySizeLimit>\n        <references>\n            <tableReference dataFile=\"user2group.csv\"\n                directory=\"groupDirectory\" field=\"groups\"\n                sourceColumn=\"userId\" table=\"user2group\" targetColumn=\"groupId\"/>\n        </references>\n        <permissions>\n            <permission name=\"Read\">\n                <group>mygroup</group>\n                <group>mygroup2</group>\n                <user>Administrator</user>\n            </permission>\n            <permission name=\"Write\">\n                <group>mygroup3</group>\n            </permission>\n        </permissions>\n    </directory>\n</code>\n\n      Here is the description for each field:\n      <ul>\n    <li>\n          schema - the name of the schema to be used for the directory\n          entries.\n        </li>\n    <li>\n          types - list of type to categorise directories.\n        </li>\n    <li>\n          dataSource - the dataSource name, as registered in the\n          application\n          server.\n        </li>\n    <li>\n          table - The name of the sql table where the directory data\n          will be\n          stored.\n        </li>\n    <li>\n          idField - the id field designs the primary key in the table,\n          used for\n          retrieving entries by id.\n        </li>\n    <li>\n          passwordField - the password field.\n        </li>\n    <li>\n          passwordHashAlgorithm - the hash used to encode the password\n          written\n          in the database, either empty (default), SSHA or SMD5.\n        </li>\n    <li>\n          autoincrementIdField - if this is set true, the SQLDirectory\n          will\n          fill the id field using a generated unique number,\n          otherwise the client\n          has to supply the id.\n        </li>\n    <li>\n          dataFile - file from which to populate the table; the\n          first line must\n          contain the column names. This can be a csv, tsv, psv file.\n          But you\n          must take care of the dataFileCharacterSeparator to specify the\n          character\n          separator\n        </li>\n    <li>\n          dataFileCharacterSeparator - character that separate each value\n          if\n          more than one character is set, the first one is gotten and other\n          are\n          skipped. The character is by default \",\" but you can set \";\" or\n          tabulation\n        </li>\n    <li>\n          createTablePolicy - one of \"never\", \"always\" or\n          \"on_missing_columns\"\n          if this is set to \"never\", the table will\n          never be created; if set to\n          \"always\", the table will be\n          created each time the application is\n          started; if set to\n          \"on_missing_columns\", the table will be created only\n          if the\n          schema declares some fields that are not present in the sql\n          table.\n        </li>\n    <li>\n          querySizeLimit - the maximum number of results that the\n          queries on\n          this directory should return; if there are more\n          results than this, an\n          exception will be raised.\n        </li>\n    <li>\n          nativeCase - false if table and column names should be used exactly\n          as specificed in the configuration and schemas (quoted), true if\n          they\n          should be converted to database-native case (usually\n          uppercase); the\n          default is false for backward-compatibility.\n        </li>\n</ul>\n\n      The references tag is used to define relations between\n      directories. (TODO:\n      describe the references types.)\n    \n","id":"org.nuxeo.ecm.directory.sql.SQLDirectoryFactory--directories","version":"11.1-SNAPSHOT","label":"directories (org.nuxeo.ecm.directory.sql.SQLDirectoryFactory)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.sql/org.nuxeo.ecm.directory.sql.SQLDirectoryFactory/ExtensionPoints/org.nuxeo.ecm.directory.sql.SQLDirectoryFactory--directories","documentationHtml":"<p/>\nThis extension point can be used to register new SQL-based\ndirectories. The\nextension can contain any number of directories\ndeclarations of the form:\n<p/><pre><code>    &lt;directory name=\"userDirectory\">\n        &lt;schema>vocabulary&lt;/schema>\n        &lt;types>\n            &lt;type>system&lt;/type>\n        &lt;/types>\n        &lt;dataSource>java:/nxsqldirectory&lt;/dataSource>\n        &lt;table>t&lt;/table>\n        &lt;nativeCase>false&lt;/nativeCase>\n        &lt;idField>username&lt;/idField>\n        &lt;passwordField>password&lt;/passwordField>\n        &lt;passwordHashAlgorithm>SSHA&lt;/passwordHashAlgorithm>\n        &lt;autoincrementIdField>false&lt;/autoincrementIdField>\n        &lt;createTablePolicy>on_missing_columns&lt;/createTablePolicy>\n        &lt;dataFile>setup-mydb.csv&lt;/dataFile>\n        &lt;dataFileCharacterSeparator>,&lt;/dataFileCharacterSeparator>\n        &lt;querySizeLimit>1000&lt;/querySizeLimit>\n        &lt;references>\n            &lt;tableReference dataFile=\"user2group.csv\"\n                directory=\"groupDirectory\" field=\"groups\"\n                sourceColumn=\"userId\" table=\"user2group\" targetColumn=\"groupId\"/>\n        &lt;/references>\n        &lt;permissions>\n            &lt;permission name=\"Read\">\n                &lt;group>mygroup&lt;/group>\n                &lt;group>mygroup2&lt;/group>\n                &lt;user>Administrator&lt;/user>\n            &lt;/permission>\n            &lt;permission name=\"Write\">\n                &lt;group>mygroup3&lt;/group>\n            &lt;/permission>\n        &lt;/permissions>\n    &lt;/directory>\n</code></pre><p/>\nHere is the description for each field:\n<ul>\n<li>\nschema - the name of the schema to be used for the directory\nentries.\n</li>\n<li>\ntypes - list of type to categorise directories.\n</li>\n<li>\ndataSource - the dataSource name, as registered in the\napplication\nserver.\n</li>\n<li>\ntable - The name of the sql table where the directory data\nwill be\nstored.\n</li>\n<li>\nidField - the id field designs the primary key in the table,\nused for\nretrieving entries by id.\n</li>\n<li>\npasswordField - the password field.\n</li>\n<li>\npasswordHashAlgorithm - the hash used to encode the password\nwritten\nin the database, either empty (default), SSHA or SMD5.\n</li>\n<li>\nautoincrementIdField - if this is set true, the SQLDirectory\nwill\nfill the id field using a generated unique number,\notherwise the client\nhas to supply the id.\n</li>\n<li>\ndataFile - file from which to populate the table; the\nfirst line must\ncontain the column names. This can be a csv, tsv, psv file.\nBut you\nmust take care of the dataFileCharacterSeparator to specify the\ncharacter\nseparator\n</li>\n<li>\ndataFileCharacterSeparator - character that separate each value\nif\nmore than one character is set, the first one is gotten and other\nare\nskipped. The character is by default \",\" but you can set \";\" or\ntabulation\n</li>\n<li>\ncreateTablePolicy - one of \"never\", \"always\" or\n\"on_missing_columns\"\nif this is set to \"never\", the table will\nnever be created; if set to\n\"always\", the table will be\ncreated each time the application is\nstarted; if set to\n\"on_missing_columns\", the table will be created only\nif the\nschema declares some fields that are not present in the sql\ntable.\n</li>\n<li>\nquerySizeLimit - the maximum number of results that the\nqueries on\nthis directory should return; if there are more\nresults than this, an\nexception will be raised.\n</li>\n<li>\nnativeCase - false if table and column names should be used exactly\nas specificed in the configuration and schemas (quoted), true if\nthey\nshould be converted to database-native case (usually\nuppercase); the\ndefault is false for backward-compatibility.\n</li>\n</ul>\n<p/>\nThe references tag is used to define relations between\ndirectories. (TODO:\ndescribe the references types.)\n<p/>","componentId":"org.nuxeo.ecm.directory.sql.SQLDirectoryFactory"}],"services":[],"extensions":[],"componentClass":"org.nuxeo.ecm.directory.sql.SQLDirectoryFactory","documentation":"\n    SQL-based implementation for NXDirectory\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.sql/org.nuxeo.ecm.directory.sql.SQLDirectoryFactory","documentationHtml":"<p/>\nSQL-based implementation for NXDirectory\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-directory/nuxeo-platform-directory-sql/target/classes/OSGI-INF/SQLDirectoryFactory.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.directory.sql.SQLDirectoryFactory\">\n\n  <implementation class=\"org.nuxeo.ecm.directory.sql.SQLDirectoryFactory\" />\n\n  <require>org.nuxeo.ecm.directory.DirectoryServiceImpl</require>\n\n  <documentation>\n    SQL-based implementation for NXDirectory\n  </documentation>\n\n  <extension-point name=\"directories\">\n    <documentation>\n      This extension point can be used to register new SQL-based\n      directories. The\n      extension can contain any number of directories\n      declarations of the form:\n      <code>\n        <directory name=\"userDirectory\">\n          <schema>vocabulary</schema>\n          <types>\n            <type>system</type>\n          </types>\n          <dataSource>java:/nxsqldirectory</dataSource>\n          <table>t</table>\n          <nativeCase>false</nativeCase>\n          <idField>username</idField>\n          <passwordField>password</passwordField>\n          <passwordHashAlgorithm>SSHA</passwordHashAlgorithm>\n          <autoincrementIdField>false</autoincrementIdField>\n          <createTablePolicy>on_missing_columns</createTablePolicy>\n          <dataFile>setup-mydb.csv</dataFile>\n          <dataFileCharacterSeparator>,</dataFileCharacterSeparator>\n          <querySizeLimit>1000</querySizeLimit>\n          <references>\n            <tableReference field=\"groups\" directory=\"groupDirectory\"\n              table=\"user2group\" sourceColumn=\"userId\" targetColumn=\"groupId\"\n              dataFile=\"user2group.csv\" />\n          </references>\n          <permissions>\n            <permission name=\"Read\">\n              <group>mygroup</group>\n              <group>mygroup2</group>\n              <user>Administrator</user>\n            </permission>\n            <permission name=\"Write\">\n              <group>mygroup3</group>\n            </permission>\n          </permissions>\n        </directory>\n      </code>\n      Here is the description for each field:\n      <ul>\n        <li>\n          schema - the name of the schema to be used for the directory\n          entries.\n        </li>\n        <li>\n          types - list of type to categorise directories.\n        </li>\n        <li>\n          dataSource - the dataSource name, as registered in the\n          application\n          server.\n        </li>\n        <li>\n          table - The name of the sql table where the directory data\n          will be\n          stored.\n        </li>\n        <li>\n          idField - the id field designs the primary key in the table,\n          used for\n          retrieving entries by id.\n        </li>\n        <li>\n          passwordField - the password field.\n        </li>\n        <li>\n          passwordHashAlgorithm - the hash used to encode the password\n          written\n          in the database, either empty (default), SSHA or SMD5.\n        </li>\n        <li>\n          autoincrementIdField - if this is set true, the SQLDirectory\n          will\n          fill the id field using a generated unique number,\n          otherwise the client\n          has to supply the id.\n        </li>\n        <li>\n          dataFile - file from which to populate the table; the\n          first line must\n          contain the column names. This can be a csv, tsv, psv file.\n          But you\n          must take care of the dataFileCharacterSeparator to specify the\n          character\n          separator\n        </li>\n        <li>\n          dataFileCharacterSeparator - character that separate each value\n          if\n          more than one character is set, the first one is gotten and other\n          are\n          skipped. The character is by default \",\" but you can set \";\" or\n          tabulation\n        </li>\n        <li>\n          createTablePolicy - one of \"never\", \"always\" or\n          \"on_missing_columns\"\n          if this is set to \"never\", the table will\n          never be created; if set to\n          \"always\", the table will be\n          created each time the application is\n          started; if set to\n          \"on_missing_columns\", the table will be created only\n          if the\n          schema declares some fields that are not present in the sql\n          table.\n        </li>\n        <li>\n          querySizeLimit - the maximum number of results that the\n          queries on\n          this directory should return; if there are more\n          results than this, an\n          exception will be raised.\n        </li>\n        <li>\n          nativeCase - false if table and column names should be used exactly\n          as specificed in the configuration and schemas (quoted), true if\n          they\n          should be converted to database-native case (usually\n          uppercase); the\n          default is false for backward-compatibility.\n        </li>\n      </ul>\n      The references tag is used to define relations between\n      directories. (TODO:\n      describe the references types.)\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.directory.sql.SQLDirectoryDescriptor\" />\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.storage","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 2\nBundle-SymbolicName: org.nuxeo.ecm.core.storage\nNuxeo-Component: OSGI-INF/lockmanager-service-contrib.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-storage","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.storage.lock.LockManagerService","extensionPoints":[{"@type":"NXExtensionPoint","name":"lockmanager","descriptors":["org.nuxeo.ecm.core.storage.lock.LockManagerDescriptor"],"documentation":"\n      Extension point to register lock managers.\n\n      A new Lock Manager can be contributed using the following extension point:\n      <code>\n    <lockmanager class=\"some.class.implementing.LockManager\" name=\"default\"/>\n</code>\n\n      A repository will use the Lock Manager of the same name.\n    \n","id":"org.nuxeo.ecm.core.storage.lock.LockManagerService--lockmanager","version":"11.1-SNAPSHOT","label":"lockmanager (org.nuxeo.ecm.core.storage.lock.LockManagerService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage/org.nuxeo.ecm.core.storage.lock.LockManagerService/ExtensionPoints/org.nuxeo.ecm.core.storage.lock.LockManagerService--lockmanager","documentationHtml":"<p/>\nExtension point to register lock managers.\n<p/>\nA new Lock Manager can be contributed using the following extension point:\n<p/><pre><code>    &lt;lockmanager class=\"some.class.implementing.LockManager\" name=\"default\"/>\n</code></pre><p/>\nA repository will use the Lock Manager of the same name.\n<p/>","componentId":"org.nuxeo.ecm.core.storage.lock.LockManagerService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.storage.lock.LockManagerService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage/org.nuxeo.ecm.core.storage.lock.LockManagerService/Services/org.nuxeo.ecm.core.storage.lock.LockManagerService","componentId":"org.nuxeo.ecm.core.storage.lock.LockManagerService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.storage.lock.LockManagerService","documentation":"\n    Manages Lock Managers.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage/org.nuxeo.ecm.core.storage.lock.LockManagerService","documentationHtml":"<p/>\nManages Lock Managers.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage/bin/main/OSGI-INF/lockmanager-service-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.storage.lock.LockManagerService\"\n  version=\"1.0.0\">\n\n  <documentation>\n    Manages Lock Managers.\n  </documentation>\n\n  <implementation\n    class=\"org.nuxeo.ecm.core.storage.lock.LockManagerService\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.storage.lock.LockManagerService\" />\n  </service>\n\n  <extension-point name=\"lockmanager\">\n    <documentation>\n      Extension point to register lock managers.\n\n      A new Lock Manager can be contributed using the following extension point:\n      <code>\n        <lockmanager name=\"default\" class=\"some.class.implementing.LockManager\" />\n      </code>\n      A repository will use the Lock Manager of the same name.\n    </documentation>\n    <object\n      class=\"org.nuxeo.ecm.core.storage.lock.LockManagerDescriptor\" />\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.automation.core","fileName":"classes","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 2\nBundle-Version: 5.4.2.qualifier\nBundle-Name: Nuxeo Automation Core\nBundle-SymbolicName: org.nuxeo.ecm.automation.core;singleton:=true\nBundle-Vendor: Nuxeo\nExport-Package: org.nuxeo.ecm.automation,\n org.nuxeo.ecm.automation.core,\n org.nuxeo.ecm.automation.core.annotations,\n org.nuxeo.ecm.automation.core.collectors,\n org.nuxeo.ecm.automation.core.doc,\n org.nuxeo.ecm.automation.core.events,\n org.nuxeo.ecm.automation.core.events.operations,\n org.nuxeo.ecm.automation.core.impl,\n org.nuxeo.ecm.automation.core.impl.adapters,\n org.nuxeo.ecm.automation.core.mail,\n org.nuxeo.ecm.automation.core.operations,\n org.nuxeo.ecm.automation.core.operations.blob,\n org.nuxeo.ecm.automation.core.operations.document,\n org.nuxeo.ecm.automation.core.operations.execution,\n org.nuxeo.ecm.automation.core.operations.stack,\n org.nuxeo.ecm.automation.core.rendering,\n org.nuxeo.ecm.automation.core.rendering.operations,\n org.nuxeo.ecm.automation.core.scripting,\n org.nuxeo.ecm.automation.core.util\nBundle-ActivationPolicy: lazy\nNuxeo-Component: OSGI-INF/AutomationService.xml,\n OSGI-INF/reload-contrib.xml,\n OSGI-INF/operations-contrib.xml,\n OSGI-INF/properties-contrib.xml,\n OSGI-INF/marshallers-contrib.xml,\n OSGI-INF/workmanager-contrib.xml\nImport-Package: freemarker.core,\n freemarker.template,\n groovy.lang;resolution:=optional,\n javax.mail,\n javax.mail.internet,\n net.sf.json,\n org.apache.commons.lang,\n org.apache.commons.logging,\n org.codehaus.groovy.control;resolution:=optional,\n org.codehaus.groovy.runtime;resolution:=optional,\n org.mvel2,\n org.mvel2.templates,\n org.nuxeo.common,\n org.nuxeo.common.utils,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core.api,\n org.nuxeo.ecm.core.api.blobholder,\n org.nuxeo.ecm.core.api.impl,\n org.nuxeo.ecm.core.api.impl.blob,\n org.nuxeo.ecm.core.api.model,\n org.nuxeo.ecm.core.api.model.impl,\n org.nuxeo.ecm.core.api.repository,\n org.nuxeo.ecm.core.api.security,\n org.nuxeo.ecm.core.api.security.impl,\n org.nuxeo.ecm.core.convert.api,\n org.nuxeo.ecm.core.event,\n org.nuxeo.ecm.core.event.impl,\n org.nuxeo.ecm.core.schema,\n org.nuxeo.ecm.core.schema.types,\n org.nuxeo.ecm.core.schema.types.primitives,\n org.nuxeo.ecm.core.schema.utils,\n org.nuxeo.ecm.core.versioning,\n org.nuxeo.ecm.platform.rendering.api,\n org.nuxeo.ecm.platform.rendering.fm,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model,\n org.nuxeo.runtime.services.resource,\n org.nuxeo.runtime.transaction,\n org.osgi.framework;version=\"1.5.0\"\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\n","requirements":null,"groupId":"org.nuxeo.ecm.automation","artifactId":"nuxeo-automation-core","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.automation","name":"org.nuxeo.ecm.automation","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.automation.core","org.nuxeo.ecm.automation.features","org.nuxeo.ecm.automation.io","org.nuxeo.ecm.automation.scripting","org.nuxeo.ecm.automation.server"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-core/target/classes","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.automation.core.impl.ReloadListener","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.automation.core.impl.ReloadListener--listeners","extensionPoint":"org.nuxeo.runtime.EventService--listeners","documentation":null,"xml":"<extension point=\"listeners\" target=\"org.nuxeo.runtime.EventService\">\n        <listener class=\"org.nuxeo.ecm.automation.core.impl.ReloadListener\">\n            <topic>org.nuxeo.runtime.reload</topic>\n        </listener>\n    </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.EventService","rawName":"service:org.nuxeo.runtime.EventService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.automation.core.impl.ReloadListener/Contributions/org.nuxeo.ecm.automation.core.impl.ReloadListener--listeners","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;listener class=&quot;org.nuxeo.ecm.automation.core.impl.ReloadListener&quot;&gt;\n            &lt;topic&gt;org.nuxeo.runtime.reload&lt;/topic&gt;\n        &lt;/listener&gt;","id":null,"label":"listener","rawXml":"<listener class=\"org.nuxeo.ecm.automation.core.impl.ReloadListener\">\n            <topic>org.nuxeo.runtime.reload</topic>\n        </listener>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.automation.core.impl.ReloadListener","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-core/target/classes/OSGI-INF/reload-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.automation.core.impl.ReloadListener\">\n\n    <extension target=\"org.nuxeo.runtime.EventService\" point=\"listeners\">\n        <listener class=\"org.nuxeo.ecm.automation.core.impl.ReloadListener\">\n            <topic>org.nuxeo.runtime.reload</topic>\n        </listener>\n    </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.automation.coreContrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.automation.coreContrib--operations","extensionPoint":"org.nuxeo.ecm.core.operation.OperationServiceComponent--operations","documentation":null,"xml":"<extension point=\"operations\" target=\"org.nuxeo.ecm.core.operation.OperationServiceComponent\">\n\n    <!-- register built-in operations -->\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.FetchContextDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.FetchContextBlob\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.SetVar\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PushDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PushDocumentList\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PopDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PopDocumentList\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.SetInputAsVar\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreDocumentInput\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreDocumentsInput\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreBlobInput\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreBlobsInput\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RunScript\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreDocumentInputFromScript\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreDocumentsInputFromScript\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreBlobInputFromScript\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreBlobsInputFromScript\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.execution.RunOperation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.execution.RunOperationOnList\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.execution.RunInNewTransaction\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.execution.RunDocumentChain\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.execution.RunFileChain\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.CopyDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.CreateDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.CreateVersion\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.CheckInDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.CheckOutDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.RestoreVersion\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.DeleteDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.EmptyTrash\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.TrashDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.UntrashDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.FetchDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.LockDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.FetchByProperty\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.FilterDocuments\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.UnlockDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.GetDocumentChildren\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.GetDocumentChild\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.GetDocumentParent\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.GetLastDocumentVersion\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.GetDocumentVersions\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.MoveDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.ReloadDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.SaveDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.execution.SaveSession\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.SetDocumentLifeCycle\">\n      <widgets>\n        <widget name=\"value\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">Transition</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">lifecycle</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>value</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.SetDocumentACE\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.AddPermission\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.ReplacePermission\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.RemovePermission\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.BlockPermissionInheritance\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.UnblockPermissionInheritance\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveDocumentACL\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.AddFacet\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveFacet\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.AddItemToListProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveItemFromListProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.CopySchema\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.ResetSchema\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.SetDocumentProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveProxies\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.UpdateDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.OrderDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.PublishDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.MultiPublishDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.GetDocumentBlob\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.GetDocumentBlobs\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.GetAllDocumentBlobs\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.SetDocumentBlob\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.BulkDownload\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.PostBlob\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.BlobToPDF\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.ConcatenatePDFs\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.ConvertBlob\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.RunConverter\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.BlobToFile\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.CreateBlob\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.CreateZip\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.AttachBlob\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.SetBlobFileName\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveDocumentBlob\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PushBlob\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PushBlobList\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PopBlob\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PopBlobList\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PullDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PullDocumentList\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PullBlob\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PullBlobList\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.events.operations.FireEvent\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RunInputScript\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.rendering.operations.RenderDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.rendering.operations.RenderDocumentFeed\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.login.LoginAs\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.login.Logout\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.LogOperation\"/>\n\n    <!-- From presales toolkit -->\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.AddEntryToMultiValuedProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.CreateProxyLive\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.GetLiveDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveEntryOfMultiValuedProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n\n    <!-- Business Operations -->\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.business.BusinessCreateOperation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.business.BusinessUpdateOperation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.business.BusinessFetchOperation\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.execution.RunOperationOnListInNewTransaction\"/>\n\n    <!-- Trace related operations -->\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.traces.AutomationTraceGetOperation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.traces.AutomationTraceToggleOperation\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.traces.JsonStackToggleDisplayOperation\"/>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.operation.OperationServiceComponent","rawName":"service:org.nuxeo.ecm.core.operation.OperationServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.automation.coreContrib/Contributions/org.nuxeo.ecm.core.automation.coreContrib--operations","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.FetchContextDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.FetchContextDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.FetchContextBlob&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.FetchContextBlob\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.SetVar&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.SetVar\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.stack.PushDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PushDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.stack.PushDocumentList&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PushDocumentList\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.stack.PopDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PopDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.stack.PopDocumentList&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PopDocumentList\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.SetInputAsVar&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.SetInputAsVar\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.RestoreDocumentInput&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreDocumentInput\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.RestoreDocumentsInput&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreDocumentsInput\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.RestoreBlobInput&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreBlobInput\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.RestoreBlobsInput&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreBlobsInput\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.RunScript&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.RunScript\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.RestoreDocumentInputFromScript&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreDocumentInputFromScript\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.RestoreDocumentsInputFromScript&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreDocumentsInputFromScript\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.RestoreBlobInputFromScript&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreBlobInputFromScript\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.RestoreBlobsInputFromScript&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreBlobsInputFromScript\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.execution.RunOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.execution.RunOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.execution.RunOperationOnList&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.execution.RunOperationOnList\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.execution.RunInNewTransaction&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.execution.RunInNewTransaction\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.execution.RunDocumentChain&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.execution.RunDocumentChain\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.execution.RunFileChain&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.execution.RunFileChain\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.CopyDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.CopyDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.CreateDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.CreateDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.CreateVersion&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.CreateVersion\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.CheckInDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.CheckInDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.CheckOutDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.CheckOutDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.RestoreVersion&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.RestoreVersion\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.DeleteDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.DeleteDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.EmptyTrash&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.EmptyTrash\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.TrashDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.TrashDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.UntrashDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.UntrashDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.FetchDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.FetchDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.LockDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.LockDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.FetchByProperty&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.FetchByProperty\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.FilterDocuments&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.FilterDocuments\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.UnlockDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.UnlockDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.GetDocumentChildren&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.GetDocumentChildren\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.GetDocumentChild&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.GetDocumentChild\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.GetDocumentParent&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.GetDocumentParent\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.GetLastDocumentVersion&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.GetLastDocumentVersion\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.GetDocumentVersions&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.GetDocumentVersions\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.MoveDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.MoveDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.ReloadDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.ReloadDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.SaveDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.SaveDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.execution.SaveSession&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.execution.SaveSession\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.SetDocumentLifeCycle&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;value&quot; type=&quot;codearea&quot;&gt;\n          &lt;labels&gt;\n            &lt;label mode=&quot;any&quot;&gt;Transition&lt;/label&gt;\n          &lt;/labels&gt;\n          &lt;properties mode=&quot;any&quot;&gt;\n            &lt;property name=&quot;language&quot;&gt;lifecycle&lt;/property&gt;\n            &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n            &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n          &lt;/properties&gt;\n          &lt;fields&gt;\n            &lt;field&gt;value&lt;/field&gt;\n          &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.SetDocumentLifeCycle\">\n      <widgets>\n        <widget name=\"value\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">Transition</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">lifecycle</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>value</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.SetDocumentACE&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.SetDocumentACE\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.AddPermission&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.AddPermission\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.ReplacePermission&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.ReplacePermission\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.RemovePermission&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.RemovePermission\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.BlockPermissionInheritance&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.BlockPermissionInheritance\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.UnblockPermissionInheritance&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.UnblockPermissionInheritance\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.RemoveDocumentACL&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveDocumentACL\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.AddFacet&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.AddFacet\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.RemoveFacet&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveFacet\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.AddItemToListProperty&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;xpath&quot; type=&quot;codearea&quot;&gt;\n          &lt;labels&gt;\n            &lt;label mode=&quot;any&quot;&gt;XPath&lt;/label&gt;\n          &lt;/labels&gt;\n          &lt;properties mode=&quot;any&quot;&gt;\n            &lt;property name=&quot;language&quot;&gt;xpath&lt;/property&gt;\n            &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n            &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n          &lt;/properties&gt;\n          &lt;fields&gt;\n            &lt;field&gt;xpath&lt;/field&gt;\n          &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.AddItemToListProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.RemoveItemFromListProperty&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;xpath&quot; type=&quot;codearea&quot;&gt;\n          &lt;labels&gt;\n            &lt;label mode=&quot;any&quot;&gt;XPath&lt;/label&gt;\n          &lt;/labels&gt;\n          &lt;properties mode=&quot;any&quot;&gt;\n            &lt;property name=&quot;language&quot;&gt;xpath&lt;/property&gt;\n            &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n            &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n          &lt;/properties&gt;\n          &lt;fields&gt;\n            &lt;field&gt;xpath&lt;/field&gt;\n          &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveItemFromListProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.CopySchema&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.CopySchema\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.ResetSchema&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;xpath&quot; type=&quot;codearea&quot;&gt;\n          &lt;labels&gt;\n            &lt;label mode=&quot;any&quot;&gt;XPath&lt;/label&gt;\n          &lt;/labels&gt;\n          &lt;properties mode=&quot;any&quot;&gt;\n            &lt;property name=&quot;language&quot;&gt;xpath&lt;/property&gt;\n            &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n            &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n          &lt;/properties&gt;\n          &lt;fields&gt;\n            &lt;field&gt;xpath&lt;/field&gt;\n          &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.ResetSchema\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.SetDocumentProperty&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;xpath&quot; type=&quot;codearea&quot;&gt;\n          &lt;labels&gt;\n            &lt;label mode=&quot;any&quot;&gt;XPath&lt;/label&gt;\n          &lt;/labels&gt;\n          &lt;properties mode=&quot;any&quot;&gt;\n            &lt;property name=&quot;language&quot;&gt;xpath&lt;/property&gt;\n            &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n            &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n          &lt;/properties&gt;\n          &lt;fields&gt;\n            &lt;field&gt;xpath&lt;/field&gt;\n          &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.SetDocumentProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.RemoveProperty&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;xpath&quot; type=&quot;codearea&quot;&gt;\n          &lt;labels&gt;\n            &lt;label mode=&quot;any&quot;&gt;XPath&lt;/label&gt;\n          &lt;/labels&gt;\n          &lt;properties mode=&quot;any&quot;&gt;\n            &lt;property name=&quot;language&quot;&gt;xpath&lt;/property&gt;\n            &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n            &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n          &lt;/properties&gt;\n          &lt;fields&gt;\n            &lt;field&gt;xpath&lt;/field&gt;\n          &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.RemoveProxies&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveProxies\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.UpdateDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.UpdateDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.OrderDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.OrderDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.PublishDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.PublishDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.MultiPublishDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.MultiPublishDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.blob.GetDocumentBlob&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;xpath&quot; type=&quot;codearea&quot;&gt;\n          &lt;labels&gt;\n            &lt;label mode=&quot;any&quot;&gt;XPath&lt;/label&gt;\n          &lt;/labels&gt;\n          &lt;properties mode=&quot;any&quot;&gt;\n            &lt;property name=&quot;language&quot;&gt;xpath&lt;/property&gt;\n            &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n            &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n          &lt;/properties&gt;\n          &lt;fields&gt;\n            &lt;field&gt;xpath&lt;/field&gt;\n          &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.blob.GetDocumentBlob\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.blob.GetDocumentBlobs&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;xpath&quot; type=&quot;codearea&quot;&gt;\n          &lt;labels&gt;\n            &lt;label mode=&quot;any&quot;&gt;XPath&lt;/label&gt;\n          &lt;/labels&gt;\n          &lt;properties mode=&quot;any&quot;&gt;\n            &lt;property name=&quot;language&quot;&gt;xpath&lt;/property&gt;\n            &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n            &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n          &lt;/properties&gt;\n          &lt;fields&gt;\n            &lt;field&gt;xpath&lt;/field&gt;\n          &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.blob.GetDocumentBlobs\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.blob.GetAllDocumentBlobs&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.blob.GetAllDocumentBlobs\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.SetDocumentBlob&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;xpath&quot; type=&quot;codearea&quot;&gt;\n          &lt;labels&gt;\n            &lt;label mode=&quot;any&quot;&gt;XPath&lt;/label&gt;\n          &lt;/labels&gt;\n          &lt;properties mode=&quot;any&quot;&gt;\n            &lt;property name=&quot;language&quot;&gt;xpath&lt;/property&gt;\n            &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n            &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n          &lt;/properties&gt;\n          &lt;fields&gt;\n            &lt;field&gt;xpath&lt;/field&gt;\n          &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.SetDocumentBlob\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.blob.BulkDownload&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.blob.BulkDownload\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.blob.PostBlob&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.blob.PostBlob\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.blob.BlobToPDF&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.blob.BlobToPDF\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.blob.ConcatenatePDFs&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.blob.ConcatenatePDFs\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.blob.ConvertBlob&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.blob.ConvertBlob\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.blob.RunConverter&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.blob.RunConverter\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.blob.BlobToFile&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.blob.BlobToFile\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.blob.CreateBlob&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.blob.CreateBlob\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.blob.CreateZip&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.blob.CreateZip\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.blob.AttachBlob&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;xpath&quot; type=&quot;codearea&quot;&gt;\n          &lt;labels&gt;\n            &lt;label mode=&quot;any&quot;&gt;XPath&lt;/label&gt;\n          &lt;/labels&gt;\n          &lt;properties mode=&quot;any&quot;&gt;\n            &lt;property name=&quot;language&quot;&gt;xpath&lt;/property&gt;\n            &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n            &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n          &lt;/properties&gt;\n          &lt;fields&gt;\n            &lt;field&gt;xpath&lt;/field&gt;\n          &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.blob.AttachBlob\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.blob.SetBlobFileName&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;xpath&quot; type=&quot;codearea&quot;&gt;\n          &lt;labels&gt;\n            &lt;label mode=&quot;any&quot;&gt;XPath&lt;/label&gt;\n          &lt;/labels&gt;\n          &lt;properties mode=&quot;any&quot;&gt;\n            &lt;property name=&quot;language&quot;&gt;xpath&lt;/property&gt;\n            &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n            &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n          &lt;/properties&gt;\n          &lt;fields&gt;\n            &lt;field&gt;xpath&lt;/field&gt;\n          &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.blob.SetBlobFileName\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.RemoveDocumentBlob&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;xpath&quot; type=&quot;codearea&quot;&gt;\n          &lt;labels&gt;\n            &lt;label mode=&quot;any&quot;&gt;XPath&lt;/label&gt;\n          &lt;/labels&gt;\n          &lt;properties mode=&quot;any&quot;&gt;\n            &lt;property name=&quot;language&quot;&gt;xpath&lt;/property&gt;\n            &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n            &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n          &lt;/properties&gt;\n          &lt;fields&gt;\n            &lt;field&gt;xpath&lt;/field&gt;\n          &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveDocumentBlob\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.stack.PushBlob&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PushBlob\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.stack.PushBlobList&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PushBlobList\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.stack.PopBlob&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PopBlob\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.stack.PopBlobList&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PopBlobList\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.stack.PullDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PullDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.stack.PullDocumentList&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PullDocumentList\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.stack.PullBlob&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PullBlob\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.stack.PullBlobList&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PullBlobList\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.events.operations.FireEvent&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.events.operations.FireEvent\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.RunInputScript&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.RunInputScript\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.rendering.operations.RenderDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.rendering.operations.RenderDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.rendering.operations.RenderDocumentFeed&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.rendering.operations.RenderDocumentFeed\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.login.LoginAs&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.login.LoginAs\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.login.Logout&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.login.Logout\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.LogOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.LogOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.AddEntryToMultiValuedProperty&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;xpath&quot; type=&quot;codearea&quot;&gt;\n          &lt;labels&gt;\n            &lt;label mode=&quot;any&quot;&gt;XPath&lt;/label&gt;\n          &lt;/labels&gt;\n          &lt;properties mode=&quot;any&quot;&gt;\n            &lt;property name=&quot;language&quot;&gt;xpath&lt;/property&gt;\n            &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n            &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n          &lt;/properties&gt;\n          &lt;fields&gt;\n            &lt;field&gt;xpath&lt;/field&gt;\n          &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.AddEntryToMultiValuedProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.CreateProxyLive&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.CreateProxyLive\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.GetLiveDocument&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.GetLiveDocument\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.document.RemoveEntryOfMultiValuedProperty&quot;&gt;\n      &lt;widgets&gt;\n        &lt;widget name=&quot;xpath&quot; type=&quot;codearea&quot;&gt;\n          &lt;labels&gt;\n            &lt;label mode=&quot;any&quot;&gt;XPath&lt;/label&gt;\n          &lt;/labels&gt;\n          &lt;properties mode=&quot;any&quot;&gt;\n            &lt;property name=&quot;language&quot;&gt;xpath&lt;/property&gt;\n            &lt;property name=&quot;width&quot;&gt;100%&lt;/property&gt;\n            &lt;property name=&quot;height&quot;&gt;100%&lt;/property&gt;\n          &lt;/properties&gt;\n          &lt;fields&gt;\n            &lt;field&gt;xpath&lt;/field&gt;\n          &lt;/fields&gt;\n        &lt;/widget&gt;\n      &lt;/widgets&gt;\n    &lt;/operation&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveEntryOfMultiValuedProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.business.BusinessCreateOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.business.BusinessCreateOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.business.BusinessUpdateOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.business.BusinessUpdateOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.business.BusinessFetchOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.business.BusinessFetchOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.execution.RunOperationOnListInNewTransaction&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.execution.RunOperationOnListInNewTransaction\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.traces.AutomationTraceGetOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.traces.AutomationTraceGetOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.traces.AutomationTraceToggleOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.traces.AutomationTraceToggleOperation\"/>"},{"documentation":"","xml":"&lt;operation class=&quot;org.nuxeo.ecm.automation.core.operations.traces.JsonStackToggleDisplayOperation&quot;/&gt;","id":null,"label":"operation","rawXml":"<operation class=\"org.nuxeo.ecm.automation.core.operations.traces.JsonStackToggleDisplayOperation\"/>"}]}],"componentClass":null,"documentation":"@author Guillaume Renard (grenard@nuxeo.com)\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.automation.coreContrib","documentationHtml":"<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-core/target/classes/OSGI-INF/operations-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.automation.coreContrib\" version=\"1.0\">\n\n  <documentation>@author Guillaume Renard (grenard@nuxeo.com)</documentation>\n\n  <extension target=\"org.nuxeo.ecm.core.operation.OperationServiceComponent\"\n             point=\"operations\">\n\n    <!-- register built-in operations -->\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.FetchContextDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.FetchContextBlob\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.SetVar\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PushDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PushDocumentList\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PopDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PopDocumentList\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.SetInputAsVar\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreDocumentInput\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreDocumentsInput\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreBlobInput\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreBlobsInput\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RunScript\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RestoreDocumentInputFromScript\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.RestoreDocumentsInputFromScript\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.RestoreBlobInputFromScript\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.RestoreBlobsInputFromScript\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.execution.RunOperation\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.execution.RunOperationOnList\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.execution.RunInNewTransaction\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.execution.RunDocumentChain\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.execution.RunFileChain\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.CopyDocument\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.CreateDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.CreateVersion\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.CheckInDocument\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.CheckOutDocument\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.RestoreVersion\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.DeleteDocument\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.EmptyTrash\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.TrashDocument\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.UntrashDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.FetchDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.LockDocument\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.FetchByProperty\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.FilterDocuments\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.UnlockDocument\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.GetDocumentChildren\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.GetDocumentChild\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.GetDocumentParent\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.GetLastDocumentVersion\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.GetDocumentVersions\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.MoveDocument\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.ReloadDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.SaveDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.execution.SaveSession\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.SetDocumentLifeCycle\">\n      <widgets>\n        <widget name=\"value\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">Transition</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">lifecycle</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>value</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.SetDocumentACE\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.AddPermission\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.ReplacePermission\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.RemovePermission\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.BlockPermissionInheritance\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.document.UnblockPermissionInheritance\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveDocumentACL\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.AddFacet\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveFacet\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.AddItemToListProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveItemFromListProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.CopySchema\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.ResetSchema\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.SetDocumentProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveProxies\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.UpdateDocument\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.OrderDocument\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.PublishDocument\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.MultiPublishDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.GetDocumentBlob\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.GetDocumentBlobs\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.blob.GetAllDocumentBlobs\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.SetDocumentBlob\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.BulkDownload\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.PostBlob\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.BlobToPDF\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.ConcatenatePDFs\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.ConvertBlob\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.RunConverter\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.BlobToFile\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.CreateBlob\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.CreateZip\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.AttachBlob\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.blob.SetBlobFileName\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveDocumentBlob\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PushBlob\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PushBlobList\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PopBlob\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PopBlobList\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PullDocument\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PullDocumentList\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PullBlob\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.stack.PullBlobList\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.events.operations.FireEvent\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.RunInputScript\"/>\n\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.rendering.operations.RenderDocument\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.rendering.operations.RenderDocumentFeed\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.login.LoginAs\"/>\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.login.Logout\"/>\n\n    <operation class=\"org.nuxeo.ecm.automation.core.operations.LogOperation\"/>\n\n    <!-- From presales toolkit -->\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.AddEntryToMultiValuedProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.CreateProxyLive\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.GetLiveDocument\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.document.RemoveEntryOfMultiValuedProperty\">\n      <widgets>\n        <widget name=\"xpath\" type=\"codearea\">\n          <labels>\n            <label mode=\"any\">XPath</label>\n          </labels>\n          <properties mode=\"any\">\n            <property name=\"language\">xpath</property>\n            <property name=\"width\">100%</property>\n            <property name=\"height\">100%</property>\n          </properties>\n          <fields>\n            <field>xpath</field>\n          </fields>\n        </widget>\n      </widgets>\n    </operation>\n\n    <!-- Business Operations -->\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.business.BusinessCreateOperation\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.business.BusinessUpdateOperation\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.business.BusinessFetchOperation\"/>\n\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.execution.RunOperationOnListInNewTransaction\"/>\n\n    <!-- Trace related operations -->\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.traces.AutomationTraceGetOperation\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.traces.AutomationTraceToggleOperation\"/>\n    <operation\n        class=\"org.nuxeo.ecm.automation.core.operations.traces.JsonStackToggleDisplayOperation\"/>\n\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.automation.marshallers","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.automation.marshallers--marshallers","extensionPoint":"org.nuxeo.ecm.core.io.MarshallerRegistry--marshallers","documentation":null,"xml":"<extension point=\"marshallers\" target=\"org.nuxeo.ecm.core.io.MarshallerRegistry\">\n    <!-- blob reader -->\n    <register class=\"org.nuxeo.ecm.automation.core.io.BlobJsonReader\" enable=\"true\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.io.MarshallerRegistry","rawName":"service:org.nuxeo.ecm.core.io.MarshallerRegistry"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.automation.marshallers/Contributions/org.nuxeo.ecm.core.automation.marshallers--marshallers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.automation.core.io.BlobJsonReader&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.automation.core.io.BlobJsonReader\" enable=\"true\"/>"}]}],"componentClass":null,"documentation":"\n    Core IO registered marshallers set.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.automation.marshallers","documentationHtml":"<p/>\nCore IO registered marshallers set.\n<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-core/target/classes/OSGI-INF/marshallers-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.automation.marshallers\" version=\"1.0.0\">\n  <documentation>\n    Core IO registered marshallers set.\n  </documentation>\n  <extension target=\"org.nuxeo.ecm.core.io.MarshallerRegistry\" point=\"marshallers\">\n    <!-- blob reader -->\n    <register class=\"org.nuxeo.ecm.automation.core.io.BlobJsonReader\" enable=\"true\" />\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.operation.OperationServiceComponent","extensionPoints":[{"@type":"NXExtensionPoint","name":"chains","descriptors":["org.nuxeo.ecm.automation.core.OperationChainContribution"],"documentation":"Operation Chain registration\n","id":"org.nuxeo.ecm.core.operation.OperationServiceComponent--chains","version":"11.1-SNAPSHOT","label":"chains (org.nuxeo.ecm.core.operation.OperationServiceComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.operation.OperationServiceComponent/ExtensionPoints/org.nuxeo.ecm.core.operation.OperationServiceComponent--chains","documentationHtml":"<p/>\nOperation Chain registration","componentId":"org.nuxeo.ecm.core.operation.OperationServiceComponent"},{"@type":"NXExtensionPoint","name":"contextHelpers","descriptors":["org.nuxeo.ecm.automation.context.ContextHelperDescriptor"],"documentation":"\n      @since 7.3\n      @author Vladimir Pasquier (vpasquier@nuxeo.com)\n      Context helper functions contribution.\n      Example:\n      <code>\n    <contextHelper\n        class=\"org.nuxeo.ecm.automation.features.PlatformFunctions\" id=\"platformFunctions\"/>\n</code>\n","id":"org.nuxeo.ecm.core.operation.OperationServiceComponent--contextHelpers","version":"11.1-SNAPSHOT","label":"contextHelpers (org.nuxeo.ecm.core.operation.OperationServiceComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.operation.OperationServiceComponent/ExtensionPoints/org.nuxeo.ecm.core.operation.OperationServiceComponent--contextHelpers","documentationHtml":"<p/>\n@since 7.3\n<p/>\nContext helper functions contribution.\nExample:\n<p/><pre><code>    &lt;contextHelper\n        class=\"org.nuxeo.ecm.automation.features.PlatformFunctions\" id=\"platformFunctions\"/>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.core.operation.OperationServiceComponent"},{"@type":"NXExtensionPoint","name":"operations","descriptors":["org.nuxeo.ecm.automation.core.OperationContribution"],"documentation":"Operation registration\n","id":"org.nuxeo.ecm.core.operation.OperationServiceComponent--operations","version":"11.1-SNAPSHOT","label":"operations (org.nuxeo.ecm.core.operation.OperationServiceComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.operation.OperationServiceComponent/ExtensionPoints/org.nuxeo.ecm.core.operation.OperationServiceComponent--operations","documentationHtml":"<p/>\nOperation registration","componentId":"org.nuxeo.ecm.core.operation.OperationServiceComponent"},{"@type":"NXExtensionPoint","name":"chainException","descriptors":["org.nuxeo.ecm.automation.core.ChainExceptionDescriptor"],"documentation":"\n      @since 5.7.3\n      @author Vladimir Pasquier (vpasquier@nuxeo.com)\n\n      Chain Exception registration.\n      Chain exception provides mean, during an Automation execution, to catch for a given chain, exception and to run\n      specific chain/operation. Filter condition (filterException extension point), order (priority) and rollback\n      options are available.\n\n      Example of chain exception:\n\n      <code>\n    <catchChain id=\"catchChainA\" onChainId=\"contributedchain\">\n        <run chainId=\"chainException\" filterId=\"filterA\" priority=\"0\" rollBack=\"false\"/>\n        <run chainId=\"chainException\" filterId=\"filterA\" priority=\"0\" rollBack=\"false\"/>\n        <run chainId=\"chainException\" filterId=\"filterB\" priority=\"10\" rollBack=\"true\"/>\n    </catchChain>\n</code>\n","id":"org.nuxeo.ecm.core.operation.OperationServiceComponent--chainException","version":"11.1-SNAPSHOT","label":"chainException (org.nuxeo.ecm.core.operation.OperationServiceComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.operation.OperationServiceComponent/ExtensionPoints/org.nuxeo.ecm.core.operation.OperationServiceComponent--chainException","documentationHtml":"<p/>\n@since 5.7.3\n<p/>\nChain Exception registration.\nChain exception provides mean, during an Automation execution, to catch for a given chain, exception and to run\nspecific chain/operation. Filter condition (filterException extension point), order (priority) and rollback\noptions are available.\n<p/>\nExample of chain exception:\n<p/>\n<pre><code>    &lt;catchChain id=\"catchChainA\" onChainId=\"contributedchain\">\n        &lt;run chainId=\"chainException\" filterId=\"filterA\" priority=\"0\" rollBack=\"false\"/>\n        &lt;run chainId=\"chainException\" filterId=\"filterA\" priority=\"0\" rollBack=\"false\"/>\n        &lt;run chainId=\"chainException\" filterId=\"filterB\" priority=\"10\" rollBack=\"true\"/>\n    &lt;/catchChain>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.core.operation.OperationServiceComponent"},{"@type":"NXExtensionPoint","name":"event-handlers","descriptors":["org.nuxeo.ecm.automation.core.events.EventHandler"],"documentation":"Core Event Handlers bound to operations\n","id":"org.nuxeo.ecm.core.operation.OperationServiceComponent--event-handlers","version":"11.1-SNAPSHOT","label":"event-handlers (org.nuxeo.ecm.core.operation.OperationServiceComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.operation.OperationServiceComponent/ExtensionPoints/org.nuxeo.ecm.core.operation.OperationServiceComponent--event-handlers","documentationHtml":"<p/>\nCore Event Handlers bound to operations","componentId":"org.nuxeo.ecm.core.operation.OperationServiceComponent"},{"@type":"NXExtensionPoint","name":"adapters","descriptors":["org.nuxeo.ecm.automation.core.TypeAdapterContribution"],"documentation":"Type adapter registration\n","id":"org.nuxeo.ecm.core.operation.OperationServiceComponent--adapters","version":"11.1-SNAPSHOT","label":"adapters (org.nuxeo.ecm.core.operation.OperationServiceComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.operation.OperationServiceComponent/ExtensionPoints/org.nuxeo.ecm.core.operation.OperationServiceComponent--adapters","documentationHtml":"<p/>\nType adapter registration","componentId":"org.nuxeo.ecm.core.operation.OperationServiceComponent"},{"@type":"NXExtensionPoint","name":"automationFilter","descriptors":["org.nuxeo.ecm.automation.core.AutomationFilterDescriptor"],"documentation":"\n      @since 5.7.3\n      @author Vladimir Pasquier (vpasquier@nuxeo.com)\n\n      Automation Filter registration. See one usage of the filter into Chain Exception extension point: chainException.\n\n      Example of Automation filter:\n\n      <code>\n    <filter id=\"filterA\">expr:@{Document['dc:title']=='file'}</filter>\n    <filter id=\"filterB\">expr:@{Document['dc:title']=='document'}</filter>\n</code>\n","id":"org.nuxeo.ecm.core.operation.OperationServiceComponent--automationFilter","version":"11.1-SNAPSHOT","label":"automationFilter (org.nuxeo.ecm.core.operation.OperationServiceComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.operation.OperationServiceComponent/ExtensionPoints/org.nuxeo.ecm.core.operation.OperationServiceComponent--automationFilter","documentationHtml":"<p/>\n@since 5.7.3\n<p/>\nAutomation Filter registration. See one usage of the filter into Chain Exception extension point: chainException.\n<p/>\nExample of Automation filter:\n<p/>\n<pre><code>    &lt;filter id=\"filterA\">expr:@{Document['dc:title']=='file'}&lt;/filter>\n    &lt;filter id=\"filterB\">expr:@{Document['dc:title']=='document'}&lt;/filter>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.core.operation.OperationServiceComponent"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.automation.AutomationService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.operation.OperationServiceComponent/Services/org.nuxeo.ecm.automation.AutomationService","componentId":"org.nuxeo.ecm.core.operation.OperationServiceComponent"},{"@type":"NXService","id":"org.nuxeo.ecm.automation.AutomationAdmin","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.operation.OperationServiceComponent/Services/org.nuxeo.ecm.automation.AutomationAdmin","componentId":"org.nuxeo.ecm.core.operation.OperationServiceComponent"},{"@type":"NXService","id":"org.nuxeo.ecm.automation.core.events.EventHandlerRegistry","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.operation.OperationServiceComponent/Services/org.nuxeo.ecm.automation.core.events.EventHandlerRegistry","componentId":"org.nuxeo.ecm.core.operation.OperationServiceComponent"},{"@type":"NXService","id":"org.nuxeo.ecm.automation.core.trace.TracerFactory","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.operation.OperationServiceComponent/Services/org.nuxeo.ecm.automation.core.trace.TracerFactory","componentId":"org.nuxeo.ecm.core.operation.OperationServiceComponent"},{"@type":"NXService","id":"org.nuxeo.ecm.automation.context.ContextService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.operation.OperationServiceComponent/Services/org.nuxeo.ecm.automation.context.ContextService","componentId":"org.nuxeo.ecm.core.operation.OperationServiceComponent"}],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.operation.OperationServiceComponent--adapters","extensionPoint":"org.nuxeo.ecm.core.operation.OperationServiceComponent--adapters","documentation":null,"xml":"<extension point=\"adapters\" target=\"org.nuxeo.ecm.core.operation.OperationServiceComponent\">\n    <adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToDocRef\" produce=\"org.nuxeo.ecm.core.api.DocumentRef\"/>\n    <adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToDocModel\" produce=\"org.nuxeo.ecm.core.api.DocumentModel\"/>\n    <adapter accept=\"org.nuxeo.ecm.core.api.DocumentModel\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocModelToDocRef\" produce=\"org.nuxeo.ecm.core.api.DocumentRef\"/>\n    <adapter accept=\"org.nuxeo.ecm.core.api.DocumentRef\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocRefToDocModel\" produce=\"org.nuxeo.ecm.core.api.DocumentModel\"/>\n    <adapter accept=\"org.nuxeo.ecm.core.api.DocumentModelList\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocModelListToDocRefList\" produce=\"org.nuxeo.ecm.core.api.DocumentRefList\"/>\n    <adapter accept=\"org.nuxeo.ecm.core.api.DocumentModel\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocModelToDocRefList\" produce=\"org.nuxeo.ecm.core.api.DocumentRefList\"/>\n    <adapter accept=\"org.nuxeo.ecm.core.api.DocumentModel\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocModelToDocModelList\" produce=\"org.nuxeo.ecm.core.api.DocumentModelList\"/>\n    <adapter accept=\"org.nuxeo.ecm.core.api.DocumentRefList\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocRefListToDocModelList\" produce=\"org.nuxeo.ecm.core.api.DocumentModelList\"/>\n    <adapter accept=\"org.nuxeo.ecm.core.api.DocumentRef\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocRefToDocModelList\" produce=\"org.nuxeo.ecm.core.api.DocumentModelList\"/>\n    <adapter accept=\"org.nuxeo.ecm.core.api.DocumentRef\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocRefToDocRefList\" produce=\"org.nuxeo.ecm.core.api.DocumentRefList\"/>\n    <adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToProperties\" produce=\"org.nuxeo.ecm.automation.core.util.Properties\"/>\n    <adapter accept=\"com.fasterxml.jackson.databind.JsonNode\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.JsonNodeToProperties\" produce=\"org.nuxeo.ecm.automation.core.util.Properties\"/>\n    <adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToURL\" produce=\"java.net.URL\"/>\n    <adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToDate\" produce=\"java.util.Date\"/>\n    <adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToCalendar\" produce=\"java.util.Calendar\"/>\n    <adapter accept=\"java.util.Calendar\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.CalendarToDate\" produce=\"java.util.Date\"/>\n    <adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToList\" produce=\"org.nuxeo.ecm.automation.core.util.StringList\"/>\n    <adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToBoolean\" produce=\"java.lang.Boolean\"/>\n    <adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToInteger\" produce=\"java.lang.Integer\"/>\n    <adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToLong\" produce=\"java.lang.Long\"/>\n    <adapter accept=\"java.lang.Integer\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.IntegerToLong\" produce=\"java.lang.Long\"/>\n    <adapter accept=\"java.lang.Long\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.LongToInteger\" produce=\"java.lang.Integer\"/>\n    <adapter accept=\"[Ljava.lang.String;\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.ArrayStringToList\" produce=\"org.nuxeo.ecm.automation.core.util.StringList\"/>\n    <adapter accept=\"java.util.Collection\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.CollectionToStringList\" produce=\"org.nuxeo.ecm.automation.core.util.StringList\"/>\n    <adapter accept=\"com.fasterxml.jackson.databind.node.ObjectNode\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.ObjectNodeToMap\" produce=\"java.util.Map\"/>\n    <adapter accept=\"com.fasterxml.jackson.databind.node.ArrayNode\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.ArrayNodeToList\" produce=\"java.util.List\"/>\n    <adapter accept=\"[Ljava.lang.String;\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.ArrayStringToDocModelList\" produce=\"org.nuxeo.ecm.core.api.DocumentModelList\"/>\n    <adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToDocModelList\" produce=\"org.nuxeo.ecm.core.api.DocumentModelList\"/>\n    <adapter accept=\"java.util.Collection\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.CollectionToDocModelList\" produce=\"org.nuxeo.ecm.core.api.DocumentModelList\"/>\n    <adapter accept=\"java.util.Collection\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.CollectionToBlobList\" produce=\"org.nuxeo.ecm.automation.core.util.BlobList\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.operation.OperationServiceComponent","rawName":"service:org.nuxeo.ecm.core.operation.OperationServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.operation.OperationServiceComponent/Contributions/org.nuxeo.ecm.core.operation.OperationServiceComponent--adapters","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;adapter accept=&quot;java.lang.String&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.StringToDocRef&quot; produce=&quot;org.nuxeo.ecm.core.api.DocumentRef&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToDocRef\" produce=\"org.nuxeo.ecm.core.api.DocumentRef\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;java.lang.String&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.StringToDocModel&quot; produce=&quot;org.nuxeo.ecm.core.api.DocumentModel&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToDocModel\" produce=\"org.nuxeo.ecm.core.api.DocumentModel\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;org.nuxeo.ecm.core.api.DocumentModel&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.DocModelToDocRef&quot; produce=&quot;org.nuxeo.ecm.core.api.DocumentRef&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"org.nuxeo.ecm.core.api.DocumentModel\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocModelToDocRef\" produce=\"org.nuxeo.ecm.core.api.DocumentRef\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;org.nuxeo.ecm.core.api.DocumentRef&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.DocRefToDocModel&quot; produce=&quot;org.nuxeo.ecm.core.api.DocumentModel&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"org.nuxeo.ecm.core.api.DocumentRef\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocRefToDocModel\" produce=\"org.nuxeo.ecm.core.api.DocumentModel\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;org.nuxeo.ecm.core.api.DocumentModelList&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.DocModelListToDocRefList&quot; produce=&quot;org.nuxeo.ecm.core.api.DocumentRefList&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"org.nuxeo.ecm.core.api.DocumentModelList\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocModelListToDocRefList\" produce=\"org.nuxeo.ecm.core.api.DocumentRefList\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;org.nuxeo.ecm.core.api.DocumentModel&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.DocModelToDocRefList&quot; produce=&quot;org.nuxeo.ecm.core.api.DocumentRefList&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"org.nuxeo.ecm.core.api.DocumentModel\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocModelToDocRefList\" produce=\"org.nuxeo.ecm.core.api.DocumentRefList\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;org.nuxeo.ecm.core.api.DocumentModel&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.DocModelToDocModelList&quot; produce=&quot;org.nuxeo.ecm.core.api.DocumentModelList&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"org.nuxeo.ecm.core.api.DocumentModel\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocModelToDocModelList\" produce=\"org.nuxeo.ecm.core.api.DocumentModelList\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;org.nuxeo.ecm.core.api.DocumentRefList&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.DocRefListToDocModelList&quot; produce=&quot;org.nuxeo.ecm.core.api.DocumentModelList&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"org.nuxeo.ecm.core.api.DocumentRefList\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocRefListToDocModelList\" produce=\"org.nuxeo.ecm.core.api.DocumentModelList\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;org.nuxeo.ecm.core.api.DocumentRef&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.DocRefToDocModelList&quot; produce=&quot;org.nuxeo.ecm.core.api.DocumentModelList&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"org.nuxeo.ecm.core.api.DocumentRef\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocRefToDocModelList\" produce=\"org.nuxeo.ecm.core.api.DocumentModelList\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;org.nuxeo.ecm.core.api.DocumentRef&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.DocRefToDocRefList&quot; produce=&quot;org.nuxeo.ecm.core.api.DocumentRefList&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"org.nuxeo.ecm.core.api.DocumentRef\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocRefToDocRefList\" produce=\"org.nuxeo.ecm.core.api.DocumentRefList\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;java.lang.String&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.StringToProperties&quot; produce=&quot;org.nuxeo.ecm.automation.core.util.Properties&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToProperties\" produce=\"org.nuxeo.ecm.automation.core.util.Properties\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;com.fasterxml.jackson.databind.JsonNode&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.JsonNodeToProperties&quot; produce=&quot;org.nuxeo.ecm.automation.core.util.Properties&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"com.fasterxml.jackson.databind.JsonNode\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.JsonNodeToProperties\" produce=\"org.nuxeo.ecm.automation.core.util.Properties\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;java.lang.String&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.StringToURL&quot; produce=&quot;java.net.URL&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToURL\" produce=\"java.net.URL\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;java.lang.String&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.StringToDate&quot; produce=&quot;java.util.Date&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToDate\" produce=\"java.util.Date\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;java.lang.String&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.StringToCalendar&quot; produce=&quot;java.util.Calendar&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToCalendar\" produce=\"java.util.Calendar\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;java.util.Calendar&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.CalendarToDate&quot; produce=&quot;java.util.Date&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.util.Calendar\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.CalendarToDate\" produce=\"java.util.Date\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;java.lang.String&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.StringToList&quot; produce=&quot;org.nuxeo.ecm.automation.core.util.StringList&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToList\" produce=\"org.nuxeo.ecm.automation.core.util.StringList\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;java.lang.String&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.StringToBoolean&quot; produce=&quot;java.lang.Boolean&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToBoolean\" produce=\"java.lang.Boolean\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;java.lang.String&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.StringToInteger&quot; produce=&quot;java.lang.Integer&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToInteger\" produce=\"java.lang.Integer\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;java.lang.String&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.StringToLong&quot; produce=&quot;java.lang.Long&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToLong\" produce=\"java.lang.Long\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;java.lang.Integer&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.IntegerToLong&quot; produce=&quot;java.lang.Long&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.lang.Integer\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.IntegerToLong\" produce=\"java.lang.Long\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;java.lang.Long&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.LongToInteger&quot; produce=&quot;java.lang.Integer&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.lang.Long\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.LongToInteger\" produce=\"java.lang.Integer\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;[Ljava.lang.String;&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.ArrayStringToList&quot; produce=&quot;org.nuxeo.ecm.automation.core.util.StringList&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"[Ljava.lang.String;\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.ArrayStringToList\" produce=\"org.nuxeo.ecm.automation.core.util.StringList\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;java.util.Collection&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.CollectionToStringList&quot; produce=&quot;org.nuxeo.ecm.automation.core.util.StringList&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.util.Collection\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.CollectionToStringList\" produce=\"org.nuxeo.ecm.automation.core.util.StringList\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;com.fasterxml.jackson.databind.node.ObjectNode&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.ObjectNodeToMap&quot; produce=&quot;java.util.Map&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"com.fasterxml.jackson.databind.node.ObjectNode\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.ObjectNodeToMap\" produce=\"java.util.Map\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;com.fasterxml.jackson.databind.node.ArrayNode&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.ArrayNodeToList&quot; produce=&quot;java.util.List&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"com.fasterxml.jackson.databind.node.ArrayNode\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.ArrayNodeToList\" produce=\"java.util.List\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;[Ljava.lang.String;&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.ArrayStringToDocModelList&quot; produce=&quot;org.nuxeo.ecm.core.api.DocumentModelList&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"[Ljava.lang.String;\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.ArrayStringToDocModelList\" produce=\"org.nuxeo.ecm.core.api.DocumentModelList\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;java.lang.String&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.StringToDocModelList&quot; produce=&quot;org.nuxeo.ecm.core.api.DocumentModelList&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.lang.String\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToDocModelList\" produce=\"org.nuxeo.ecm.core.api.DocumentModelList\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;java.util.Collection&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.CollectionToDocModelList&quot; produce=&quot;org.nuxeo.ecm.core.api.DocumentModelList&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.util.Collection\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.CollectionToDocModelList\" produce=\"org.nuxeo.ecm.core.api.DocumentModelList\"/>"},{"documentation":"","xml":"&lt;adapter accept=&quot;java.util.Collection&quot; class=&quot;org.nuxeo.ecm.automation.core.impl.adapters.CollectionToBlobList&quot; produce=&quot;org.nuxeo.ecm.automation.core.util.BlobList&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter accept=\"java.util.Collection\" class=\"org.nuxeo.ecm.automation.core.impl.adapters.CollectionToBlobList\" produce=\"org.nuxeo.ecm.automation.core.util.BlobList\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.operation.OperationServiceComponent--listener","extensionPoint":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentation":null,"xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n\n    <listener async=\"false\" class=\"org.nuxeo.ecm.automation.core.events.OperationEventListener\" name=\"opchainlistener\" postCommit=\"false\" priority=\"200\">\n    </listener>\n\n    <listener async=\"true\" class=\"org.nuxeo.ecm.automation.core.events.PostCommitOperationEventListener\" name=\"opchainpclistener\" postCommit=\"true\" priority=\"200\">\n    </listener>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.event.EventServiceComponent","rawName":"service:org.nuxeo.ecm.core.event.EventServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.operation.OperationServiceComponent/Contributions/org.nuxeo.ecm.core.operation.OperationServiceComponent--listener","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;listener async=&quot;false&quot; class=&quot;org.nuxeo.ecm.automation.core.events.OperationEventListener&quot; name=&quot;opchainlistener&quot; postCommit=&quot;false&quot; priority=&quot;200&quot;&gt;\n    &lt;/listener&gt;","id":"opchainlistener","label":"listener opchainlistener","rawXml":"<listener async=\"false\" class=\"org.nuxeo.ecm.automation.core.events.OperationEventListener\" name=\"opchainlistener\" postCommit=\"false\" priority=\"200\">\n    </listener>"},{"documentation":"","xml":"&lt;listener async=&quot;true&quot; class=&quot;org.nuxeo.ecm.automation.core.events.PostCommitOperationEventListener&quot; name=&quot;opchainpclistener&quot; postCommit=&quot;true&quot; priority=&quot;200&quot;&gt;\n    &lt;/listener&gt;","id":"opchainpclistener","label":"listener opchainpclistener","rawXml":"<listener async=\"true\" class=\"org.nuxeo.ecm.automation.core.events.PostCommitOperationEventListener\" name=\"opchainpclistener\" postCommit=\"true\" priority=\"200\">\n    </listener>"}]}],"componentClass":"org.nuxeo.ecm.automation.core.AutomationComponent","documentation":"@author Bogdan Stefanescu (bs@nuxeo.com)\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.operation.OperationServiceComponent","documentationHtml":"<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-core/target/classes/OSGI-INF/AutomationService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.operation.OperationServiceComponent\"\n  version=\"1.0\">\n  <!-- TODO: cannot rename this component since studio is using the old name - fix this\n    <component name=\"org.nuxeo.ecm.automation.core.AutomationComponent\" version=\"1.0\">\n  -->\n\n  <documentation>@author Bogdan Stefanescu (bs@nuxeo.com)</documentation>\n\n  <implementation class=\"org.nuxeo.ecm.automation.core.AutomationComponent\" />\n\n  <require>org.nuxeo.runtime.management.ServerLocator</require>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.automation.AutomationService\" />\n    <provide interface=\"org.nuxeo.ecm.automation.AutomationAdmin\" />\n    <provide\n            interface=\"org.nuxeo.ecm.automation.core.events.EventHandlerRegistry\" />\n    <provide interface=\"org.nuxeo.ecm.automation.core.trace.TracerFactory\" />\n    <provide interface=\"org.nuxeo.ecm.automation.context.ContextService\" />\n  </service>\n\n  <extension-point name=\"operations\">\n    <documentation>Operation registration</documentation>\n    <object class=\"org.nuxeo.ecm.automation.core.OperationContribution\" />\n  </extension-point>\n\n  <extension-point name=\"adapters\">\n    <documentation>Type adapter registration</documentation>\n    <object class=\"org.nuxeo.ecm.automation.core.TypeAdapterContribution\" />\n  </extension-point>\n\n  <extension-point name=\"chains\">\n    <documentation>Operation Chain registration</documentation>\n    <object class=\"org.nuxeo.ecm.automation.core.OperationChainContribution\" />\n  </extension-point>\n\n  <extension-point name=\"chainException\">\n    <documentation>\n      @since 5.7.3\n      @author Vladimir Pasquier (vpasquier@nuxeo.com)\n\n      Chain Exception registration.\n      Chain exception provides mean, during an Automation execution, to catch for a given chain, exception and to run\n      specific chain/operation. Filter condition (filterException extension point), order (priority) and rollback\n      options are available.\n\n      Example of chain exception:\n\n      <code>\n        <catchChain id=\"catchChainA\" onChainId=\"contributedchain\">\n          <run chainId=\"chainException\" priority=\"0\" rollBack=\"false\" filterId=\"filterA\"/>\n          <run chainId=\"chainException\" priority=\"0\" rollBack=\"false\" filterId=\"filterA\"/>\n          <run chainId=\"chainException\" priority=\"10\" rollBack=\"true\" filterId=\"filterB\"/>\n        </catchChain>\n      </code>\n    </documentation>\n    <object class=\"org.nuxeo.ecm.automation.core.ChainExceptionDescriptor\"/>\n  </extension-point>\n\n  <extension-point name=\"automationFilter\">\n    <documentation>\n      @since 5.7.3\n      @author Vladimir Pasquier (vpasquier@nuxeo.com)\n\n      Automation Filter registration. See one usage of the filter into Chain Exception extension point: chainException.\n\n      Example of Automation filter:\n\n      <code>\n        <filter id=\"filterA\">expr:@{Document['dc:title']=='file'}</filter>\n        <filter id=\"filterB\">expr:@{Document['dc:title']=='document'}</filter>\n      </code>\n    </documentation>\n    <object class=\"org.nuxeo.ecm.automation.core.AutomationFilterDescriptor\"/>\n  </extension-point>\n\n  <extension-point name=\"event-handlers\">\n    <documentation>Core Event Handlers bound to operations</documentation>\n    <object class=\"org.nuxeo.ecm.automation.core.events.EventHandler\" />\n  </extension-point>\n\n  <extension-point name=\"contextHelpers\">\n    <documentation>\n      @since 7.3\n      @author Vladimir Pasquier (vpasquier@nuxeo.com)\n      Context helper functions contribution.\n      Example:\n      <code>\n        <contextHelper id=\"platformFunctions\" class=\"org.nuxeo.ecm.automation.features.PlatformFunctions\"/>\n      </code>\n    </documentation>\n    <object class=\"org.nuxeo.ecm.automation.context.ContextHelperDescriptor\"/>\n  </extension-point>\n\n  <extension target=\"org.nuxeo.ecm.core.operation.OperationServiceComponent\"\n    point=\"adapters\">\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToDocRef\"\n      accept=\"java.lang.String\" produce=\"org.nuxeo.ecm.core.api.DocumentRef\" />\n    <adapter\n      class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToDocModel\"\n      accept=\"java.lang.String\" produce=\"org.nuxeo.ecm.core.api.DocumentModel\" />\n    <adapter\n      class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocModelToDocRef\"\n      accept=\"org.nuxeo.ecm.core.api.DocumentModel\"\n      produce=\"org.nuxeo.ecm.core.api.DocumentRef\" />\n    <adapter\n      class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocRefToDocModel\"\n      accept=\"org.nuxeo.ecm.core.api.DocumentRef\"\n      produce=\"org.nuxeo.ecm.core.api.DocumentModel\" />\n    <adapter\n      class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocModelListToDocRefList\"\n      accept=\"org.nuxeo.ecm.core.api.DocumentModelList\"\n      produce=\"org.nuxeo.ecm.core.api.DocumentRefList\" />\n    <adapter\n      class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocModelToDocRefList\"\n      accept=\"org.nuxeo.ecm.core.api.DocumentModel\"\n      produce=\"org.nuxeo.ecm.core.api.DocumentRefList\" />\n    <adapter\n      class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocModelToDocModelList\"\n      accept=\"org.nuxeo.ecm.core.api.DocumentModel\"\n      produce=\"org.nuxeo.ecm.core.api.DocumentModelList\" />\n    <adapter\n      class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocRefListToDocModelList\"\n      accept=\"org.nuxeo.ecm.core.api.DocumentRefList\"\n      produce=\"org.nuxeo.ecm.core.api.DocumentModelList\" />\n    <adapter\n      class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocRefToDocModelList\"\n      accept=\"org.nuxeo.ecm.core.api.DocumentRef\"\n      produce=\"org.nuxeo.ecm.core.api.DocumentModelList\" />\n    <adapter\n      class=\"org.nuxeo.ecm.automation.core.impl.adapters.DocRefToDocRefList\"\n      accept=\"org.nuxeo.ecm.core.api.DocumentRef\"\n      produce=\"org.nuxeo.ecm.core.api.DocumentRefList\" />\n    <adapter\n      class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToProperties\"\n      accept=\"java.lang.String\"\n      produce=\"org.nuxeo.ecm.automation.core.util.Properties\" />\n    <adapter\n      class=\"org.nuxeo.ecm.automation.core.impl.adapters.JsonNodeToProperties\"\n      accept=\"com.fasterxml.jackson.databind.JsonNode\"\n      produce=\"org.nuxeo.ecm.automation.core.util.Properties\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToURL\"\n      accept=\"java.lang.String\" produce=\"java.net.URL\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToDate\"\n      accept=\"java.lang.String\" produce=\"java.util.Date\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToCalendar\"\n      accept=\"java.lang.String\" produce=\"java.util.Calendar\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.CalendarToDate\"\n      accept=\"java.util.Calendar\" produce=\"java.util.Date\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToList\"\n      accept=\"java.lang.String\"\n      produce=\"org.nuxeo.ecm.automation.core.util.StringList\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToBoolean\"\n      accept=\"java.lang.String\"\n      produce=\"java.lang.Boolean\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToInteger\"\n      accept=\"java.lang.String\"\n      produce=\"java.lang.Integer\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToLong\"\n      accept=\"java.lang.String\"\n      produce=\"java.lang.Long\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.IntegerToLong\"\n      accept=\"java.lang.Integer\"\n      produce=\"java.lang.Long\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.LongToInteger\"\n      accept=\"java.lang.Long\"\n      produce=\"java.lang.Integer\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.ArrayStringToList\"\n      accept=\"[Ljava.lang.String;\"\n      produce=\"org.nuxeo.ecm.automation.core.util.StringList\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.CollectionToStringList\"\n             accept=\"java.util.Collection\"\n             produce=\"org.nuxeo.ecm.automation.core.util.StringList\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.ObjectNodeToMap\"\n      accept=\"com.fasterxml.jackson.databind.node.ObjectNode\"\n      produce=\"java.util.Map\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.ArrayNodeToList\"\n      accept=\"com.fasterxml.jackson.databind.node.ArrayNode\"\n      produce=\"java.util.List\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.ArrayStringToDocModelList\"\n             accept=\"[Ljava.lang.String;\"\n             produce=\"org.nuxeo.ecm.core.api.DocumentModelList\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.StringToDocModelList\"\n             accept=\"java.lang.String\"\n             produce=\"org.nuxeo.ecm.core.api.DocumentModelList\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.CollectionToDocModelList\"\n             accept=\"java.util.Collection\"\n             produce=\"org.nuxeo.ecm.core.api.DocumentModelList\" />\n    <adapter class=\"org.nuxeo.ecm.automation.core.impl.adapters.CollectionToBlobList\"\n             accept=\"java.util.Collection\"\n             produce=\"org.nuxeo.ecm.automation.core.util.BlobList\" />\n  </extension>\n\n\n  <extension target=\"org.nuxeo.ecm.core.event.EventServiceComponent\"\n    point=\"listener\">\n\n    <listener name=\"opchainlistener\" async=\"false\" postCommit=\"false\"\n      class=\"org.nuxeo.ecm.automation.core.events.OperationEventListener\"\n      priority=\"200\">\n    </listener>\n\n    <listener name=\"opchainpclistener\" async=\"true\" postCommit=\"true\"\n      class=\"org.nuxeo.ecm.automation.core.events.PostCommitOperationEventListener\"\n      priority=\"200\">\n    </listener>\n\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.automation.core.impl.workmanager","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.automation.core.impl.workmanager--queues","extensionPoint":"org.nuxeo.ecm.core.work.service--queues","documentation":null,"xml":"<extension point=\"queues\" target=\"org.nuxeo.ecm.core.work.service\">\n    <queue id=\"blobs\">\n      <maxThreads>2</maxThreads>\n      <category>blobListZip</category>\n    </queue>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.work.service","rawName":"service:org.nuxeo.ecm.core.work.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.automation.core.impl.workmanager/Contributions/org.nuxeo.ecm.automation.core.impl.workmanager--queues","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;queue id=&quot;blobs&quot;&gt;\n      &lt;maxThreads&gt;2&lt;/maxThreads&gt;\n      &lt;category&gt;blobListZip&lt;/category&gt;\n    &lt;/queue&gt;","id":"blobs","label":"queue blobs","rawXml":"<queue id=\"blobs\">\n      <maxThreads>2</maxThreads>\n      <category>blobListZip</category>\n    </queue>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.automation.core.impl.workmanager","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-core/target/classes/OSGI-INF/workmanager-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.automation.core.impl.workmanager\" version=\"1.0\">\n\n  <extension target=\"org.nuxeo.ecm.core.work.service\" point=\"queues\">\n    <queue id=\"blobs\">\n      <maxThreads>2</maxThreads>\n      <category>blobListZip</category>\n    </queue>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.automation.core.properties","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.automation.core.properties--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n      This contribution is the default contribution for automation properties.\n\n      Here are more details about some of them:\n      <ul>\n    <li>\n        <strong>nuxeo.automation.properties.value.trim</strong>: properties are expected to be of the form \"key=value\". You may wish to trim the potential spaces around value (e.g.: \"key = value\", will result in \"value\" and not \" value\").\n        </li>\n    <li>\n        <strong>nuxeo.automation.export.aliases</strong>: if true, add an operation documentation for each alias of a given operation.\n          Mainly to be backward compatible with old Java Automation client.\n        </li>\n    <li>\n        <strong>nuxeo.automation.allowVirtualUser</strong>: define whether virtual user (non-existent user) is allowed\n          in Nuxeo automation. If allowed, Nuxeo server will not check the user existence during automation execution.\n          Set this property to true if you use Nuxeo computed user or computed group.\n        </li>\n</ul>\n\n\n      @since 8.2\n    \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n\n    <documentation>\n      This contribution is the default contribution for automation properties.\n\n      Here are more details about some of them:\n      <ul>\n        <li>\n          <strong>nuxeo.automation.properties.value.trim</strong>: properties are expected to be of the form \"key=value\". You may wish to trim the potential spaces around value (e.g.: \"key = value\", will result in \"value\" and not \" value\").\n        </li>\n        <li>\n          <strong>nuxeo.automation.export.aliases</strong>: if true, add an operation documentation for each alias of a given operation.\n          Mainly to be backward compatible with old Java Automation client.\n        </li>\n        <li>\n          <strong>nuxeo.automation.allowVirtualUser</strong>: define whether virtual user (non-existent user) is allowed\n          in Nuxeo automation. If allowed, Nuxeo server will not check the user existence during automation execution.\n          Set this property to true if you use Nuxeo computed user or computed group.\n        </li>\n      </ul>\n\n      @since 8.2\n    </documentation>\n\n    <property name=\"nuxeo.automation.properties.value.trim\">false</property>\n\n    <property name=\"nuxeo.automation.export.aliases\">false</property>\n\n    <property name=\"nuxeo.automation.allowVirtualUser\">false</property>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.automation.core.properties/Contributions/org.nuxeo.ecm.core.automation.core.properties--configuration","documentationHtml":"<p/>\nThis contribution is the default contribution for automation properties.\n<p/>\nHere are more details about some of them:\n<ul>\n<li>\n<strong>nuxeo.automation.properties.value.trim</strong>: properties are expected to be of the form \"key=value\". You may wish to trim the potential spaces around value (e.g.: \"key = value\", will result in \"value\" and not \" value\").\n</li>\n<li>\n<strong>nuxeo.automation.export.aliases</strong>: if true, add an operation documentation for each alias of a given operation.\nMainly to be backward compatible with old Java Automation client.\n</li>\n<li>\n<strong>nuxeo.automation.allowVirtualUser</strong>: define whether virtual user (non-existent user) is allowed\nin Nuxeo automation. If allowed, Nuxeo server will not check the user existence during automation execution.\nSet this property to true if you use Nuxeo computed user or computed group.\n</li>\n</ul>\n<p/>\n@since 8.2\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;nuxeo.automation.properties.value.trim&quot;&gt;false&lt;/property&gt;","id":"nuxeo.automation.properties.value.trim","label":"property nuxeo.automation.properties.value.trim","rawXml":"<property name=\"nuxeo.automation.properties.value.trim\">false</property>"},{"documentation":"","xml":"&lt;property name=&quot;nuxeo.automation.export.aliases&quot;&gt;false&lt;/property&gt;","id":"nuxeo.automation.export.aliases","label":"property nuxeo.automation.export.aliases","rawXml":"<property name=\"nuxeo.automation.export.aliases\">false</property>"},{"documentation":"","xml":"&lt;property name=&quot;nuxeo.automation.allowVirtualUser&quot;&gt;false&lt;/property&gt;","id":"nuxeo.automation.allowVirtualUser","label":"property nuxeo.automation.allowVirtualUser","rawXml":"<property name=\"nuxeo.automation.allowVirtualUser\">false</property>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.core/org.nuxeo.ecm.core.automation.core.properties","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-core/target/classes/OSGI-INF/properties-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.automation.core.properties\" version=\"1.0.0\">\n\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n\n    <documentation>\n      This contribution is the default contribution for automation properties.\n\n      Here are more details about some of them:\n      <ul>\n        <li>\n          <strong>nuxeo.automation.properties.value.trim</strong>: properties are expected to be of the form \"key=value\". You may wish to trim the potential spaces around value (e.g.: \"key = value\", will result in \"value\" and not \" value\").\n        </li>\n        <li>\n          <strong>nuxeo.automation.export.aliases</strong>: if true, add an operation documentation for each alias of a given operation.\n          Mainly to be backward compatible with old Java Automation client.\n        </li>\n        <li>\n          <strong>nuxeo.automation.allowVirtualUser</strong>: define whether virtual user (non-existent user) is allowed\n          in Nuxeo automation. If allowed, Nuxeo server will not check the user existence during automation execution.\n          Set this property to true if you use Nuxeo computed user or computed group.\n        </li>\n      </ul>\n\n      @since 8.2\n    </documentation>\n\n    <property name=\"nuxeo.automation.properties.value.trim\">false</property>\n\n    <property name=\"nuxeo.automation.export.aliases\">false</property>\n\n    <property name=\"nuxeo.automation.allowVirtualUser\">false</property>\n\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.platform.commandline.executor","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.platform.commandline.executor.api,\n org.nuxeo.ecm.platform.commandline.executor.service,\n org.nuxeo.ecm.platform.commandline.executor.service.cmdtesters,\n org.nuxeo.ecm.platform.commandline.executor.service.executors\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Category: runtime\nBundle-Localization: plugin\nBundle-Name: Nuxeo CommandLine Executor\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Vendor: Nuxeo\nBundle-Version: 0.0.0.SNAPSHOT\nNuxeo-Component: OSGI-INF/commandline-framework.xml,\n OSGI-INF/commandline-default-contrib.xml\nBundle-ManifestVersion: 2\nImport-Package: javax.annotation;version=\"1.0\",\n org.apache.commons.logging,\n org.nuxeo.common.utils,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.directory;api=split,\n org.nuxeo.osgi,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model\nBundle-SymbolicName: org.nuxeo.ecm.platform.commandline.executor\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-platform-commandline-executor","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform","name":"org.nuxeo.ecm.platform","liveDoc":{},"subGroups":[{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.directory","name":"org.nuxeo.ecm.directory","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.directory","org.nuxeo.ecm.directory.api","org.nuxeo.ecm.directory.sql","org.nuxeo.ecm.directory.types.contrib"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.query","name":"org.nuxeo.ecm.platform.query","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.query.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.usermanager","name":"org.nuxeo.ecm.platform.usermanager","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.usermanager","org.nuxeo.ecm.platform.usermanager.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]}],"bundleIds":["org.nuxeo.apidoc.core","org.nuxeo.apidoc.repo","org.nuxeo.directory.mongodb","org.nuxeo.ecm.actions","org.nuxeo.ecm.platform.api","org.nuxeo.ecm.platform.commandline.executor","org.nuxeo.ecm.platform.content.template","org.nuxeo.ecm.platform.dublincore","org.nuxeo.ecm.platform.forms.layout.export","org.nuxeo.ecm.platform.login","org.nuxeo.ecm.platform.web.common","org.nuxeo.osgi.app"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-platform-commandline-executor/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent","extensionPoints":[{"@type":"NXExtensionPoint","name":"command","descriptors":["org.nuxeo.ecm.platform.commandline.executor.service.CommandLineDescriptor"],"documentation":"\n      Extension point to contribute new commands.\n\n      Available options are:\n      - name: string attribute used as the command identifier.\n\n      - enabled: boolean attribute, command is unavailable if false.\n\n      - commandLine: the command to execute.\n\n      - parameterString: the parameters to pass to the command. Parameters like #{parameter} represents a file. So you\n      can use either a path to a file or a blob. Parameters like %parameters are literals.\n\n      - winParameterString: Same as above but used in windows environments. For instance you have to use double quotes\n      in windows instead of simple quote.\n\n      - winCommand: command to execute specifically for windows. Use commandLine is WinCommand is null;\n\n      @since 8.4\n      - testParameterString: the parameters to pass to the CommandTester. The CommandTester will run the command with\n      these params\n\n      @since 8.4\n      - winTestParameterString: same as above but used in windows environments.\n\n      - tester:  name of the CommandTester. The CommandTester defined in commandTester extension point. Default is\n      DefaultCommandTester, which looks if the command is available.\n\n      - readOutput: Boolean, default is true. If false, command output is never read.\n\n      - installationDirective: a String that is returned instead of the usual output when the command isn't available.\n\n      CommandLine contribution example:\n      <code>\n    <command enabled=\"true\" name=\"myCommand\">\n        <commandLine>commandName</commandLine>\n        <parameterString> -any -parameters '%specific' %parameters #{blobOrPath}</parameterString>\n        <winParameterString> -any -parameters \"%specific\" %parameters \" #{blobOrPath}</winParameterString>\n        <testParameterString> -any -parameters</testParameterString>\n        <winTestParameterString> -any -specific -windows -parameters</winTestParameterString>\n        <installationDirective>You need to install commandName.</installationDirective>\n    </command>\n</code>\n\n\n      @author Thierry Delprat (td@nuxeo.com)\n    \n","id":"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent--command","version":"11.1-SNAPSHOT","label":"command (org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.commandline.executor/org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent/ExtensionPoints/org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent--command","documentationHtml":"<p/>\nExtension point to contribute new commands.\n<p/>\nAvailable options are:\n- name: string attribute used as the command identifier.\n<p/>\n- enabled: boolean attribute, command is unavailable if false.\n<p/>\n- commandLine: the command to execute.\n<p/>\n- parameterString: the parameters to pass to the command. Parameters like #{parameter} represents a file. So you\ncan use either a path to a file or a blob. Parameters like %parameters are literals.\n<p/>\n- winParameterString: Same as above but used in windows environments. For instance you have to use double quotes\nin windows instead of simple quote.\n<p/>\n- winCommand: command to execute specifically for windows. Use commandLine is WinCommand is null;\n<p/>\n@since 8.4\n- testParameterString: the parameters to pass to the CommandTester. The CommandTester will run the command with\nthese params\n<p/>\n@since 8.4\n- winTestParameterString: same as above but used in windows environments.\n<p/>\n- tester:  name of the CommandTester. The CommandTester defined in commandTester extension point. Default is\nDefaultCommandTester, which looks if the command is available.\n<p/>\n- readOutput: Boolean, default is true. If false, command output is never read.\n<p/>\n- installationDirective: a String that is returned instead of the usual output when the command isn't available.\n<p/>\nCommandLine contribution example:\n<p/><pre><code>    &lt;command enabled=\"true\" name=\"myCommand\">\n        &lt;commandLine>commandName&lt;/commandLine>\n        &lt;parameterString> -any -parameters '%specific' %parameters #{blobOrPath}&lt;/parameterString>\n        &lt;winParameterString> -any -parameters \"%specific\" %parameters \" #{blobOrPath}&lt;/winParameterString>\n        &lt;testParameterString> -any -parameters&lt;/testParameterString>\n        &lt;winTestParameterString> -any -specific -windows -parameters&lt;/winTestParameterString>\n        &lt;installationDirective>You need to install commandName.&lt;/installationDirective>\n    &lt;/command>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent"},{"@type":"NXExtensionPoint","name":"commandTester","descriptors":["org.nuxeo.ecm.platform.commandline.executor.service.CommandTesterDescriptor"],"documentation":"\n      Extension point to contribute new command testers.\n      It's a class that provides a way to test if a command is installed on the target server OS.\n\n      Available options are:\n      -name: the name of the commandTester.\n\n      -class: the class\n      implementing CommandTester interface.\n\n      Command tester contribution example:\n      <code>\n    <commandTester\n        class=\"org.nuxeo.ecm.platform.commandline.executor.service.cmdtesters.DefaultCommandTester\" name=\"DefaultCommandTester\"/>\n</code>\n\n\n      @author Thierry Delprat (td@nuxeo.com)\n    \n","id":"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent--commandTester","version":"11.1-SNAPSHOT","label":"commandTester (org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.commandline.executor/org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent/ExtensionPoints/org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent--commandTester","documentationHtml":"<p/>\nExtension point to contribute new command testers.\nIt's a class that provides a way to test if a command is installed on the target server OS.\n<p/>\nAvailable options are:\n-name: the name of the commandTester.\n<p/>\n-class: the class\nimplementing CommandTester interface.\n<p/>\nCommand tester contribution example:\n<p/><pre><code>    &lt;commandTester\n        class=\"org.nuxeo.ecm.platform.commandline.executor.service.cmdtesters.DefaultCommandTester\" name=\"DefaultCommandTester\"/>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent"},{"@type":"NXExtensionPoint","name":"environment","descriptors":["org.nuxeo.ecm.platform.commandline.executor.service.EnvironmentDescriptor"],"documentation":"\n      Extension point to contribute environment configuration.\n\n      Available options are:\n      - name: comma-separated string attribute used as the environment parameters scope.\n      It can be empty to set environment parameters common to all commands, equal to a command name to set parameters\n      for that command only, or equal to a command line to set parameters common to all commands using that command line.\n      You can associate multiple commands using a comma as separator.\n\n      - workingDirectory: the Folder when command should be executed. Default is the system temporary folder.\n\n      - parameters/parameter\n\n      @author Thierry Delprat (td@nuxeo.com)\n\n      CommandLine contribution\n      example:\n      <code>\n    <environment name=\"aCommandName,aCommandLine\">\n        <parameters>\n            <parameter name=\"SOME_VAR\">some value</parameter>\n        </parameters>\n    </environment>\n</code>\n","id":"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent--environment","version":"11.1-SNAPSHOT","label":"environment (org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.commandline.executor/org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent/ExtensionPoints/org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent--environment","documentationHtml":"<p/>\nExtension point to contribute environment configuration.\n<p/>\nAvailable options are:\n- name: comma-separated string attribute used as the environment parameters scope.\nIt can be empty to set environment parameters common to all commands, equal to a command name to set parameters\nfor that command only, or equal to a command line to set parameters common to all commands using that command line.\nYou can associate multiple commands using a comma as separator.\n<p/>\n- workingDirectory: the Folder when command should be executed. Default is the system temporary folder.\n<p/>\n- parameters/parameter\n<p/>\nCommandLine contribution\nexample:\n<p/><pre><code>    &lt;environment name=\"aCommandName,aCommandLine\">\n        &lt;parameters>\n            &lt;parameter name=\"SOME_VAR\">some value&lt;/parameter>\n        &lt;/parameters>\n    &lt;/environment>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.platform.commandline.executor.api.CommandLineExecutorService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.commandline.executor/org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent/Services/org.nuxeo.ecm.platform.commandline.executor.api.CommandLineExecutorService","componentId":"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent"}],"extensions":[],"componentClass":"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent","documentation":"\n    The CommandLineExecutor component let you define command line call using the command extension point.\n    You can call those commands with your own arguments like blobs or properties. The result is available\n    in the ExecResult object.\n    @author Thierry Delprat (td@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.commandline.executor/org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent","documentationHtml":"<p/>\nThe CommandLineExecutor component let you define command line call using the command extension point.\nYou can call those commands with your own arguments like blobs or properties. The result is available\nin the ExecResult object.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-platform-commandline-executor/bin/main/OSGI-INF/commandline-framework.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent\">\n  <implementation class=\"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent\" />\n\n  <documentation>\n    The CommandLineExecutor component let you define command line call using the command extension point.\n    You can call those commands with your own arguments like blobs or properties. The result is available\n    in the ExecResult object.\n    @author Thierry Delprat (td@nuxeo.com)\n  </documentation>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.platform.commandline.executor.api.CommandLineExecutorService\" />\n  </service>\n\n  <extension-point name=\"environment\">\n    <documentation>\n      Extension point to contribute environment configuration.\n\n      Available options are:\n      - name: comma-separated string attribute used as the environment parameters scope.\n      It can be empty to set environment parameters common to all commands, equal to a command name to set parameters\n      for that command only, or equal to a command line to set parameters common to all commands using that command line.\n      You can associate multiple commands using a comma as separator.\n\n      - workingDirectory: the Folder when command should be executed. Default is the system temporary folder.\n\n      - parameters/parameter\n\n      @author Thierry Delprat (td@nuxeo.com)\n\n      CommandLine contribution\n      example:\n      <code>\n        <environment name=\"aCommandName,aCommandLine\">\n          <parameters>\n            <parameter name=\"SOME_VAR\">some value</parameter>\n          </parameters>\n        </environment>\n      </code>\n    </documentation>\n    <object class=\"org.nuxeo.ecm.platform.commandline.executor.service.EnvironmentDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"command\">\n    <documentation>\n      Extension point to contribute new commands.\n\n      Available options are:\n      - name: string attribute used as the command identifier.\n\n      - enabled: boolean attribute, command is unavailable if false.\n\n      - commandLine: the command to execute.\n\n      - parameterString: the parameters to pass to the command. Parameters like #{parameter} represents a file. So you\n      can use either a path to a file or a blob. Parameters like %parameters are literals.\n\n      - winParameterString: Same as above but used in windows environments. For instance you have to use double quotes\n      in windows instead of simple quote.\n\n      - winCommand: command to execute specifically for windows. Use commandLine is WinCommand is null;\n\n      @since 8.4\n      - testParameterString: the parameters to pass to the CommandTester. The CommandTester will run the command with\n      these params\n\n      @since 8.4\n      - winTestParameterString: same as above but used in windows environments.\n\n      - tester:  name of the CommandTester. The CommandTester defined in commandTester extension point. Default is\n      DefaultCommandTester, which looks if the command is available.\n\n      - readOutput: Boolean, default is true. If false, command output is never read.\n\n      - installationDirective: a String that is returned instead of the usual output when the command isn't available.\n\n      CommandLine contribution example:\n      <code>\n        <command name=\"myCommand\" enabled=\"true\">\n          <commandLine>commandName</commandLine>\n          <parameterString> -any -parameters '%specific' %parameters #{blobOrPath}</parameterString>\n          <winParameterString> -any -parameters \"%specific\" %parameters \" #{blobOrPath}</winParameterString>\n          <testParameterString> -any -parameters</testParameterString>\n          <winTestParameterString> -any -specific -windows -parameters</winTestParameterString>\n          <installationDirective>You need to install commandName.</installationDirective>\n        </command>\n      </code>\n\n      @author Thierry Delprat (td@nuxeo.com)\n    </documentation>\n    <object class=\"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"commandTester\">\n    <documentation>\n      Extension point to contribute new command testers.\n      It's a class that provides a way to test if a command is installed on the target server OS.\n\n      Available options are:\n      -name: the name of the commandTester.\n\n      -class: the class\n      implementing CommandTester interface.\n\n      Command tester contribution example:\n      <code>\n        <commandTester name=\"DefaultCommandTester\"\n          class=\"org.nuxeo.ecm.platform.commandline.executor.service.cmdtesters.DefaultCommandTester\">\n        </commandTester>\n      </code>\n\n      @author Thierry Delprat (td@nuxeo.com)\n    </documentation>\n    <object class=\"org.nuxeo.ecm.platform.commandline.executor.service.CommandTesterDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.commandline.executor.service.defaultContrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.commandline.executor.service.defaultContrib--environment","extensionPoint":"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent--environment","documentation":"Default environment parameters.\n","xml":"<extension point=\"environment\" target=\"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent\">\n    <documentation>Default environment parameters.</documentation>\n    <environment>\n      <parameters>\n        <!-- TMPDIR is the canonical Unix environment variable specified in various Unix and similar standards -->\n        <!-- TMP, TEMP and TEMPDIR are alternatively used by non-POSIX OS or non-standard programs -->\n        <!-- Windows/DOS programs randomly use TMP or TEMP environment variables -->\n        <parameter name=\"TMPDIR\">/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/target/nxruntime-main-18069003432725917313.tmp/tmp</parameter>\n        <parameter name=\"TMP\">/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/target/nxruntime-main-18069003432725917313.tmp/tmp</parameter>\n        <parameter name=\"TEMP\">/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/target/nxruntime-main-18069003432725917313.tmp/tmp</parameter>\n        <parameter name=\"TEMPDIR\">/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/target/nxruntime-main-18069003432725917313.tmp/tmp</parameter>\n      </parameters>\n    </environment>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent","rawName":"service:org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.commandline.executor/org.nuxeo.ecm.platform.commandline.executor.service.defaultContrib/Contributions/org.nuxeo.ecm.platform.commandline.executor.service.defaultContrib--environment","documentationHtml":"<p/>\nDefault environment parameters.","contributionItems":[{"documentation":"","xml":"&lt;environment&gt;\n      &lt;parameters&gt;\n        &lt;!-- TMPDIR is the canonical Unix environment variable specified in various Unix and similar standards --&gt;\n        &lt;!-- TMP, TEMP and TEMPDIR are alternatively used by non-POSIX OS or non-standard programs --&gt;\n        &lt;!-- Windows/DOS programs randomly use TMP or TEMP environment variables --&gt;\n        &lt;parameter name=&quot;TMPDIR&quot;&gt;/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/target/nxruntime-main-18069003432725917313.tmp/tmp&lt;/parameter&gt;\n        &lt;parameter name=&quot;TMP&quot;&gt;/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/target/nxruntime-main-18069003432725917313.tmp/tmp&lt;/parameter&gt;\n        &lt;parameter name=&quot;TEMP&quot;&gt;/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/target/nxruntime-main-18069003432725917313.tmp/tmp&lt;/parameter&gt;\n        &lt;parameter name=&quot;TEMPDIR&quot;&gt;/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/target/nxruntime-main-18069003432725917313.tmp/tmp&lt;/parameter&gt;\n      &lt;/parameters&gt;\n    &lt;/environment&gt;","id":null,"label":"environment","rawXml":"<environment>\n      <parameters>\n        <!-- TMPDIR is the canonical Unix environment variable specified in various Unix and similar standards -->\n        <!-- TMP, TEMP and TEMPDIR are alternatively used by non-POSIX OS or non-standard programs -->\n        <!-- Windows/DOS programs randomly use TMP or TEMP environment variables -->\n        <parameter name=\"TMPDIR\">/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/target/nxruntime-main-18069003432725917313.tmp/tmp</parameter>\n        <parameter name=\"TMP\">/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/target/nxruntime-main-18069003432725917313.tmp/tmp</parameter>\n        <parameter name=\"TEMP\">/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/target/nxruntime-main-18069003432725917313.tmp/tmp</parameter>\n        <parameter name=\"TEMPDIR\">/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/target/nxruntime-main-18069003432725917313.tmp/tmp</parameter>\n      </parameters>\n    </environment>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.commandline.executor.service.defaultContrib--commandTester","extensionPoint":"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent--commandTester","documentation":"Simple default tester that only checks for command existence in the system path.\n","xml":"<extension point=\"commandTester\" target=\"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent\">\n    <documentation>Simple default tester that only checks for command existence in the system path.</documentation>\n    <commandTester class=\"org.nuxeo.ecm.platform.commandline.executor.service.cmdtesters.DefaultCommandTester\" name=\"DefaultCommandTester\">\n    </commandTester>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent","rawName":"service:org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.commandline.executor/org.nuxeo.ecm.platform.commandline.executor.service.defaultContrib/Contributions/org.nuxeo.ecm.platform.commandline.executor.service.defaultContrib--commandTester","documentationHtml":"<p/>\nSimple default tester that only checks for command existence in the system path.","contributionItems":[{"documentation":"","xml":"&lt;commandTester class=&quot;org.nuxeo.ecm.platform.commandline.executor.service.cmdtesters.DefaultCommandTester&quot; name=&quot;DefaultCommandTester&quot;&gt;\n    &lt;/commandTester&gt;","id":"DefaultCommandTester","label":"commandTester DefaultCommandTester","rawXml":"<commandTester class=\"org.nuxeo.ecm.platform.commandline.executor.service.cmdtesters.DefaultCommandTester\" name=\"DefaultCommandTester\">\n    </commandTester>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.commandline.executor/org.nuxeo.ecm.platform.commandline.executor.service.defaultContrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-platform-commandline-executor/bin/main/OSGI-INF/commandline-default-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.commandline.executor.service.defaultContrib\">\n\n  <extension target=\"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent\" point=\"environment\">\n    <documentation>Default environment parameters.</documentation>\n    <environment>\n      <parameters>\n        <!-- TMPDIR is the canonical Unix environment variable specified in various Unix and similar standards -->\n        <!-- TMP, TEMP and TEMPDIR are alternatively used by non-POSIX OS or non-standard programs -->\n        <!-- Windows/DOS programs randomly use TMP or TEMP environment variables -->\n        <parameter name=\"TMPDIR\">${nuxeo.tmp.dir}</parameter>\n        <parameter name=\"TMP\">${nuxeo.tmp.dir}</parameter>\n        <parameter name=\"TEMP\">${nuxeo.tmp.dir}</parameter>\n        <parameter name=\"TEMPDIR\">${nuxeo.tmp.dir}</parameter>\n      </parameters>\n    </environment>\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent\" point=\"commandTester\">\n    <documentation>Simple default tester that only checks for command existence in the system path.</documentation>\n    <commandTester name=\"DefaultCommandTester\"\n      class=\"org.nuxeo.ecm.platform.commandline.executor.service.cmdtesters.DefaultCommandTester\">\n    </commandTester>\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.webengine.core","fileName":"classes","manifest":"Export-Package: org.nuxeo.ecm.webengine,\n org.nuxeo.ecm.webengine.app,\n org.nuxeo.ecm.webengine.app.annotations,\n org.nuxeo.ecm.webengine.app.document,\n org.nuxeo.ecm.webengine.app.extensions,\n org.nuxeo.ecm.webengine.app.impl,\n org.nuxeo.ecm.webengine.app.jersey,\n org.nuxeo.ecm.webengine.debug,\n org.nuxeo.ecm.webengine.forms,\n org.nuxeo.ecm.webengine.forms.validation,\n org.nuxeo.ecm.webengine.forms.validation.annotations,\n org.nuxeo.ecm.webengine.forms.validation.test,\n org.nuxeo.ecm.webengine.install,\n org.nuxeo.ecm.webengine.loader,\n org.nuxeo.ecm.webengine.loader.store,\n org.nuxeo.ecm.webengine.login,\n org.nuxeo.ecm.webengine.model,\n org.nuxeo.ecm.webengine.model.exceptions,\n org.nuxeo.ecm.webengine.model.impl,\n org.nuxeo.ecm.webengine.model.io,\n org.nuxeo.ecm.webengine.model.methods,\n org.nuxeo.ecm.webengine.model.view,\n org.nuxeo.ecm.webengine.notifier,\n org.nuxeo.ecm.webengine.rendering,\n org.nuxeo.ecm.webengine.scripting,\n org.nuxeo.ecm.webengine.security,\n org.nuxeo.ecm.webengine.security.guards,\n org.nuxeo.ecm.webengine.servlet,\n org.nuxeo.ecm.webengine.session,\n org.nuxeo.ecm.webengine.util,\n org.nuxeo.runtime.annotations,\n org.nuxeo.runtime.annotations.loader,\n org.nuxeo.runtime.contribution,\n org.nuxeo.runtime.contribution.impl\nPrivate-Package: .\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Category: stateless\nBundle-Name: Nuxeo WebEngine Core\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Version: 0.0.0.SNAPSHOT\nNuxeo-Component: OSGI-INF/webengine-framework.xml,\n OSGI-INF/authentication-contrib.xml,\n OSGI-INF/json-service.xml\nBundle-ManifestVersion: 2\nImport-Package: com.sun.jersey.core.spi.component,\n com.sun.jersey.spi.container.servlet,\n com.sun.jersey.spi.inject,\n freemarker.core,\n freemarker.ext.jsp,\n freemarker.ext.servlet,\n freemarker.template,\n groovy.lang,\n javax.annotation;version=\"1.0\",\n javax.naming,\n javax.script,\n javax.security.auth,\n javax.security.auth.login,\n javax.servlet,\n javax.servlet.http,\n javax.ws.rs;version=\"1.1\",\n javax.ws.rs.core;version=\"1.1\",\n javax.ws.rs.ext;version=\"1.1\",\n javax.xml.parsers,\n org.apache.commons.collections.map,\n org.apache.commons.fileupload,\n org.apache.commons.fileupload.disk,\n org.apache.commons.fileupload.servlet,\n org.apache.commons.logging,\n org.codehaus.groovy.classgen,\n org.codehaus.groovy.control,\n org.codehaus.groovy.runtime,\n org.nuxeo.common.collections,\n org.nuxeo.common.utils,\n org.nuxeo.common.xmap,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.impl.blob,\n org.nuxeo.ecm.core.api.local,\n org.nuxeo.ecm.core.api.model,\n org.nuxeo.ecm.core.api.model.impl,\n org.nuxeo.ecm.core.api.model.impl.primitives,\n org.nuxeo.ecm.core.api.repository,\n org.nuxeo.ecm.core.api.security,\n org.nuxeo.ecm.core.api.security.impl,\n org.nuxeo.ecm.core.schema,\n org.nuxeo.ecm.core.schema.types,\n org.nuxeo.ecm.core.url,\n org.nuxeo.ecm.directory;api=split,\n org.nuxeo.ecm.platform.api.login,\n org.nuxeo.ecm.platform.rendering.api,\n org.nuxeo.ecm.platform.rendering.fm,\n org.nuxeo.ecm.platform.rendering.fm.adapters,\n org.nuxeo.ecm.platform.rendering.wiki,\n org.nuxeo.ecm.platform.ui.web.auth,\n org.nuxeo.ecm.platform.ui.web.auth.interfaces,\n org.nuxeo.ecm.platform.ui.web.auth.plugins,\n org.nuxeo.ecm.platform.versioning.api,\n org.nuxeo.ecm.platform.web.common.vh,\n org.nuxeo.ecm.webengine.login,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model,\n org.nuxeo.runtime.services.streaming,\n org.osgi.framework;version=\"1.4\",\n org.w3c.dom\nEclipse-BuddyPolicy: dependent\nBundle-SymbolicName: org.nuxeo.ecm.webengine.core;singleton:=true\nNuxeo-WebModule: org.nuxeo.ecm.webengine.app.WebEngineApplication\n","requirements":null,"groupId":"org.nuxeo.ecm.webengine","artifactId":"nuxeo-webengine-core","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.webengine","name":"org.nuxeo.ecm.webengine","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.webengine.core","org.nuxeo.ecm.webengine.jaxrs"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-webengine/nuxeo-webengine-core/target/classes","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.ui.web.auth.WebEngineConfig","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.ui.web.auth.WebEngineConfig--sessionManager","extensionPoint":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--sessionManager","documentation":null,"xml":"<extension point=\"sessionManager\" target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\">\n\n    <sessionManager class=\"org.nuxeo.ecm.webengine.login.WebEngineSessionManager\" enabled=\"true\" name=\"WebEngine\">\n    </sessionManager>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService","rawName":"service:org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.core/org.nuxeo.ecm.platform.ui.web.auth.WebEngineConfig/Contributions/org.nuxeo.ecm.platform.ui.web.auth.WebEngineConfig--sessionManager","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;sessionManager class=&quot;org.nuxeo.ecm.webengine.login.WebEngineSessionManager&quot; enabled=&quot;true&quot; name=&quot;WebEngine&quot;&gt;\n    &lt;/sessionManager&gt;","id":"WebEngine","label":"sessionManager WebEngine","rawXml":"<sessionManager class=\"org.nuxeo.ecm.webengine.login.WebEngineSessionManager\" enabled=\"true\" name=\"WebEngine\">\n    </sessionManager>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.ui.web.auth.WebEngineConfig--startURL","extensionPoint":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--startURL","documentation":null,"xml":"<extension point=\"startURL\" target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\">\n\n    <startURLPattern>\n      <patterns>\n        <pattern>site/</pattern>\n      </patterns>\n    </startURLPattern>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService","rawName":"service:org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.core/org.nuxeo.ecm.platform.ui.web.auth.WebEngineConfig/Contributions/org.nuxeo.ecm.platform.ui.web.auth.WebEngineConfig--startURL","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;startURLPattern&gt;\n      &lt;patterns&gt;\n        &lt;pattern&gt;site/&lt;/pattern&gt;\n      &lt;/patterns&gt;\n    &lt;/startURLPattern&gt;","id":null,"label":"startURLPattern","rawXml":"<startURLPattern>\n      <patterns>\n        <pattern>site/</pattern>\n      </patterns>\n    </startURLPattern>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.ui.web.auth.WebEngineConfig--authenticators","extensionPoint":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--authenticators","documentation":null,"xml":"<extension point=\"authenticators\" target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\">\n    <authenticationPlugin class=\"org.nuxeo.ecm.webengine.login.WebEngineFormAuthenticator\" enabled=\"true\" name=\"WEBENGINE_FORM_AUTH\">\n      <needStartingURLSaving>true</needStartingURLSaving>\n      <parameters>\n        <parameter name=\"UsernameKey\">username</parameter>\n        <parameter name=\"PasswordKey\">password</parameter>\n      </parameters>\n      <stateful>false</stateful>\n    </authenticationPlugin>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService","rawName":"service:org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.core/org.nuxeo.ecm.platform.ui.web.auth.WebEngineConfig/Contributions/org.nuxeo.ecm.platform.ui.web.auth.WebEngineConfig--authenticators","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;authenticationPlugin class=&quot;org.nuxeo.ecm.webengine.login.WebEngineFormAuthenticator&quot; enabled=&quot;true&quot; name=&quot;WEBENGINE_FORM_AUTH&quot;&gt;\n      &lt;needStartingURLSaving&gt;true&lt;/needStartingURLSaving&gt;\n      &lt;parameters&gt;\n        &lt;parameter name=&quot;UsernameKey&quot;&gt;username&lt;/parameter&gt;\n        &lt;parameter name=&quot;PasswordKey&quot;&gt;password&lt;/parameter&gt;\n      &lt;/parameters&gt;\n      &lt;stateful&gt;false&lt;/stateful&gt;\n    &lt;/authenticationPlugin&gt;","id":"WEBENGINE_FORM_AUTH","label":"authenticationPlugin WEBENGINE_FORM_AUTH","rawXml":"<authenticationPlugin class=\"org.nuxeo.ecm.webengine.login.WebEngineFormAuthenticator\" enabled=\"true\" name=\"WEBENGINE_FORM_AUTH\">\n      <needStartingURLSaving>true</needStartingURLSaving>\n      <parameters>\n        <parameter name=\"UsernameKey\">username</parameter>\n        <parameter name=\"PasswordKey\">password</parameter>\n      </parameters>\n      <stateful>false</stateful>\n    </authenticationPlugin>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.ui.web.auth.WebEngineConfig--chain","extensionPoint":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--chain","documentation":null,"xml":"<extension point=\"chain\" target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\">\n\n    <authenticationChain>\n      <plugins>\n        <plugin>BASIC_AUTH</plugin>\n        <plugin>TOKEN_AUTH</plugin>\n        <plugin>OAUTH2_AUTH</plugin>\n        <plugin>JWT_AUTH</plugin>\n        <plugin>FORM_AUTH</plugin>\n        <plugin>WEBENGINE_FORM_AUTH</plugin>\n        <plugin>ANONYMOUS_AUTH</plugin>\n      </plugins>\n    </authenticationChain>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService","rawName":"service:org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.core/org.nuxeo.ecm.platform.ui.web.auth.WebEngineConfig/Contributions/org.nuxeo.ecm.platform.ui.web.auth.WebEngineConfig--chain","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;authenticationChain&gt;\n      &lt;plugins&gt;\n        &lt;plugin&gt;BASIC_AUTH&lt;/plugin&gt;\n        &lt;plugin&gt;TOKEN_AUTH&lt;/plugin&gt;\n        &lt;plugin&gt;OAUTH2_AUTH&lt;/plugin&gt;\n        &lt;plugin&gt;JWT_AUTH&lt;/plugin&gt;\n        &lt;plugin&gt;FORM_AUTH&lt;/plugin&gt;\n        &lt;plugin&gt;WEBENGINE_FORM_AUTH&lt;/plugin&gt;\n        &lt;plugin&gt;ANONYMOUS_AUTH&lt;/plugin&gt;\n      &lt;/plugins&gt;\n    &lt;/authenticationChain&gt;","id":null,"label":"authenticationChain","rawXml":"<authenticationChain>\n      <plugins>\n        <plugin>BASIC_AUTH</plugin>\n        <plugin>TOKEN_AUTH</plugin>\n        <plugin>OAUTH2_AUTH</plugin>\n        <plugin>JWT_AUTH</plugin>\n        <plugin>FORM_AUTH</plugin>\n        <plugin>WEBENGINE_FORM_AUTH</plugin>\n        <plugin>ANONYMOUS_AUTH</plugin>\n      </plugins>\n    </authenticationChain>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.core/org.nuxeo.ecm.platform.ui.web.auth.WebEngineConfig","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-webengine/nuxeo-webengine-core/target/classes/OSGI-INF/authentication-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.ui.web.auth.WebEngineConfig\">\n\n  <!-- replace auth chain -->\n  <require>org.nuxeo.ecm.platform.ui.web.auth.defaultConfig</require>\n  <require>org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService</require>\n\n  <extension\n    target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\"\n    point=\"sessionManager\">\n\n    <sessionManager name=\"WebEngine\" enabled=\"true\"\n      class=\"org.nuxeo.ecm.webengine.login.WebEngineSessionManager\">\n    </sessionManager>\n  </extension>\n\n  <extension\n    target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\"\n    point=\"startURL\">\n\n    <startURLPattern>\n      <patterns>\n        <pattern>site/</pattern>\n      </patterns>\n    </startURLPattern>\n  </extension>\n\n  <extension\n    target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\"\n    point=\"authenticators\">\n    <authenticationPlugin name=\"WEBENGINE_FORM_AUTH\" enabled=\"true\"\n      class=\"org.nuxeo.ecm.webengine.login.WebEngineFormAuthenticator\">\n      <needStartingURLSaving>true</needStartingURLSaving>\n      <parameters>\n        <parameter name=\"UsernameKey\">username</parameter>\n        <parameter name=\"PasswordKey\">password</parameter>\n      </parameters>\n      <stateful>false</stateful>\n    </authenticationPlugin>\n  </extension>\n\n  <extension\n    target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\"\n    point=\"chain\">\n\n    <authenticationChain>\n      <plugins>\n        <plugin>BASIC_AUTH</plugin>\n        <plugin>TOKEN_AUTH</plugin>\n        <plugin>OAUTH2_AUTH</plugin>\n        <plugin>JWT_AUTH</plugin>\n        <plugin>FORM_AUTH</plugin>\n        <plugin>WEBENGINE_FORM_AUTH</plugin>\n        <plugin>ANONYMOUS_AUTH</plugin>\n      </plugins>\n    </authenticationChain>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.webengine.WebEngineComponent","extensionPoints":[{"@type":"NXExtensionPoint","name":"rendering-extension","descriptors":["org.nuxeo.ecm.webengine.rendering.RenderingExtensionDescriptor"],"documentation":"\n      @author Bogdan Stefanescu (bs@nuxeo.com)\n      Expose the registration of freemarker templates (directives, methods or global shared variables)\n      This way custom templates can be registered into the freemarker engine from outside\n      <code>\n    <rendering-extension class=\"org.nuxeo.ecm.platform.my.MyExtension\" name=\"myExtension\"/>\n</code>\n","id":"org.nuxeo.ecm.webengine.WebEngineComponent--rendering-extension","version":"11.1-SNAPSHOT","label":"rendering-extension (org.nuxeo.ecm.webengine.WebEngineComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.core/org.nuxeo.ecm.webengine.WebEngineComponent/ExtensionPoints/org.nuxeo.ecm.webengine.WebEngineComponent--rendering-extension","documentationHtml":"<p/>\nExpose the registration of freemarker templates (directives, methods or global shared variables)\nThis way custom templates can be registered into the freemarker engine from outside\n<p/><pre><code>    &lt;rendering-extension class=\"org.nuxeo.ecm.platform.my.MyExtension\" name=\"myExtension\"/>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.webengine.WebEngineComponent"},{"@type":"NXExtensionPoint","name":"resource","descriptors":["org.nuxeo.ecm.webengine.ResourceBinding"],"documentation":"\n      @author Bogdan Stefanescu (bs@nuxeo.com)\n      Register a JAX-RS root resource\n      <code>\n    <resource class=\"org.nuxeo.Resource\" path=\"{lang:[a-z]}\" singleton=\"false\"/>\n</code>\n","id":"org.nuxeo.ecm.webengine.WebEngineComponent--resource","version":"11.1-SNAPSHOT","label":"resource (org.nuxeo.ecm.webengine.WebEngineComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.core/org.nuxeo.ecm.webengine.WebEngineComponent/ExtensionPoints/org.nuxeo.ecm.webengine.WebEngineComponent--resource","documentationHtml":"<p/>\nRegister a JAX-RS root resource\n<p/><pre><code>    &lt;resource class=\"org.nuxeo.Resource\" path=\"{lang:[a-z]}\" singleton=\"false\"/>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.webengine.WebEngineComponent"},{"@type":"NXExtensionPoint","name":"request-configuration","descriptors":["org.nuxeo.ecm.webengine.PathDescriptor"],"documentation":"\n      Obsolete since 8.4, transactions are always active.\n    \n","id":"org.nuxeo.ecm.webengine.WebEngineComponent--request-configuration","version":"11.1-SNAPSHOT","label":"request-configuration (org.nuxeo.ecm.webengine.WebEngineComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.core/org.nuxeo.ecm.webengine.WebEngineComponent/ExtensionPoints/org.nuxeo.ecm.webengine.WebEngineComponent--request-configuration","documentationHtml":"<p/>\nObsolete since 8.4, transactions are always active.\n<p/>","componentId":"org.nuxeo.ecm.webengine.WebEngineComponent"},{"@type":"NXExtensionPoint","name":"guard","descriptors":["org.nuxeo.ecm.webengine.security.GuardDescriptor"],"documentation":"\n      @author Bogdan Stefanescu (bs@nuxeo.com)\n      Register global guards. Guards are used to define permissions\n      <code>\n    <guard expression=\"(GUARD1 OR GUARD2) AND user=bogdan\" id=\"MyGuard\"/>\n</code>\n","id":"org.nuxeo.ecm.webengine.WebEngineComponent--guard","version":"11.1-SNAPSHOT","label":"guard (org.nuxeo.ecm.webengine.WebEngineComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.core/org.nuxeo.ecm.webengine.WebEngineComponent/ExtensionPoints/org.nuxeo.ecm.webengine.WebEngineComponent--guard","documentationHtml":"<p/>\nRegister global guards. Guards are used to define permissions\n<p/><pre><code>    &lt;guard expression=\"(GUARD1 OR GUARD2) AND user=bogdan\" id=\"MyGuard\"/>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.webengine.WebEngineComponent"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.webengine.WebEngine","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.core/org.nuxeo.ecm.webengine.WebEngineComponent/Services/org.nuxeo.ecm.webengine.WebEngine","componentId":"org.nuxeo.ecm.webengine.WebEngineComponent"}],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.webengine.WebEngineComponent--rendering-extension","extensionPoint":"org.nuxeo.ecm.webengine.WebEngineComponent--rendering-extension","documentation":null,"xml":"<extension point=\"rendering-extension\" target=\"org.nuxeo.ecm.webengine.WebEngineComponent\">\n    <rendering-extension class=\"org.nuxeo.ecm.webengine.rendering.ScriptMethod\" name=\"script\"/>\n    <rendering-extension class=\"org.nuxeo.ecm.webengine.rendering.RenderDirective\" name=\"render\"/>\n    <rendering-extension class=\"org.nuxeo.ecm.platform.rendering.wiki.WikiTransformer\" name=\"wiki\"/>\n    <rendering-extension class=\"org.nuxeo.ecm.webengine.rendering.APIHelper\" name=\"API\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.webengine.WebEngineComponent","rawName":"service:org.nuxeo.ecm.webengine.WebEngineComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.core/org.nuxeo.ecm.webengine.WebEngineComponent/Contributions/org.nuxeo.ecm.webengine.WebEngineComponent--rendering-extension","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;rendering-extension class=&quot;org.nuxeo.ecm.webengine.rendering.ScriptMethod&quot; name=&quot;script&quot;/&gt;","id":"script","label":"rendering-extension script","rawXml":"<rendering-extension class=\"org.nuxeo.ecm.webengine.rendering.ScriptMethod\" name=\"script\"/>"},{"documentation":"","xml":"&lt;rendering-extension class=&quot;org.nuxeo.ecm.webengine.rendering.RenderDirective&quot; name=&quot;render&quot;/&gt;","id":"render","label":"rendering-extension render","rawXml":"<rendering-extension class=\"org.nuxeo.ecm.webengine.rendering.RenderDirective\" name=\"render\"/>"},{"documentation":"","xml":"&lt;rendering-extension class=&quot;org.nuxeo.ecm.platform.rendering.wiki.WikiTransformer&quot; name=&quot;wiki&quot;/&gt;","id":"wiki","label":"rendering-extension wiki","rawXml":"<rendering-extension class=\"org.nuxeo.ecm.platform.rendering.wiki.WikiTransformer\" name=\"wiki\"/>"},{"documentation":"","xml":"&lt;rendering-extension class=&quot;org.nuxeo.ecm.webengine.rendering.APIHelper&quot; name=&quot;API&quot;/&gt;","id":"API","label":"rendering-extension API","rawXml":"<rendering-extension class=\"org.nuxeo.ecm.webengine.rendering.APIHelper\" name=\"API\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.webengine.WebEngineComponent--filterConfig","extensionPoint":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService--filterConfig","documentation":null,"xml":"<extension point=\"filterConfig\" target=\"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService\">\n    <filterConfig name=\"webengine\" synchonize=\"false\" transactional=\"true\">\n      <pattern>/nuxeo/site.*</pattern>\n    </filterConfig>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService","rawName":"service:org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.core/org.nuxeo.ecm.webengine.WebEngineComponent/Contributions/org.nuxeo.ecm.webengine.WebEngineComponent--filterConfig","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;filterConfig name=&quot;webengine&quot; synchonize=&quot;false&quot; transactional=&quot;true&quot;&gt;\n      &lt;pattern&gt;/nuxeo/site.*&lt;/pattern&gt;\n    &lt;/filterConfig&gt;","id":"webengine","label":"filterConfig webengine","rawXml":"<filterConfig name=\"webengine\" synchonize=\"false\" transactional=\"true\">\n      <pattern>/nuxeo/site.*</pattern>\n    </filterConfig>"}]}],"componentClass":"org.nuxeo.ecm.webengine.WebEngineComponent","documentation":"\n    @author Bogdan Stefanescu (bs@nuxeo.com)\n    Manage templates\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.core/org.nuxeo.ecm.webengine.WebEngineComponent","documentationHtml":"<p/>\nManage templates\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-webengine/nuxeo-webengine-core/target/classes/OSGI-INF/webengine-framework.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.webengine.WebEngineComponent\">\n  <require>org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService</require>\n\n  <implementation\n          class=\"org.nuxeo.ecm.webengine.WebEngineComponent\" />\n  <documentation>\n    @author Bogdan Stefanescu (bs@nuxeo.com)\n    Manage templates\n  </documentation>\n\n  <!-- you can change the default rendering engine by setting this property to the engine class name\n  <property name=\"engine\" value=\"org.nuxeo.ecm.platform.rendering.fm.FreemarkerEngine\"/>\n  -->\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.webengine.WebEngine\" />\n  </service>\n\n  <extension-point name=\"rendering-extension\">\n    <documentation>\n      @author Bogdan Stefanescu (bs@nuxeo.com)\n      Expose the registration of freemarker templates (directives, methods or global shared variables)\n      This way custom templates can be registered into the freemarker engine from outside\n      <code>\n        <rendering-extension name=\"myExtension\" class=\"org.nuxeo.ecm.platform.my.MyExtension\"/>\n      </code>\n    </documentation>\n\n    <object\n      class=\"org.nuxeo.ecm.webengine.rendering.RenderingExtensionDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"guard\">\n    <documentation>\n      @author Bogdan Stefanescu (bs@nuxeo.com)\n      Register global guards. Guards are used to define permissions\n      <code>\n        <guard id=\"MyGuard\" expression=\"(GUARD1 OR GUARD2) AND user=bogdan\">\n        </guard>\n      </code>\n    </documentation>\n\n    <object\n      class=\"org.nuxeo.ecm.webengine.security.GuardDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"resource\">\n    <documentation>\n      @author Bogdan Stefanescu (bs@nuxeo.com)\n      Register a JAX-RS root resource\n      <code>\n        <resource path=\"{lang:[a-z]}\" singleton=\"false\" class=\"org.nuxeo.Resource\" />\n      </code>\n    </documentation>\n\n    <object\n      class=\"org.nuxeo.ecm.webengine.ResourceBinding\" />\n  </extension-point>\n\n  <extension-point name=\"request-configuration\">\n    <documentation>\n      Obsolete since 8.4, transactions are always active.\n    </documentation>\n    <object\n      class=\"org.nuxeo.ecm.webengine.PathDescriptor\" />\n  </extension-point>\n\n  <extension target=\"org.nuxeo.ecm.webengine.WebEngineComponent\" point=\"rendering-extension\">\n    <rendering-extension name=\"script\" class=\"org.nuxeo.ecm.webengine.rendering.ScriptMethod\"/>\n    <rendering-extension name=\"render\" class=\"org.nuxeo.ecm.webengine.rendering.RenderDirective\"/>\n    <rendering-extension name=\"wiki\" class=\"org.nuxeo.ecm.platform.rendering.wiki.WikiTransformer\"/>\n    <rendering-extension name=\"API\" class=\"org.nuxeo.ecm.webengine.rendering.APIHelper\"/>\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService\"\n    point=\"filterConfig\">\n    <filterConfig name=\"webengine\" transactional=\"true\" synchonize=\"false\">\n      <pattern>${org.nuxeo.ecm.contextPath}/site.*</pattern>\n    </filterConfig>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.webengine.core.service.json","extensionPoints":[],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.webengine.JsonFactoryManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.core/org.nuxeo.ecm.webengine.core.service.json/Services/org.nuxeo.ecm.webengine.JsonFactoryManager","componentId":"org.nuxeo.ecm.webengine.core.service.json"}],"extensions":[],"componentClass":"org.nuxeo.ecm.webengine.JsonFactoryManagerImpl","documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.core/org.nuxeo.ecm.webengine.core.service.json","documentationHtml":"","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-webengine/nuxeo-webengine-core/target/classes/OSGI-INF/json-service.xml","xmlFileContent":"<component name=\"org.nuxeo.ecm.webengine.core.service.json\">\n\n  <implementation class=\"org.nuxeo.ecm.webengine.JsonFactoryManagerImpl\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.webengine.JsonFactoryManager\" />\n  </service>\n\n</component>"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.directory.mongodb","fileName":"classes","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 1\nBundle-Name: Nuxeo MongoDB Directory\nBundle-SymbolicName: org.nuxeo.directory.mongodb;singleton:=true\nBundle-Version: 1.0.0\nNuxeo-Component: OSGI-INF/MongoDBDirectoryFactory.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-platform-directory-mongodb","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform","name":"org.nuxeo.ecm.platform","liveDoc":{},"subGroups":[{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.directory","name":"org.nuxeo.ecm.directory","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.directory","org.nuxeo.ecm.directory.api","org.nuxeo.ecm.directory.sql","org.nuxeo.ecm.directory.types.contrib"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.query","name":"org.nuxeo.ecm.platform.query","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.query.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.usermanager","name":"org.nuxeo.ecm.platform.usermanager","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.usermanager","org.nuxeo.ecm.platform.usermanager.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]}],"bundleIds":["org.nuxeo.apidoc.core","org.nuxeo.apidoc.repo","org.nuxeo.directory.mongodb","org.nuxeo.ecm.actions","org.nuxeo.ecm.platform.api","org.nuxeo.ecm.platform.commandline.executor","org.nuxeo.ecm.platform.content.template","org.nuxeo.ecm.platform.dublincore","org.nuxeo.ecm.platform.forms.layout.export","org.nuxeo.ecm.platform.login","org.nuxeo.ecm.platform.web.common","org.nuxeo.osgi.app"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-directory/nuxeo-platform-directory-mongodb/target/classes","components":[{"@type":"NXComponent","name":"org.nuxeo.directory.mongodb.MongoDBDirectoryFactory","extensionPoints":[{"@type":"NXExtensionPoint","name":"directories","descriptors":["org.nuxeo.directory.mongodb.MongoDBDirectoryDescriptor"],"documentation":"\n      This extension point can be used to register new MongoDB-based directories. The extension can contain any number\n      of directories declarations of the form:\n      <code>\n    <directory name=\"userDirectory\">\n        <schema>vocabulary</schema>\n        <types>\n            <type>system</type>\n        </types>\n        <idField>username</idField>\n        <passwordField>password</passwordField>\n        <passwordHashAlgorithm>SSHA</passwordHashAlgorithm>\n        <autoincrementIdField>false</autoincrementIdField>\n        <createTablePolicy>on_missing_columns</createTablePolicy>\n        <dataFile>setup.csv</dataFile>\n        <dataFileCharacterSeparator>,</dataFileCharacterSeparator>\n        <references>\n            <reference collection=\"user2group\" dataFile=\"user2group.csv\"\n                directory=\"groupDirectory\" field=\"groups\"\n                sourceField=\"userId\" targetField=\"groupId\"/>\n        </references>\n        <permissions>\n            <permission name=\"Read\">\n                <group>mygroup</group>\n                <group>mygroup2</group>\n                <user>Administrator</user>\n            </permission>\n            <permission name=\"Write\">\n                <group>mygroup3</group>\n            </permission>\n        </permissions>\n    </directory>\n</code>\n\n      If you want to customize the MongoDB connection used in the directory, you can contribute a new connection\n      configuration to MongoDBComponent with id 'directory/[directory@name]'. In the example above the id will be\n      'directory/userDirectory'\n    \n","id":"org.nuxeo.directory.mongodb.MongoDBDirectoryFactory--directories","version":"11.1-SNAPSHOT","label":"directories (org.nuxeo.directory.mongodb.MongoDBDirectoryFactory)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.directory.mongodb/org.nuxeo.directory.mongodb.MongoDBDirectoryFactory/ExtensionPoints/org.nuxeo.directory.mongodb.MongoDBDirectoryFactory--directories","documentationHtml":"<p/>\nThis extension point can be used to register new MongoDB-based directories. The extension can contain any number\nof directories declarations of the form:\n<p/><pre><code>    &lt;directory name=\"userDirectory\">\n        &lt;schema>vocabulary&lt;/schema>\n        &lt;types>\n            &lt;type>system&lt;/type>\n        &lt;/types>\n        &lt;idField>username&lt;/idField>\n        &lt;passwordField>password&lt;/passwordField>\n        &lt;passwordHashAlgorithm>SSHA&lt;/passwordHashAlgorithm>\n        &lt;autoincrementIdField>false&lt;/autoincrementIdField>\n        &lt;createTablePolicy>on_missing_columns&lt;/createTablePolicy>\n        &lt;dataFile>setup.csv&lt;/dataFile>\n        &lt;dataFileCharacterSeparator>,&lt;/dataFileCharacterSeparator>\n        &lt;references>\n            &lt;reference collection=\"user2group\" dataFile=\"user2group.csv\"\n                directory=\"groupDirectory\" field=\"groups\"\n                sourceField=\"userId\" targetField=\"groupId\"/>\n        &lt;/references>\n        &lt;permissions>\n            &lt;permission name=\"Read\">\n                &lt;group>mygroup&lt;/group>\n                &lt;group>mygroup2&lt;/group>\n                &lt;user>Administrator&lt;/user>\n            &lt;/permission>\n            &lt;permission name=\"Write\">\n                &lt;group>mygroup3&lt;/group>\n            &lt;/permission>\n        &lt;/permissions>\n    &lt;/directory>\n</code></pre><p/>\nIf you want to customize the MongoDB connection used in the directory, you can contribute a new connection\nconfiguration to MongoDBComponent with id 'directory/[directory@name]'. In the example above the id will be\n'directory/userDirectory'\n<p/>","componentId":"org.nuxeo.directory.mongodb.MongoDBDirectoryFactory"}],"services":[],"extensions":[],"componentClass":"org.nuxeo.directory.mongodb.MongoDBDirectoryFactory","documentation":"\n    MongoDB-based implementation for Directory\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.directory.mongodb/org.nuxeo.directory.mongodb.MongoDBDirectoryFactory","documentationHtml":"<p/>\nMongoDB-based implementation for Directory\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-directory/nuxeo-platform-directory-mongodb/target/classes/OSGI-INF/MongoDBDirectoryFactory.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.directory.mongodb.MongoDBDirectoryFactory\">\n\n  <implementation class=\"org.nuxeo.directory.mongodb.MongoDBDirectoryFactory\"/>\n\n  <require>org.nuxeo.runtime.mongodb.MongoDBComponent</require>\n  <require>org.nuxeo.ecm.directory.DirectoryServiceImpl</require>\n  <require>org.nuxeo.ecm.directory.sql.SQLDirectoryFactory</require>\n\n  <documentation>\n    MongoDB-based implementation for Directory\n  </documentation>\n\n  <extension-point name=\"directories\">\n    <documentation>\n      This extension point can be used to register new MongoDB-based directories. The extension can contain any number\n      of directories declarations of the form:\n      <code>\n        <directory name=\"userDirectory\">\n          <schema>vocabulary</schema>\n          <types>\n            <type>system</type>\n          </types>\n          <idField>username</idField>\n          <passwordField>password</passwordField>\n          <passwordHashAlgorithm>SSHA</passwordHashAlgorithm>\n          <autoincrementIdField>false</autoincrementIdField>\n          <createTablePolicy>on_missing_columns</createTablePolicy>\n          <dataFile>setup.csv</dataFile>\n          <dataFileCharacterSeparator>,</dataFileCharacterSeparator>\n          <references>\n            <reference field=\"groups\" directory=\"groupDirectory\"\n                collection=\"user2group\" sourceField=\"userId\" targetField=\"groupId\"\n                dataFile=\"user2group.csv\"/>\n          </references>\n          <permissions>\n            <permission name=\"Read\">\n              <group>mygroup</group>\n              <group>mygroup2</group>\n              <user>Administrator</user>\n            </permission>\n            <permission name=\"Write\">\n              <group>mygroup3</group>\n            </permission>\n          </permissions>\n        </directory>\n      </code>\n      If you want to customize the MongoDB connection used in the directory, you can contribute a new connection\n      configuration to MongoDBComponent with id 'directory/[directory@name]'. In the example above the id will be\n      'directory/userDirectory'\n    </documentation>\n\n    <object class=\"org.nuxeo.directory.mongodb.MongoDBDirectoryDescriptor\"/>\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.core,\n org.nuxeo.ecm.core.api,\n org.nuxeo.ecm.core.api.local,\n org.nuxeo.ecm.core.lifecycle,\n org.nuxeo.ecm.core.lifecycle.event,\n org.nuxeo.ecm.core.lifecycle.extensions,\n org.nuxeo.ecm.core.lifecycle.impl,\n org.nuxeo.ecm.core.model,\n org.nuxeo.ecm.core.repository,\n org.nuxeo.ecm.core.security,\n org.nuxeo.ecm.core.trash,\n org.nuxeo.ecm.core.versioning\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Category: core\nBundle-Name: org.nuxeo.ecm.core\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nRequire-Bundle: org.nuxeo.ecm.core.api;visibility:=reexport,\n org.nuxeo.ecm.core.event\nBundle-Version: 5.4.2.qualifier\nNuxeo-Component: OSGI-INF/CoreService.xml,\n  OSGI-INF/RepositoryService.xml,\n  OSGI-INF/CoreExtensions.xml,\n  OSGI-INF/LifeCycleService.xml,\n  OSGI-INF/LifeCycleCoreExtensions.xml,\n  OSGI-INF/lifecycle-listener-contrib.xml,\n  OSGI-INF/SecurityService.xml,\n  OSGI-INF/permissions-contrib.xml,\n  OSGI-INF/security-policy-contrib.xml,\n  OSGI-INF/trash-migration.xml,\n  OSGI-INF/trash-service.xml,\n  OSGI-INF/versioning-service.xml,\n  OSGI-INF/versioning-document-adapter.xml,\n  OSGI-INF/versioning-default-policies.xml,\n  OSGI-INF/orphanVersionRemoval-listener-contrib.xml,\n  OSGI-INF/orphanVersionsCleanup-listener-contrib.xml,\n  OSGI-INF/document-resolver-contrib.xml,\n  OSGI-INF/character-filtering-service.xml,\n  OSGI-INF/character-filtering-service-contrib.xml,\n  OSGI-INF/documentblobmanager-service.xml,\n  OSGI-INF/uidgenerator-service.xml,\n  OSGI-INF/uidgenerator-keyvalue-config.xml,\n  OSGI-INF/CoreSessionService.xml,\n  OSGI-INF/scheduler-contrib.xml,\n  OSGI-INF/deletion-action-config.xml,\n  OSGI-INF/retention-and-hold-contrib.xml,\n  OSGI-INF/coldstorage-contrib.xml\nBundle-ManifestVersion: 2\nImport-Package: javax.naming,\n javax.transaction;version=\"1.1\",\n javax.transaction.xa;version=\"1.1\",\n javax.xml.parsers,\n org.apache.commons.lang,\n org.apache.commons.logging,\n org.apache.xml.serialize,\n org.nuxeo.common.collections,\n org.nuxeo.common.utils,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core.event,\n org.nuxeo.ecm.core.event.impl,\n org.nuxeo.ecm.core.query,\n org.nuxeo.ecm.core.query.sql.model,\n org.nuxeo.ecm.core.schema,\n org.nuxeo.ecm.core.schema.types,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.api.login,\n org.nuxeo.runtime.model,\n org.nuxeo.runtime.services.event,\n org.nuxeo.runtime.services.streaming,\n org.nuxeo.runtime.transaction,\n org.osgi.framework;version=\"1.4\",\n org.w3c.dom\nBundle-SymbolicName: org.nuxeo.ecm.core;singleton:=true\nEclipse-ExtensibleAPI: true\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.uidgen.UIDGeneratorService","extensionPoints":[{"@type":"NXExtensionPoint","name":"generators","descriptors":["org.nuxeo.ecm.core.uidgen.UIDGeneratorDescriptor"],"documentation":"\n      Allows to contribute a new uid generator.\n    \n","id":"org.nuxeo.ecm.core.uidgen.UIDGeneratorService--generators","version":"11.1-SNAPSHOT","label":"generators (org.nuxeo.ecm.core.uidgen.UIDGeneratorService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.uidgen.UIDGeneratorService/ExtensionPoints/org.nuxeo.ecm.core.uidgen.UIDGeneratorService--generators","documentationHtml":"<p/>\nAllows to contribute a new uid generator.\n<p/>","componentId":"org.nuxeo.ecm.core.uidgen.UIDGeneratorService"},{"@type":"NXExtensionPoint","name":"sequencers","descriptors":["org.nuxeo.ecm.core.uidgen.UIDSequencerProviderDescriptor"],"documentation":"\n      Allows to contribute a new uid sequencer.\n    \n","id":"org.nuxeo.ecm.core.uidgen.UIDGeneratorService--sequencers","version":"11.1-SNAPSHOT","label":"sequencers (org.nuxeo.ecm.core.uidgen.UIDGeneratorService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.uidgen.UIDGeneratorService/ExtensionPoints/org.nuxeo.ecm.core.uidgen.UIDGeneratorService--sequencers","documentationHtml":"<p/>\nAllows to contribute a new uid sequencer.\n<p/>","componentId":"org.nuxeo.ecm.core.uidgen.UIDGeneratorService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.uidgen.UIDSequencer","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.uidgen.UIDGeneratorService/Services/org.nuxeo.ecm.core.uidgen.UIDSequencer","componentId":"org.nuxeo.ecm.core.uidgen.UIDGeneratorService"},{"@type":"NXService","id":"org.nuxeo.ecm.core.uidgen.UIDGeneratorService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.uidgen.UIDGeneratorService/Services/org.nuxeo.ecm.core.uidgen.UIDGeneratorService","componentId":"org.nuxeo.ecm.core.uidgen.UIDGeneratorService"}],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.uidgen.UIDGeneratorService--listener","extensionPoint":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentation":"\n      Listener to automatically generate uids for documents according to the registered uid generators.\n    \n","xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n    <documentation>\n      Listener to automatically generate uids for documents according to the registered uid generators.\n    </documentation>\n    <listener async=\"false\" class=\"org.nuxeo.ecm.core.uidgen.DocUIDGeneratorListener\" name=\"uidlistener\" postCommit=\"false\" priority=\"10\">\n      <event>documentCreated</event>\n    </listener>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.event.EventServiceComponent","rawName":"service:org.nuxeo.ecm.core.event.EventServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.uidgen.UIDGeneratorService/Contributions/org.nuxeo.ecm.core.uidgen.UIDGeneratorService--listener","documentationHtml":"<p/>\nListener to automatically generate uids for documents according to the registered uid generators.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;listener async=&quot;false&quot; class=&quot;org.nuxeo.ecm.core.uidgen.DocUIDGeneratorListener&quot; name=&quot;uidlistener&quot; postCommit=&quot;false&quot; priority=&quot;10&quot;&gt;\n      &lt;event&gt;documentCreated&lt;/event&gt;\n    &lt;/listener&gt;","id":"uidlistener","label":"listener uidlistener","rawXml":"<listener async=\"false\" class=\"org.nuxeo.ecm.core.uidgen.DocUIDGeneratorListener\" name=\"uidlistener\" postCommit=\"false\" priority=\"10\">\n      <event>documentCreated</event>\n    </listener>"}]}],"componentClass":"org.nuxeo.ecm.core.uidgen.UIDGeneratorComponent","documentation":"\n    Component for a generator of unique ids, which can be used as metadata for documents or any other use.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.uidgen.UIDGeneratorService","documentationHtml":"<p/>\nComponent for a generator of unique ids, which can be used as metadata for documents or any other use.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/uidgenerator-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.uidgen.UIDGeneratorService\">\n\n  <alias>org.nuxeo.ecm.platform.uidgen.service.UIDGeneratorService</alias>\n\n  <documentation>\n    Component for a generator of unique ids, which can be used as metadata for documents or any other use.\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.uidgen.UIDGeneratorComponent\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.uidgen.UIDSequencer\" />\n    <provide interface=\"org.nuxeo.ecm.core.uidgen.UIDGeneratorService\" />\n  </service>\n\n  <extension-point name=\"sequencers\">\n    <documentation>\n      Allows to contribute a new uid sequencer.\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.uidgen.UIDSequencerProviderDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"generators\">\n    <documentation>\n      Allows to contribute a new uid generator.\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.uidgen.UIDGeneratorDescriptor\" />\n  </extension-point>\n\n  <extension target=\"org.nuxeo.ecm.core.event.EventServiceComponent\" point=\"listener\">\n    <documentation>\n      Listener to automatically generate uids for documents according to the registered uid generators.\n    </documentation>\n    <listener name=\"uidlistener\" async=\"false\" postCommit=\"false\"\n      class=\"org.nuxeo.ecm.core.uidgen.DocUIDGeneratorListener\" priority=\"10\">\n      <event>documentCreated</event>\n    </listener>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.event.lifecycle.listener","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.event.lifecycle.listener--listener","extensionPoint":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentation":"\n      Listener for life cycle change events.\n\n      If event occurs on a folder, it will recurse on children to perform the\n      same transition if possible.\n\n      If the transition event is about marking documents as \"deleted\", and a\n      child cannot perform the transition, it will be removed.\n\n      Undelete transitions are not recursed on the children, however a special\n      documentUndeleted event has the same role and is processed by this listener.\n    \n","xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n\n    <documentation>\n      Listener for life cycle change events.\n\n      If event occurs on a folder, it will recurse on children to perform the\n      same transition if possible.\n\n      If the transition event is about marking documents as \"deleted\", and a\n      child cannot perform the transition, it will be removed.\n\n      Undelete transitions are not recursed on the children, however a special\n      documentUndeleted event has the same role and is processed by this listener.\n    </documentation>\n    <listener async=\"true\" class=\"org.nuxeo.ecm.core.lifecycle.event.BulkLifeCycleChangeListener\" name=\"bulkLifeCycleChangeListener\" postCommit=\"true\">\n      <event>lifecycle_transition_event</event>\n      <event>documentUndeleted</event>\n      <event>documentCreatedByCopy</event>\n    </listener>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.event.EventServiceComponent","rawName":"service:org.nuxeo.ecm.core.event.EventServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.event.lifecycle.listener/Contributions/org.nuxeo.ecm.core.event.lifecycle.listener--listener","documentationHtml":"<p/>\nListener for life cycle change events.\n<p/>\nIf event occurs on a folder, it will recurse on children to perform the\nsame transition if possible.\n<p/>\nIf the transition event is about marking documents as \"deleted\", and a\nchild cannot perform the transition, it will be removed.\n<p/>\nUndelete transitions are not recursed on the children, however a special\ndocumentUndeleted event has the same role and is processed by this listener.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;listener async=&quot;true&quot; class=&quot;org.nuxeo.ecm.core.lifecycle.event.BulkLifeCycleChangeListener&quot; name=&quot;bulkLifeCycleChangeListener&quot; postCommit=&quot;true&quot;&gt;\n      &lt;event&gt;lifecycle_transition_event&lt;/event&gt;\n      &lt;event&gt;documentUndeleted&lt;/event&gt;\n      &lt;event&gt;documentCreatedByCopy&lt;/event&gt;\n    &lt;/listener&gt;","id":"bulkLifeCycleChangeListener","label":"listener bulkLifeCycleChangeListener","rawXml":"<listener async=\"true\" class=\"org.nuxeo.ecm.core.lifecycle.event.BulkLifeCycleChangeListener\" name=\"bulkLifeCycleChangeListener\" postCommit=\"true\">\n      <event>lifecycle_transition_event</event>\n      <event>documentUndeleted</event>\n      <event>documentCreatedByCopy</event>\n    </listener>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.event.lifecycle.listener--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n      If true listener will recursive on children of document by paginate them.\n      <p/>\n\n      Default behavior is to fetch all children once.\n\n      @since 8.10-HF05, 9.2\n    \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <documentation>\n      If true listener will recursive on children of document by paginate them.\n      <p/>\n      Default behavior is to fetch all children once.\n\n      @since 8.10-HF05, 9.2\n    </documentation>\n    <property name=\"nuxeo.bulkLifeCycleChangeListener.paginate-get-children\">false</property>\n\n    <documentation>\n      If \"nuxeo.bulkLifeCycleChangeListener.paginate-get-children\" is true, this property set the page size for get\n      children calls.\n\n      @since 8.10-HF05, 9.2\n    </documentation>\n    <property name=\"nuxeo.bulkLifeCycleChangeListener.get-children-page-size\">500</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.event.lifecycle.listener/Contributions/org.nuxeo.ecm.core.event.lifecycle.listener--configuration","documentationHtml":"<p/>\nIf true listener will recursive on children of document by paginate them.\n<p/>\nDefault behavior is to fetch all children once.\n<p/>\n@since 8.10-HF05, 9.2\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;nuxeo.bulkLifeCycleChangeListener.paginate-get-children&quot;&gt;false&lt;/property&gt;","id":"nuxeo.bulkLifeCycleChangeListener.paginate-get-children","label":"property nuxeo.bulkLifeCycleChangeListener.paginate-get-children","rawXml":"<property name=\"nuxeo.bulkLifeCycleChangeListener.paginate-get-children\">false</property>"},{"documentation":"","xml":"&lt;property name=&quot;nuxeo.bulkLifeCycleChangeListener.get-children-page-size&quot;&gt;500&lt;/property&gt;","id":"nuxeo.bulkLifeCycleChangeListener.get-children-page-size","label":"property nuxeo.bulkLifeCycleChangeListener.get-children-page-size","rawXml":"<property name=\"nuxeo.bulkLifeCycleChangeListener.get-children-page-size\">500</property>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.event.lifecycle.listener","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/lifecycle-listener-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.event.lifecycle.listener\"\n  version=\"1.0\">\n\n  <extension target=\"org.nuxeo.ecm.core.event.EventServiceComponent\"\n    point=\"listener\">\n\n    <documentation>\n      Listener for life cycle change events.\n\n      If event occurs on a folder, it will recurse on children to perform the\n      same transition if possible.\n\n      If the transition event is about marking documents as \"deleted\", and a\n      child cannot perform the transition, it will be removed.\n\n      Undelete transitions are not recursed on the children, however a special\n      documentUndeleted event has the same role and is processed by this listener.\n    </documentation>\n    <listener name=\"bulkLifeCycleChangeListener\" async=\"true\" postCommit=\"true\"\n      class=\"org.nuxeo.ecm.core.lifecycle.event.BulkLifeCycleChangeListener\">\n      <event>lifecycle_transition_event</event>\n      <event>documentUndeleted</event>\n      <event>documentCreatedByCopy</event>\n    </listener>\n\n  </extension>\n\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n    <documentation>\n      If true listener will recursive on children of document by paginate them.\n      <p />\n      Default behavior is to fetch all children once.\n\n      @since 8.10-HF05, 9.2\n    </documentation>\n    <property name=\"nuxeo.bulkLifeCycleChangeListener.paginate-get-children\">false</property>\n\n    <documentation>\n      If \"nuxeo.bulkLifeCycleChangeListener.paginate-get-children\" is true, this property set the page size for get\n      children calls.\n\n      @since 8.10-HF05, 9.2\n    </documentation>\n    <property name=\"nuxeo.bulkLifeCycleChangeListener.get-children-page-size\">500</property>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.versioning.VersioningDocumentAdapter","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.versioning.VersioningDocumentAdapter--adapters","extensionPoint":"org.nuxeo.ecm.core.api.DocumentAdapterService--adapters","documentation":"\n      Defines an adapter for documents having versioning\n      info. The adapter\n      interface is VersioningDocument and could be\n      retrieved in a standard way\n      from a document model with\n      getAdapter(VersioningDocument.class)\n    \n","xml":"<extension point=\"adapters\" target=\"org.nuxeo.ecm.core.api.DocumentAdapterService\">\n\n    <documentation>\n      Defines an adapter for documents having versioning\n      info. The adapter\n      interface is VersioningDocument and could be\n      retrieved in a standard way\n      from a document model with\n      getAdapter(VersioningDocument.class)\n    </documentation>\n\n    <adapter class=\"org.nuxeo.ecm.core.api.facet.VersioningDocument\" factory=\"org.nuxeo.ecm.core.versioning.VersioningDocumentAdapterFactory\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.api.DocumentAdapterService","rawName":"service:org.nuxeo.ecm.core.api.DocumentAdapterService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.versioning.VersioningDocumentAdapter/Contributions/org.nuxeo.ecm.core.versioning.VersioningDocumentAdapter--adapters","documentationHtml":"<p/>\nDefines an adapter for documents having versioning\ninfo. The adapter\ninterface is VersioningDocument and could be\nretrieved in a standard way\nfrom a document model with\ngetAdapter(VersioningDocument.class)\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.ecm.core.api.facet.VersioningDocument&quot; factory=&quot;org.nuxeo.ecm.core.versioning.VersioningDocumentAdapterFactory&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.ecm.core.api.facet.VersioningDocument\" factory=\"org.nuxeo.ecm.core.versioning.VersioningDocumentAdapterFactory\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.versioning.VersioningDocumentAdapter","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/versioning-document-adapter.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.versioning.VersioningDocumentAdapter\"\n  version=\"1.0\">\n\n  <extension target=\"org.nuxeo.ecm.core.api.DocumentAdapterService\"\n    point=\"adapters\">\n\n    <documentation>\n      Defines an adapter for documents having versioning\n      info. The adapter\n      interface is VersioningDocument and could be\n      retrieved in a standard way\n      from a document model with\n      getAdapter(VersioningDocument.class)\n    </documentation>\n\n    <adapter class=\"org.nuxeo.ecm.core.api.facet.VersioningDocument\"\n      factory=\"org.nuxeo.ecm.core.versioning.VersioningDocumentAdapterFactory\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.document.characterFiltering.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.document.characterFiltering.contrib--filtering","extensionPoint":"org.nuxeo.ecm.core.filter.CharacterFilteringService--filtering","documentation":null,"xml":"<extension point=\"filtering\" target=\"org.nuxeo.ecm.core.filter.CharacterFilteringService\">\n    <filtering enabled=\"true\">\n    </filtering>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.filter.CharacterFilteringService","rawName":"service:org.nuxeo.ecm.core.filter.CharacterFilteringService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.document.characterFiltering.contrib/Contributions/org.nuxeo.ecm.core.document.characterFiltering.contrib--filtering","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;filtering enabled=&quot;true&quot;&gt;\n    &lt;/filtering&gt;","id":null,"label":"filtering","rawXml":"<filtering enabled=\"true\">\n    </filtering>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.document.characterFiltering.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/character-filtering-service-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.core.document.characterFiltering.contrib\">\n\n  <extension target=\"org.nuxeo.ecm.core.filter.CharacterFilteringService\" point=\"filtering\">\n    <filtering enabled=\"true\">\n    </filtering>\n  </extension>\n\n</component>"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.event.orphanVersionRemoval.listener","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.event.orphanVersionRemoval.listener--listener","extensionPoint":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentation":"\n      Listener used by DefaultVersionRemovalPolicy to remove the Orphan versions from repository in an async manner.\n    \n","xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n\n    <documentation>\n      Listener used by DefaultVersionRemovalPolicy to remove the Orphan versions from repository in an async manner.\n    </documentation>\n    <listener async=\"true\" class=\"org.nuxeo.ecm.core.versioning.OrphanVersionRemoverListener\" name=\"orphanVersionRemoverListener\" postCommit=\"true\">\n      <event>orphan_versions_to_remove</event>\n    </listener>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.event.EventServiceComponent","rawName":"service:org.nuxeo.ecm.core.event.EventServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.event.orphanVersionRemoval.listener/Contributions/org.nuxeo.ecm.core.event.orphanVersionRemoval.listener--listener","documentationHtml":"<p/>\nListener used by DefaultVersionRemovalPolicy to remove the Orphan versions from repository in an async manner.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;listener async=&quot;true&quot; class=&quot;org.nuxeo.ecm.core.versioning.OrphanVersionRemoverListener&quot; name=&quot;orphanVersionRemoverListener&quot; postCommit=&quot;true&quot;&gt;\n      &lt;event&gt;orphan_versions_to_remove&lt;/event&gt;\n    &lt;/listener&gt;","id":"orphanVersionRemoverListener","label":"listener orphanVersionRemoverListener","rawXml":"<listener async=\"true\" class=\"org.nuxeo.ecm.core.versioning.OrphanVersionRemoverListener\" name=\"orphanVersionRemoverListener\" postCommit=\"true\">\n      <event>orphan_versions_to_remove</event>\n    </listener>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.event.orphanVersionRemoval.listener","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/orphanVersionRemoval-listener-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.event.orphanVersionRemoval.listener\"\n  version=\"1.0\">\n\n  <extension target=\"org.nuxeo.ecm.core.event.EventServiceComponent\"\n    point=\"listener\">\n\n    <documentation>\n      Listener used by DefaultVersionRemovalPolicy to remove the Orphan versions from repository in an async manner.\n    </documentation>\n    <listener name=\"orphanVersionRemoverListener\" async=\"true\" postCommit=\"true\"\n      class=\"org.nuxeo.ecm.core.versioning.OrphanVersionRemoverListener\">\n      <event>orphan_versions_to_remove</event>\n    </listener>\n\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.api.versioning.VersioningService","extensionPoints":[{"@type":"NXExtensionPoint","name":"restrictions","descriptors":["org.nuxeo.ecm.core.versioning.VersioningRestrictionDescriptor"],"documentation":"\n      Extension point defining restrictions of versioning option by document type. Contributions to this XP are\n      available for VersioningService implementing ExtendableVersioningService interface.\n\n      Example:\n\n      <code>\n    <restriction type=\"File\">\n        <options lifeCycleState=\"project\">\n            <option>NONE</option>\n            <option default=\"true\">MINOR</option>\n        </options>\n        <options lifeCycleState=\"approved\"/>\n    </restriction>\n    <restriction type=\"*\">\n        <options lifeCycleState=\"*\">\n            <option default=\"true\">NONE</option>\n            <option>MINOR</option>\n            <option>MAJOR</option>\n        </options>\n        <options lifeCycleState=\"approved\">\n            <option default=\"true\">NONE</option>\n            <option>MINOR</option>\n        </options>\n    </restriction>\n</code>\n\n\n      \"type\" attribute is available for restriction tag and should be the name of a document type.\n\n      The restriction with type \"*\" will be used for all the document types if no specific restriction is contributed.\n\n      Options tag contains the different increment option available when saving a document. If the default attribute\n      isn't set, the first tag will be used as default. Options tag should always have the lifeCycleState attribute.\n      The life cycle state name \"*\" can be used to match any state: it'll be used by default if no other option with\n      a matching state exists.\n\n      Following option gives no increment saving option when the current life cycle of the document is approved.\n      <code>\n    <options lifeCycleState=\"approved\"/>\n</code>\n\n\n      Following options removes major increment option and set the minor increment option as default choice when the\n      current life cycle of the document is projet.\n      <code>\n    <options lifeCycleState=\"project\">\n        <none/>\n        <minor default=\"true\"/>\n    </options>\n</code>\n\n\n      If no restriction is specified, the restriction with \"*\" is used. If there is no default restriction, we fall\n      back on the service implementation (ie: none, minor and major options are available).\n\n      @since 9.1\n    \n","id":"org.nuxeo.ecm.core.api.versioning.VersioningService--restrictions","version":"11.1-SNAPSHOT","label":"restrictions (org.nuxeo.ecm.core.api.versioning.VersioningService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.api.versioning.VersioningService/ExtensionPoints/org.nuxeo.ecm.core.api.versioning.VersioningService--restrictions","documentationHtml":"<p/>\nExtension point defining restrictions of versioning option by document type. Contributions to this XP are\navailable for VersioningService implementing ExtendableVersioningService interface.\n<p/>\nExample:\n<p/>\n<pre><code>    &lt;restriction type=\"File\">\n        &lt;options lifeCycleState=\"project\">\n            &lt;option>NONE&lt;/option>\n            &lt;option default=\"true\">MINOR&lt;/option>\n        &lt;/options>\n        &lt;options lifeCycleState=\"approved\"/>\n    &lt;/restriction>\n    &lt;restriction type=\"*\">\n        &lt;options lifeCycleState=\"*\">\n            &lt;option default=\"true\">NONE&lt;/option>\n            &lt;option>MINOR&lt;/option>\n            &lt;option>MAJOR&lt;/option>\n        &lt;/options>\n        &lt;options lifeCycleState=\"approved\">\n            &lt;option default=\"true\">NONE&lt;/option>\n            &lt;option>MINOR&lt;/option>\n        &lt;/options>\n    &lt;/restriction>\n</code></pre><p/>\n\"type\" attribute is available for restriction tag and should be the name of a document type.\n<p/>\nThe restriction with type \"*\" will be used for all the document types if no specific restriction is contributed.\n<p/>\nOptions tag contains the different increment option available when saving a document. If the default attribute\nisn't set, the first tag will be used as default. Options tag should always have the lifeCycleState attribute.\nThe life cycle state name \"*\" can be used to match any state: it'll be used by default if no other option with\na matching state exists.\n<p/>\nFollowing option gives no increment saving option when the current life cycle of the document is approved.\n<p/><pre><code>    &lt;options lifeCycleState=\"approved\"/>\n</code></pre><p/>\nFollowing options removes major increment option and set the minor increment option as default choice when the\ncurrent life cycle of the document is projet.\n<p/><pre><code>    &lt;options lifeCycleState=\"project\">\n        &lt;none/>\n        &lt;minor default=\"true\"/>\n    &lt;/options>\n</code></pre><p/>\nIf no restriction is specified, the restriction with \"*\" is used. If there is no default restriction, we fall\nback on the service implementation (ie: none, minor and major options are available).\n<p/>\n@since 9.1\n<p/>","componentId":"org.nuxeo.ecm.core.api.versioning.VersioningService"},{"@type":"NXExtensionPoint","name":"filters","descriptors":["org.nuxeo.ecm.core.versioning.VersioningFilterDescriptor"],"documentation":"\n      Extension point defining filters which can be used\n      by one or multiple versioning policies.\n      Contributions to this extension point are available for VersioningService\n      implementing ExtendableVersioningService interface.\n\n      Example :\n      <code>\n    <filter class=\"foo.bar.CustomVersioningFilter\" id=\"class-filter\"/>\n    <filter id=\"collaborative-filter-on-files\">\n        <type>File</type>\n        <condition>#{previousDocument.dc.lastContributor != currentDocument.dc.lastContributor}</condition>\n    </filter>\n    <filter id=\"empty\">\n        <type/>\n        <facet/>\n        <schema/>\n        <condition/>\n    </filter>\n</code>\n\n\n      A custom filter can be defined with the class attribute\n      if a java class should be used for the filter.\n      Otherwise, a StandardVersioningFilter will be used\n      with the following elements available:\n\n       - The type element defines which document type will be versioned.\n\n       - The facet/schema element defines that the document\n         will be versioned if it contains the facet/schema.\n\n       - The condition element enables creating\n         a custom condition with an EL expression.\n\n      Note that elements for a filter are AND-ed.\n\n      @since 9.1\n    \n","id":"org.nuxeo.ecm.core.api.versioning.VersioningService--filters","version":"11.1-SNAPSHOT","label":"filters (org.nuxeo.ecm.core.api.versioning.VersioningService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.api.versioning.VersioningService/ExtensionPoints/org.nuxeo.ecm.core.api.versioning.VersioningService--filters","documentationHtml":"<p/>\nExtension point defining filters which can be used\nby one or multiple versioning policies.\nContributions to this extension point are available for VersioningService\nimplementing ExtendableVersioningService interface.\n<p/>\nExample :\n<p/><pre><code>    &lt;filter class=\"foo.bar.CustomVersioningFilter\" id=\"class-filter\"/>\n    &lt;filter id=\"collaborative-filter-on-files\">\n        &lt;type>File&lt;/type>\n        &lt;condition>#{previousDocument.dc.lastContributor != currentDocument.dc.lastContributor}&lt;/condition>\n    &lt;/filter>\n    &lt;filter id=\"empty\">\n        &lt;type/>\n        &lt;facet/>\n        &lt;schema/>\n        &lt;condition/>\n    &lt;/filter>\n</code></pre><p/>\nA custom filter can be defined with the class attribute\nif a java class should be used for the filter.\nOtherwise, a StandardVersioningFilter will be used\nwith the following elements available:\n<p/>\n- The type element defines which document type will be versioned.\n<p/>\n- The facet/schema element defines that the document\nwill be versioned if it contains the facet/schema.\n<p/>\n- The condition element enables creating\na custom condition with an EL expression.\n<p/>\nNote that elements for a filter are AND-ed.\n<p/>\n@since 9.1\n<p/>","componentId":"org.nuxeo.ecm.core.api.versioning.VersioningService"},{"@type":"NXExtensionPoint","name":"policies","descriptors":["org.nuxeo.ecm.core.versioning.VersioningPolicyDescriptor"],"documentation":"\n      Extension point defining versioning policies for documents.\n      Contributions to this extension point are available for VersioningService\n      implementing ExtendableVersioningService interface.\n\n      Example:\n      <code>\n    <policy beforeUpdate=\"true\"\n        id=\"no-versioning-for-system-before-update\" increment=\"NONE\" order=\"1\">\n        <filter-id>system-document</filter-id>\n    </policy>\n    <policy id=\"no-versioning-for-system-after-update\" increment=\"NONE\" order=\"1\">\n        <filter-id>system-document</filter-id>\n    </policy>\n    <policy id=\"versioning-with-initial-version\" increment=\"MINOR\" order=\"2\">\n        <initialState major=\"1\" minor=\"0\"/>\n    </policy>\n</code>\n\n\n      The beforeUpdate attribute enables, if set to true,\n      to apply versioning before the actual update of the document.\n      The default value for this attribute is false.\n\n      The increment attribute defines which version number\n      (minor or major) have to be incremented.\n      The available options for this attribute are :\n        - NONE\n        - MINOR\n        - MAJOR\n\n      The order attribute defines in which order the policies\n      should be taken into account. They are taken in ascending order.\n\n      Initial state is the initial version number of the document.\n      Default is 0.0.\n\n      Each policy contains one or multiple filters\n      defining under which conditions the document should be versioned\n      (Note that filters for a policy are OR-ed).\n\n      @since 9.1\n    \n","id":"org.nuxeo.ecm.core.api.versioning.VersioningService--policies","version":"11.1-SNAPSHOT","label":"policies (org.nuxeo.ecm.core.api.versioning.VersioningService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.api.versioning.VersioningService/ExtensionPoints/org.nuxeo.ecm.core.api.versioning.VersioningService--policies","documentationHtml":"<p/>\nExtension point defining versioning policies for documents.\nContributions to this extension point are available for VersioningService\nimplementing ExtendableVersioningService interface.\n<p/>\nExample:\n<p/><pre><code>    &lt;policy beforeUpdate=\"true\"\n        id=\"no-versioning-for-system-before-update\" increment=\"NONE\" order=\"1\">\n        &lt;filter-id>system-document&lt;/filter-id>\n    &lt;/policy>\n    &lt;policy id=\"no-versioning-for-system-after-update\" increment=\"NONE\" order=\"1\">\n        &lt;filter-id>system-document&lt;/filter-id>\n    &lt;/policy>\n    &lt;policy id=\"versioning-with-initial-version\" increment=\"MINOR\" order=\"2\">\n        &lt;initialState major=\"1\" minor=\"0\"/>\n    &lt;/policy>\n</code></pre><p/>\nThe beforeUpdate attribute enables, if set to true,\nto apply versioning before the actual update of the document.\nThe default value for this attribute is false.\n<p/>\nThe increment attribute defines which version number\n(minor or major) have to be incremented.\nThe available options for this attribute are :\n- NONE\n- MINOR\n- MAJOR\n<p/>\nThe order attribute defines in which order the policies\nshould be taken into account. They are taken in ascending order.\n<p/>\nInitial state is the initial version number of the document.\nDefault is 0.0.\n<p/>\nEach policy contains one or multiple filters\ndefining under which conditions the document should be versioned\n(Note that filters for a policy are OR-ed).\n<p/>\n@since 9.1\n<p/>","componentId":"org.nuxeo.ecm.core.api.versioning.VersioningService"},{"@type":"NXExtensionPoint","name":"versioningService","descriptors":["org.nuxeo.ecm.core.versioning.VersioningServiceDescriptor"],"documentation":"\n      Extension point defining the implementation of the versioning policy.\n      Example:\n\n      <code>\n    <service class=\"some-class\"/>\n</code>\n\n\n      The provided class must implement\n      org.nuxeo.ecm.core.api.versioning.VersioningService\n\n      The default implementation is\n      org.nuxeo.ecm.core.versioning.StandardVersioningService You can contribute\n      org.nuxeo.ecm.core.versioning.CompatVersioningService to get pre-Nuxeo 5.4\n      behavior.\n    \n","id":"org.nuxeo.ecm.core.api.versioning.VersioningService--versioningService","version":"11.1-SNAPSHOT","label":"versioningService (org.nuxeo.ecm.core.api.versioning.VersioningService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.api.versioning.VersioningService/ExtensionPoints/org.nuxeo.ecm.core.api.versioning.VersioningService--versioningService","documentationHtml":"<p/>\nExtension point defining the implementation of the versioning policy.\nExample:\n<p/>\n<pre><code>    &lt;service class=\"some-class\"/>\n</code></pre><p/>\nThe provided class must implement\norg.nuxeo.ecm.core.api.versioning.VersioningService\n<p/>\nThe default implementation is\norg.nuxeo.ecm.core.versioning.StandardVersioningService You can contribute\norg.nuxeo.ecm.core.versioning.CompatVersioningService to get pre-Nuxeo 5.4\nbehavior.\n<p/>","componentId":"org.nuxeo.ecm.core.api.versioning.VersioningService"},{"@type":"NXExtensionPoint","name":"versioningRules","descriptors":["org.nuxeo.ecm.core.versioning.VersioningRuleDescriptor","org.nuxeo.ecm.core.versioning.DefaultVersioningRuleDescriptor"],"documentation":"\n      CAUTION: Deprecated since 9.1, use policies, filters and restrictions extension points. Compatibility is provided,\n      contribution to this endpoint will be converted to new contributions in order to preserve the initial state and\n      options. The default contribution will be converted to a policy with an order equals to 10000, and each\n      versioningRule will have an order equals to 10000 - idx where idx is the index of rule in VersioningComponent.\n\n      Extension point defining default versioning rules or versioning rules by\n      document type. Contributions to this XP are available for\n      VersioningService implementing ExtendableVersioningService interface.\n\n      Example:\n\n      <code>\n    <defaultVersioningRule>\n        <initialState major=\"1\" minor=\"0\"/>\n        <options lifeCycleState=\"*\">\n            <none default=\"true\"/>\n            <minor/>\n            <major/>\n        </options>\n        <options lifeCycleState=\"approved\">\n            <none default=\"true\"/>\n            <minor/>\n        </options>\n    </defaultVersioningRule>\n    <versioningRule enabled=\"true\" typeName=\"File\">\n        <initialState major=\"1\" minor=\"1\"/>\n        <options lifeCycleState=\"project\">\n            <none/>\n            <minor default=\"true\"/>\n        </options>\n        <options lifeCycleState=\"approved\"/>\n    </versioningRule>\n</code>\n\n\n      The defaultVersioningRule will be used for all the document types if no\n      specific versioningRule is contributed.\n\n      typeName attribute is only available for versioningRule tag and should be\n      the name of a document type.\n\n      Initial state is the initial version number of the document. Default is\n      0.0 .\n\n      Options tag contains the different increment option available when saving\n      a document. Only none, minor and major tags are used. If the default\n      attribute isn't set, the first tag will be used as default. Options tag\n      should always have the lifeCycleState attribute. The life cycle state name\n      \"*\" can be used to match any state: it'll be used by default if no other\n      option with a matching state exists.\n\n      Following option gives no increment saving option when the current\n      lifeCycle of the document is approved.\n      <code>\n    <options lifeCycleState=\"approved\"/>\n</code>\n\n\n      Following options removes major increment option and set the minor\n      increment option as default choice.\n      <code>\n    <options lifeCycleState=\"project\">\n        <none/>\n        <minor default=\"true\"/>\n    </options>\n</code>\n\n\n      If no option is specified, the defaultVersioningRule is used. If there is\n      no defaultVersioningRule, we fall back on the service implementation.\n\n      @Since 5.4.2\n    \n","id":"org.nuxeo.ecm.core.api.versioning.VersioningService--versioningRules","version":"11.1-SNAPSHOT","label":"versioningRules (org.nuxeo.ecm.core.api.versioning.VersioningService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.api.versioning.VersioningService/ExtensionPoints/org.nuxeo.ecm.core.api.versioning.VersioningService--versioningRules","documentationHtml":"<p/>\nCAUTION: Deprecated since 9.1, use policies, filters and restrictions extension points. Compatibility is provided,\ncontribution to this endpoint will be converted to new contributions in order to preserve the initial state and\noptions. The default contribution will be converted to a policy with an order equals to 10000, and each\nversioningRule will have an order equals to 10000 - idx where idx is the index of rule in VersioningComponent.\n<p/>\nExtension point defining default versioning rules or versioning rules by\ndocument type. Contributions to this XP are available for\nVersioningService implementing ExtendableVersioningService interface.\n<p/>\nExample:\n<p/>\n<pre><code>    &lt;defaultVersioningRule>\n        &lt;initialState major=\"1\" minor=\"0\"/>\n        &lt;options lifeCycleState=\"*\">\n            &lt;none default=\"true\"/>\n            &lt;minor/>\n            &lt;major/>\n        &lt;/options>\n        &lt;options lifeCycleState=\"approved\">\n            &lt;none default=\"true\"/>\n            &lt;minor/>\n        &lt;/options>\n    &lt;/defaultVersioningRule>\n    &lt;versioningRule enabled=\"true\" typeName=\"File\">\n        &lt;initialState major=\"1\" minor=\"1\"/>\n        &lt;options lifeCycleState=\"project\">\n            &lt;none/>\n            &lt;minor default=\"true\"/>\n        &lt;/options>\n        &lt;options lifeCycleState=\"approved\"/>\n    &lt;/versioningRule>\n</code></pre><p/>\nThe defaultVersioningRule will be used for all the document types if no\nspecific versioningRule is contributed.\n<p/>\ntypeName attribute is only available for versioningRule tag and should be\nthe name of a document type.\n<p/>\nInitial state is the initial version number of the document. Default is\n0.0 .\n<p/>\nOptions tag contains the different increment option available when saving\na document. Only none, minor and major tags are used. If the default\nattribute isn't set, the first tag will be used as default. Options tag\nshould always have the lifeCycleState attribute. The life cycle state name\n\"*\" can be used to match any state: it'll be used by default if no other\noption with a matching state exists.\n<p/>\nFollowing option gives no increment saving option when the current\nlifeCycle of the document is approved.\n<p/><pre><code>    &lt;options lifeCycleState=\"approved\"/>\n</code></pre><p/>\nFollowing options removes major increment option and set the minor\nincrement option as default choice.\n<p/><pre><code>    &lt;options lifeCycleState=\"project\">\n        &lt;none/>\n        &lt;minor default=\"true\"/>\n    &lt;/options>\n</code></pre><p/>\nIf no option is specified, the defaultVersioningRule is used. If there is\nno defaultVersioningRule, we fall back on the service implementation.\n<p/>\n@Since 5.4.2\n<p/>","componentId":"org.nuxeo.ecm.core.api.versioning.VersioningService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.api.versioning.VersioningService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.api.versioning.VersioningService/Services/org.nuxeo.ecm.core.api.versioning.VersioningService","componentId":"org.nuxeo.ecm.core.api.versioning.VersioningService"},{"@type":"NXService","id":"org.nuxeo.ecm.core.versioning.VersioningService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.api.versioning.VersioningService/Services/org.nuxeo.ecm.core.versioning.VersioningService","componentId":"org.nuxeo.ecm.core.api.versioning.VersioningService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.versioning.VersioningComponent","documentation":"\n    The versioning service hold the versioning policy used to define what\n    happens to a document's version when it is created, saved, checked in,\n    checked out or restored, and what version increment options (none, minor,\n    major) are made available to the user.\n\n    @Since 5.4\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.api.versioning.VersioningService","documentationHtml":"<p/>\nThe versioning service hold the versioning policy used to define what\nhappens to a document's version when it is created, saved, checked in,\nchecked out or restored, and what version increment options (none, minor,\nmajor) are made available to the user.\n<p/>\n@Since 5.4\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/versioning-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.api.versioning.VersioningService\">\n  <alias>org.nuxeo.ecm.core.versioning.VersioningService</alias>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.api.versioning.VersioningService\" />\n    <provide interface=\"org.nuxeo.ecm.core.versioning.VersioningService\" />\n  </service>\n\n  <implementation class=\"org.nuxeo.ecm.core.versioning.VersioningComponent\" />\n\n  <documentation>\n    The versioning service hold the versioning policy used to define what\n    happens to a document's version when it is created, saved, checked in,\n    checked out or restored, and what version increment options (none, minor,\n    major) are made available to the user.\n\n    @Since 5.4\n  </documentation>\n\n  <extension-point name=\"versioningService\">\n    <documentation>\n      Extension point defining the implementation of the versioning policy.\n      Example:\n\n      <code>\n        <service class=\"some-class\" />\n      </code>\n\n      The provided class must implement\n      org.nuxeo.ecm.core.api.versioning.VersioningService\n\n      The default implementation is\n      org.nuxeo.ecm.core.versioning.StandardVersioningService You can contribute\n      org.nuxeo.ecm.core.versioning.CompatVersioningService to get pre-Nuxeo 5.4\n      behavior.\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.versioning.VersioningServiceDescriptor\" />\n\n  </extension-point>\n\n  <extension-point name=\"versioningRules\">\n    <documentation>\n      CAUTION: Deprecated since 9.1, use policies, filters and restrictions extension points. Compatibility is provided,\n      contribution to this endpoint will be converted to new contributions in order to preserve the initial state and\n      options. The default contribution will be converted to a policy with an order equals to 10000, and each\n      versioningRule will have an order equals to 10000 - idx where idx is the index of rule in VersioningComponent.\n\n      Extension point defining default versioning rules or versioning rules by\n      document type. Contributions to this XP are available for\n      VersioningService implementing ExtendableVersioningService interface.\n\n      Example:\n\n      <code>\n        <defaultVersioningRule>\n          <initialState major=\"1\" minor=\"0\" />\n          <options lifeCycleState=\"*\">\n            <none default=\"true\" />\n            <minor />\n            <major />\n          </options>\n          <options lifeCycleState=\"approved\">\n            <none default=\"true\" />\n            <minor />\n          </options>\n        </defaultVersioningRule>\n\n        <versioningRule typeName=\"File\" enabled=\"true\">\n          <initialState major=\"1\" minor=\"1\" />\n          <options lifeCycleState=\"project\">\n            <none />\n            <minor default=\"true\" />\n          </options>\n          <options lifeCycleState=\"approved\" />\n        </versioningRule>\n      </code>\n\n      The defaultVersioningRule will be used for all the document types if no\n      specific versioningRule is contributed.\n\n      typeName attribute is only available for versioningRule tag and should be\n      the name of a document type.\n\n      Initial state is the initial version number of the document. Default is\n      0.0 .\n\n      Options tag contains the different increment option available when saving\n      a document. Only none, minor and major tags are used. If the default\n      attribute isn't set, the first tag will be used as default. Options tag\n      should always have the lifeCycleState attribute. The life cycle state name\n      \"*\" can be used to match any state: it'll be used by default if no other\n      option with a matching state exists.\n\n      Following option gives no increment saving option when the current\n      lifeCycle of the document is approved.\n      <code>\n        <options lifeCycleState=\"approved\" />\n      </code>\n\n      Following options removes major increment option and set the minor\n      increment option as default choice.\n      <code>\n        <options lifeCycleState=\"project\">\n          <none />\n          <minor default=\"true\" />\n        </options>\n      </code>\n\n      If no option is specified, the defaultVersioningRule is used. If there is\n      no defaultVersioningRule, we fall back on the service implementation.\n\n      @Since 5.4.2\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.versioning.VersioningRuleDescriptor\" />\n    <object class=\"org.nuxeo.ecm.core.versioning.DefaultVersioningRuleDescriptor\" />\n\n  </extension-point>\n\n  <extension-point name=\"policies\">\n\n    <documentation>\n      Extension point defining versioning policies for documents.\n      Contributions to this extension point are available for VersioningService\n      implementing ExtendableVersioningService interface.\n\n      Example:\n      <code>\n        <policy id=\"no-versioning-for-system-before-update\" beforeUpdate=\"true\" increment=\"NONE\" order=\"1\">\n          <filter-id>system-document</filter-id>\n        </policy>\n        <policy id=\"no-versioning-for-system-after-update\" increment=\"NONE\" order=\"1\">\n          <filter-id>system-document</filter-id>\n        </policy>\n        <policy id=\"versioning-with-initial-version\" increment=\"MINOR\" order=\"2\">\n          <initialState major=\"1\" minor=\"0\" />\n        </policy>\n      </code>\n\n      The beforeUpdate attribute enables, if set to true,\n      to apply versioning before the actual update of the document.\n      The default value for this attribute is false.\n\n      The increment attribute defines which version number\n      (minor or major) have to be incremented.\n      The available options for this attribute are :\n        - NONE\n        - MINOR\n        - MAJOR\n\n      The order attribute defines in which order the policies\n      should be taken into account. They are taken in ascending order.\n\n      Initial state is the initial version number of the document.\n      Default is 0.0.\n\n      Each policy contains one or multiple filters\n      defining under which conditions the document should be versioned\n      (Note that filters for a policy are OR-ed).\n\n      @since 9.1\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.versioning.VersioningPolicyDescriptor\" />\n\n  </extension-point>\n\n  <extension-point name=\"filters\">\n\n    <documentation>\n      Extension point defining filters which can be used\n      by one or multiple versioning policies.\n      Contributions to this extension point are available for VersioningService\n      implementing ExtendableVersioningService interface.\n\n      Example :\n      <code>\n\n        <filter id=\"class-filter\" class=\"foo.bar.CustomVersioningFilter\"/>\n\n        <filter id=\"collaborative-filter-on-files\">\n          <type>File</type>\n          <condition>#{previousDocument.dc.lastContributor != currentDocument.dc.lastContributor}</condition>\n        </filter>\n\n        <filter id=\"empty\">\n          <type></type>\n          <facet></facet>\n          <schema></schema>\n          <condition></condition>\n        </filter>\n      </code>\n\n      A custom filter can be defined with the class attribute\n      if a java class should be used for the filter.\n      Otherwise, a StandardVersioningFilter will be used\n      with the following elements available:\n\n       - The type element defines which document type will be versioned.\n\n       - The facet/schema element defines that the document\n         will be versioned if it contains the facet/schema.\n\n       - The condition element enables creating\n         a custom condition with an EL expression.\n\n      Note that elements for a filter are AND-ed.\n\n      @since 9.1\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.versioning.VersioningFilterDescriptor\" />\n\n  </extension-point>\n\n  <extension-point name=\"restrictions\">\n    <documentation>\n      Extension point defining restrictions of versioning option by document type. Contributions to this XP are\n      available for VersioningService implementing ExtendableVersioningService interface.\n\n      Example:\n\n      <code>\n        <restriction type=\"File\">\n          <options lifeCycleState=\"project\">\n            <option>NONE</option>\n            <option default=\"true\">MINOR</option>\n          </options>\n          <options lifeCycleState=\"approved\" />\n        </restriction>\n\n        <restriction type=\"*\">\n          <options lifeCycleState=\"*\">\n            <option default=\"true\">NONE</option>\n            <option>MINOR</option>\n            <option>MAJOR</option>\n          </options>\n          <options lifeCycleState=\"approved\">\n            <option default=\"true\">NONE</option>\n            <option>MINOR</option>\n          </options>\n        </restriction>\n      </code>\n\n      \"type\" attribute is available for restriction tag and should be the name of a document type.\n\n      The restriction with type \"*\" will be used for all the document types if no specific restriction is contributed.\n\n      Options tag contains the different increment option available when saving a document. If the default attribute\n      isn't set, the first tag will be used as default. Options tag should always have the lifeCycleState attribute.\n      The life cycle state name \"*\" can be used to match any state: it'll be used by default if no other option with\n      a matching state exists.\n\n      Following option gives no increment saving option when the current life cycle of the document is approved.\n      <code>\n        <options lifeCycleState=\"approved\" />\n      </code>\n\n      Following options removes major increment option and set the minor increment option as default choice when the\n      current life cycle of the document is projet.\n      <code>\n        <options lifeCycleState=\"project\">\n          <none />\n          <minor default=\"true\" />\n        </options>\n      </code>\n\n      If no restriction is specified, the restriction with \"*\" is used. If there is no default restriction, we fall\n      back on the service implementation (ie: none, minor and major options are available).\n\n      @since 9.1\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.versioning.VersioningRestrictionDescriptor\" />\n\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.trash.service.migrator","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.trash.service.migrator--configuration","extensionPoint":"org.nuxeo.runtime.migration.MigrationService--configuration","documentation":null,"xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.migration.MigrationService\">\n\n    <migration id=\"trash-storage\">\n      <description label=\"migration.trash-storage\">Migration of in the trash storage model</description>\n      <class>org.nuxeo.ecm.core.trash.TrashedStateMigrator</class>\n      <defaultState>property</defaultState>\n      <state id=\"lifecycle\">\n        <description label=\"migration.trash-storage.lifecycle\">Trashed state stored as deleted lifecycle state</description>\n      </state>\n      <state id=\"property\">\n        <description label=\"migration.trash-storage.property\">Trashed state stored as system property</description>\n      </state>\n\n      <step fromState=\"lifecycle\" id=\"lifecycle-to-property\" toState=\"property\">\n        <description label=\"migration.trash-storage.lifecycle-to-property\">Migrate trashed state from lifecycle to property</description>\n      </step>\n    </migration>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.migration.MigrationService","rawName":"service:org.nuxeo.runtime.migration.MigrationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.trash.service.migrator/Contributions/org.nuxeo.ecm.core.trash.service.migrator--configuration","documentationHtml":"","contributionItems":[{"documentation":"<p/>\nlabel=\"migration.trash-storage.lifecycle-to-property\">Migrate trashed state from lifecycle to property","xml":"&lt;migration id=&quot;trash-storage&quot;&gt;\n      &lt;description label=&quot;migration.trash-storage&quot;&gt;Migration of in the trash storage model&lt;/description&gt;\n      &lt;class&gt;org.nuxeo.ecm.core.trash.TrashedStateMigrator&lt;/class&gt;\n      &lt;defaultState&gt;property&lt;/defaultState&gt;\n      &lt;state id=&quot;lifecycle&quot;&gt;\n        &lt;description label=&quot;migration.trash-storage.lifecycle&quot;&gt;Trashed state stored as deleted lifecycle state&lt;/description&gt;\n      &lt;/state&gt;\n      &lt;state id=&quot;property&quot;&gt;\n        &lt;description label=&quot;migration.trash-storage.property&quot;&gt;Trashed state stored as system property&lt;/description&gt;\n      &lt;/state&gt;\n\n      &lt;step fromState=&quot;lifecycle&quot; id=&quot;lifecycle-to-property&quot; toState=&quot;property&quot;&gt;\n        &lt;description label=&quot;migration.trash-storage.lifecycle-to-property&quot;&gt;Migrate trashed state from lifecycle to property&lt;/description&gt;\n      &lt;/step&gt;\n    &lt;/migration&gt;","id":"trash-storage","label":"migration trash-storage","rawXml":"<migration id=\"trash-storage\">\n      <description label=\"migration.trash-storage\">Migration of in the trash storage model</description>\n      <class>org.nuxeo.ecm.core.trash.TrashedStateMigrator</class>\n      <defaultState>property</defaultState>\n      <state id=\"lifecycle\">\n        <description label=\"migration.trash-storage.lifecycle\">Trashed state stored as deleted lifecycle state</description>\n      </state>\n      <state id=\"property\">\n        <description label=\"migration.trash-storage.property\">Trashed state stored as system property</description>\n      </state>\n\n      <step fromState=\"lifecycle\" id=\"lifecycle-to-property\" toState=\"property\">\n        <description label=\"migration.trash-storage.lifecycle-to-property\">Migrate trashed state from lifecycle to property</description>\n      </step>\n    </migration>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.trash.service.migrator","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/trash-migration.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.trash.service.migrator\" version=\"1.0\">\n\n  <extension target=\"org.nuxeo.runtime.migration.MigrationService\" point=\"configuration\">\n\n    <migration id=\"trash-storage\">\n      <description label=\"migration.trash-storage\">Migration of in the trash storage model</description>\n      <class>org.nuxeo.ecm.core.trash.TrashedStateMigrator</class>\n      <defaultState>property</defaultState>\n      <state id=\"lifecycle\">\n        <description label=\"migration.trash-storage.lifecycle\">Trashed state stored as deleted lifecycle state</description>\n      </state>\n      <state id=\"property\">\n        <description label=\"migration.trash-storage.property\">Trashed state stored as system property</description>\n      </state>\n\n      <step id=\"lifecycle-to-property\" fromState=\"lifecycle\" toState=\"property\">\n        <description label=\"migration.trash-storage.lifecycle-to-property\">Migrate trashed state from lifecycle to property</description>\n      </step>\n    </migration>\n\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.retention.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.retention.contrib--policies","extensionPoint":"org.nuxeo.ecm.core.security.SecurityService--policies","documentation":"\n      The retention and hold security policy prevents deletion of a document\n      when it is under retention or has a legal hold.\n    \n","xml":"<extension point=\"policies\" target=\"org.nuxeo.ecm.core.security.SecurityService\">\n    <documentation>\n      The retention and hold security policy prevents deletion of a document\n      when it is under retention or has a legal hold.\n    </documentation>\n    <policy class=\"org.nuxeo.ecm.core.security.RetentionAndHoldSecurityPolicy\" name=\"retentionAndHold\" order=\"1\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.security.SecurityService","rawName":"service:org.nuxeo.ecm.core.security.SecurityService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.retention.contrib/Contributions/org.nuxeo.ecm.core.retention.contrib--policies","documentationHtml":"<p/>\nThe retention and hold security policy prevents deletion of a document\nwhen it is under retention or has a legal hold.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;policy class=&quot;org.nuxeo.ecm.core.security.RetentionAndHoldSecurityPolicy&quot; name=&quot;retentionAndHold&quot; order=&quot;1&quot;/&gt;","id":"retentionAndHold","label":"policy retentionAndHold","rawXml":"<policy class=\"org.nuxeo.ecm.core.security.RetentionAndHoldSecurityPolicy\" name=\"retentionAndHold\" order=\"1\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.retention.contrib--schedule","extensionPoint":"org.nuxeo.ecm.platform.scheduler.core.service.SchedulerRegistryService--schedule","documentation":null,"xml":"<extension point=\"schedule\" target=\"org.nuxeo.ecm.platform.scheduler.core.service.SchedulerRegistryService\">\n    <schedule id=\"findRetentionExpired\">\n      <eventId>findRetentionExpired</eventId>\n      <!-- every hour -->\n      <cronExpression>0 0 * * * ?</cronExpression>\n    </schedule>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.scheduler.core.service.SchedulerRegistryService","rawName":"service:org.nuxeo.ecm.platform.scheduler.core.service.SchedulerRegistryService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.retention.contrib/Contributions/org.nuxeo.ecm.core.retention.contrib--schedule","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;schedule id=&quot;findRetentionExpired&quot;&gt;\n      &lt;eventId&gt;findRetentionExpired&lt;/eventId&gt;\n      &lt;!-- every hour --&gt;\n      &lt;cronExpression&gt;0 0 * * * ?&lt;/cronExpression&gt;\n    &lt;/schedule&gt;","id":"findRetentionExpired","label":"schedule findRetentionExpired","rawXml":"<schedule id=\"findRetentionExpired\">\n      <eventId>findRetentionExpired</eventId>\n      <!-- every hour -->\n      <cronExpression>0 0 * * * ?</cronExpression>\n    </schedule>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.retention.contrib--listener","extensionPoint":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentation":null,"xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n    <listener async=\"true\" class=\"org.nuxeo.ecm.core.security.RetentionExpiredFinderListener\" name=\"findRetentionExpired\">\n      <event>findRetentionExpired</event>\n    </listener>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.event.EventServiceComponent","rawName":"service:org.nuxeo.ecm.core.event.EventServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.retention.contrib/Contributions/org.nuxeo.ecm.core.retention.contrib--listener","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;listener async=&quot;true&quot; class=&quot;org.nuxeo.ecm.core.security.RetentionExpiredFinderListener&quot; name=&quot;findRetentionExpired&quot;&gt;\n      &lt;event&gt;findRetentionExpired&lt;/event&gt;\n    &lt;/listener&gt;","id":"findRetentionExpired","label":"listener findRetentionExpired","rawXml":"<listener async=\"true\" class=\"org.nuxeo.ecm.core.security.RetentionExpiredFinderListener\" name=\"findRetentionExpired\">\n      <event>findRetentionExpired</event>\n    </listener>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.retention.contrib--actions","extensionPoint":"org.nuxeo.ecm.core.bulk--actions","documentation":null,"xml":"<extension point=\"actions\" target=\"org.nuxeo.ecm.core.bulk\">\n    <!-- NOT httpEnabled -->\n    <action batchSize=\"25\" bucketSize=\"100\" name=\"retentionExpired\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.bulk","rawName":"service:org.nuxeo.ecm.core.bulk"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.retention.contrib/Contributions/org.nuxeo.ecm.core.retention.contrib--actions","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;action batchSize=&quot;25&quot; bucketSize=&quot;100&quot; name=&quot;retentionExpired&quot;/&gt;","id":"retentionExpired","label":"action retentionExpired","rawXml":"<action batchSize=\"25\" bucketSize=\"100\" name=\"retentionExpired\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.retention.contrib--streamProcessor","extensionPoint":"org.nuxeo.runtime.stream.service--streamProcessor","documentation":null,"xml":"<extension point=\"streamProcessor\" target=\"org.nuxeo.runtime.stream.service\">\n    <streamProcessor class=\"org.nuxeo.ecm.core.security.RetentionExpiredAction\" defaultConcurrency=\"1\" defaultPartitions=\"1\" logConfig=\"bulk\" name=\"retentionExpired\">\n      <!-- continue on failure, because failure to expire retention doesn't give us an inconsistent state -->\n      <policy continueOnFailure=\"true\" delay=\"1s\" maxDelay=\"60s\" maxRetries=\"20\" name=\"default\"/>\n    </streamProcessor>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.stream.service","rawName":"service:org.nuxeo.runtime.stream.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.retention.contrib/Contributions/org.nuxeo.ecm.core.retention.contrib--streamProcessor","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;streamProcessor class=&quot;org.nuxeo.ecm.core.security.RetentionExpiredAction&quot; defaultConcurrency=&quot;1&quot; defaultPartitions=&quot;1&quot; logConfig=&quot;bulk&quot; name=&quot;retentionExpired&quot;&gt;\n      &lt;!-- continue on failure, because failure to expire retention doesn't give us an inconsistent state --&gt;\n      &lt;policy continueOnFailure=&quot;true&quot; delay=&quot;1s&quot; maxDelay=&quot;60s&quot; maxRetries=&quot;20&quot; name=&quot;default&quot;/&gt;\n    &lt;/streamProcessor&gt;","id":"retentionExpired","label":"streamProcessor retentionExpired","rawXml":"<streamProcessor class=\"org.nuxeo.ecm.core.security.RetentionExpiredAction\" defaultConcurrency=\"1\" defaultPartitions=\"1\" logConfig=\"bulk\" name=\"retentionExpired\">\n      <!-- continue on failure, because failure to expire retention doesn't give us an inconsistent state -->\n      <policy continueOnFailure=\"true\" delay=\"1s\" maxDelay=\"60s\" maxRetries=\"20\" name=\"default\"/>\n    </streamProcessor>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.retention.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/retention-and-hold-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.retention.contrib\" version=\"1.0.0\">\n\n  <extension target=\"org.nuxeo.ecm.core.security.SecurityService\" point=\"policies\">\n    <documentation>\n      The retention and hold security policy prevents deletion of a document\n      when it is under retention or has a legal hold.\n    </documentation>\n    <policy name=\"retentionAndHold\" class=\"org.nuxeo.ecm.core.security.RetentionAndHoldSecurityPolicy\"\n      order=\"1\" />\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.platform.scheduler.core.service.SchedulerRegistryService\" point=\"schedule\">\n    <schedule id=\"findRetentionExpired\">\n      <eventId>findRetentionExpired</eventId>\n      <!-- every hour -->\n      <cronExpression>0 0 * * * ?</cronExpression>\n    </schedule>\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.event.EventServiceComponent\" point=\"listener\">\n    <listener name=\"findRetentionExpired\" async=\"true\"\n      class=\"org.nuxeo.ecm.core.security.RetentionExpiredFinderListener\">\n      <event>findRetentionExpired</event>\n    </listener>\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.bulk\" point=\"actions\">\n    <!-- NOT httpEnabled -->\n    <action name=\"retentionExpired\" bucketSize=\"100\" batchSize=\"25\" />\n  </extension>\n\n  <extension target=\"org.nuxeo.runtime.stream.service\" point=\"streamProcessor\">\n    <streamProcessor name=\"retentionExpired\"\n      class=\"org.nuxeo.ecm.core.security.RetentionExpiredAction\"\n      logConfig=\"bulk\" defaultConcurrency=\"1\" defaultPartitions=\"1\">\n      <!-- continue on failure, because failure to expire retention doesn't give us an inconsistent state -->\n      <policy name=\"default\" maxRetries=\"20\" delay=\"1s\" maxDelay=\"60s\" continueOnFailure=\"true\" />\n    </streamProcessor>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.CoreService","extensionPoints":[{"@type":"NXExtensionPoint","name":"orphanVersionRemovalFilter","descriptors":["org.nuxeo.ecm.core.CoreServiceOrphanVersionRemovalFilterDescriptor"],"documentation":"\n      Used to register filter that are used by the default VersionRemovalPolicy implementation to check asynchronously what versions can really be removed.\n      <code>\n    <filter class=\"...\"/>\n</code>\n","id":"org.nuxeo.ecm.core.CoreService--orphanVersionRemovalFilter","version":"11.1-SNAPSHOT","label":"orphanVersionRemovalFilter (org.nuxeo.ecm.core.CoreService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.CoreService/ExtensionPoints/org.nuxeo.ecm.core.CoreService--orphanVersionRemovalFilter","documentationHtml":"<p/>\nUsed to register filter that are used by the default VersionRemovalPolicy implementation to check asynchronously what versions can really be removed.\n<p/><pre><code>    &lt;filter class=\"...\"/>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.core.CoreService"},{"@type":"NXExtensionPoint","name":"versionRemovalPolicy","descriptors":["org.nuxeo.ecm.core.CoreServicePolicyDescriptor"],"documentation":"\n      Used to register the version removal policy, which must implement\n      VersionRemovalPolicy.\n      <code>\n    <policy class=\"...\"/>\n</code>\n","id":"org.nuxeo.ecm.core.CoreService--versionRemovalPolicy","version":"11.1-SNAPSHOT","label":"versionRemovalPolicy (org.nuxeo.ecm.core.CoreService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.CoreService/ExtensionPoints/org.nuxeo.ecm.core.CoreService--versionRemovalPolicy","documentationHtml":"<p/>\nUsed to register the version removal policy, which must implement\nVersionRemovalPolicy.\n<p/><pre><code>    &lt;policy class=\"...\"/>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.core.CoreService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.CoreService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.CoreService/Services/org.nuxeo.ecm.core.CoreService","componentId":"org.nuxeo.ecm.core.CoreService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.CoreService","documentation":"\n  The core service provides a way to register version removal policies\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.CoreService","documentationHtml":"<p/>\nThe core service provides a way to register version removal policies\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/CoreService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.core.CoreService\" version=\"1.0\">\n  <documentation>\n  The core service provides a way to register version removal policies\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.CoreService\"/>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.CoreService\" />\n  </service>\n\n  <extension-point name=\"versionRemovalPolicy\">\n    <documentation>\n      Used to register the version removal policy, which must implement\n      VersionRemovalPolicy.\n      <code>\n        <policy class=\"...\"/>\n      </code>\n    </documentation>\n    <object\n      class=\"org.nuxeo.ecm.core.CoreServicePolicyDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"orphanVersionRemovalFilter\">\n    <documentation>\n      Used to register filter that are used by the default VersionRemovalPolicy implementation to check asynchronously what versions can really be removed.\n      <code>\n        <filter class=\"...\"/>\n      </code>\n    </documentation>\n    <object\n      class=\"org.nuxeo.ecm.core.CoreServiceOrphanVersionRemovalFilterDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.security.defaultPermissions","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.security.defaultPermissions--permissions","extensionPoint":"org.nuxeo.ecm.core.security.SecurityService--permissions","documentation":null,"xml":"<extension point=\"permissions\" target=\"org.nuxeo.ecm.core.security.SecurityService\">\n\n    <permission name=\"Browse\"/>\n    <permission name=\"ReadProperties\">\n      <include>Browse</include>\n    </permission>\n    <permission name=\"ReadChildren\"/>\n    <permission name=\"ReadLifeCycle\"/>\n    <permission name=\"ReviewParticipant\"/>\n    <permission name=\"ReadSecurity\"/>\n\n    <permission name=\"WriteProperties\"/>\n    <permission name=\"ReadVersion\"/>\n\n    <permission name=\"WriteVersion\">\n       <include>WriteProperties</include>\n    </permission>\n\n    <permission name=\"Version\">\n       <include>ReadVersion</include>\n       <include>WriteVersion</include>\n    </permission>\n\n    <permission name=\"Read\">\n      <include>Browse</include>\n      <include>ReadVersion</include>\n      <include>ReadProperties</include>\n      <include>ReadChildren</include>\n      <include>ReadLifeCycle</include>\n      <include>ReadSecurity</include>\n      <include>ReviewParticipant</include>\n    </permission>\n\n    <permission name=\"AddChildren\"/>\n    <permission name=\"RemoveChildren\"/>\n    <permission name=\"Remove\"/>\n    <permission name=\"ManageWorkflows\"/>\n    <permission name=\"WriteLifeCycle\"/>\n    <permission name=\"Unlock\"/>\n\n    <permission name=\"Remove\">\n      <include>RemoveChildren</include>\n      <!-- NXP-10929: necessary to follow the \"delete\" transition when Trash is enabled -->\n      <include>WriteLifeCycle</include>\n    </permission>\n\n    <permission name=\"ReadRemove\">\n      <include>Read</include>\n      <include>Remove</include>\n    </permission>\n\n    <permission name=\"Write\">\n      <include>AddChildren</include>\n      <include>WriteProperties</include>\n      <include>Remove</include>\n      <include>ManageWorkflows</include>\n      <include>WriteLifeCycle</include>\n      <include>WriteVersion</include>\n    </permission>\n\n    <permission name=\"ReadWrite\">\n      <include>Read</include>\n      <include>Write</include>\n    </permission>\n\n    <permission name=\"WriteSecurity\"/>\n\n    <!-- special permission given to administrators: god-level access -->\n    <permission name=\"Everything\"/>\n\n    <!-- deprecated - was used only for a single customer\n      project before pluggable permission definitions -->\n    <permission name=\"RestrictedRead\"/>\n\n    <permission name=\"MakeRecord\"/>\n    <permission name=\"SetRetention\"/>\n    <permission name=\"ManageLegalHold\"/>\n\n    <permission name=\"WriteColdStorage\"/>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.security.SecurityService","rawName":"service:org.nuxeo.ecm.core.security.SecurityService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.security.defaultPermissions/Contributions/org.nuxeo.ecm.core.security.defaultPermissions--permissions","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;permission name=&quot;Browse&quot;/&gt;","id":"Browse","label":"permission Browse","rawXml":"<permission name=\"Browse\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;ReadProperties&quot;&gt;\n      &lt;include&gt;Browse&lt;/include&gt;\n    &lt;/permission&gt;","id":"ReadProperties","label":"permission ReadProperties","rawXml":"<permission name=\"ReadProperties\">\n      <include>Browse</include>\n    </permission>"},{"documentation":"","xml":"&lt;permission name=&quot;ReadChildren&quot;/&gt;","id":"ReadChildren","label":"permission ReadChildren","rawXml":"<permission name=\"ReadChildren\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;ReadLifeCycle&quot;/&gt;","id":"ReadLifeCycle","label":"permission ReadLifeCycle","rawXml":"<permission name=\"ReadLifeCycle\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;ReviewParticipant&quot;/&gt;","id":"ReviewParticipant","label":"permission ReviewParticipant","rawXml":"<permission name=\"ReviewParticipant\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;ReadSecurity&quot;/&gt;","id":"ReadSecurity","label":"permission ReadSecurity","rawXml":"<permission name=\"ReadSecurity\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;WriteProperties&quot;/&gt;","id":"WriteProperties","label":"permission WriteProperties","rawXml":"<permission name=\"WriteProperties\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;ReadVersion&quot;/&gt;","id":"ReadVersion","label":"permission ReadVersion","rawXml":"<permission name=\"ReadVersion\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;WriteVersion&quot;&gt;\n       &lt;include&gt;WriteProperties&lt;/include&gt;\n    &lt;/permission&gt;","id":"WriteVersion","label":"permission WriteVersion","rawXml":"<permission name=\"WriteVersion\">\n       <include>WriteProperties</include>\n    </permission>"},{"documentation":"","xml":"&lt;permission name=&quot;Version&quot;&gt;\n       &lt;include&gt;ReadVersion&lt;/include&gt;\n       &lt;include&gt;WriteVersion&lt;/include&gt;\n    &lt;/permission&gt;","id":"Version","label":"permission Version","rawXml":"<permission name=\"Version\">\n       <include>ReadVersion</include>\n       <include>WriteVersion</include>\n    </permission>"},{"documentation":"","xml":"&lt;permission name=&quot;Read&quot;&gt;\n      &lt;include&gt;Browse&lt;/include&gt;\n      &lt;include&gt;ReadVersion&lt;/include&gt;\n      &lt;include&gt;ReadProperties&lt;/include&gt;\n      &lt;include&gt;ReadChildren&lt;/include&gt;\n      &lt;include&gt;ReadLifeCycle&lt;/include&gt;\n      &lt;include&gt;ReadSecurity&lt;/include&gt;\n      &lt;include&gt;ReviewParticipant&lt;/include&gt;\n    &lt;/permission&gt;","id":"Read","label":"permission Read","rawXml":"<permission name=\"Read\">\n      <include>Browse</include>\n      <include>ReadVersion</include>\n      <include>ReadProperties</include>\n      <include>ReadChildren</include>\n      <include>ReadLifeCycle</include>\n      <include>ReadSecurity</include>\n      <include>ReviewParticipant</include>\n    </permission>"},{"documentation":"","xml":"&lt;permission name=&quot;AddChildren&quot;/&gt;","id":"AddChildren","label":"permission AddChildren","rawXml":"<permission name=\"AddChildren\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;RemoveChildren&quot;/&gt;","id":"RemoveChildren","label":"permission RemoveChildren","rawXml":"<permission name=\"RemoveChildren\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;Remove&quot;/&gt;","id":"Remove","label":"permission Remove","rawXml":"<permission name=\"Remove\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;ManageWorkflows&quot;/&gt;","id":"ManageWorkflows","label":"permission ManageWorkflows","rawXml":"<permission name=\"ManageWorkflows\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;WriteLifeCycle&quot;/&gt;","id":"WriteLifeCycle","label":"permission WriteLifeCycle","rawXml":"<permission name=\"WriteLifeCycle\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;Unlock&quot;/&gt;","id":"Unlock","label":"permission Unlock","rawXml":"<permission name=\"Unlock\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;Remove&quot;&gt;\n      &lt;include&gt;RemoveChildren&lt;/include&gt;\n      &lt;!-- NXP-10929: necessary to follow the &quot;delete&quot; transition when Trash is enabled --&gt;\n      &lt;include&gt;WriteLifeCycle&lt;/include&gt;\n    &lt;/permission&gt;","id":"Remove","label":"permission Remove","rawXml":"<permission name=\"Remove\">\n      <include>RemoveChildren</include>\n      <!-- NXP-10929: necessary to follow the \"delete\" transition when Trash is enabled -->\n      <include>WriteLifeCycle</include>\n    </permission>"},{"documentation":"","xml":"&lt;permission name=&quot;ReadRemove&quot;&gt;\n      &lt;include&gt;Read&lt;/include&gt;\n      &lt;include&gt;Remove&lt;/include&gt;\n    &lt;/permission&gt;","id":"ReadRemove","label":"permission ReadRemove","rawXml":"<permission name=\"ReadRemove\">\n      <include>Read</include>\n      <include>Remove</include>\n    </permission>"},{"documentation":"","xml":"&lt;permission name=&quot;Write&quot;&gt;\n      &lt;include&gt;AddChildren&lt;/include&gt;\n      &lt;include&gt;WriteProperties&lt;/include&gt;\n      &lt;include&gt;Remove&lt;/include&gt;\n      &lt;include&gt;ManageWorkflows&lt;/include&gt;\n      &lt;include&gt;WriteLifeCycle&lt;/include&gt;\n      &lt;include&gt;WriteVersion&lt;/include&gt;\n    &lt;/permission&gt;","id":"Write","label":"permission Write","rawXml":"<permission name=\"Write\">\n      <include>AddChildren</include>\n      <include>WriteProperties</include>\n      <include>Remove</include>\n      <include>ManageWorkflows</include>\n      <include>WriteLifeCycle</include>\n      <include>WriteVersion</include>\n    </permission>"},{"documentation":"","xml":"&lt;permission name=&quot;ReadWrite&quot;&gt;\n      &lt;include&gt;Read&lt;/include&gt;\n      &lt;include&gt;Write&lt;/include&gt;\n    &lt;/permission&gt;","id":"ReadWrite","label":"permission ReadWrite","rawXml":"<permission name=\"ReadWrite\">\n      <include>Read</include>\n      <include>Write</include>\n    </permission>"},{"documentation":"","xml":"&lt;permission name=&quot;WriteSecurity&quot;/&gt;","id":"WriteSecurity","label":"permission WriteSecurity","rawXml":"<permission name=\"WriteSecurity\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;Everything&quot;/&gt;","id":"Everything","label":"permission Everything","rawXml":"<permission name=\"Everything\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;RestrictedRead&quot;/&gt;","id":"RestrictedRead","label":"permission RestrictedRead","rawXml":"<permission name=\"RestrictedRead\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;MakeRecord&quot;/&gt;","id":"MakeRecord","label":"permission MakeRecord","rawXml":"<permission name=\"MakeRecord\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;SetRetention&quot;/&gt;","id":"SetRetention","label":"permission SetRetention","rawXml":"<permission name=\"SetRetention\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;ManageLegalHold&quot;/&gt;","id":"ManageLegalHold","label":"permission ManageLegalHold","rawXml":"<permission name=\"ManageLegalHold\"/>"},{"documentation":"","xml":"&lt;permission name=&quot;WriteColdStorage&quot;/&gt;","id":"WriteColdStorage","label":"permission WriteColdStorage","rawXml":"<permission name=\"WriteColdStorage\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.security.defaultPermissions--permissionsVisibility","extensionPoint":"org.nuxeo.ecm.core.security.SecurityService--permissionsVisibility","documentation":null,"xml":"<extension point=\"permissionsVisibility\" target=\"org.nuxeo.ecm.core.security.SecurityService\">\n\n    <visibility>\n      <item order=\"10\" show=\"true\">Read</item>\n      <item denyPermission=\"Write\" order=\"50\" show=\"true\">ReadWrite</item>\n      <item order=\"100\" show=\"true\">Everything</item>\n    </visibility>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.security.SecurityService","rawName":"service:org.nuxeo.ecm.core.security.SecurityService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.security.defaultPermissions/Contributions/org.nuxeo.ecm.core.security.defaultPermissions--permissionsVisibility","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;visibility&gt;\n      &lt;item order=&quot;10&quot; show=&quot;true&quot;&gt;Read&lt;/item&gt;\n      &lt;item denyPermission=&quot;Write&quot; order=&quot;50&quot; show=&quot;true&quot;&gt;ReadWrite&lt;/item&gt;\n      &lt;item order=&quot;100&quot; show=&quot;true&quot;&gt;Everything&lt;/item&gt;\n    &lt;/visibility&gt;","id":null,"label":"visibility","rawXml":"<visibility>\n      <item order=\"10\" show=\"true\">Read</item>\n      <item denyPermission=\"Write\" order=\"50\" show=\"true\">ReadWrite</item>\n      <item order=\"100\" show=\"true\">Everything</item>\n    </visibility>"}]}],"componentClass":null,"documentation":"\n\n    Default permissions (atomic and compound) used by the core. If you\n    edit this file, please update the specification file:\n    doc/NXCore-Security.txt in core module\n\n    @author <a href=\"mailto:og@nuxeo.com\">Olivier Grisel</a>\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.security.defaultPermissions","documentationHtml":"<p/>\nDefault permissions (atomic and compound) used by the core. If you\nedit this file, please update the specification file:\ndoc/NXCore-Security.txt in core module\n<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/permissions-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.security.defaultPermissions\">\n  <documentation>\n    Default permissions (atomic and compound) used by the core. If you\n    edit this file, please update the specification file:\n    doc/NXCore-Security.txt in core module\n\n    @author <a href=\"mailto:og@nuxeo.com\">Olivier Grisel</a>\n  </documentation>\n\n  <extension target=\"org.nuxeo.ecm.core.security.SecurityService\"\n    point=\"permissions\">\n\n    <permission name=\"Browse\" />\n    <permission name=\"ReadProperties\">\n      <include>Browse</include>\n    </permission>\n    <permission name=\"ReadChildren\" />\n    <permission name=\"ReadLifeCycle\" />\n    <permission name=\"ReviewParticipant\" />\n    <permission name=\"ReadSecurity\" />\n\n    <permission name=\"WriteProperties\" />\n    <permission name=\"ReadVersion\"/>\n\n    <permission name=\"WriteVersion\" >\n       <include>WriteProperties</include>\n    </permission>\n\n    <permission name=\"Version\" >\n       <include>ReadVersion</include>\n       <include>WriteVersion</include>\n    </permission>\n\n    <permission name=\"Read\">\n      <include>Browse</include>\n      <include>ReadVersion</include>\n      <include>ReadProperties</include>\n      <include>ReadChildren</include>\n      <include>ReadLifeCycle</include>\n      <include>ReadSecurity</include>\n      <include>ReviewParticipant</include>\n    </permission>\n\n    <permission name=\"AddChildren\" />\n    <permission name=\"RemoveChildren\" />\n    <permission name=\"Remove\" />\n    <permission name=\"ManageWorkflows\" />\n    <permission name=\"WriteLifeCycle\" />\n    <permission name=\"Unlock\" />\n\n    <permission name=\"Remove\">\n      <include>RemoveChildren</include>\n      <!-- NXP-10929: necessary to follow the \"delete\" transition when Trash is enabled -->\n      <include>WriteLifeCycle</include>\n    </permission>\n\n    <permission name=\"ReadRemove\">\n      <include>Read</include>\n      <include>Remove</include>\n    </permission>\n\n    <permission name=\"Write\">\n      <include>AddChildren</include>\n      <include>WriteProperties</include>\n      <include>Remove</include>\n      <include>ManageWorkflows</include>\n      <include>WriteLifeCycle</include>\n      <include>WriteVersion</include>\n    </permission>\n\n    <permission name=\"ReadWrite\">\n      <include>Read</include>\n      <include>Write</include>\n    </permission>\n\n    <permission name=\"WriteSecurity\" />\n\n    <!-- special permission given to administrators: god-level access -->\n    <permission name=\"Everything\" />\n\n    <!-- deprecated - was used only for a single customer\n      project before pluggable permission definitions -->\n    <permission name=\"RestrictedRead\" />\n\n    <permission name=\"MakeRecord\" />\n    <permission name=\"SetRetention\" />\n    <permission name=\"ManageLegalHold\" />\n\n    <permission name=\"WriteColdStorage\" />\n\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.security.SecurityService\"\n    point=\"permissionsVisibility\">\n\n    <visibility>\n      <item show=\"true\" order=\"10\">Read</item>\n      <item show=\"true\" order=\"50\" denyPermission=\"Write\">ReadWrite</item>\n      <item show=\"true\" order=\"100\">Everything</item>\n    </visibility>\n\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.CoreExtensions","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.CoreExtensions--schema","extensionPoint":"org.nuxeo.ecm.core.schema.TypeService--schema","documentation":"The core schemas\n","xml":"<extension point=\"schema\" target=\"org.nuxeo.ecm.core.schema.TypeService\">\n    <documentation>The core schemas</documentation>\n    <!-- XXX AT: prefixes should be set, see NXP-1152 -->\n    <schema name=\"core-types\" src=\"schema/core-types.xsd\"/>\n    <schema name=\"base\" src=\"schema/base.xsd\"/>\n    <schema name=\"relation\" prefix=\"relation\" src=\"schema/relation.xsd\"/>\n    <schema name=\"common\" src=\"schema/common.xsd\"/>\n    <schema name=\"dublincore\" prefix=\"dc\" src=\"schema/dublincore.xsd\"/>\n    <schema name=\"uid\" src=\"schema/uid.xsd\"/>\n    <schema name=\"file\" src=\"schema/file.xsd\"/>\n    <schema name=\"files\" src=\"schema/files.xsd\"/>\n    <schema name=\"note\" src=\"schema/note.xsd\"/>\n    <schema name=\"domain\" src=\"schema/domain.xsd\"/>\n    <schema name=\"relatedtext\" src=\"schema/relatedtext.xsd\"/>\n    <schema name=\"coldstorage\" prefix=\"coldstorage\" src=\"schema/coldstorage.xsd\"/>\n\n    <schema name=\"publishing\" prefix=\"publish\" src=\"schema/publishing.xsd\"/>\n    <schema name=\"webcontainer\" prefix=\"webc\" src=\"schema/webcontainer.xsd\"/>\n\n    <schema name=\"collection\" prefix=\"collection\" src=\"schema/collection.xsd\"/>\n    <schema isVersionWritable=\"true\" name=\"collectionMember\" prefix=\"collectionMember\" src=\"schema/collectionMember.xsd\"/>\n\n    <property name=\"created\" schema=\"dublincore\" secured=\"true\"/>\n    <property name=\"modified\" schema=\"dublincore\" secured=\"true\"/>\n    <property name=\"creator\" schema=\"dublincore\" secured=\"true\"/>\n    <property name=\"contributors\" schema=\"dublincore\" secured=\"true\"/>\n    <property name=\"lastContributor\" schema=\"dublincore\" secured=\"true\"/>\n    <!-- Removed since 9.1 -->\n    <property deprecation=\"removed\" name=\"size\" schema=\"common\"/>\n    <property deprecation=\"removed\" fallback=\"content/name\" name=\"filename\" schema=\"file\"/>\n    <property deprecation=\"removed\" fallback=\"files/*/file/name\" name=\"files/*/filename\" schema=\"files\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.schema.TypeService","rawName":"service:org.nuxeo.ecm.core.schema.TypeService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.CoreExtensions/Contributions/org.nuxeo.ecm.core.CoreExtensions--schema","documentationHtml":"<p/>\nThe core schemas","contributionItems":[{"documentation":"","xml":"&lt;schema name=&quot;core-types&quot; src=&quot;schema/core-types.xsd&quot;/&gt;","id":"core-types","label":"schema core-types","rawXml":"<schema name=\"core-types\" src=\"schema/core-types.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;base&quot; src=&quot;schema/base.xsd&quot;/&gt;","id":"base","label":"schema base","rawXml":"<schema name=\"base\" src=\"schema/base.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;relation&quot; prefix=&quot;relation&quot; src=&quot;schema/relation.xsd&quot;/&gt;","id":"relation","label":"schema relation","rawXml":"<schema name=\"relation\" prefix=\"relation\" src=\"schema/relation.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;common&quot; src=&quot;schema/common.xsd&quot;/&gt;","id":"common","label":"schema common","rawXml":"<schema name=\"common\" src=\"schema/common.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;dublincore&quot; prefix=&quot;dc&quot; src=&quot;schema/dublincore.xsd&quot;/&gt;","id":"dublincore","label":"schema dublincore","rawXml":"<schema name=\"dublincore\" prefix=\"dc\" src=\"schema/dublincore.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;uid&quot; src=&quot;schema/uid.xsd&quot;/&gt;","id":"uid","label":"schema uid","rawXml":"<schema name=\"uid\" src=\"schema/uid.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;file&quot; src=&quot;schema/file.xsd&quot;/&gt;","id":"file","label":"schema file","rawXml":"<schema name=\"file\" src=\"schema/file.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;files&quot; src=&quot;schema/files.xsd&quot;/&gt;","id":"files","label":"schema files","rawXml":"<schema name=\"files\" src=\"schema/files.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;note&quot; src=&quot;schema/note.xsd&quot;/&gt;","id":"note","label":"schema note","rawXml":"<schema name=\"note\" src=\"schema/note.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;domain&quot; src=&quot;schema/domain.xsd&quot;/&gt;","id":"domain","label":"schema domain","rawXml":"<schema name=\"domain\" src=\"schema/domain.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;relatedtext&quot; src=&quot;schema/relatedtext.xsd&quot;/&gt;","id":"relatedtext","label":"schema relatedtext","rawXml":"<schema name=\"relatedtext\" src=\"schema/relatedtext.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;coldstorage&quot; prefix=&quot;coldstorage&quot; src=&quot;schema/coldstorage.xsd&quot;/&gt;","id":"coldstorage","label":"schema coldstorage","rawXml":"<schema name=\"coldstorage\" prefix=\"coldstorage\" src=\"schema/coldstorage.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;publishing&quot; prefix=&quot;publish&quot; src=&quot;schema/publishing.xsd&quot;/&gt;","id":"publishing","label":"schema publishing","rawXml":"<schema name=\"publishing\" prefix=\"publish\" src=\"schema/publishing.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;webcontainer&quot; prefix=&quot;webc&quot; src=&quot;schema/webcontainer.xsd&quot;/&gt;","id":"webcontainer","label":"schema webcontainer","rawXml":"<schema name=\"webcontainer\" prefix=\"webc\" src=\"schema/webcontainer.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;collection&quot; prefix=&quot;collection&quot; src=&quot;schema/collection.xsd&quot;/&gt;","id":"collection","label":"schema collection","rawXml":"<schema name=\"collection\" prefix=\"collection\" src=\"schema/collection.xsd\"/>"},{"documentation":"","xml":"&lt;schema isVersionWritable=&quot;true&quot; name=&quot;collectionMember&quot; prefix=&quot;collectionMember&quot; src=&quot;schema/collectionMember.xsd&quot;/&gt;","id":"collectionMember","label":"schema collectionMember","rawXml":"<schema isVersionWritable=\"true\" name=\"collectionMember\" prefix=\"collectionMember\" src=\"schema/collectionMember.xsd\"/>"},{"documentation":"","xml":"&lt;property name=&quot;created&quot; schema=&quot;dublincore&quot; secured=&quot;true&quot;/&gt;","id":"created","label":"property created","rawXml":"<property name=\"created\" schema=\"dublincore\" secured=\"true\"/>"},{"documentation":"","xml":"&lt;property name=&quot;modified&quot; schema=&quot;dublincore&quot; secured=&quot;true&quot;/&gt;","id":"modified","label":"property modified","rawXml":"<property name=\"modified\" schema=\"dublincore\" secured=\"true\"/>"},{"documentation":"","xml":"&lt;property name=&quot;creator&quot; schema=&quot;dublincore&quot; secured=&quot;true&quot;/&gt;","id":"creator","label":"property creator","rawXml":"<property name=\"creator\" schema=\"dublincore\" secured=\"true\"/>"},{"documentation":"","xml":"&lt;property name=&quot;contributors&quot; schema=&quot;dublincore&quot; secured=&quot;true&quot;/&gt;","id":"contributors","label":"property contributors","rawXml":"<property name=\"contributors\" schema=\"dublincore\" secured=\"true\"/>"},{"documentation":"","xml":"&lt;property name=&quot;lastContributor&quot; schema=&quot;dublincore&quot; secured=&quot;true&quot;/&gt;","id":"lastContributor","label":"property lastContributor","rawXml":"<property name=\"lastContributor\" schema=\"dublincore\" secured=\"true\"/>"},{"documentation":"","xml":"&lt;property deprecation=&quot;removed&quot; name=&quot;size&quot; schema=&quot;common&quot;/&gt;","id":"size","label":"property size","rawXml":"<property deprecation=\"removed\" name=\"size\" schema=\"common\"/>"},{"documentation":"","xml":"&lt;property deprecation=&quot;removed&quot; fallback=&quot;content/name&quot; name=&quot;filename&quot; schema=&quot;file&quot;/&gt;","id":"filename","label":"property filename","rawXml":"<property deprecation=\"removed\" fallback=\"content/name\" name=\"filename\" schema=\"file\"/>"},{"documentation":"","xml":"&lt;property deprecation=&quot;removed&quot; fallback=&quot;files/*/file/name&quot; name=&quot;files/*/filename&quot; schema=&quot;files&quot;/&gt;","id":"files/*/filename","label":"property files/*/filename","rawXml":"<property deprecation=\"removed\" fallback=\"files/*/file/name\" name=\"files/*/filename\" schema=\"files\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.CoreExtensions--configuration","extensionPoint":"org.nuxeo.ecm.core.schema.TypeService--configuration","documentation":"The default type manager configuration\n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.ecm.core.schema.TypeService\">\n    <documentation>The default type manager configuration</documentation>\n    <configuration>\n      <prefetch>common, dublincore</prefetch>\n      <clearComplexPropertyBeforeSet>true</clearComplexPropertyBeforeSet> <!-- false is DEPRECATED since 9.3 -->\n      <allowVersionWriteForDublinCore>false</allowVersionWriteForDublinCore> <!-- true is DEPRECATED since 10.3 -->\n    </configuration>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.schema.TypeService","rawName":"service:org.nuxeo.ecm.core.schema.TypeService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.CoreExtensions/Contributions/org.nuxeo.ecm.core.CoreExtensions--configuration","documentationHtml":"<p/>\nThe default type manager configuration","contributionItems":[{"documentation":"","xml":"&lt;configuration&gt;\n      &lt;prefetch&gt;common, dublincore&lt;/prefetch&gt;\n      &lt;clearComplexPropertyBeforeSet&gt;true&lt;/clearComplexPropertyBeforeSet&gt; &lt;!-- false is DEPRECATED since 9.3 --&gt;\n      &lt;allowVersionWriteForDublinCore&gt;false&lt;/allowVersionWriteForDublinCore&gt; &lt;!-- true is DEPRECATED since 10.3 --&gt;\n    &lt;/configuration&gt;","id":null,"label":"configuration","rawXml":"<configuration>\n      <prefetch>common, dublincore</prefetch>\n      <clearComplexPropertyBeforeSet>true</clearComplexPropertyBeforeSet> <!-- false is DEPRECATED since 9.3 -->\n      <allowVersionWriteForDublinCore>false</allowVersionWriteForDublinCore> <!-- true is DEPRECATED since 10.3 -->\n    </configuration>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.CoreExtensions--doctype","extensionPoint":"org.nuxeo.ecm.core.schema.TypeService--doctype","documentation":"The core document types\n","xml":"<extension point=\"doctype\" target=\"org.nuxeo.ecm.core.schema.TypeService\">\n    <documentation>The core document types</documentation>\n\n    <!-- standard facets with no schema -->\n    <facet name=\"Folderish\" perDocumentQuery=\"false\"/> <!-- used by system -->\n    <facet name=\"Orderable\"/> <!-- used by system -->\n    <facet name=\"Versionable\"/> <!-- used by system -->\n    <facet name=\"Downloadable\"/>\n    <facet name=\"Publishable\"/>\n    <facet name=\"PublishSpace\"/>\n    <facet name=\"MasterPublishSpace\"/>\n    <facet name=\"Commentable\"/>\n    <facet name=\"WebView\"/>\n    <facet name=\"SuperSpace\"/>\n    <facet name=\"HiddenInNavigation\" perDocumentQuery=\"false\"/>\n    <facet name=\"SystemDocument\"/>\n    <facet name=\"NotFulltextIndexable\"/>\n    <facet name=\"BigFolder\"/>\n    <facet name=\"HiddenInCreation\" perDocumentQuery=\"false\"/>\n\n    <!-- facet to be used for full-text indexing of related text content\n      (e.g. comments, annotations, tags...) -->\n    <facet name=\"HasRelatedText\">\n      <schema name=\"relatedtext\"/>\n    </facet>\n\n    <facet name=\"Collection\" perDocumentQuery=\"false\">\n      <schema name=\"collection\"/>\n    </facet>\n\n    <facet name=\"NotCollectionMember\" perDocumentQuery=\"false\"/>\n\n    <facet name=\"CollectionMember\">\n      <schema name=\"collectionMember\"/>\n    </facet>\n\n    <facet name=\"ColdStorage\">\n      <schema name=\"coldstorage\"/>\n    </facet>\n\n    <proxies>\n      <schema name=\"collectionMember\"/>\n    </proxies>\n\n    <doctype extends=\"Document\" name=\"Folder\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <facet name=\"Folderish\"/>\n      <subtypes>\n        <type>Collection</type>\n        <type>Folder</type>\n        <type>OrderedFolder</type>\n        <type>File</type>\n        <type>Note</type>\n      </subtypes>\n    </doctype>\n\n    <doctype extends=\"Folder\" name=\"OrderedFolder\">\n      <facet name=\"Orderable\"/>\n      <subtypes>\n        <type>Folder</type>\n        <type>OrderedFolder</type>\n        <type>File</type>\n        <type>Note</type>\n      </subtypes>\n    </doctype>\n\n    <doctype extends=\"Folder\" name=\"HiddenFolder\">\n      <facet name=\"HiddenInNavigation\"/>\n    </doctype>\n\n    <doctype extends=\"Folder\" name=\"Root\">\n      <facet name=\"NotCollectionMember\"/>\n      <subtypes>\n        <type>Domain</type>\n      </subtypes>\n    </doctype>\n\n    <doctype name=\"Relation\"> <!-- no extends -->\n      <schema name=\"relation\"/>\n      <schema name=\"dublincore\"/>\n    </doctype>\n\n    <doctype extends=\"Folder\" name=\"Domain\">\n      <schema name=\"domain\"/>\n      <facet name=\"SuperSpace\"/>\n      <facet name=\"NotCollectionMember\"/>\n      <subtypes>\n        <type>WorkspaceRoot</type>\n        <type>SectionRoot</type>\n        <type>TemplateRoot</type>\n      </subtypes>\n    </doctype>\n\n    <doctype extends=\"Folder\" name=\"WorkspaceRoot\">\n      <facet name=\"SuperSpace\"/>\n      <facet name=\"HiddenInCreation\"/>\n      <facet name=\"NotCollectionMember\"/>\n      <subtypes>\n        <type>Workspace</type>\n      </subtypes>\n    </doctype>\n\n    <doctype extends=\"Folder\" name=\"Workspace\">\n      <!-- for logo -->\n      <schema name=\"file\"/>\n      <schema name=\"webcontainer\"/>\n      <schema name=\"publishing\"/>\n      <!-- the content of webcontainer -->\n      <schema name=\"files\"/>\n      <facet name=\"SuperSpace\"/>\n      <subtypes>\n        <type>Collection</type>\n        <type>Workspace</type>\n        <type>Folder</type>\n        <type>OrderedFolder</type>\n        <type>File</type>\n        <type>Note</type>\n      </subtypes>\n    </doctype>\n\n    <doctype extends=\"Folder\" name=\"TemplateRoot\">\n      <facet name=\"SuperSpace\"/>\n      <facet name=\"HiddenInCreation\"/>\n      <facet name=\"NotCollectionMember\"/>\n      <subtypes>\n        <type>Workspace</type>\n      </subtypes>\n    </doctype>\n\n    <doctype extends=\"Folder\" name=\"SectionRoot\">\n      <facet name=\"SuperSpace\"/>\n      <facet name=\"HiddenInCreation\"/>\n      <facet name=\"MasterPublishSpace\"/>\n      <facet name=\"NotCollectionMember\"/>\n      <subtypes>\n        <type>Section</type>\n      </subtypes>\n    </doctype>\n\n    <doctype extends=\"Folder\" name=\"Section\">\n      <!-- for logo -->\n      <schema name=\"file\"/>\n      <facet name=\"SuperSpace\"/>\n      <facet name=\"PublishSpace\"/>\n      <subtypes>\n        <type>Section</type>\n      </subtypes>\n    </doctype>\n\n    <doctype extends=\"Document\" name=\"File\">\n      <schema name=\"common\"/>\n      <schema name=\"file\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"uid\"/>\n      <schema name=\"files\"/>\n      <facet name=\"Downloadable\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Publishable\"/>\n      <facet name=\"Commentable\"/>\n      <facet name=\"HasRelatedText\"/>\n    </doctype>\n\n    <doctype extends=\"Document\" name=\"Note\">\n      <schema name=\"common\"/>\n      <schema name=\"note\"/>\n      <schema name=\"uid\"/>\n      <schema name=\"files\"/>\n      <schema name=\"dublincore\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Publishable\"/>\n      <facet name=\"Commentable\"/>\n      <facet name=\"HasRelatedText\"/>\n    </doctype>\n\n    <doctype extends=\"Document\" name=\"Collection\">\n      <schema name=\"uid\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Collection\"/>\n      <facet name=\"NotCollectionMember\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"common\"/>\n    </doctype>\n\n    <doctype extends=\"Folder\" name=\"Collections\">\n      <facet name=\"NotCollectionMember\"/>\n      <subtypes>\n        <type>Collection</type>\n      </subtypes>\n    </doctype>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.schema.TypeService","rawName":"service:org.nuxeo.ecm.core.schema.TypeService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.CoreExtensions/Contributions/org.nuxeo.ecm.core.CoreExtensions--doctype","documentationHtml":"<p/>\nThe core document types","contributionItems":[{"documentation":"","xml":"&lt;facet name=&quot;Folderish&quot; perDocumentQuery=&quot;false&quot;/&gt;","id":"Folderish","label":"facet Folderish","rawXml":"<facet name=\"Folderish\" perDocumentQuery=\"false\"/>"},{"documentation":"","xml":"&lt;facet name=&quot;Orderable&quot;/&gt;","id":"Orderable","label":"facet Orderable","rawXml":"<facet name=\"Orderable\"/>"},{"documentation":"","xml":"&lt;facet name=&quot;Versionable&quot;/&gt;","id":"Versionable","label":"facet Versionable","rawXml":"<facet name=\"Versionable\"/>"},{"documentation":"","xml":"&lt;facet name=&quot;Downloadable&quot;/&gt;","id":"Downloadable","label":"facet Downloadable","rawXml":"<facet name=\"Downloadable\"/>"},{"documentation":"","xml":"&lt;facet name=&quot;Publishable&quot;/&gt;","id":"Publishable","label":"facet Publishable","rawXml":"<facet name=\"Publishable\"/>"},{"documentation":"","xml":"&lt;facet name=&quot;PublishSpace&quot;/&gt;","id":"PublishSpace","label":"facet PublishSpace","rawXml":"<facet name=\"PublishSpace\"/>"},{"documentation":"","xml":"&lt;facet name=&quot;MasterPublishSpace&quot;/&gt;","id":"MasterPublishSpace","label":"facet MasterPublishSpace","rawXml":"<facet name=\"MasterPublishSpace\"/>"},{"documentation":"","xml":"&lt;facet name=&quot;Commentable&quot;/&gt;","id":"Commentable","label":"facet Commentable","rawXml":"<facet name=\"Commentable\"/>"},{"documentation":"","xml":"&lt;facet name=&quot;WebView&quot;/&gt;","id":"WebView","label":"facet WebView","rawXml":"<facet name=\"WebView\"/>"},{"documentation":"","xml":"&lt;facet name=&quot;SuperSpace&quot;/&gt;","id":"SuperSpace","label":"facet SuperSpace","rawXml":"<facet name=\"SuperSpace\"/>"},{"documentation":"","xml":"&lt;facet name=&quot;HiddenInNavigation&quot; perDocumentQuery=&quot;false&quot;/&gt;","id":"HiddenInNavigation","label":"facet HiddenInNavigation","rawXml":"<facet name=\"HiddenInNavigation\" perDocumentQuery=\"false\"/>"},{"documentation":"","xml":"&lt;facet name=&quot;SystemDocument&quot;/&gt;","id":"SystemDocument","label":"facet SystemDocument","rawXml":"<facet name=\"SystemDocument\"/>"},{"documentation":"","xml":"&lt;facet name=&quot;NotFulltextIndexable&quot;/&gt;","id":"NotFulltextIndexable","label":"facet NotFulltextIndexable","rawXml":"<facet name=\"NotFulltextIndexable\"/>"},{"documentation":"","xml":"&lt;facet name=&quot;BigFolder&quot;/&gt;","id":"BigFolder","label":"facet BigFolder","rawXml":"<facet name=\"BigFolder\"/>"},{"documentation":"","xml":"&lt;facet name=&quot;HiddenInCreation&quot; perDocumentQuery=&quot;false&quot;/&gt;","id":"HiddenInCreation","label":"facet HiddenInCreation","rawXml":"<facet name=\"HiddenInCreation\" perDocumentQuery=\"false\"/>"},{"documentation":"","xml":"&lt;facet name=&quot;HasRelatedText&quot;&gt;\n      &lt;schema name=&quot;relatedtext&quot;/&gt;\n    &lt;/facet&gt;","id":"HasRelatedText","label":"facet HasRelatedText","rawXml":"<facet name=\"HasRelatedText\">\n      <schema name=\"relatedtext\"/>\n    </facet>"},{"documentation":"","xml":"&lt;facet name=&quot;Collection&quot; perDocumentQuery=&quot;false&quot;&gt;\n      &lt;schema name=&quot;collection&quot;/&gt;\n    &lt;/facet&gt;","id":"Collection","label":"facet Collection","rawXml":"<facet name=\"Collection\" perDocumentQuery=\"false\">\n      <schema name=\"collection\"/>\n    </facet>"},{"documentation":"","xml":"&lt;facet name=&quot;NotCollectionMember&quot; perDocumentQuery=&quot;false&quot;/&gt;","id":"NotCollectionMember","label":"facet NotCollectionMember","rawXml":"<facet name=\"NotCollectionMember\" perDocumentQuery=\"false\"/>"},{"documentation":"","xml":"&lt;facet name=&quot;CollectionMember&quot;&gt;\n      &lt;schema name=&quot;collectionMember&quot;/&gt;\n    &lt;/facet&gt;","id":"CollectionMember","label":"facet CollectionMember","rawXml":"<facet name=\"CollectionMember\">\n      <schema name=\"collectionMember\"/>\n    </facet>"},{"documentation":"","xml":"&lt;facet name=&quot;ColdStorage&quot;&gt;\n      &lt;schema name=&quot;coldstorage&quot;/&gt;\n    &lt;/facet&gt;","id":"ColdStorage","label":"facet ColdStorage","rawXml":"<facet name=\"ColdStorage\">\n      <schema name=\"coldstorage\"/>\n    </facet>"},{"documentation":"","xml":"&lt;proxies&gt;\n      &lt;schema name=&quot;collectionMember&quot;/&gt;\n    &lt;/proxies&gt;","id":null,"label":"proxies","rawXml":"<proxies>\n      <schema name=\"collectionMember\"/>\n    </proxies>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Document&quot; name=&quot;Folder&quot;&gt;\n      &lt;schema name=&quot;common&quot;/&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n      &lt;facet name=&quot;Folderish&quot;/&gt;\n      &lt;subtypes&gt;\n        &lt;type&gt;Collection&lt;/type&gt;\n        &lt;type&gt;Folder&lt;/type&gt;\n        &lt;type&gt;OrderedFolder&lt;/type&gt;\n        &lt;type&gt;File&lt;/type&gt;\n        &lt;type&gt;Note&lt;/type&gt;\n      &lt;/subtypes&gt;\n    &lt;/doctype&gt;","id":"Folder","label":"doctype Folder","rawXml":"<doctype extends=\"Document\" name=\"Folder\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <facet name=\"Folderish\"/>\n      <subtypes>\n        <type>Collection</type>\n        <type>Folder</type>\n        <type>OrderedFolder</type>\n        <type>File</type>\n        <type>Note</type>\n      </subtypes>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Folder&quot; name=&quot;OrderedFolder&quot;&gt;\n      &lt;facet name=&quot;Orderable&quot;/&gt;\n      &lt;subtypes&gt;\n        &lt;type&gt;Folder&lt;/type&gt;\n        &lt;type&gt;OrderedFolder&lt;/type&gt;\n        &lt;type&gt;File&lt;/type&gt;\n        &lt;type&gt;Note&lt;/type&gt;\n      &lt;/subtypes&gt;\n    &lt;/doctype&gt;","id":"OrderedFolder","label":"doctype OrderedFolder","rawXml":"<doctype extends=\"Folder\" name=\"OrderedFolder\">\n      <facet name=\"Orderable\"/>\n      <subtypes>\n        <type>Folder</type>\n        <type>OrderedFolder</type>\n        <type>File</type>\n        <type>Note</type>\n      </subtypes>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Folder&quot; name=&quot;HiddenFolder&quot;&gt;\n      &lt;facet name=&quot;HiddenInNavigation&quot;/&gt;\n    &lt;/doctype&gt;","id":"HiddenFolder","label":"doctype HiddenFolder","rawXml":"<doctype extends=\"Folder\" name=\"HiddenFolder\">\n      <facet name=\"HiddenInNavigation\"/>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Folder&quot; name=&quot;Root&quot;&gt;\n      &lt;facet name=&quot;NotCollectionMember&quot;/&gt;\n      &lt;subtypes&gt;\n        &lt;type&gt;Domain&lt;/type&gt;\n      &lt;/subtypes&gt;\n    &lt;/doctype&gt;","id":"Root","label":"doctype Root","rawXml":"<doctype extends=\"Folder\" name=\"Root\">\n      <facet name=\"NotCollectionMember\"/>\n      <subtypes>\n        <type>Domain</type>\n      </subtypes>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype name=&quot;Relation&quot;&gt; &lt;!-- no extends --&gt;\n      &lt;schema name=&quot;relation&quot;/&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n    &lt;/doctype&gt;","id":"Relation","label":"doctype Relation","rawXml":"<doctype name=\"Relation\"> <!-- no extends -->\n      <schema name=\"relation\"/>\n      <schema name=\"dublincore\"/>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Folder&quot; name=&quot;Domain&quot;&gt;\n      &lt;schema name=&quot;domain&quot;/&gt;\n      &lt;facet name=&quot;SuperSpace&quot;/&gt;\n      &lt;facet name=&quot;NotCollectionMember&quot;/&gt;\n      &lt;subtypes&gt;\n        &lt;type&gt;WorkspaceRoot&lt;/type&gt;\n        &lt;type&gt;SectionRoot&lt;/type&gt;\n        &lt;type&gt;TemplateRoot&lt;/type&gt;\n      &lt;/subtypes&gt;\n    &lt;/doctype&gt;","id":"Domain","label":"doctype Domain","rawXml":"<doctype extends=\"Folder\" name=\"Domain\">\n      <schema name=\"domain\"/>\n      <facet name=\"SuperSpace\"/>\n      <facet name=\"NotCollectionMember\"/>\n      <subtypes>\n        <type>WorkspaceRoot</type>\n        <type>SectionRoot</type>\n        <type>TemplateRoot</type>\n      </subtypes>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Folder&quot; name=&quot;WorkspaceRoot&quot;&gt;\n      &lt;facet name=&quot;SuperSpace&quot;/&gt;\n      &lt;facet name=&quot;HiddenInCreation&quot;/&gt;\n      &lt;facet name=&quot;NotCollectionMember&quot;/&gt;\n      &lt;subtypes&gt;\n        &lt;type&gt;Workspace&lt;/type&gt;\n      &lt;/subtypes&gt;\n    &lt;/doctype&gt;","id":"WorkspaceRoot","label":"doctype WorkspaceRoot","rawXml":"<doctype extends=\"Folder\" name=\"WorkspaceRoot\">\n      <facet name=\"SuperSpace\"/>\n      <facet name=\"HiddenInCreation\"/>\n      <facet name=\"NotCollectionMember\"/>\n      <subtypes>\n        <type>Workspace</type>\n      </subtypes>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Folder&quot; name=&quot;Workspace&quot;&gt;\n      &lt;!-- for logo --&gt;\n      &lt;schema name=&quot;file&quot;/&gt;\n      &lt;schema name=&quot;webcontainer&quot;/&gt;\n      &lt;schema name=&quot;publishing&quot;/&gt;\n      &lt;!-- the content of webcontainer --&gt;\n      &lt;schema name=&quot;files&quot;/&gt;\n      &lt;facet name=&quot;SuperSpace&quot;/&gt;\n      &lt;subtypes&gt;\n        &lt;type&gt;Collection&lt;/type&gt;\n        &lt;type&gt;Workspace&lt;/type&gt;\n        &lt;type&gt;Folder&lt;/type&gt;\n        &lt;type&gt;OrderedFolder&lt;/type&gt;\n        &lt;type&gt;File&lt;/type&gt;\n        &lt;type&gt;Note&lt;/type&gt;\n      &lt;/subtypes&gt;\n    &lt;/doctype&gt;","id":"Workspace","label":"doctype Workspace","rawXml":"<doctype extends=\"Folder\" name=\"Workspace\">\n      <!-- for logo -->\n      <schema name=\"file\"/>\n      <schema name=\"webcontainer\"/>\n      <schema name=\"publishing\"/>\n      <!-- the content of webcontainer -->\n      <schema name=\"files\"/>\n      <facet name=\"SuperSpace\"/>\n      <subtypes>\n        <type>Collection</type>\n        <type>Workspace</type>\n        <type>Folder</type>\n        <type>OrderedFolder</type>\n        <type>File</type>\n        <type>Note</type>\n      </subtypes>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Folder&quot; name=&quot;TemplateRoot&quot;&gt;\n      &lt;facet name=&quot;SuperSpace&quot;/&gt;\n      &lt;facet name=&quot;HiddenInCreation&quot;/&gt;\n      &lt;facet name=&quot;NotCollectionMember&quot;/&gt;\n      &lt;subtypes&gt;\n        &lt;type&gt;Workspace&lt;/type&gt;\n      &lt;/subtypes&gt;\n    &lt;/doctype&gt;","id":"TemplateRoot","label":"doctype TemplateRoot","rawXml":"<doctype extends=\"Folder\" name=\"TemplateRoot\">\n      <facet name=\"SuperSpace\"/>\n      <facet name=\"HiddenInCreation\"/>\n      <facet name=\"NotCollectionMember\"/>\n      <subtypes>\n        <type>Workspace</type>\n      </subtypes>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Folder&quot; name=&quot;SectionRoot&quot;&gt;\n      &lt;facet name=&quot;SuperSpace&quot;/&gt;\n      &lt;facet name=&quot;HiddenInCreation&quot;/&gt;\n      &lt;facet name=&quot;MasterPublishSpace&quot;/&gt;\n      &lt;facet name=&quot;NotCollectionMember&quot;/&gt;\n      &lt;subtypes&gt;\n        &lt;type&gt;Section&lt;/type&gt;\n      &lt;/subtypes&gt;\n    &lt;/doctype&gt;","id":"SectionRoot","label":"doctype SectionRoot","rawXml":"<doctype extends=\"Folder\" name=\"SectionRoot\">\n      <facet name=\"SuperSpace\"/>\n      <facet name=\"HiddenInCreation\"/>\n      <facet name=\"MasterPublishSpace\"/>\n      <facet name=\"NotCollectionMember\"/>\n      <subtypes>\n        <type>Section</type>\n      </subtypes>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Folder&quot; name=&quot;Section&quot;&gt;\n      &lt;!-- for logo --&gt;\n      &lt;schema name=&quot;file&quot;/&gt;\n      &lt;facet name=&quot;SuperSpace&quot;/&gt;\n      &lt;facet name=&quot;PublishSpace&quot;/&gt;\n      &lt;subtypes&gt;\n        &lt;type&gt;Section&lt;/type&gt;\n      &lt;/subtypes&gt;\n    &lt;/doctype&gt;","id":"Section","label":"doctype Section","rawXml":"<doctype extends=\"Folder\" name=\"Section\">\n      <!-- for logo -->\n      <schema name=\"file\"/>\n      <facet name=\"SuperSpace\"/>\n      <facet name=\"PublishSpace\"/>\n      <subtypes>\n        <type>Section</type>\n      </subtypes>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Document&quot; name=&quot;File&quot;&gt;\n      &lt;schema name=&quot;common&quot;/&gt;\n      &lt;schema name=&quot;file&quot;/&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n      &lt;schema name=&quot;uid&quot;/&gt;\n      &lt;schema name=&quot;files&quot;/&gt;\n      &lt;facet name=&quot;Downloadable&quot;/&gt;\n      &lt;facet name=&quot;Versionable&quot;/&gt;\n      &lt;facet name=&quot;Publishable&quot;/&gt;\n      &lt;facet name=&quot;Commentable&quot;/&gt;\n      &lt;facet name=&quot;HasRelatedText&quot;/&gt;\n    &lt;/doctype&gt;","id":"File","label":"doctype File","rawXml":"<doctype extends=\"Document\" name=\"File\">\n      <schema name=\"common\"/>\n      <schema name=\"file\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"uid\"/>\n      <schema name=\"files\"/>\n      <facet name=\"Downloadable\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Publishable\"/>\n      <facet name=\"Commentable\"/>\n      <facet name=\"HasRelatedText\"/>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Document&quot; name=&quot;Note&quot;&gt;\n      &lt;schema name=&quot;common&quot;/&gt;\n      &lt;schema name=&quot;note&quot;/&gt;\n      &lt;schema name=&quot;uid&quot;/&gt;\n      &lt;schema name=&quot;files&quot;/&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n      &lt;facet name=&quot;Versionable&quot;/&gt;\n      &lt;facet name=&quot;Publishable&quot;/&gt;\n      &lt;facet name=&quot;Commentable&quot;/&gt;\n      &lt;facet name=&quot;HasRelatedText&quot;/&gt;\n    &lt;/doctype&gt;","id":"Note","label":"doctype Note","rawXml":"<doctype extends=\"Document\" name=\"Note\">\n      <schema name=\"common\"/>\n      <schema name=\"note\"/>\n      <schema name=\"uid\"/>\n      <schema name=\"files\"/>\n      <schema name=\"dublincore\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Publishable\"/>\n      <facet name=\"Commentable\"/>\n      <facet name=\"HasRelatedText\"/>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Document&quot; name=&quot;Collection&quot;&gt;\n      &lt;schema name=&quot;uid&quot;/&gt;\n      &lt;facet name=&quot;Versionable&quot;/&gt;\n      &lt;facet name=&quot;Collection&quot;/&gt;\n      &lt;facet name=&quot;NotCollectionMember&quot;/&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n      &lt;schema name=&quot;common&quot;/&gt;\n    &lt;/doctype&gt;","id":"Collection","label":"doctype Collection","rawXml":"<doctype extends=\"Document\" name=\"Collection\">\n      <schema name=\"uid\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Collection\"/>\n      <facet name=\"NotCollectionMember\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"common\"/>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Folder&quot; name=&quot;Collections&quot;&gt;\n      &lt;facet name=&quot;NotCollectionMember&quot;/&gt;\n      &lt;subtypes&gt;\n        &lt;type&gt;Collection&lt;/type&gt;\n      &lt;/subtypes&gt;\n    &lt;/doctype&gt;","id":"Collections","label":"doctype Collections","rawXml":"<doctype extends=\"Folder\" name=\"Collections\">\n      <facet name=\"NotCollectionMember\"/>\n      <subtypes>\n        <type>Collection</type>\n      </subtypes>\n    </doctype>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.CoreExtensions--listener","extensionPoint":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentation":null,"xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n\n    <listener class=\"org.nuxeo.ecm.core.model.EmptyNameFixer\" name=\"emptyNameFixer\" priority=\"1000\">\n      <event>aboutToImport</event>\n      <event>aboutToCreate</event>\n      <event>aboutToMove</event>\n    </listener>\n\n    <listener class=\"org.nuxeo.ecm.core.model.DuplicatedNameFixer\" name=\"duplicatedNameFixer\" priority=\"2000\">\n      <event>aboutToImport</event>\n      <event>aboutToCreate</event>\n      <event>aboutToMove</event>\n    </listener>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.event.EventServiceComponent","rawName":"service:org.nuxeo.ecm.core.event.EventServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.CoreExtensions/Contributions/org.nuxeo.ecm.core.CoreExtensions--listener","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;listener class=&quot;org.nuxeo.ecm.core.model.EmptyNameFixer&quot; name=&quot;emptyNameFixer&quot; priority=&quot;1000&quot;&gt;\n      &lt;event&gt;aboutToImport&lt;/event&gt;\n      &lt;event&gt;aboutToCreate&lt;/event&gt;\n      &lt;event&gt;aboutToMove&lt;/event&gt;\n    &lt;/listener&gt;","id":"emptyNameFixer","label":"listener emptyNameFixer","rawXml":"<listener class=\"org.nuxeo.ecm.core.model.EmptyNameFixer\" name=\"emptyNameFixer\" priority=\"1000\">\n      <event>aboutToImport</event>\n      <event>aboutToCreate</event>\n      <event>aboutToMove</event>\n    </listener>"},{"documentation":"","xml":"&lt;listener class=&quot;org.nuxeo.ecm.core.model.DuplicatedNameFixer&quot; name=&quot;duplicatedNameFixer&quot; priority=&quot;2000&quot;&gt;\n      &lt;event&gt;aboutToImport&lt;/event&gt;\n      &lt;event&gt;aboutToCreate&lt;/event&gt;\n      &lt;event&gt;aboutToMove&lt;/event&gt;\n    &lt;/listener&gt;","id":"duplicatedNameFixer","label":"listener duplicatedNameFixer","rawXml":"<listener class=\"org.nuxeo.ecm.core.model.DuplicatedNameFixer\" name=\"duplicatedNameFixer\" priority=\"2000\">\n      <event>aboutToImport</event>\n      <event>aboutToCreate</event>\n      <event>aboutToMove</event>\n    </listener>"}]}],"componentClass":null,"documentation":"\n\n    This component is contributing the core types and schemas and other core extensions.\n\n    @author <a href=\"mailto:bs@nuxeo.com\">Bogdan Stefanescu</a>\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.CoreExtensions","documentationHtml":"<p/>\nThis component is contributing the core types and schemas and other core extensions.\n<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/CoreExtensions.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.core.CoreExtensions\" version=\"1.0\">\n\n  <documentation>\n    This component is contributing the core types and schemas and other core extensions.\n\n    @author <a href=\"mailto:bs@nuxeo.com\">Bogdan Stefanescu</a>\n  </documentation>\n\n  <extension target=\"org.nuxeo.ecm.core.schema.TypeService\"\n      point=\"schema\">\n    <documentation>The core schemas</documentation>\n    <!-- XXX AT: prefixes should be set, see NXP-1152 -->\n    <schema name=\"core-types\" src=\"schema/core-types.xsd\"/>\n    <schema name=\"base\" src=\"schema/base.xsd\"/>\n    <schema name=\"relation\" prefix=\"relation\" src=\"schema/relation.xsd\"/>\n    <schema name=\"common\" src=\"schema/common.xsd\"/>\n    <schema name=\"dublincore\" prefix=\"dc\" src=\"schema/dublincore.xsd\"/>\n    <schema name=\"uid\" src=\"schema/uid.xsd\"/>\n    <schema name=\"file\" src=\"schema/file.xsd\"/>\n    <schema name=\"files\" src=\"schema/files.xsd\"/>\n    <schema name=\"note\" src=\"schema/note.xsd\"/>\n    <schema name=\"domain\" src=\"schema/domain.xsd\"/>\n    <schema name=\"relatedtext\" src=\"schema/relatedtext.xsd\"/>\n    <schema name=\"coldstorage\" prefix=\"coldstorage\" src=\"schema/coldstorage.xsd\"/>\n\n    <schema name=\"publishing\" prefix=\"publish\" src=\"schema/publishing.xsd\" />\n    <schema name=\"webcontainer\" prefix=\"webc\" src=\"schema/webcontainer.xsd\"/>\n\n    <schema name=\"collection\" src=\"schema/collection.xsd\" prefix=\"collection\" />\n    <schema name=\"collectionMember\" src=\"schema/collectionMember.xsd\"\n      prefix=\"collectionMember\" isVersionWritable=\"true\"/>\n\n    <property schema=\"dublincore\" name=\"created\" secured=\"true\" />\n    <property schema=\"dublincore\" name=\"modified\" secured=\"true\" />\n    <property schema=\"dublincore\" name=\"creator\" secured=\"true\" />\n    <property schema=\"dublincore\" name=\"contributors\" secured=\"true\" />\n    <property schema=\"dublincore\" name=\"lastContributor\" secured=\"true\" />\n    <!-- Removed since 9.1 -->\n    <property schema=\"common\" name=\"size\" deprecation=\"removed\" />\n    <property schema=\"file\" name=\"filename\" deprecation=\"removed\" fallback=\"content/name\" />\n    <property schema=\"files\" name=\"files/*/filename\" deprecation=\"removed\" fallback=\"files/*/file/name\" />\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.schema.TypeService\"\n      point=\"configuration\">\n    <documentation>The default type manager configuration</documentation>\n    <configuration>\n      <prefetch>common, dublincore</prefetch>\n      <clearComplexPropertyBeforeSet>true</clearComplexPropertyBeforeSet> <!-- false is DEPRECATED since 9.3 -->\n      <allowVersionWriteForDublinCore>false</allowVersionWriteForDublinCore> <!-- true is DEPRECATED since 10.3 -->\n    </configuration>\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.schema.TypeService\"\n      point=\"doctype\">\n    <documentation>The core document types</documentation>\n\n    <!-- standard facets with no schema -->\n    <facet name=\"Folderish\" perDocumentQuery=\"false\"/> <!-- used by system -->\n    <facet name=\"Orderable\" /> <!-- used by system -->\n    <facet name=\"Versionable\" /> <!-- used by system -->\n    <facet name=\"Downloadable\" />\n    <facet name=\"Publishable\" />\n    <facet name=\"PublishSpace\" />\n    <facet name=\"MasterPublishSpace\" />\n    <facet name=\"Commentable\" />\n    <facet name=\"WebView\" />\n    <facet name=\"SuperSpace\" />\n    <facet name=\"HiddenInNavigation\" perDocumentQuery=\"false\"/>\n    <facet name=\"SystemDocument\" />\n    <facet name=\"NotFulltextIndexable\" />\n    <facet name=\"BigFolder\" />\n    <facet name=\"HiddenInCreation\" perDocumentQuery=\"false\"/>\n\n    <!-- facet to be used for full-text indexing of related text content\n      (e.g. comments, annotations, tags...) -->\n    <facet name=\"HasRelatedText\">\n      <schema name=\"relatedtext\" />\n    </facet>\n\n    <facet name=\"Collection\" perDocumentQuery=\"false\" >\n      <schema name=\"collection\" />\n    </facet>\n\n    <facet name=\"NotCollectionMember\" perDocumentQuery=\"false\"/>\n\n    <facet name=\"CollectionMember\">\n      <schema name=\"collectionMember\" />\n    </facet>\n\n    <facet name=\"ColdStorage\">\n      <schema name=\"coldstorage\" />\n    </facet>\n\n    <proxies>\n      <schema name=\"collectionMember\" />\n    </proxies>\n\n    <doctype name=\"Folder\" extends=\"Document\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <facet name=\"Folderish\"/>\n      <subtypes>\n        <type>Collection</type>\n        <type>Folder</type>\n        <type>OrderedFolder</type>\n        <type>File</type>\n        <type>Note</type>\n      </subtypes>\n    </doctype>\n\n    <doctype name=\"OrderedFolder\" extends=\"Folder\">\n      <facet name=\"Orderable\"/>\n      <subtypes>\n        <type>Folder</type>\n        <type>OrderedFolder</type>\n        <type>File</type>\n        <type>Note</type>\n      </subtypes>\n    </doctype>\n\n    <doctype name=\"HiddenFolder\" extends=\"Folder\">\n      <facet name=\"HiddenInNavigation\" />\n    </doctype>\n\n    <doctype name=\"Root\" extends=\"Folder\">\n      <facet name=\"NotCollectionMember\" />\n      <subtypes>\n        <type>Domain</type>\n      </subtypes>\n    </doctype>\n\n    <doctype name=\"Relation\"> <!-- no extends -->\n      <schema name=\"relation\"/>\n      <schema name=\"dublincore\"/>\n    </doctype>\n\n    <doctype name=\"Domain\" extends=\"Folder\">\n      <schema name=\"domain\"/>\n      <facet name=\"SuperSpace\"/>\n      <facet name=\"NotCollectionMember\" />\n      <subtypes>\n        <type>WorkspaceRoot</type>\n        <type>SectionRoot</type>\n        <type>TemplateRoot</type>\n      </subtypes>\n    </doctype>\n\n    <doctype name=\"WorkspaceRoot\" extends=\"Folder\">\n      <facet name=\"SuperSpace\"/>\n      <facet name=\"HiddenInCreation\" />\n      <facet name=\"NotCollectionMember\" />\n      <subtypes>\n        <type>Workspace</type>\n      </subtypes>\n    </doctype>\n\n    <doctype name=\"Workspace\" extends=\"Folder\">\n      <!-- for logo -->\n      <schema name=\"file\"/>\n      <schema name=\"webcontainer\"/>\n      <schema name=\"publishing\"/>\n      <!-- the content of webcontainer -->\n      <schema name=\"files\" />\n      <facet name=\"SuperSpace\"/>\n      <subtypes>\n        <type>Collection</type>\n        <type>Workspace</type>\n        <type>Folder</type>\n        <type>OrderedFolder</type>\n        <type>File</type>\n        <type>Note</type>\n      </subtypes>\n    </doctype>\n\n    <doctype name=\"TemplateRoot\" extends=\"Folder\">\n      <facet name=\"SuperSpace\"/>\n      <facet name=\"HiddenInCreation\" />\n      <facet name=\"NotCollectionMember\" />\n      <subtypes>\n        <type>Workspace</type>\n      </subtypes>\n    </doctype>\n\n    <doctype name=\"SectionRoot\" extends=\"Folder\">\n      <facet name=\"SuperSpace\"/>\n      <facet name=\"HiddenInCreation\" />\n      <facet name=\"MasterPublishSpace\" />\n      <facet name=\"NotCollectionMember\" />\n      <subtypes>\n        <type>Section</type>\n      </subtypes>\n    </doctype>\n\n    <doctype name=\"Section\" extends=\"Folder\">\n      <!-- for logo -->\n      <schema name=\"file\"/>\n      <facet name=\"SuperSpace\"/>\n      <facet name=\"PublishSpace\" />\n      <subtypes>\n        <type>Section</type>\n      </subtypes>\n    </doctype>\n\n    <doctype name=\"File\" extends=\"Document\">\n      <schema name=\"common\"/>\n      <schema name=\"file\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"uid\"/>\n      <schema name=\"files\"/>\n      <facet name=\"Downloadable\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Publishable\"/>\n      <facet name=\"Commentable\"/>\n      <facet name=\"HasRelatedText\"/>\n    </doctype>\n\n    <doctype name=\"Note\" extends=\"Document\">\n      <schema name=\"common\"/>\n      <schema name=\"note\"/>\n      <schema name=\"uid\"/>\n      <schema name=\"files\"/>\n      <schema name=\"dublincore\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Publishable\"/>\n      <facet name=\"Commentable\"/>\n      <facet name=\"HasRelatedText\"/>\n    </doctype>\n\n    <doctype name=\"Collection\" extends=\"Document\">\n      <schema name=\"uid\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Collection\" />\n      <facet name=\"NotCollectionMember\" />\n      <schema name=\"dublincore\" />\n      <schema name=\"common\" />\n    </doctype>\n\n    <doctype name=\"Collections\" extends=\"Folder\">\n      <facet name=\"NotCollectionMember\" />\n      <subtypes>\n        <type>Collection</type>\n      </subtypes>\n    </doctype>\n\n  </extension>\n\n   <extension target=\"org.nuxeo.ecm.core.event.EventServiceComponent\"\n    point=\"listener\">\n\n    <listener name=\"emptyNameFixer\"\n        class=\"org.nuxeo.ecm.core.model.EmptyNameFixer\" priority=\"1000\">\n      <event>aboutToImport</event>\n      <event>aboutToCreate</event>\n      <event>aboutToMove</event>\n    </listener>\n\n    <listener name=\"duplicatedNameFixer\"\n        class=\"org.nuxeo.ecm.core.model.DuplicatedNameFixer\" priority=\"2000\">\n      <event>aboutToImport</event>\n      <event>aboutToCreate</event>\n      <event>aboutToMove</event>\n    </listener>\n\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.schedulers","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.schedulers--schedule","extensionPoint":"org.nuxeo.ecm.platform.scheduler.core.service.SchedulerRegistryService--schedule","documentation":null,"xml":"<extension point=\"schedule\" target=\"org.nuxeo.ecm.platform.scheduler.core.service.SchedulerRegistryService\">\n\n    <schedule id=\"aceScheduler\">\n      <eventId>updateACEStatus</eventId>\n      <!-- every 5 mins -->\n      <cronExpression>0 0/5 * * * ?</cronExpression>\n    </schedule>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.scheduler.core.service.SchedulerRegistryService","rawName":"service:org.nuxeo.ecm.platform.scheduler.core.service.SchedulerRegistryService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.schedulers/Contributions/org.nuxeo.ecm.core.schedulers--schedule","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;schedule id=&quot;aceScheduler&quot;&gt;\n      &lt;eventId&gt;updateACEStatus&lt;/eventId&gt;\n      &lt;!-- every 5 mins --&gt;\n      &lt;cronExpression&gt;0 0/5 * * * ?&lt;/cronExpression&gt;\n    &lt;/schedule&gt;","id":"aceScheduler","label":"schedule aceScheduler","rawXml":"<schedule id=\"aceScheduler\">\n      <eventId>updateACEStatus</eventId>\n      <!-- every 5 mins -->\n      <cronExpression>0 0/5 * * * ?</cronExpression>\n    </schedule>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.schedulers--listener","extensionPoint":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentation":null,"xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n    <listener async=\"true\" class=\"org.nuxeo.ecm.core.security.UpdateACEStatusListener\" name=\"updateACEStatus\">\n      <event>updateACEStatus</event>\n    </listener>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.event.EventServiceComponent","rawName":"service:org.nuxeo.ecm.core.event.EventServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.schedulers/Contributions/org.nuxeo.ecm.core.schedulers--listener","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;listener async=&quot;true&quot; class=&quot;org.nuxeo.ecm.core.security.UpdateACEStatusListener&quot; name=&quot;updateACEStatus&quot;&gt;\n      &lt;event&gt;updateACEStatus&lt;/event&gt;\n    &lt;/listener&gt;","id":"updateACEStatus","label":"listener updateACEStatus","rawXml":"<listener async=\"true\" class=\"org.nuxeo.ecm.core.security.UpdateACEStatusListener\" name=\"updateACEStatus\">\n      <event>updateACEStatus</event>\n    </listener>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.schedulers--queues","extensionPoint":"org.nuxeo.ecm.core.work.service--queues","documentation":null,"xml":"<extension point=\"queues\" target=\"org.nuxeo.ecm.core.work.service\">\n    <queue id=\"updateACEStatus\">\n      <maxThreads>1</maxThreads>\n      <category>updateACEStatus</category>\n    </queue>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.work.service","rawName":"service:org.nuxeo.ecm.core.work.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.schedulers/Contributions/org.nuxeo.ecm.core.schedulers--queues","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;queue id=&quot;updateACEStatus&quot;&gt;\n      &lt;maxThreads&gt;1&lt;/maxThreads&gt;\n      &lt;category&gt;updateACEStatus&lt;/category&gt;\n    &lt;/queue&gt;","id":"updateACEStatus","label":"queue updateACEStatus","rawXml":"<queue id=\"updateACEStatus\">\n      <maxThreads>1</maxThreads>\n      <category>updateACEStatus</category>\n    </queue>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.schedulers","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/scheduler-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.schedulers\">\n\n  <extension target=\"org.nuxeo.ecm.platform.scheduler.core.service.SchedulerRegistryService\"\n    point=\"schedule\">\n\n    <schedule id=\"aceScheduler\">\n      <eventId>updateACEStatus</eventId>\n      <!-- every 5 mins -->\n      <cronExpression>0 0/5 * * * ?</cronExpression>\n    </schedule>\n\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.event.EventServiceComponent\"\n    point=\"listener\">\n    <listener name=\"updateACEStatus\" async=\"true\" class=\"org.nuxeo.ecm.core.security.UpdateACEStatusListener\">\n      <event>updateACEStatus</event>\n    </listener>\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.work.service\" point=\"queues\">\n    <queue id=\"updateACEStatus\">\n      <maxThreads>1</maxThreads>\n      <category>updateACEStatus</category>\n    </queue>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.versioning.default-policies","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.versioning.default-policies--policies","extensionPoint":"org.nuxeo.ecm.core.api.versioning.VersioningService--policies","documentation":null,"xml":"<extension point=\"policies\" target=\"org.nuxeo.ecm.core.api.versioning.VersioningService\">\n    <policy beforeUpdate=\"true\" id=\"no-versioning-for-system-before-update\" increment=\"NONE\" order=\"1\">\n      <filter-id>system-document</filter-id>\n    </policy>\n    <policy id=\"no-versioning-for-system-after-update\" increment=\"NONE\" order=\"1\">\n      <filter-id>system-document</filter-id>\n    </policy>\n    <policy id=\"note-as-wiki\" increment=\"MINOR\" order=\"50\">\n      <filter-id>note-filter</filter-id>\n    </policy>\n    <policy beforeUpdate=\"true\" id=\"collaborative-save\" increment=\"MINOR\" order=\"100\">\n      <filter-id>last-contributor-different-filter</filter-id>\n    </policy>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.api.versioning.VersioningService","rawName":"service:org.nuxeo.ecm.core.api.versioning.VersioningService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.versioning.default-policies/Contributions/org.nuxeo.ecm.core.versioning.default-policies--policies","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;policy beforeUpdate=&quot;true&quot; id=&quot;no-versioning-for-system-before-update&quot; increment=&quot;NONE&quot; order=&quot;1&quot;&gt;\n      &lt;filter-id&gt;system-document&lt;/filter-id&gt;\n    &lt;/policy&gt;","id":"no-versioning-for-system-before-update","label":"policy no-versioning-for-system-before-update","rawXml":"<policy beforeUpdate=\"true\" id=\"no-versioning-for-system-before-update\" increment=\"NONE\" order=\"1\">\n      <filter-id>system-document</filter-id>\n    </policy>"},{"documentation":"","xml":"&lt;policy id=&quot;no-versioning-for-system-after-update&quot; increment=&quot;NONE&quot; order=&quot;1&quot;&gt;\n      &lt;filter-id&gt;system-document&lt;/filter-id&gt;\n    &lt;/policy&gt;","id":"no-versioning-for-system-after-update","label":"policy no-versioning-for-system-after-update","rawXml":"<policy id=\"no-versioning-for-system-after-update\" increment=\"NONE\" order=\"1\">\n      <filter-id>system-document</filter-id>\n    </policy>"},{"documentation":"","xml":"&lt;policy id=&quot;note-as-wiki&quot; increment=&quot;MINOR&quot; order=&quot;50&quot;&gt;\n      &lt;filter-id&gt;note-filter&lt;/filter-id&gt;\n    &lt;/policy&gt;","id":"note-as-wiki","label":"policy note-as-wiki","rawXml":"<policy id=\"note-as-wiki\" increment=\"MINOR\" order=\"50\">\n      <filter-id>note-filter</filter-id>\n    </policy>"},{"documentation":"","xml":"&lt;policy beforeUpdate=&quot;true&quot; id=&quot;collaborative-save&quot; increment=&quot;MINOR&quot; order=&quot;100&quot;&gt;\n      &lt;filter-id&gt;last-contributor-different-filter&lt;/filter-id&gt;\n    &lt;/policy&gt;","id":"collaborative-save","label":"policy collaborative-save","rawXml":"<policy beforeUpdate=\"true\" id=\"collaborative-save\" increment=\"MINOR\" order=\"100\">\n      <filter-id>last-contributor-different-filter</filter-id>\n    </policy>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.versioning.default-policies--filters","extensionPoint":"org.nuxeo.ecm.core.api.versioning.VersioningService--filters","documentation":null,"xml":"<extension point=\"filters\" target=\"org.nuxeo.ecm.core.api.versioning.VersioningService\">\n    <filter class=\"org.nuxeo.ecm.core.versioning.NoVersioningPolicyFilter\" id=\"system-document\"/>\n    <filter id=\"note-filter\">\n      <type>Note</type>\n    </filter>\n    <filter id=\"last-contributor-different-filter\">\n      <schema>file</schema>\n      <condition>#{previousDocument.dc.lastContributor != currentDocument.dc.lastContributor}</condition>\n    </filter>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.api.versioning.VersioningService","rawName":"service:org.nuxeo.ecm.core.api.versioning.VersioningService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.versioning.default-policies/Contributions/org.nuxeo.ecm.core.versioning.default-policies--filters","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;filter class=&quot;org.nuxeo.ecm.core.versioning.NoVersioningPolicyFilter&quot; id=&quot;system-document&quot;/&gt;","id":"system-document","label":"filter system-document","rawXml":"<filter class=\"org.nuxeo.ecm.core.versioning.NoVersioningPolicyFilter\" id=\"system-document\"/>"},{"documentation":"","xml":"&lt;filter id=&quot;note-filter&quot;&gt;\n      &lt;type&gt;Note&lt;/type&gt;\n    &lt;/filter&gt;","id":"note-filter","label":"filter note-filter","rawXml":"<filter id=\"note-filter\">\n      <type>Note</type>\n    </filter>"},{"documentation":"","xml":"&lt;filter id=&quot;last-contributor-different-filter&quot;&gt;\n      &lt;schema&gt;file&lt;/schema&gt;\n      &lt;condition&gt;#{previousDocument.dc.lastContributor != currentDocument.dc.lastContributor}&lt;/condition&gt;\n    &lt;/filter&gt;","id":"last-contributor-different-filter","label":"filter last-contributor-different-filter","rawXml":"<filter id=\"last-contributor-different-filter\">\n      <schema>file</schema>\n      <condition>#{previousDocument.dc.lastContributor != currentDocument.dc.lastContributor}</condition>\n    </filter>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.versioning.default-policies","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/versioning-default-policies.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.versioning.default-policies\" version=\"1.0\">\n\n  <require>org.nuxeo.ecm.platform.el.service</require>\n\n  <extension target=\"org.nuxeo.ecm.core.api.versioning.VersioningService\" point=\"policies\">\n    <policy id=\"no-versioning-for-system-before-update\" beforeUpdate=\"true\" increment=\"NONE\" order=\"1\">\n      <filter-id>system-document</filter-id>\n    </policy>\n    <policy id=\"no-versioning-for-system-after-update\" increment=\"NONE\" order=\"1\">\n      <filter-id>system-document</filter-id>\n    </policy>\n    <policy id=\"note-as-wiki\" increment=\"MINOR\" order=\"50\">\n      <filter-id>note-filter</filter-id>\n    </policy>\n    <policy id=\"collaborative-save\" increment=\"MINOR\" beforeUpdate=\"true\" order=\"100\">\n      <filter-id>last-contributor-different-filter</filter-id>\n    </policy>\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.api.versioning.VersioningService\" point=\"filters\">\n    <filter id=\"system-document\" class=\"org.nuxeo.ecm.core.versioning.NoVersioningPolicyFilter\" />\n    <filter id=\"note-filter\">\n      <type>Note</type>\n    </filter>\n    <filter id=\"last-contributor-different-filter\">\n      <schema>file</schema>\n      <condition>#{previousDocument.dc.lastContributor != currentDocument.dc.lastContributor}</condition>\n    </filter>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.deletion.config","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.deletion.config--actions","extensionPoint":"org.nuxeo.ecm.core.bulk--actions","documentation":null,"xml":"<extension point=\"actions\" target=\"org.nuxeo.ecm.core.bulk\">\n    <action batchSize=\"50\" bucketSize=\"100\" name=\"deletion\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.bulk","rawName":"service:org.nuxeo.ecm.core.bulk"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.deletion.config/Contributions/org.nuxeo.ecm.core.deletion.config--actions","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;action batchSize=&quot;50&quot; bucketSize=&quot;100&quot; name=&quot;deletion&quot;/&gt;","id":"deletion","label":"action deletion","rawXml":"<action batchSize=\"50\" bucketSize=\"100\" name=\"deletion\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.deletion.config--streamProcessor","extensionPoint":"org.nuxeo.runtime.stream.service--streamProcessor","documentation":null,"xml":"<extension point=\"streamProcessor\" target=\"org.nuxeo.runtime.stream.service\">\n    <streamProcessor class=\"org.nuxeo.ecm.core.action.DeletionAction\" defaultConcurrency=\"2\" defaultPartitions=\"2\" logConfig=\"bulk\" name=\"deletion\">\n      <policy continueOnFailure=\"true\" delay=\"1s\" maxDelay=\"10s\" maxRetries=\"3\" name=\"default\"/>\n    </streamProcessor>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.stream.service","rawName":"service:org.nuxeo.runtime.stream.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.deletion.config/Contributions/org.nuxeo.ecm.core.deletion.config--streamProcessor","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;streamProcessor class=&quot;org.nuxeo.ecm.core.action.DeletionAction&quot; defaultConcurrency=&quot;2&quot; defaultPartitions=&quot;2&quot; logConfig=&quot;bulk&quot; name=&quot;deletion&quot;&gt;\n      &lt;policy continueOnFailure=&quot;true&quot; delay=&quot;1s&quot; maxDelay=&quot;10s&quot; maxRetries=&quot;3&quot; name=&quot;default&quot;/&gt;\n    &lt;/streamProcessor&gt;","id":"deletion","label":"streamProcessor deletion","rawXml":"<streamProcessor class=\"org.nuxeo.ecm.core.action.DeletionAction\" defaultConcurrency=\"2\" defaultPartitions=\"2\" logConfig=\"bulk\" name=\"deletion\">\n      <policy continueOnFailure=\"true\" delay=\"1s\" maxDelay=\"10s\" maxRetries=\"3\" name=\"default\"/>\n    </streamProcessor>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.deletion.config","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/deletion-action-config.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.deletion.config\" version=\"1.0.0\">\n\n  <require>org.nuxeo.ecm.core.bulk</require>\n\n  <extension target=\"org.nuxeo.ecm.core.bulk\" point=\"actions\">\n    <action name=\"deletion\" bucketSize=\"100\" batchSize=\"50\"/>\n  </extension>\n\n  <extension target=\"org.nuxeo.runtime.stream.service\" point=\"streamProcessor\">\n    <streamProcessor name=\"deletion\" class=\"org.nuxeo.ecm.core.action.DeletionAction\" logConfig=\"bulk\"\n      defaultConcurrency=\"2\" defaultPartitions=\"2\">\n      <policy name=\"default\" maxRetries=\"3\" delay=\"1s\" maxDelay=\"10s\" continueOnFailure=\"true\"/>\n    </streamProcessor>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.orphanVersionsCleanup","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.orphanVersionsCleanup--schedule","extensionPoint":"org.nuxeo.ecm.core.scheduler.SchedulerService--schedule","documentation":null,"xml":"<extension point=\"schedule\" target=\"org.nuxeo.ecm.core.scheduler.SchedulerService\">\n    <schedule id=\"orphanVersionsCleanup\">\n      <!-- cleanup every day at 1:30 AM -->\n      <cronExpression>0 30 1 * * ?</cronExpression>\n      <event>orphanVersionsCleanup</event>\n    </schedule>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.scheduler.SchedulerService","rawName":"service:org.nuxeo.ecm.core.scheduler.SchedulerService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.orphanVersionsCleanup/Contributions/org.nuxeo.ecm.core.orphanVersionsCleanup--schedule","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;schedule id=&quot;orphanVersionsCleanup&quot;&gt;\n      &lt;!-- cleanup every day at 1:30 AM --&gt;\n      &lt;cronExpression&gt;0 30 1 * * ?&lt;/cronExpression&gt;\n      &lt;event&gt;orphanVersionsCleanup&lt;/event&gt;\n    &lt;/schedule&gt;","id":"orphanVersionsCleanup","label":"schedule orphanVersionsCleanup","rawXml":"<schedule id=\"orphanVersionsCleanup\">\n      <!-- cleanup every day at 1:30 AM -->\n      <cronExpression>0 30 1 * * ?</cronExpression>\n      <event>orphanVersionsCleanup</event>\n    </schedule>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.orphanVersionsCleanup--listener","extensionPoint":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentation":null,"xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n    <listener async=\"true\" class=\"org.nuxeo.ecm.core.versioning.OrphanVersionCleanupListener\" enabled=\"false\" name=\"orphanVersionsCleanup\" postCommit=\"true\">\n      <event>orphanVersionsCleanup</event>\n    </listener>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.event.EventServiceComponent","rawName":"service:org.nuxeo.ecm.core.event.EventServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.orphanVersionsCleanup/Contributions/org.nuxeo.ecm.core.orphanVersionsCleanup--listener","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;listener async=&quot;true&quot; class=&quot;org.nuxeo.ecm.core.versioning.OrphanVersionCleanupListener&quot; enabled=&quot;false&quot; name=&quot;orphanVersionsCleanup&quot; postCommit=&quot;true&quot;&gt;\n      &lt;event&gt;orphanVersionsCleanup&lt;/event&gt;\n    &lt;/listener&gt;","id":"orphanVersionsCleanup","label":"listener orphanVersionsCleanup","rawXml":"<listener async=\"true\" class=\"org.nuxeo.ecm.core.versioning.OrphanVersionCleanupListener\" enabled=\"false\" name=\"orphanVersionsCleanup\" postCommit=\"true\">\n      <event>orphanVersionsCleanup</event>\n    </listener>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.orphanVersionsCleanup--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n      Configuration property for the maximum number of orphan versions to delete in one transaction.\n      This is only meaningful if the OrphanVersionCleanupListener is active.\n    \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <documentation>\n      Configuration property for the maximum number of orphan versions to delete in one transaction.\n      This is only meaningful if the OrphanVersionCleanupListener is active.\n    </documentation>\n    <property name=\"org.nuxeo.orphanVersionsCleanup.commitSize\">1000</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.orphanVersionsCleanup/Contributions/org.nuxeo.ecm.core.orphanVersionsCleanup--configuration","documentationHtml":"<p/>\nConfiguration property for the maximum number of orphan versions to delete in one transaction.\nThis is only meaningful if the OrphanVersionCleanupListener is active.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;org.nuxeo.orphanVersionsCleanup.commitSize&quot;&gt;1000&lt;/property&gt;","id":"org.nuxeo.orphanVersionsCleanup.commitSize","label":"property org.nuxeo.orphanVersionsCleanup.commitSize","rawXml":"<property name=\"org.nuxeo.orphanVersionsCleanup.commitSize\">1000</property>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.orphanVersionsCleanup","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/orphanVersionsCleanup-listener-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.orphanVersionsCleanup\">\n\n  <extension target=\"org.nuxeo.ecm.core.scheduler.SchedulerService\" point=\"schedule\">\n    <schedule id=\"orphanVersionsCleanup\">\n      <!-- cleanup every day at 1:30 AM -->\n      <cronExpression>0 30 1 * * ?</cronExpression>\n      <event>orphanVersionsCleanup</event>\n    </schedule>\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.event.EventServiceComponent\" point=\"listener\">\n    <listener name=\"orphanVersionsCleanup\" async=\"true\" postCommit=\"true\" enabled=\"false\"\n      class=\"org.nuxeo.ecm.core.versioning.OrphanVersionCleanupListener\">\n      <event>orphanVersionsCleanup</event>\n    </listener>\n  </extension>\n\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n    <documentation>\n      Configuration property for the maximum number of orphan versions to delete in one transaction.\n      This is only meaningful if the OrphanVersionCleanupListener is active.\n    </documentation>\n    <property name=\"org.nuxeo.orphanVersionsCleanup.commitSize\">1000</property>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.coldstorage.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.coldstorage.contrib--schedule","extensionPoint":"org.nuxeo.ecm.core.scheduler.SchedulerService--schedule","documentation":null,"xml":"<extension point=\"schedule\" target=\"org.nuxeo.ecm.core.scheduler.SchedulerService\">\n    <schedule id=\"checkAvailabilityOfBlobsBeingRetrieved\">\n      <!-- every hour at the 7th minute -->\n      <cronExpression>0 7 * ? * * *</cronExpression>\n      <event>checkColdStorageContentAvailability</event>\n    </schedule>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.scheduler.SchedulerService","rawName":"service:org.nuxeo.ecm.core.scheduler.SchedulerService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.coldstorage.contrib/Contributions/org.nuxeo.ecm.core.coldstorage.contrib--schedule","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;schedule id=&quot;checkAvailabilityOfBlobsBeingRetrieved&quot;&gt;\n      &lt;!-- every hour at the 7th minute --&gt;\n      &lt;cronExpression&gt;0 7 * ? * * *&lt;/cronExpression&gt;\n      &lt;event&gt;checkColdStorageContentAvailability&lt;/event&gt;\n    &lt;/schedule&gt;","id":"checkAvailabilityOfBlobsBeingRetrieved","label":"schedule checkAvailabilityOfBlobsBeingRetrieved","rawXml":"<schedule id=\"checkAvailabilityOfBlobsBeingRetrieved\">\n      <!-- every hour at the 7th minute -->\n      <cronExpression>0 7 * ? * * *</cronExpression>\n      <event>checkColdStorageContentAvailability</event>\n    </schedule>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.coldstorage.contrib--listener","extensionPoint":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentation":null,"xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n    <listener class=\"org.nuxeo.ecm.core.coldstorage.CheckColdStorageContentAvailabilityListener\" name=\"checkColdStorageContentAvailability\">\n      <event>checkColdStorageContentAvailability</event>\n    </listener>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.event.EventServiceComponent","rawName":"service:org.nuxeo.ecm.core.event.EventServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.coldstorage.contrib/Contributions/org.nuxeo.ecm.core.coldstorage.contrib--listener","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;listener class=&quot;org.nuxeo.ecm.core.coldstorage.CheckColdStorageContentAvailabilityListener&quot; name=&quot;checkColdStorageContentAvailability&quot;&gt;\n      &lt;event&gt;checkColdStorageContentAvailability&lt;/event&gt;\n    &lt;/listener&gt;","id":"checkColdStorageContentAvailability","label":"listener checkColdStorageContentAvailability","rawXml":"<listener class=\"org.nuxeo.ecm.core.coldstorage.CheckColdStorageContentAvailabilityListener\" name=\"checkColdStorageContentAvailability\">\n      <event>checkColdStorageContentAvailability</event>\n    </listener>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.coldstorage.contrib--notifications","extensionPoint":"org.nuxeo.ecm.platform.ec.notification.service.NotificationService--notifications","documentation":null,"xml":"<extension point=\"notifications\" target=\"org.nuxeo.ecm.platform.ec.notification.service.NotificationService\">\n    <notification availableIn=\"*\" channel=\"email\" label=\"label.document.download\" name=\"ColdStorageContentAvailable\" subject=\"Archive content available on '${docTitle}'\" template=\"coldStorageContentAvailable\">\n      <event name=\"coldStorageContentAvailable\"/>\n    </notification>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.ec.notification.service.NotificationService","rawName":"service:org.nuxeo.ecm.platform.ec.notification.service.NotificationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.coldstorage.contrib/Contributions/org.nuxeo.ecm.core.coldstorage.contrib--notifications","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;notification availableIn=&quot;*&quot; channel=&quot;email&quot; label=&quot;label.document.download&quot; name=&quot;ColdStorageContentAvailable&quot; subject=&quot;Archive content available on '${docTitle}'&quot; template=&quot;coldStorageContentAvailable&quot;&gt;\n      &lt;event name=&quot;coldStorageContentAvailable&quot;/&gt;\n    &lt;/notification&gt;","id":"ColdStorageContentAvailable","label":"notification ColdStorageContentAvailable","rawXml":"<notification availableIn=\"*\" channel=\"email\" label=\"label.document.download\" name=\"ColdStorageContentAvailable\" subject=\"Archive content available on '${docTitle}'\" template=\"coldStorageContentAvailable\">\n      <event name=\"coldStorageContentAvailable\"/>\n    </notification>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.coldstorage.contrib--templates","extensionPoint":"org.nuxeo.ecm.platform.ec.notification.service.NotificationService--templates","documentation":null,"xml":"<extension point=\"templates\" target=\"org.nuxeo.ecm.platform.ec.notification.service.NotificationService\">\n    <template name=\"coldStorageContentAvailable\" src=\"templates/coldStorageContentAvailable.ftl\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.ec.notification.service.NotificationService","rawName":"service:org.nuxeo.ecm.platform.ec.notification.service.NotificationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.coldstorage.contrib/Contributions/org.nuxeo.ecm.core.coldstorage.contrib--templates","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;template name=&quot;coldStorageContentAvailable&quot; src=&quot;templates/coldStorageContentAvailable.ftl&quot;/&gt;","id":"coldStorageContentAvailable","label":"template coldStorageContentAvailable","rawXml":"<template name=\"coldStorageContentAvailable\" src=\"templates/coldStorageContentAvailable.ftl\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.coldstorage.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/coldstorage-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.coldstorage.contrib\">\n\n  <extension target=\"org.nuxeo.ecm.core.scheduler.SchedulerService\" point=\"schedule\">\n    <schedule id=\"checkAvailabilityOfBlobsBeingRetrieved\">\n      <!-- every hour at the 7th minute -->\n      <cronExpression>0 7 * ? * * *</cronExpression>\n      <event>checkColdStorageContentAvailability</event>\n    </schedule>\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.event.EventServiceComponent\" point=\"listener\">\n    <listener name=\"checkColdStorageContentAvailability\"\n              class=\"org.nuxeo.ecm.core.coldstorage.CheckColdStorageContentAvailabilityListener\">\n      <event>checkColdStorageContentAvailability</event>\n    </listener>\n  </extension>\n\n  <extension\n    target=\"org.nuxeo.ecm.platform.ec.notification.service.NotificationService\" point=\"notifications\">\n    <notification name=\"ColdStorageContentAvailable\" channel=\"email\" availableIn=\"*\"\n                  subject=\"Archive content available on '${docTitle}'\" template=\"coldStorageContentAvailable\"\n                  label=\"label.document.download\">\n      <event name=\"coldStorageContentAvailable\" />\n    </notification>\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.platform.ec.notification.service.NotificationService\" point=\"templates\">\n    <template name=\"coldStorageContentAvailable\" src=\"templates/coldStorageContentAvailable.ftl\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.api.CoreSessionServiceImpl","extensionPoints":[],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.api.CoreSessionService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.api.CoreSessionServiceImpl/Services/org.nuxeo.ecm.core.api.CoreSessionService","componentId":"org.nuxeo.ecm.core.api.CoreSessionServiceImpl"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.api.CoreSessionServiceImpl","documentation":"\n    Service managing the acquisition/release of CoreSession instances.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.api.CoreSessionServiceImpl","documentationHtml":"<p/>\nService managing the acquisition/release of CoreSession instances.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/CoreSessionService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.api.CoreSessionServiceImpl\" version=\"1.0.0\">\n\n  <documentation>\n    Service managing the acquisition/release of CoreSession instances.\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.api.CoreSessionServiceImpl\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.api.CoreSessionService\" />\n  </service>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.security.defaultPolicies","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.security.defaultPolicies--policies","extensionPoint":"org.nuxeo.ecm.core.security.SecurityService--policies","documentation":"\n      The lock security policy checks if a lock is set on the document, in case\n      it denies write access to everyone except to the user who locked it.\n    \n","xml":"<extension point=\"policies\" target=\"org.nuxeo.ecm.core.security.SecurityService\">\n\n    <documentation>\n      The lock security policy checks if a lock is set on the document, in case\n      it denies write access to everyone except to the user who locked it.\n    </documentation>\n    <policy class=\"org.nuxeo.ecm.core.security.LockSecurityPolicy\" name=\"lock\" order=\"10\"/>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.security.SecurityService","rawName":"service:org.nuxeo.ecm.core.security.SecurityService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.security.defaultPolicies/Contributions/org.nuxeo.ecm.core.security.defaultPolicies--policies","documentationHtml":"<p/>\nThe lock security policy checks if a lock is set on the document, in case\nit denies write access to everyone except to the user who locked it.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;policy class=&quot;org.nuxeo.ecm.core.security.LockSecurityPolicy&quot; name=&quot;lock&quot; order=&quot;10&quot;/&gt;","id":"lock","label":"policy lock","rawXml":"<policy class=\"org.nuxeo.ecm.core.security.LockSecurityPolicy\" name=\"lock\" order=\"10\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.security.defaultPolicies","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/security-policy-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.security.defaultPolicies\">\n\n  <extension target=\"org.nuxeo.ecm.core.security.SecurityService\"\n    point=\"policies\">\n\n    <documentation>\n      The lock security policy checks if a lock is set on the document, in case\n      it denies write access to everyone except to the user who locked it.\n    </documentation>\n    <policy name=\"lock\" class=\"org.nuxeo.ecm.core.security.LockSecurityPolicy\"\n      order=\"10\" />\n\n  </extension>\n\n  <!--\n  Policy disabled by default given that with auto-checkout\n  it looks like write access to checked in documents is allowed.\n  <extension target=\"org.nuxeo.ecm.core.security.SecurityService\"\n    point=\"policies\">\n    <documentation>\n      The checkin security policy denies write access on a live document when\n      it is in the checked-in state. The document must be checked out before\n      modification is allowed.\n      @since 5.4\n    </documentation>\n    <policy name=\"checkin\" class=\"org.nuxeo.ecm.core.security.CheckInSecurityPolicy\"\n      order=\"15\" />\n  </extension>\n  -->\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.uidseq.keyvaluestore","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.uidseq.keyvaluestore--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n      Property defining the name of the key/value store used for the KeyValueStoreUIDSequencer.\n    \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <documentation>\n      Property defining the name of the key/value store used for the KeyValueStoreUIDSequencer.\n    </documentation>\n    <property name=\"nuxeo.uidseq.keyvaluestore.name\">sequence</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.uidseq.keyvaluestore/Contributions/org.nuxeo.ecm.core.uidseq.keyvaluestore--configuration","documentationHtml":"<p/>\nProperty defining the name of the key/value store used for the KeyValueStoreUIDSequencer.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;nuxeo.uidseq.keyvaluestore.name&quot;&gt;sequence&lt;/property&gt;","id":"nuxeo.uidseq.keyvaluestore.name","label":"property nuxeo.uidseq.keyvaluestore.name","rawXml":"<property name=\"nuxeo.uidseq.keyvaluestore.name\">sequence</property>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.uidseq.keyvaluestore","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/uidgenerator-keyvalue-config.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.uidseq.keyvaluestore\" version=\"1.0\">\n\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n    <documentation>\n      Property defining the name of the key/value store used for the KeyValueStoreUIDSequencer.\n    </documentation>\n    <property name=\"nuxeo.uidseq.keyvaluestore.name\">sequence</property>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.security.SecurityService","extensionPoints":[{"@type":"NXExtensionPoint","name":"policies","descriptors":["org.nuxeo.ecm.core.security.SecurityPolicyDescriptor"],"documentation":"\n      Extension point to register custom security policies or override existing\n      policies.\n      <p/>\n\n\n      Policies are checked in the order they are defined. They can grant or deny\n      access, in case following policies - as well as the default security check\n      relying on the acp set on the document - will be ignored. They can also\n      return an undefined access, in case following policy checks will continue.\n\n      <p/>\n\n\n      Example to define a custom policy :\n      <code>\n    <policy class=\"org.nuxeo.ecm.core.security.LockSecurityPolicy\"\n        name=\"lock\" order=\"10\"/>\n</code>\n\n\n      The class used has to implement the\n      org.nuxeo.ecm.core.security.SecurityPolicy interface.\n\n      <p/>\n\n\n      It is later possible to override that definition in another contribution\n      to that extension-point to disable or override a policy:\n      <code>\n    <policy enabled=\"false\" name=\"lock\"/>\n    <policy class=\"org.nuxeo.ecm.core.security.LockSecurityPolicy\"\n        name=\"lock\" order=\"20\"/>\n</code>\n<p/>\n\n\n      @author <a href=\"mailto:at@nuxeo.com\">Anahide Tchertchian</a>\n","id":"org.nuxeo.ecm.core.security.SecurityService--policies","version":"11.1-SNAPSHOT","label":"policies (org.nuxeo.ecm.core.security.SecurityService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.security.SecurityService/ExtensionPoints/org.nuxeo.ecm.core.security.SecurityService--policies","documentationHtml":"<p/>\nExtension point to register custom security policies or override existing\npolicies.\n<p/>\nPolicies are checked in the order they are defined. They can grant or deny\naccess, in case following policies - as well as the default security check\nrelying on the acp set on the document - will be ignored. They can also\nreturn an undefined access, in case following policy checks will continue.\n<p/>\nExample to define a custom policy :\n<p/><pre><code>    &lt;policy class=\"org.nuxeo.ecm.core.security.LockSecurityPolicy\"\n        name=\"lock\" order=\"10\"/>\n</code></pre><p/>\nThe class used has to implement the\norg.nuxeo.ecm.core.security.SecurityPolicy interface.\n<p/>\nIt is later possible to override that definition in another contribution\nto that extension-point to disable or override a policy:\n<p/><pre><code>    &lt;policy enabled=\"false\" name=\"lock\"/>\n    &lt;policy class=\"org.nuxeo.ecm.core.security.LockSecurityPolicy\"\n        name=\"lock\" order=\"20\"/>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.core.security.SecurityService"},{"@type":"NXExtensionPoint","name":"permissions","descriptors":["org.nuxeo.ecm.core.security.PermissionDescriptor"],"documentation":"\n      Extension point to register permission definitions or override\n      existing permissions.\n      <p/>\n\n\n      Example to define a single atomic permissions that are not meant\n      to be displayed in the rights management screen of folders:\n      <code>\n    <permission name=\"Browse\"/>\n    <permission name=\"ReadVersion\"/>\n    <permission name=\"ReadProperties\"/>\n    <permission name=\"ReadChildren\"/>\n    <permission name=\"ReadLifeCycle\"/>\n    <permission name=\"ReviewParticipant\"/>\n</code>\n<p/>\n\n\n      Example to define a compound permission that holds many related\n      atomic permissions into a single high level (role-like)\n      permission:\n      <code>\n    <permission name=\"Read\">\n        <include>Browse</include>\n        <include>ReadVersion</include>\n        <include>ReadProperties</include>\n        <include>ReadChildren</include>\n        <include>ReadLifeCycle</include>\n        <include>ReviewParticipant</include>\n    </permission>\n</code>\n\n\n      Note that each of the included permissions should have been\n      previously registered with their on &lt;permission/&gt;\n      declaration.\n\n      <p/>\n\n\n      It is later possible to override that definition in another\n      contribution to that extension-point to add a new permission\n      'CustomPerm' and remove 'ReviewParticipant':\n      <code>\n    <permission name=\"CustomPerm\"/>\n    <permission name=\"Read\">\n        <include>CustomPerm</include>\n        <remove>ReviewParticipant</remove>\n    </permission>\n</code>\n<p/>\n\n\n      Eventually the permissions declaration also accept 'alias' tags to\n      handle backward compatibility with deprecated permissions:\n      <code>\n    <permission name=\"ReadVersion\">\n        <!-- The Version permission is deprecated\n            since it's name is ambiguous, use\n            ReadPermission instead -->\n        <alias>Version</alias>\n    </permission>\n</code>\n\n\n      NB: the alias feature is parsed by the extension point but the\n      underlying SecurityManager implementation does not leverage it\n      yet.\n\n    \n","id":"org.nuxeo.ecm.core.security.SecurityService--permissions","version":"11.1-SNAPSHOT","label":"permissions (org.nuxeo.ecm.core.security.SecurityService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.security.SecurityService/ExtensionPoints/org.nuxeo.ecm.core.security.SecurityService--permissions","documentationHtml":"<p/>\nExtension point to register permission definitions or override\nexisting permissions.\n<p/>\nExample to define a single atomic permissions that are not meant\nto be displayed in the rights management screen of folders:\n<p/><pre><code>    &lt;permission name=\"Browse\"/>\n    &lt;permission name=\"ReadVersion\"/>\n    &lt;permission name=\"ReadProperties\"/>\n    &lt;permission name=\"ReadChildren\"/>\n    &lt;permission name=\"ReadLifeCycle\"/>\n    &lt;permission name=\"ReviewParticipant\"/>\n</code></pre><p/>\nExample to define a compound permission that holds many related\natomic permissions into a single high level (role-like)\npermission:\n<p/><pre><code>    &lt;permission name=\"Read\">\n        &lt;include>Browse&lt;/include>\n        &lt;include>ReadVersion&lt;/include>\n        &lt;include>ReadProperties&lt;/include>\n        &lt;include>ReadChildren&lt;/include>\n        &lt;include>ReadLifeCycle&lt;/include>\n        &lt;include>ReviewParticipant&lt;/include>\n    &lt;/permission>\n</code></pre><p/>\nNote that each of the included permissions should have been\npreviously registered with their on &lt;permission/&gt;\ndeclaration.\n<p/>\nIt is later possible to override that definition in another\ncontribution to that extension-point to add a new permission\n'CustomPerm' and remove 'ReviewParticipant':\n<p/><pre><code>    &lt;permission name=\"CustomPerm\"/>\n    &lt;permission name=\"Read\">\n        &lt;include>CustomPerm&lt;/include>\n        &lt;remove>ReviewParticipant&lt;/remove>\n    &lt;/permission>\n</code></pre><p/>\nEventually the permissions declaration also accept 'alias' tags to\nhandle backward compatibility with deprecated permissions:\n<p/><pre><code>    &lt;permission name=\"ReadVersion\">\n        &lt;!-- The Version permission is deprecated\n            since it's name is ambiguous, use\n            ReadPermission instead -->\n        &lt;alias>Version&lt;/alias>\n    &lt;/permission>\n</code></pre><p/>\nNB: the alias feature is parsed by the extension point but the\nunderlying SecurityManager implementation does not leverage it\nyet.\n<p/>","componentId":"org.nuxeo.ecm.core.security.SecurityService"},{"@type":"NXExtensionPoint","name":"permissionsVisibility","descriptors":["org.nuxeo.ecm.core.security.PermissionVisibilityDescriptor"],"documentation":"\n      Extension point to register permission visibility in user\n      interface or override existing settings.\n      <p/>\n\n\n      Example to define the default list of permissions that are\n      manageable through the UI screens:\n      <code>\n    <visibility>\n        <item order=\"10\" show=\"true\">Read</item>\n        <item order=\"50\" show=\"true\">ReadWrite</item>\n        <item order=\"100\" show=\"true\">Everything</item>\n    </visibility>\n</code>\n\n\n      This list of options items will be displayed if no type specific\n      settings are registered.\n\n      <p/>\n\n      Example to define the default list of permissions that are\n      specific to the Section document type:\n      <code>\n    <visibility type=\"Section\">\n        <item order=\"10\" show=\"true\">Read</item>\n        <item order=\"100\" show=\"true\">Everything</item>\n    </visibility>\n</code>\n\n\n      Note: the 'show' attribute defaults to 'true' and the 'order'\n      attribute defaults to '0'.\n\n    \n","id":"org.nuxeo.ecm.core.security.SecurityService--permissionsVisibility","version":"11.1-SNAPSHOT","label":"permissionsVisibility (org.nuxeo.ecm.core.security.SecurityService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.security.SecurityService/ExtensionPoints/org.nuxeo.ecm.core.security.SecurityService--permissionsVisibility","documentationHtml":"<p/>\nExtension point to register permission visibility in user\ninterface or override existing settings.\n<p/>\nExample to define the default list of permissions that are\nmanageable through the UI screens:\n<p/><pre><code>    &lt;visibility>\n        &lt;item order=\"10\" show=\"true\">Read&lt;/item>\n        &lt;item order=\"50\" show=\"true\">ReadWrite&lt;/item>\n        &lt;item order=\"100\" show=\"true\">Everything&lt;/item>\n    &lt;/visibility>\n</code></pre><p/>\nThis list of options items will be displayed if no type specific\nsettings are registered.\n<p/>\nExample to define the default list of permissions that are\nspecific to the Section document type:\n<p/><pre><code>    &lt;visibility type=\"Section\">\n        &lt;item order=\"10\" show=\"true\">Read&lt;/item>\n        &lt;item order=\"100\" show=\"true\">Everything&lt;/item>\n    &lt;/visibility>\n</code></pre><p/>\nNote: the 'show' attribute defaults to 'true' and the 'order'\nattribute defaults to '0'.\n<p/>","componentId":"org.nuxeo.ecm.core.security.SecurityService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.security.SecurityService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.security.SecurityService/Services/org.nuxeo.ecm.core.security.SecurityService","componentId":"org.nuxeo.ecm.core.security.SecurityService"},{"@type":"NXService","id":"org.nuxeo.ecm.core.api.security.PermissionProvider","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.security.SecurityService/Services/org.nuxeo.ecm.core.api.security.PermissionProvider","componentId":"org.nuxeo.ecm.core.security.SecurityService"},{"@type":"NXService","id":"org.nuxeo.ecm.core.security.SecurityPolicyService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.security.SecurityService/Services/org.nuxeo.ecm.core.security.SecurityPolicyService","componentId":"org.nuxeo.ecm.core.security.SecurityService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.security.SecurityService","documentation":"\n    The security service is responsible to check the permission on a\n    repository. Permission check will be usually forwarded to the\n    security manager defined on the repository. This may change later.\n    <p/>\n\n    It holds a permission provider that defines the list of available permission\n    names and how they are combined into groups of permissions.\n    <p/>\n\n    It also defines which permissions are high level permissions that are to be\n    managed through the end user interface and in which order they should be\n    display in management menus.\n    <p/>\n\n\n    It also holds a security policy service that can stack custom policies.\n    These policies can override default permission checks based on acls set on\n    the document and/or its parents.\n\n    @author <a href=\"mailto:bs@nuxeo.com\">Bogdan Stefanescu</a>\n\n    @author <a href=\"mailto:og@nuxeo.com\">Olivier Grisel</a>\n\n    @author <a href=\"mailto:at@nuxeo.com\">Anahide Tchertchian</a>\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.security.SecurityService","documentationHtml":"<p/>\nThe security service is responsible to check the permission on a\nrepository. Permission check will be usually forwarded to the\nsecurity manager defined on the repository. This may change later.\n<p/>\nIt holds a permission provider that defines the list of available permission\nnames and how they are combined into groups of permissions.\n<p/>\nIt also defines which permissions are high level permissions that are to be\nmanaged through the end user interface and in which order they should be\ndisplay in management menus.\n<p/>\nIt also holds a security policy service that can stack custom policies.\nThese policies can override default permission checks based on acls set on\nthe document and/or its parents.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/SecurityService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.core.security.SecurityService\"\n  version=\"1.0\">\n\n  <implementation class=\"org.nuxeo.ecm.core.security.SecurityService\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.security.SecurityService\" />\n    <provide interface=\"org.nuxeo.ecm.core.api.security.PermissionProvider\" />\n    <provide interface=\"org.nuxeo.ecm.core.security.SecurityPolicyService\" />\n  </service>\n\n  <documentation>\n    The security service is responsible to check the permission on a\n    repository. Permission check will be usually forwarded to the\n    security manager defined on the repository. This may change later.\n    <p />\n    It holds a permission provider that defines the list of available permission\n    names and how they are combined into groups of permissions.\n    <p />\n    It also defines which permissions are high level permissions that are to be\n    managed through the end user interface and in which order they should be\n    display in management menus.\n    <p />\n    It also holds a security policy service that can stack custom policies.\n    These policies can override default permission checks based on acls set on\n    the document and/or its parents.\n\n    @author <a href=\"mailto:bs@nuxeo.com\">Bogdan Stefanescu</a>\n    @author <a href=\"mailto:og@nuxeo.com\">Olivier Grisel</a>\n    @author <a href=\"mailto:at@nuxeo.com\">Anahide Tchertchian</a>\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.security.SecurityService\" />\n\n  <extension-point name=\"permissions\">\n\n    <documentation>\n      Extension point to register permission definitions or override\n      existing permissions.\n      <p />\n\n      Example to define a single atomic permissions that are not meant\n      to be displayed in the rights management screen of folders:\n      <code>\n        <permission name=\"Browse\" />\n        <permission name=\"ReadVersion\" />\n        <permission name=\"ReadProperties\" />\n        <permission name=\"ReadChildren\" />\n        <permission name=\"ReadLifeCycle\" />\n        <permission name=\"ReviewParticipant\" />\n      </code>\n\n      <p />\n\n      Example to define a compound permission that holds many related\n      atomic permissions into a single high level (role-like)\n      permission:\n      <code>\n        <permission name=\"Read\">\n          <include>Browse</include>\n          <include>ReadVersion</include>\n          <include>ReadProperties</include>\n          <include>ReadChildren</include>\n          <include>ReadLifeCycle</include>\n          <include>ReviewParticipant</include>\n        </permission>\n      </code>\n\n      Note that each of the included permissions should have been\n      previously registered with their on &lt;permission/&gt;\n      declaration.\n\n      <p />\n\n      It is later possible to override that definition in another\n      contribution to that extension-point to add a new permission\n      'CustomPerm' and remove 'ReviewParticipant':\n      <code>\n        <permission name=\"CustomPerm\" />\n\n        <permission name=\"Read\">\n          <include>CustomPerm</include>\n          <remove>ReviewParticipant</remove>\n        </permission>\n      </code>\n\n      <p />\n\n      Eventually the permissions declaration also accept 'alias' tags to\n      handle backward compatibility with deprecated permissions:\n      <code>\n        <permission name=\"ReadVersion\">\n          <!-- The Version permission is deprecated\n            since it's name is ambiguous, use\n            ReadPermission instead -->\n          <alias>Version</alias>\n        </permission>\n      </code>\n\n      NB: the alias feature is parsed by the extension point but the\n      underlying SecurityManager implementation does not leverage it\n      yet.\n\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.security.PermissionDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"permissionsVisibility\">\n\n    <documentation>\n      Extension point to register permission visibility in user\n      interface or override existing settings.\n      <p />\n\n      Example to define the default list of permissions that are\n      manageable through the UI screens:\n      <code>\n        <visibility>\n          <item show=\"true\" order=\"10\">Read</item>\n          <item show=\"true\" order=\"50\">ReadWrite</item>\n          <item show=\"true\" order=\"100\">Everything</item>\n        </visibility>\n      </code>\n\n      This list of options items will be displayed if no type specific\n      settings are registered.\n\n      <p />\n      Example to define the default list of permissions that are\n      specific to the Section document type:\n      <code>\n        <visibility type=\"Section\">\n          <item show=\"true\" order=\"10\">Read</item>\n          <item show=\"true\" order=\"100\">Everything</item>\n        </visibility>\n      </code>\n\n      Note: the 'show' attribute defaults to 'true' and the 'order'\n      attribute defaults to '0'.\n\n    </documentation>\n\n    <object\n      class=\"org.nuxeo.ecm.core.security.PermissionVisibilityDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"policies\">\n\n    <documentation>\n      Extension point to register custom security policies or override existing\n      policies.\n      <p />\n\n      Policies are checked in the order they are defined. They can grant or deny\n      access, in case following policies - as well as the default security check\n      relying on the acp set on the document - will be ignored. They can also\n      return an undefined access, in case following policy checks will continue.\n\n      <p />\n\n      Example to define a custom policy :\n      <code>\n        <policy name=\"lock\"\n          class=\"org.nuxeo.ecm.core.security.LockSecurityPolicy\" order=\"10\" />\n      </code>\n\n      The class used has to implement the\n      org.nuxeo.ecm.core.security.SecurityPolicy interface.\n\n      <p />\n\n      It is later possible to override that definition in another contribution\n      to that extension-point to disable or override a policy:\n      <code>\n        <policy name=\"lock\" enabled=\"false\" />\n\n        <policy name=\"lock\"\n          class=\"org.nuxeo.ecm.core.security.LockSecurityPolicy\" order=\"20\" />\n      </code>\n\n      <p />\n\n      @author <a href=\"mailto:at@nuxeo.com\">Anahide Tchertchian</a>\n\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.security.SecurityPolicyDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.lifecycle.LifeCycleService","extensionPoints":[{"@type":"NXExtensionPoint","name":"lifecycle","descriptors":["org.nuxeo.ecm.core.lifecycle.extensions.LifeCycleDescriptor"],"documentation":"\n      Extension point for registering life cycle definition.\n      <p/>\n\n      A life cycle is a state-transition model described as an XML document.\n      <p/>\n\n      A life cycle within Nuxeo Core describes only the states and the\n      transitions without any security policy whatsoever. For instance, the\n      workflow service (or BPM service) will be responsible of the security\n      policy and actors involved.\n    \n","id":"org.nuxeo.ecm.core.lifecycle.LifeCycleService--lifecycle","version":"11.1-SNAPSHOT","label":"lifecycle (org.nuxeo.ecm.core.lifecycle.LifeCycleService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.lifecycle.LifeCycleService/ExtensionPoints/org.nuxeo.ecm.core.lifecycle.LifeCycleService--lifecycle","documentationHtml":"<p/>\nExtension point for registering life cycle definition.\n<p/>\nA life cycle is a state-transition model described as an XML document.\n<p/>\nA life cycle within Nuxeo Core describes only the states and the\ntransitions without any security policy whatsoever. For instance, the\nworkflow service (or BPM service) will be responsible of the security\npolicy and actors involved.\n<p/>","componentId":"org.nuxeo.ecm.core.lifecycle.LifeCycleService"},{"@type":"NXExtensionPoint","name":"types","descriptors":["org.nuxeo.ecm.core.lifecycle.extensions.LifeCycleTypesDescriptor"],"documentation":"\n      Extension point for registering document type to life cycle mappings.\n      <p/>\n\n      For instance, you can specify that a document type <i>File</i>\n will follow a <i>default</i>\n\n      life cycle where <i>default</i>\n is the name of a registered life cycle.\n    \n","id":"org.nuxeo.ecm.core.lifecycle.LifeCycleService--types","version":"11.1-SNAPSHOT","label":"types (org.nuxeo.ecm.core.lifecycle.LifeCycleService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.lifecycle.LifeCycleService/ExtensionPoints/org.nuxeo.ecm.core.lifecycle.LifeCycleService--types","documentationHtml":"<p/>\nExtension point for registering document type to life cycle mappings.\n<p/>\nFor instance, you can specify that a document type <i>File</i>\nwill follow a <i>default</i>\n<p/>\nlife cycle where <i>default</i>\nis the name of a registered life cycle.\n<p/>","componentId":"org.nuxeo.ecm.core.lifecycle.LifeCycleService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.lifecycle.LifeCycleService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.lifecycle.LifeCycleService/Services/org.nuxeo.ecm.core.lifecycle.LifeCycleService","componentId":"org.nuxeo.ecm.core.lifecycle.LifeCycleService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.lifecycle.impl.LifeCycleServiceImpl","documentation":"\n\n    Service that deals with life cycle.\n\n    @version 1.0\n    @author <a href=\"mailto:ja@nuxeo.com\">Julien Anguenot</a>\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.lifecycle.LifeCycleService","documentationHtml":"<p/>\nService that deals with life cycle.\n<p/>\n@version 1.0\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/LifeCycleService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.lifecycle.LifeCycleService\">\n\n  <documentation>\n    Service that deals with life cycle.\n\n    @version 1.0\n    @author <a href=\"mailto:ja@nuxeo.com\">Julien Anguenot</a>\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.lifecycle.impl.LifeCycleServiceImpl\"/>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.lifecycle.LifeCycleService\" />\n  </service>\n\n  <extension-point name=\"lifecycle\">\n\n    <documentation>\n      Extension point for registering life cycle definition.\n      <p/>\n      A life cycle is a state-transition model described as an XML document.\n      <p/>\n      A life cycle within Nuxeo Core describes only the states and the\n      transitions without any security policy whatsoever. For instance, the\n      workflow service (or BPM service) will be responsible of the security\n      policy and actors involved.\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.lifecycle.extensions.LifeCycleDescriptor\"/>\n\n  </extension-point>\n\n  <extension-point name=\"types\">\n\n    <documentation>\n      Extension point for registering document type to life cycle mappings.\n      <p/>\n      For instance, you can specify that a document type <i>File</i> will follow a <i>default</i>\n      life cycle where <i>default</i> is the name of a registered life cycle.\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.lifecycle.extensions.LifeCycleTypesDescriptor\"/>\n\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.repository.RepositoryServiceComponent","extensionPoints":[],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.repository.RepositoryService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.repository.RepositoryServiceComponent/Services/org.nuxeo.ecm.core.repository.RepositoryService","componentId":"org.nuxeo.ecm.core.repository.RepositoryServiceComponent"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.repository.RepositoryService","documentation":"\n    Service to manage core repositories.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.repository.RepositoryServiceComponent","documentationHtml":"<p/>\nService to manage core repositories.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/RepositoryService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.repository.RepositoryServiceComponent\"\n  version=\"1.0\">\n  <documentation>\n    Service to manage core repositories.\n  </documentation>\n\n  <require>org.nuxeo.ecm.core.api.repository.RepositoryManager</require>\n  <require>org.nuxeo.runtime.cluster.ClusterService</require>\n\n  <implementation class=\"org.nuxeo.ecm.core.repository.RepositoryService\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.repository.RepositoryService\" />\n  </service>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.DocumentModel.resolver","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.DocumentModel.resolver--resolvers","extensionPoint":"org.nuxeo.ecm.core.schema.ObjectResolverService--resolvers","documentation":null,"xml":"<extension point=\"resolvers\" target=\"org.nuxeo.ecm.core.schema.ObjectResolverService\">\n    <resolver class=\"org.nuxeo.ecm.core.model.DocumentModelResolver\" type=\"documentResolver\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.schema.ObjectResolverService","rawName":"service:org.nuxeo.ecm.core.schema.ObjectResolverService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.DocumentModel.resolver/Contributions/org.nuxeo.ecm.core.DocumentModel.resolver--resolvers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;resolver class=&quot;org.nuxeo.ecm.core.model.DocumentModelResolver&quot; type=&quot;documentResolver&quot;/&gt;","id":null,"label":"resolver","rawXml":"<resolver class=\"org.nuxeo.ecm.core.model.DocumentModelResolver\" type=\"documentResolver\"/>"}]}],"componentClass":null,"documentation":"\n    Resolver for document properties containing DocumentModel reference. Can manage PATH reference or ID\n    reference. Value will contain id or path prefixed by the repository name to which the referenced document belongs.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.DocumentModel.resolver","documentationHtml":"<p/>\nResolver for document properties containing DocumentModel reference. Can manage PATH reference or ID\nreference. Value will contain id or path prefixed by the repository name to which the referenced document belongs.\n<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/document-resolver-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.core.DocumentModel.resolver\">\n  <documentation>\n    Resolver for document properties containing DocumentModel reference. Can manage PATH reference or ID\n    reference. Value will contain id or path prefixed by the repository name to which the referenced document belongs.\n  </documentation>\n\n  <extension target=\"org.nuxeo.ecm.core.schema.ObjectResolverService\" point=\"resolvers\">\n    <resolver type=\"documentResolver\" class=\"org.nuxeo.ecm.core.model.DocumentModelResolver\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.LifecycleCoreExtensions","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.LifecycleCoreExtensions--lifecycle","extensionPoint":"org.nuxeo.ecm.core.lifecycle.LifeCycleService--lifecycle","documentation":"Nuxeo core default life cycle definition.\n","xml":"<extension point=\"lifecycle\" target=\"org.nuxeo.ecm.core.lifecycle.LifeCycleService\">\n\n    <documentation>Nuxeo core default life cycle definition.</documentation>\n\n    <lifecycle defaultInitial=\"project\" name=\"default\">\n      <transitions>\n        <transition destinationState=\"approved\" name=\"approve\">\n          <description>Approve the content</description>\n        </transition>\n        <transition destinationState=\"obsolete\" name=\"obsolete\">\n          <description>Content becomes obsolete</description>\n        </transition>\n        <transition destinationState=\"deleted\" name=\"delete\">\n          <description>Move document to trash (temporary delete)</description>\n        </transition>\n        <transition destinationState=\"project\" name=\"undelete\">\n          <description>Recover the document from trash</description>\n        </transition>\n        <transition destinationState=\"project\" name=\"backToProject\">\n          <description>Recover the document from trash</description>\n        </transition>\n      </transitions>\n      <states>\n        <state description=\"Default state\" initial=\"true\" name=\"project\">\n          <transitions>\n            <transition>approve</transition>\n            <transition>obsolete</transition>\n            <transition>delete</transition>\n          </transitions>\n        </state>\n        <state description=\"Content has been validated\" name=\"approved\">\n          <transitions>\n            <transition>delete</transition>\n            <transition>backToProject</transition>\n          </transitions>\n        </state>\n        <state description=\"Content is obsolete\" name=\"obsolete\">\n          <transitions>\n            <transition>delete</transition>\n            <transition>backToProject</transition>\n          </transitions>\n        </state>\n        <state description=\"Document is deleted\" name=\"deleted\">\n          <transitions>\n            <transition>undelete</transition>\n          </transitions>\n        </state>\n      </states>\n    </lifecycle>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.lifecycle.LifeCycleService","rawName":"service:org.nuxeo.ecm.core.lifecycle.LifeCycleService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.LifecycleCoreExtensions/Contributions/org.nuxeo.ecm.core.LifecycleCoreExtensions--lifecycle","documentationHtml":"<p/>\nNuxeo core default life cycle definition.","contributionItems":[{"documentation":"<p/>\nRecover the document from trash","xml":"&lt;lifecycle defaultInitial=&quot;project&quot; name=&quot;default&quot;&gt;\n      &lt;transitions&gt;\n        &lt;transition destinationState=&quot;approved&quot; name=&quot;approve&quot;&gt;\n          &lt;description&gt;Approve the content&lt;/description&gt;\n        &lt;/transition&gt;\n        &lt;transition destinationState=&quot;obsolete&quot; name=&quot;obsolete&quot;&gt;\n          &lt;description&gt;Content becomes obsolete&lt;/description&gt;\n        &lt;/transition&gt;\n        &lt;transition destinationState=&quot;deleted&quot; name=&quot;delete&quot;&gt;\n          &lt;description&gt;Move document to trash (temporary delete)&lt;/description&gt;\n        &lt;/transition&gt;\n        &lt;transition destinationState=&quot;project&quot; name=&quot;undelete&quot;&gt;\n          &lt;description&gt;Recover the document from trash&lt;/description&gt;\n        &lt;/transition&gt;\n        &lt;transition destinationState=&quot;project&quot; name=&quot;backToProject&quot;&gt;\n          &lt;description&gt;Recover the document from trash&lt;/description&gt;\n        &lt;/transition&gt;\n      &lt;/transitions&gt;\n      &lt;states&gt;\n        &lt;state description=&quot;Default state&quot; initial=&quot;true&quot; name=&quot;project&quot;&gt;\n          &lt;transitions&gt;\n            &lt;transition&gt;approve&lt;/transition&gt;\n            &lt;transition&gt;obsolete&lt;/transition&gt;\n            &lt;transition&gt;delete&lt;/transition&gt;\n          &lt;/transitions&gt;\n        &lt;/state&gt;\n        &lt;state description=&quot;Content has been validated&quot; name=&quot;approved&quot;&gt;\n          &lt;transitions&gt;\n            &lt;transition&gt;delete&lt;/transition&gt;\n            &lt;transition&gt;backToProject&lt;/transition&gt;\n          &lt;/transitions&gt;\n        &lt;/state&gt;\n        &lt;state description=&quot;Content is obsolete&quot; name=&quot;obsolete&quot;&gt;\n          &lt;transitions&gt;\n            &lt;transition&gt;delete&lt;/transition&gt;\n            &lt;transition&gt;backToProject&lt;/transition&gt;\n          &lt;/transitions&gt;\n        &lt;/state&gt;\n        &lt;state description=&quot;Document is deleted&quot; name=&quot;deleted&quot;&gt;\n          &lt;transitions&gt;\n            &lt;transition&gt;undelete&lt;/transition&gt;\n          &lt;/transitions&gt;\n        &lt;/state&gt;\n      &lt;/states&gt;\n    &lt;/lifecycle&gt;","id":"default","label":"lifecycle default","rawXml":"<lifecycle defaultInitial=\"project\" name=\"default\">\n      <transitions>\n        <transition destinationState=\"approved\" name=\"approve\">\n          <description>Approve the content</description>\n        </transition>\n        <transition destinationState=\"obsolete\" name=\"obsolete\">\n          <description>Content becomes obsolete</description>\n        </transition>\n        <transition destinationState=\"deleted\" name=\"delete\">\n          <description>Move document to trash (temporary delete)</description>\n        </transition>\n        <transition destinationState=\"project\" name=\"undelete\">\n          <description>Recover the document from trash</description>\n        </transition>\n        <transition destinationState=\"project\" name=\"backToProject\">\n          <description>Recover the document from trash</description>\n        </transition>\n      </transitions>\n      <states>\n        <state description=\"Default state\" initial=\"true\" name=\"project\">\n          <transitions>\n            <transition>approve</transition>\n            <transition>obsolete</transition>\n            <transition>delete</transition>\n          </transitions>\n        </state>\n        <state description=\"Content has been validated\" name=\"approved\">\n          <transitions>\n            <transition>delete</transition>\n            <transition>backToProject</transition>\n          </transitions>\n        </state>\n        <state description=\"Content is obsolete\" name=\"obsolete\">\n          <transitions>\n            <transition>delete</transition>\n            <transition>backToProject</transition>\n          </transitions>\n        </state>\n        <state description=\"Document is deleted\" name=\"deleted\">\n          <transitions>\n            <transition>undelete</transition>\n          </transitions>\n        </state>\n      </states>\n    </lifecycle>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.LifecycleCoreExtensions--types","extensionPoint":"org.nuxeo.ecm.core.lifecycle.LifeCycleService--types","documentation":"\n      Nuxeo core default document types to life cycles mapping\n    \n","xml":"<extension point=\"types\" target=\"org.nuxeo.ecm.core.lifecycle.LifeCycleService\">\n\n    <documentation>\n      Nuxeo core default document types to life cycles mapping\n    </documentation>\n\n    <types>\n      <type name=\"File\">default</type>\n      <type name=\"Note\">default</type>\n      <type name=\"Calendar\">default</type>\n      <type name=\"Folder\">default</type>\n      <type name=\"OrderedFolder\">default</type>\n      <type name=\"Workspace\">default</type>\n      <type name=\"Domain\">default</type>\n      <type name=\"Root\">default</type>\n      <type name=\"Section\">default</type>\n      <type name=\"WorkspaceRoot\">default</type>\n      <type name=\"SectionRoot\">default</type>\n      <type name=\"TemplateRoot\">default</type>\n    </types>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.lifecycle.LifeCycleService","rawName":"service:org.nuxeo.ecm.core.lifecycle.LifeCycleService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.LifecycleCoreExtensions/Contributions/org.nuxeo.ecm.core.LifecycleCoreExtensions--types","documentationHtml":"<p/>\nNuxeo core default document types to life cycles mapping\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;types&gt;\n      &lt;type name=&quot;File&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;Note&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;Calendar&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;Folder&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;OrderedFolder&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;Workspace&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;Domain&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;Root&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;Section&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;WorkspaceRoot&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;SectionRoot&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;TemplateRoot&quot;&gt;default&lt;/type&gt;\n    &lt;/types&gt;","id":null,"label":"types","rawXml":"<types>\n      <type name=\"File\">default</type>\n      <type name=\"Note\">default</type>\n      <type name=\"Calendar\">default</type>\n      <type name=\"Folder\">default</type>\n      <type name=\"OrderedFolder\">default</type>\n      <type name=\"Workspace\">default</type>\n      <type name=\"Domain\">default</type>\n      <type name=\"Root\">default</type>\n      <type name=\"Section\">default</type>\n      <type name=\"WorkspaceRoot\">default</type>\n      <type name=\"SectionRoot\">default</type>\n      <type name=\"TemplateRoot\">default</type>\n    </types>"}]}],"componentClass":null,"documentation":"\n\n    Nuxeo core life cycle contributions.\n\n    @version 1.0\n    @author <a href=\"mailto:ja@nuxeo.com\">Julien Anguenot</a>\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.LifecycleCoreExtensions","documentationHtml":"<p/>\nNuxeo core life cycle contributions.\n<p/>\n@version 1.0\n<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/LifeCycleCoreExtensions.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.core.LifecycleCoreExtensions\">\n\n  <documentation>\n    Nuxeo core life cycle contributions.\n\n    @version 1.0\n    @author <a href=\"mailto:ja@nuxeo.com\">Julien Anguenot</a>\n  </documentation>\n\n  <extension target=\"org.nuxeo.ecm.core.lifecycle.LifeCycleService\"\n    point=\"lifecycle\">\n\n    <documentation>Nuxeo core default life cycle definition.</documentation>\n\n    <lifecycle name=\"default\" defaultInitial=\"project\">\n      <transitions>\n        <transition name=\"approve\" destinationState=\"approved\">\n          <description>Approve the content</description>\n        </transition>\n        <transition name=\"obsolete\" destinationState=\"obsolete\">\n          <description>Content becomes obsolete</description>\n        </transition>\n        <transition name=\"delete\" destinationState=\"deleted\">\n          <description>Move document to trash (temporary delete)</description>\n        </transition>\n        <transition name=\"undelete\" destinationState=\"project\">\n          <description>Recover the document from trash</description>\n        </transition>\n        <transition name=\"backToProject\" destinationState=\"project\">\n          <description>Recover the document from trash</description>\n        </transition>\n      </transitions>\n      <states>\n        <state name=\"project\" description=\"Default state\" initial=\"true\">\n          <transitions>\n            <transition>approve</transition>\n            <transition>obsolete</transition>\n            <transition>delete</transition>\n          </transitions>\n        </state>\n        <state name=\"approved\" description=\"Content has been validated\">\n          <transitions>\n            <transition>delete</transition>\n            <transition>backToProject</transition>\n          </transitions>\n        </state>\n        <state name=\"obsolete\" description=\"Content is obsolete\">\n          <transitions>\n            <transition>delete</transition>\n            <transition>backToProject</transition>\n          </transitions>\n        </state>\n        <state name=\"deleted\" description=\"Document is deleted\">\n          <transitions>\n            <transition>undelete</transition>\n          </transitions>\n        </state>\n      </states>\n    </lifecycle>\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.lifecycle.LifeCycleService\"\n    point=\"types\">\n\n    <documentation>\n      Nuxeo core default document types to life cycles mapping\n    </documentation>\n\n    <types>\n      <type name=\"File\">default</type>\n      <type name=\"Note\">default</type>\n      <type name=\"Calendar\">default</type>\n      <type name=\"Folder\">default</type>\n      <type name=\"OrderedFolder\">default</type>\n      <type name=\"Workspace\">default</type>\n      <type name=\"Domain\">default</type>\n      <type name=\"Root\">default</type>\n      <type name=\"Section\">default</type>\n      <type name=\"WorkspaceRoot\">default</type>\n      <type name=\"SectionRoot\">default</type>\n      <type name=\"TemplateRoot\">default</type>\n    </types>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.blob.DocumentBlobManager","extensionPoints":[{"@type":"NXExtensionPoint","name":"configuration","descriptors":["org.nuxeo.ecm.core.blob.BlobDispatcherDescriptor"],"documentation":"\n      Extension points to register the blob dispatcher.\n    \n","id":"org.nuxeo.ecm.core.blob.DocumentBlobManager--configuration","version":"11.1-SNAPSHOT","label":"configuration (org.nuxeo.ecm.core.blob.DocumentBlobManager)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.blob.DocumentBlobManager/ExtensionPoints/org.nuxeo.ecm.core.blob.DocumentBlobManager--configuration","documentationHtml":"<p/>\nExtension points to register the blob dispatcher.\n<p/>","componentId":"org.nuxeo.ecm.core.blob.DocumentBlobManager"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.blob.DocumentBlobManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.blob.DocumentBlobManager/Services/org.nuxeo.ecm.core.blob.DocumentBlobManager","componentId":"org.nuxeo.ecm.core.blob.DocumentBlobManager"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.blob.DocumentBlobManagerComponent","documentation":"\n    Document Blob Manager, dispatching blobs and for methods associated to Documents or repositories.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.blob.DocumentBlobManager","documentationHtml":"<p/>\nDocument Blob Manager, dispatching blobs and for methods associated to Documents or repositories.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/documentblobmanager-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.blob.DocumentBlobManager\" version=\"1.0.0\">\n\n  <documentation>\n    Document Blob Manager, dispatching blobs and for methods associated to Documents or repositories.\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.blob.DocumentBlobManagerComponent\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.blob.DocumentBlobManager\" />\n  </service>\n\n  <extension-point name=\"configuration\">\n    <documentation>\n      Extension points to register the blob dispatcher.\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.blob.BlobDispatcherDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.filter.CharacterFilteringService","extensionPoints":[{"@type":"NXExtensionPoint","name":"filtering","descriptors":["org.nuxeo.ecm.core.filter.CharacterFilteringServiceDescriptor"],"documentation":"\n      Extension point to set if filtering is enabled or disabled. Other characters can\n      be added to be filtered if present.\n\n      <code>\n    <filtering enabled=\"true\">\n        <disallowedCharacters>\n            <character>\\r</character>\n            <character>\\t</character>\n        </disallowedCharacters>\n    </filtering>\n</code>\n","id":"org.nuxeo.ecm.core.filter.CharacterFilteringService--filtering","version":"11.1-SNAPSHOT","label":"filtering (org.nuxeo.ecm.core.filter.CharacterFilteringService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.filter.CharacterFilteringService/ExtensionPoints/org.nuxeo.ecm.core.filter.CharacterFilteringService--filtering","documentationHtml":"<p/>\nExtension point to set if filtering is enabled or disabled. Other characters can\nbe added to be filtered if present.\n<p/>\n<pre><code>    &lt;filtering enabled=\"true\">\n        &lt;disallowedCharacters>\n            &lt;character>\\r&lt;/character>\n            &lt;character>\\t&lt;/character>\n        &lt;/disallowedCharacters>\n    &lt;/filtering>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.core.filter.CharacterFilteringService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.filter.CharacterFilteringService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.filter.CharacterFilteringService/Services/org.nuxeo.ecm.core.filter.CharacterFilteringService","componentId":"org.nuxeo.ecm.core.filter.CharacterFilteringService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.filter.CharacterFilteringServiceImpl","documentation":"\n    The character filtering service enables the filtering of unwanted characters.\n    If filtering is enabled, by default the control characters not valid in XML specification\n    will be removed from any field in document creation or update.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.filter.CharacterFilteringService","documentationHtml":"<p/>\nThe character filtering service enables the filtering of unwanted characters.\nIf filtering is enabled, by default the control characters not valid in XML specification\nwill be removed from any field in document creation or update.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/character-filtering-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.filter.CharacterFilteringService\">\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.filter.CharacterFilteringService\" />\n  </service>\n\n  <implementation class=\"org.nuxeo.ecm.core.filter.CharacterFilteringServiceImpl\" />\n\n  <documentation>\n    The character filtering service enables the filtering of unwanted characters.\n    If filtering is enabled, by default the control characters not valid in XML specification\n    will be removed from any field in document creation or update.\n  </documentation>\n\n  <extension-point name=\"filtering\">\n    <documentation>\n      Extension point to set if filtering is enabled or disabled. Other characters can\n      be added to be filtered if present.\n\n      <code>\n        <filtering enabled=\"true\">\n          <disallowedCharacters>\n            <character>\\r</character>\n            <character>\\t</character>\n          </disallowedCharacters>\n        </filtering>\n      </code>\n\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.filter.CharacterFilteringServiceDescriptor\" />\n\n  </extension-point>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.trash.TrashService","extensionPoints":[],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.api.trash.TrashService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.trash.TrashService/Services/org.nuxeo.ecm.core.api.trash.TrashService","componentId":"org.nuxeo.ecm.core.trash.TrashService"},{"@type":"NXService","id":"org.nuxeo.ecm.core.trash.TrashService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.trash.TrashService/Services/org.nuxeo.ecm.core.trash.TrashService","componentId":"org.nuxeo.ecm.core.trash.TrashService"},{"@type":"NXService","id":"org.nuxeo.ecm.core.trash.TrashServiceImpl","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.trash.TrashService/Services/org.nuxeo.ecm.core.trash.TrashServiceImpl","componentId":"org.nuxeo.ecm.core.trash.TrashService"}],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.trash.TrashService--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n      Property defining the behavior when putting a checked in document in the trash.\n      When true, the document will be kept checked in (this avoids growing quotas).\n      When false, the document will be checked out (compatibility behavior).\n\n      @deprecated since 10.1 new trash service implementation doesn't allow to not keep checkedIn state. Property\n      configuration is still available for former trash service based on document life cycle state.\n    \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <documentation>\n      Property defining the behavior when putting a checked in document in the trash.\n      When true, the document will be kept checked in (this avoids growing quotas).\n      When false, the document will be checked out (compatibility behavior).\n\n      @deprecated since 10.1 new trash service implementation doesn't allow to not keep checkedIn state. Property\n      configuration is still available for former trash service based on document life cycle state.\n    </documentation>\n    <property name=\"org.nuxeo.trash.keepCheckedIn\">true</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.trash.TrashService/Contributions/org.nuxeo.ecm.core.trash.TrashService--configuration","documentationHtml":"<p/>\nProperty defining the behavior when putting a checked in document in the trash.\nWhen true, the document will be kept checked in (this avoids growing quotas).\nWhen false, the document will be checked out (compatibility behavior).\n<p/>\n@deprecated since 10.1 new trash service implementation doesn't allow to not keep checkedIn state. Property\nconfiguration is still available for former trash service based on document life cycle state.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;org.nuxeo.trash.keepCheckedIn&quot;&gt;true&lt;/property&gt;","id":"org.nuxeo.trash.keepCheckedIn","label":"property org.nuxeo.trash.keepCheckedIn","rawXml":"<property name=\"org.nuxeo.trash.keepCheckedIn\">true</property>"}]}],"componentClass":"org.nuxeo.ecm.core.trash.TrashServiceImpl","documentation":"\n    The trash service is responsible for deleting, purging and undeleting documents\n    based on the lifecycle state.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core/org.nuxeo.ecm.core.trash.TrashService","documentationHtml":"<p/>\nThe trash service is responsible for deleting, purging and undeleting documents\nbased on the lifecycle state.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core/bin/main/OSGI-INF/trash-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.trash.TrashService\"\n           version=\"1.0\">\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.api.trash.TrashService\" />\n    <provide interface=\"org.nuxeo.ecm.core.trash.TrashService\" />\n    <provide interface=\"org.nuxeo.ecm.core.trash.TrashServiceImpl\" />\n  </service>\n\n  <implementation class=\"org.nuxeo.ecm.core.trash.TrashServiceImpl\" />\n\n  <documentation>\n    The trash service is responsible for deleting, purging and undeleting documents\n    based on the lifecycle state.\n  </documentation>\n\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n    <documentation>\n      Property defining the behavior when putting a checked in document in the trash.\n      When true, the document will be kept checked in (this avoids growing quotas).\n      When false, the document will be checked out (compatibility behavior).\n\n      @deprecated since 10.1 new trash service implementation doesn't allow to not keep checkedIn state. Property\n      configuration is still available for former trash service based on document life cycle state.\n    </documentation>\n    <property name=\"org.nuxeo.trash.keepCheckedIn\">true</property>\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.query","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.core.query,\n org.nuxeo.ecm.core.query.sql,\n org.nuxeo.ecm.core.query.sql.model,\n org.nuxeo.ecm.core.query.sql.parser\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Name: org.nuxeo.ecm.core.query\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Version: 5.4.2.qualifier\nBundle-ManifestVersion: 2\nImport-Package: java_cup.runtime,\n org.joda.time,\n org.joda.time.base,\n org.joda.time.format,\n org.nuxeo.common.collections,\n org.nuxeo.common.utils,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.impl\nBundle-SymbolicName: org.nuxeo.ecm.core.query;singleton:=true\nNuxeo-Component: OSGI-INF/core-query-properties.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-query","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-query/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.query.properties","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.query.properties--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n      Property that defines the default maxPageSize to use when no\n      value is defined on the page provider contribution.\n      Value '0' means no limit.\n    \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <documentation>\n      Property that defines the default maxPageSize to use when no\n      value is defined on the page provider contribution.\n      Value '0' means no limit.\n    </documentation>\n    <property name=\"nuxeo.pageprovider.default-max-page-size\">1000</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.query/org.nuxeo.ecm.core.query.properties/Contributions/org.nuxeo.ecm.core.query.properties--configuration","documentationHtml":"<p/>\nProperty that defines the default maxPageSize to use when no\nvalue is defined on the page provider contribution.\nValue '0' means no limit.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;nuxeo.pageprovider.default-max-page-size&quot;&gt;1000&lt;/property&gt;","id":"nuxeo.pageprovider.default-max-page-size","label":"property nuxeo.pageprovider.default-max-page-size","rawXml":"<property name=\"nuxeo.pageprovider.default-max-page-size\">1000</property>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.query/org.nuxeo.ecm.core.query.properties","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-query/bin/main/OSGI-INF/core-query-properties.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.core.query.properties\">\n\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n    <documentation>\n      Property that defines the default maxPageSize to use when no\n      value is defined on the page provider contribution.\n      Value '0' means no limit.\n    </documentation>\n    <property name=\"nuxeo.pageprovider.default-max-page-size\">1000</property>\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.runtime.cluster","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 2\nBundle-SymbolicName: org.nuxeo.runtime.cluster\nNuxeo-Component: OSGI-INF/cluster-service.xml\n","requirements":null,"groupId":"org.nuxeo.runtime","artifactId":"nuxeo-runtime-cluster","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.runtime","name":"org.nuxeo.runtime","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.runtime","org.nuxeo.runtime.cluster","org.nuxeo.runtime.datasource","org.nuxeo.runtime.jtajca","org.nuxeo.runtime.kv","org.nuxeo.runtime.management","org.nuxeo.runtime.metrics","org.nuxeo.runtime.migration","org.nuxeo.runtime.mongodb","org.nuxeo.runtime.pubsub","org.nuxeo.runtime.reload","org.nuxeo.runtime.stream","org.nuxeo.runtime.stream.test"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-cluster/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.runtime.cluster.ClusterService","extensionPoints":[{"@type":"NXExtensionPoint","name":"configuration","descriptors":["org.nuxeo.runtime.cluster.ClusterNodeDescriptor"],"documentation":"\n      Defines the cluster configuration:\n      <code>\n    <clusterNode enabled=\"true\" id=\"123\"/>\n</code>\n","id":"org.nuxeo.runtime.cluster.ClusterService--configuration","version":"11.1-SNAPSHOT","label":"configuration (org.nuxeo.runtime.cluster.ClusterService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.cluster/org.nuxeo.runtime.cluster.ClusterService/ExtensionPoints/org.nuxeo.runtime.cluster.ClusterService--configuration","documentationHtml":"<p/>\nDefines the cluster configuration:\n<p/><pre><code>    &lt;clusterNode enabled=\"true\" id=\"123\"/>\n</code></pre><p/>","componentId":"org.nuxeo.runtime.cluster.ClusterService"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.cluster.ClusterService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.cluster/org.nuxeo.runtime.cluster.ClusterService/Services/org.nuxeo.runtime.cluster.ClusterService","componentId":"org.nuxeo.runtime.cluster.ClusterService"}],"extensions":[],"componentClass":"org.nuxeo.runtime.cluster.ClusterServiceImpl","documentation":"\n    The Cluster service allows registration of the cluster node id and\n    other cluster-related parameters.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.cluster/org.nuxeo.runtime.cluster.ClusterService","documentationHtml":"<p/>\nThe Cluster service allows registration of the cluster node id and\nother cluster-related parameters.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-cluster/bin/main/OSGI-INF/cluster-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.cluster.ClusterService\" version=\"1.0\">\n\n  <require>org.nuxeo.runtime.kv.KeyValueService</require>\n\n  <documentation>\n    The Cluster service allows registration of the cluster node id and\n    other cluster-related parameters.\n  </documentation>\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.cluster.ClusterService\" />\n  </service>\n\n  <implementation class=\"org.nuxeo.runtime.cluster.ClusterServiceImpl\" />\n\n  <extension-point name=\"configuration\">\n    <documentation>\n      Defines the cluster configuration:\n      <code>\n        <clusterNode id=\"123\" enabled=\"true\"/>\n      </code>\n    </documentation>\n\n    <object class=\"org.nuxeo.runtime.cluster.ClusterNodeDescriptor\" />\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.runtime.datasource","fileName":"main","manifest":"Export-Package: org.nuxeo.runtime.datasource\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Category: runtime\nBundle-Name: Nuxeo Runtime DataSource Implementation\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Vendor: Nuxeo\nBundle-Version: 0.0.0.SNAPSHOT\nBundle-ManifestVersion: 2\nNuxeo-Component: OSGI-INF/datasource-component.xml\nImport-Package: javax.annotation;version=\"1.0\",\n javax.naming,\n javax.naming.spi,\n javax.sql,\n javax.transaction;version=\"1.1\",\n org.apache.commons.beanutils,\n org.apache.commons.dbcp;version=\"1.3\",\n org.apache.commons.dbcp.managed;version=\"1.3\",\n org.apache.commons.logging,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model,\n org.nuxeo.runtime.transaction,\n org.w3c.dom\nBundle-SymbolicName: org.nuxeo.runtime.datasource;singleton:=true\nEclipse-RegisterBuddy: org.nuxeo.runtime,\n org.nuxeo.common\n","requirements":null,"groupId":"org.nuxeo.runtime","artifactId":"nuxeo-runtime-datasource","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.runtime","name":"org.nuxeo.runtime","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.runtime","org.nuxeo.runtime.cluster","org.nuxeo.runtime.datasource","org.nuxeo.runtime.jtajca","org.nuxeo.runtime.kv","org.nuxeo.runtime.management","org.nuxeo.runtime.metrics","org.nuxeo.runtime.migration","org.nuxeo.runtime.mongodb","org.nuxeo.runtime.pubsub","org.nuxeo.runtime.reload","org.nuxeo.runtime.stream","org.nuxeo.runtime.stream.test"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-datasource/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.runtime.datasource","extensionPoints":[{"@type":"NXExtensionPoint","name":"datasources","descriptors":["org.nuxeo.runtime.datasource.DataSourceDescriptor","org.nuxeo.runtime.datasource.DataSourceLinkDescriptor"],"documentation":"\n\n      Example contribution:\n\n      <code>\n    <datasource blockingTimeoutMillis=\"10000\"\n        driverClassName=\"org.apache.derby.jdbc.EmbeddedDriver\"\n        maxPoolSize=\"20\" minPoolSize=\"5\" name=\"jdbc/foo\">\n        <property name=\"url\">jdbc:derby:/home/db;create=true\n          </property>\n        <property name=\"username\">nuxeo</property>\n        <property name=\"password\">nuxeo</property>\n    </datasource>\n</code>\n\n\n      Or, for a XA datasource:\n\n      <code>\n    <datasource blockingTimeoutMillis=\"10000\" maxPoolSize=\"20\"\n        minPoolSize=\"5\" name=\"jdbc/foo\" xaDataSource=\"org.apache.derby.jdbc.EmbeddedXADataSource\">\n        <property name=\"databaseName\">/home/db</property>\n        <property name=\"createDatabase\">create</property>\n        <property name=\"user\">nuxeo</property>\n        <property name=\"password\">nuxeo</property>\n    </datasource>\n</code>\n\n\n      The allowed attributes of a\n      <b>datasource</b>\n\n      element are:\n      <ul>\n    <li>\n        <b>name</b>\n          the JNDI name (for instance\n          <tt>jdbc/foo</tt>\n          )\n        </li>\n    <li>\n        <b>driverClassName</b>\n          the JDBC driver class name (only for a non-XA datasource)\n        </li>\n    <li>\n        <b>xaDataSource</b>\n          the XA datasource class name (only for a XA datasource)\n        </li>\n</ul>\n<p/>\n\n      To configure the characteristics of the pool:\n      <ul>\n    <li>\n        <b>maxPoolSize</b>\n          the maximum number of active connections\n        </li>\n    <li>\n        <b>minPoolSize</b>\n          the minimum number of idle connections\n        </li>\n    <li>\n        <b>blockingTimeoutMillis</b>\n          the maximum number of milliseconds to wait for a connection to\n          be\n          available, or -1 (the default) to wait indefinitely\n        </li>\n    <li>\n          ... see org.apache.commons.dbcp.BasicDataSource setters for\n          more.\n        </li>\n</ul>\n<p/>\n\n      To configure the datasource, individual property sub-elements must\n      be\n      used.\n      For a non-XA datasource,\n      <b>url</b>\n\n      ,\n      <b>username</b>\n\n      and\n      <b>password</b>\n\n      are commonly used. For a XA datasource, the properties are done\n      according\n      to the JavaBean setters of the datasource, see the\n      documentation for\n      your\n      JDBC driver for more.\n    \n","id":"org.nuxeo.runtime.datasource--datasources","version":"11.1-SNAPSHOT","label":"datasources (org.nuxeo.runtime.datasource)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.datasource/org.nuxeo.runtime.datasource/ExtensionPoints/org.nuxeo.runtime.datasource--datasources","documentationHtml":"<p/>\nExample contribution:\n<p/>\n<pre><code>    &lt;datasource blockingTimeoutMillis=\"10000\"\n        driverClassName=\"org.apache.derby.jdbc.EmbeddedDriver\"\n        maxPoolSize=\"20\" minPoolSize=\"5\" name=\"jdbc/foo\">\n        &lt;property name=\"url\">jdbc:derby:/home/db;create=true\n          &lt;/property>\n        &lt;property name=\"username\">nuxeo&lt;/property>\n        &lt;property name=\"password\">********</code></pre><p/>\nOr, for a XA datasource:\n<p/>\n<pre><code>    &lt;datasource blockingTimeoutMillis=\"10000\" maxPoolSize=\"20\"\n        minPoolSize=\"5\" name=\"jdbc/foo\" xaDataSource=\"org.apache.derby.jdbc.EmbeddedXADataSource\">\n        &lt;property name=\"databaseName\">/home/db&lt;/property>\n        &lt;property name=\"createDatabase\">create&lt;/property>\n        &lt;property name=\"user\">nuxeo&lt;/property>\n        &lt;property name=\"password\">********</code></pre><p/>\nThe allowed attributes of a\n<b>datasource</b>\n<p/>\nelement are:\n<ul>\n<li>\n<b>name</b>\nthe JNDI name (for instance\n<tt>jdbc/foo</tt>\n)\n</li>\n<li>\n<b>driverClassName</b>\nthe JDBC driver class name (only for a non-XA datasource)\n</li>\n<li>\n<b>xaDataSource</b>\nthe XA datasource class name (only for a XA datasource)\n</li>\n</ul>\n<p/>\nTo configure the characteristics of the pool:\n<ul>\n<li>\n<b>maxPoolSize</b>\nthe maximum number of active connections\n</li>\n<li>\n<b>minPoolSize</b>\nthe minimum number of idle connections\n</li>\n<li>\n<b>blockingTimeoutMillis</b>\nthe maximum number of milliseconds to wait for a connection to\nbe\navailable, or -1 (the default) to wait indefinitely\n</li>\n<li>\n... see org.apache.commons.dbcp.BasicDataSource setters for\nmore.\n</li>\n</ul>\n<p/>\nTo configure the datasource, individual property sub-elements must\nbe\nused.\nFor a non-XA datasource,\n<b>url</b>\n<p/>\n,\n<b>username</b>\n<p/>\nand\n<b>password</b>\n<p/>\nare commonly used. For a XA datasource, the properties are done\naccording\nto the JavaBean setters of the datasource, see the\ndocumentation for\nyour\nJDBC driver for more.\n<p/>","componentId":"org.nuxeo.runtime.datasource"},{"@type":"NXExtensionPoint","name":"sorter","descriptors":["org.nuxeo.runtime.datasource.DatasourceExceptionSorter.Configuration"],"documentation":"<sorter id=\"h2\" override=\"false\" path=\"org.h2\">\n    <code>ConnectionException</code>\n    <code>RemoteDatabaseAccess</code>\n    <code>08001</code>\n</sorter>\n<p>SQL Exceptions thrown are checked by the datasource for stating if the connnection should be\n        evicted from the pool. The datasource exception sorter enable you to contribute fatal sqlcodes for\n        a defined database. Each sorter contribution are identified uniquely by it's <emph>id</emph>.\n        You could override or extend a sorted configuration using the <emph>override</emph> attribute. Once a exception is\n        thrown a sorter configuration is selected by comparing the exception stack trace packages with the <emph>path</emph> package attribute.\n        If a package in the stack trace is starting by the <emph>path</emph>, this sorter configuration is selected. If no sorter configuration\n        is matching the strack trace, the sorter configuration identified by the empty string is selected.</p>\n<p>The contributed SQL codes could be a classcode or a complete sqlcode. For easier configuration, you could use the enumeration labels defined\n        for the standard SQL in <emph>org.nuxeo.runtime.datasource.DatasourceExceptionSorter.Classcode</emph>.</p>\n","id":"org.nuxeo.runtime.datasource--sorter","version":"11.1-SNAPSHOT","label":"sorter (org.nuxeo.runtime.datasource)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.datasource/org.nuxeo.runtime.datasource/ExtensionPoints/org.nuxeo.runtime.datasource--sorter","documentationHtml":"<p/>\n<sorter id=\"h2\" override=\"false\" path=\"org.h2\">\n<code>ConnectionException</code>\n<code>RemoteDatabaseAccess</code>\n<code>08001</code>\n</sorter>\n<p>SQL Exceptions thrown are checked by the datasource for stating if the connnection should be\nevicted from the pool. The datasource exception sorter enable you to contribute fatal sqlcodes for\na defined database. Each sorter contribution are identified uniquely by it's <emph>id</emph>.\nYou could override or extend a sorted configuration using the <emph>override</emph> attribute. Once a exception is\nthrown a sorter configuration is selected by comparing the exception stack trace packages with the <emph>path</emph> package attribute.\nIf a package in the stack trace is starting by the <emph>path</emph>, this sorter configuration is selected. If no sorter configuration\nis matching the strack trace, the sorter configuration identified by the empty string is selected.</p>\n<p>The contributed SQL codes could be a classcode or a complete sqlcode. For easier configuration, you could use the enumeration labels defined\nfor the standard SQL in <emph>org.nuxeo.runtime.datasource.DatasourceExceptionSorter.Classcode</emph>.</p>","componentId":"org.nuxeo.runtime.datasource"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.datasource.PooledDataSourceRegistry","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.datasource/org.nuxeo.runtime.datasource/Services/org.nuxeo.runtime.datasource.PooledDataSourceRegistry","componentId":"org.nuxeo.runtime.datasource"}],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.runtime.datasource--sorter","extensionPoint":"org.nuxeo.runtime.datasource--sorter","documentation":null,"xml":"<extension point=\"sorter\" target=\"org.nuxeo.runtime.datasource\">\n    <sorter>\n      <code>ConnectionException</code>\n      <code>RemoteDatabaseAccess</code>\n      <code>SystemError</code>\n    </sorter>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.datasource","rawName":"service:org.nuxeo.runtime.datasource"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.datasource/org.nuxeo.runtime.datasource/Contributions/org.nuxeo.runtime.datasource--sorter","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;sorter&gt;\n      &lt;code&gt;ConnectionException&lt;/code&gt;\n      &lt;code&gt;RemoteDatabaseAccess&lt;/code&gt;\n      &lt;code&gt;SystemError&lt;/code&gt;\n    &lt;/sorter&gt;","id":null,"label":"sorter","rawXml":"<sorter>\n      <code>ConnectionException</code>\n      <code>RemoteDatabaseAccess</code>\n      <code>SystemError</code>\n    </sorter>"}]}],"componentClass":"org.nuxeo.runtime.datasource.DataSourceComponent","documentation":"\n    Component use to register datasources.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.datasource/org.nuxeo.runtime.datasource","documentationHtml":"<p/>\nComponent use to register datasources.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-datasource/bin/main/OSGI-INF/datasource-component.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.datasource\">\n  <documentation>\n    Component use to register datasources.\n  </documentation>\n\n  <require>org.nuxeo.runtime.jtajca.JtaActivator</require>\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.datasource.PooledDataSourceRegistry\" />\n  </service>\n\n  <implementation class=\"org.nuxeo.runtime.datasource.DataSourceComponent\" />\n\n  <extension-point name=\"datasources\">\n    <documentation>\n\n      Example contribution:\n\n      <code>\n        <datasource name=\"jdbc/foo\"\n          driverClassName=\"org.apache.derby.jdbc.EmbeddedDriver\"\n          maxPoolSize=\"20\" minPoolSize=\"5\" blockingTimeoutMillis=\"10000\">\n          <property name=\"url\">jdbc:derby:/home/db;create=true\n          </property>\n          <property name=\"username\">nuxeo</property>\n          <property name=\"password\">********</property>\n        </datasource>\n      </code>\n\n      Or, for a XA datasource:\n\n      <code>\n        <datasource name=\"jdbc/foo\"\n          xaDataSource=\"org.apache.derby.jdbc.EmbeddedXADataSource\"\n          maxPoolSize=\"20\" minPoolSize=\"5\" blockingTimeoutMillis=\"10000\">\n          <property name=\"databaseName\">/home/db</property>\n          <property name=\"createDatabase\">create</property>\n          <property name=\"user\">nuxeo</property>\n          <property name=\"password\">********</property>\n        </datasource>\n      </code>\n\n      The allowed attributes of a\n      <b>datasource</b>\n      element are:\n      <ul>\n        <li>\n          <b>name</b>\n          the JNDI name (for instance\n          <tt>jdbc/foo</tt>\n          )\n        </li>\n        <li>\n          <b>driverClassName</b>\n          the JDBC driver class name (only for a non-XA datasource)\n        </li>\n        <li>\n          <b>xaDataSource</b>\n          the XA datasource class name (only for a XA datasource)\n        </li>\n      </ul>\n      <p />\n      To configure the characteristics of the pool:\n      <ul>\n        <li>\n          <b>maxPoolSize</b>\n          the maximum number of active connections\n        </li>\n        <li>\n          <b>minPoolSize</b>\n          the minimum number of idle connections\n        </li>\n        <li>\n          <b>blockingTimeoutMillis</b>\n          the maximum number of milliseconds to wait for a connection to\n          be\n          available, or -1 (the default) to wait indefinitely\n        </li>\n        <li>\n          ... see org.apache.commons.dbcp.BasicDataSource setters for\n          more.\n        </li>\n      </ul>\n      <p />\n      To configure the datasource, individual property sub-elements must\n      be\n      used.\n      For a non-XA datasource,\n      <b>url</b>\n      ,\n      <b>username</b>\n      and\n      <b>password</b>\n      are commonly used. For a XA datasource, the properties are done\n      according\n      to the JavaBean setters of the datasource, see the\n      documentation for\n      your\n      JDBC driver for more.\n    </documentation>\n\n    <object class=\"org.nuxeo.runtime.datasource.DataSourceDescriptor\" />\n    <object class=\"org.nuxeo.runtime.datasource.DataSourceLinkDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"sorter\">\n    <documentation>\n        <sorter  id=\"h2\" path=\"org.h2\" override=\"false\">\n          <code>ConnectionException</code>\n          <code>RemoteDatabaseAccess</code>\n          <code>08001</code>\n        </sorter>\n        <p>SQL Exceptions thrown are checked by the datasource for stating if the connnection should be\n        evicted from the pool. The datasource exception sorter enable you to contribute fatal sqlcodes for\n        a defined database. Each sorter contribution are identified uniquely by it's <emph>id</emph>.\n        You could override or extend a sorted configuration using the <emph>override</emph> attribute. Once a exception is\n        thrown a sorter configuration is selected by comparing the exception stack trace packages with the <emph>path</emph> package attribute.\n        If a package in the stack trace is starting by the <emph>path</emph>, this sorter configuration is selected. If no sorter configuration\n        is matching the strack trace, the sorter configuration identified by the empty string is selected.</p>\n        <p>The contributed SQL codes could be a classcode or a complete sqlcode. For easier configuration, you could use the enumeration labels defined\n        for the standard SQL in <emph>org.nuxeo.runtime.datasource.DatasourceExceptionSorter.Classcode</emph>.</p>\n    </documentation>\n\n    <object class=\"org.nuxeo.runtime.datasource.DatasourceExceptionSorter$Configuration\" />\n\n  </extension-point>\n\n  <extension target=\"org.nuxeo.runtime.datasource\" point=\"sorter\">\n    <sorter>\n      <code>ConnectionException</code>\n      <code>RemoteDatabaseAccess</code>\n      <code>SystemError</code>\n    </sorter>\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.management","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.core.management,\n org.nuxeo.ecm.core.management.api,\n org.nuxeo.ecm.core.management.guards,\n org.nuxeo.ecm.core.management.probes,\n org.nuxeo.ecm.core.management.statuses,\n org.nuxeo.ecm.core.management.storage\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Name: nuxeo core management\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Vendor: Nuxeo\nBundle-Version: 5.4.2.qualifier\nBundle-ManifestVersion: 2\nEclipse-BuddyPolicy: dependent\nNuxeo-Component: OSGI-INF/core-management-types-contrib.xml,\n OSGI-INF/core-management-framework.xml,\n OSGI-INF/core-management-contribs.xml,\n OSGI-INF/listener-contrib.xml,\n OSGI-INF/runtime-management-contrib.xml,\n OSGI-INF/standby.xml\nImport-Package: javax.annotation,\n javax.servlet.http;resolution:=optional,\n org.apache.commons.lang,\n org.apache.commons.logging,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.repository,\n org.nuxeo.ecm.core.api.security,\n org.nuxeo.ecm.core.event,\n org.nuxeo.ecm.core.event.impl,\n org.nuxeo.ecm.core.model,\n org.nuxeo.ecm.core.repository,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.management,\n org.nuxeo.runtime.model,\n org.nuxeo.runtime.services.event,\n org.osgi.framework\nBundle-SymbolicName: org.nuxeo.ecm.core.management;singleton:=true\nRequire-Bundle: org.nuxeo.ecm.core;bundle-version=\"0.0.0\"\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-management","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-management/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.management.typesContrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.management.typesContrib--schema","extensionPoint":"org.nuxeo.ecm.core.schema.TypeService--schema","documentation":null,"xml":"<extension point=\"schema\" target=\"org.nuxeo.ecm.core.schema.TypeService\">\n    <schema name=\"status\" src=\"schemas/status.xsd\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.schema.TypeService","rawName":"service:org.nuxeo.ecm.core.schema.TypeService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.typesContrib/Contributions/org.nuxeo.ecm.core.management.typesContrib--schema","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;schema name=&quot;status&quot; src=&quot;schemas/status.xsd&quot;/&gt;","id":"status","label":"schema status","rawXml":"<schema name=\"status\" src=\"schemas/status.xsd\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.management.typesContrib--doctype","extensionPoint":"org.nuxeo.ecm.core.schema.TypeService--doctype","documentation":null,"xml":"<extension point=\"doctype\" target=\"org.nuxeo.ecm.core.schema.TypeService\">\n\n    <doctype extends=\"Folder\" name=\"ManagementRoot\">\n      <schema name=\"dublincore\"/>\n      <facet name=\"HiddenInNavigation\"/>\n    </doctype>\n\n    <doctype extends=\"Folder\" name=\"AdministrativeStatusContainer\">\n      <schema name=\"dublincore\"/>\n      <facet name=\"HiddenInNavigation\"/>\n    </doctype>\n\n    <doctype extends=\"Document\" name=\"AdministrativeStatus\">\n      <schema name=\"dublincore\"/>\n      <schema name=\"status\"/>\n      <facet name=\"HiddenInNavigation\"/>\n    </doctype>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.schema.TypeService","rawName":"service:org.nuxeo.ecm.core.schema.TypeService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.typesContrib/Contributions/org.nuxeo.ecm.core.management.typesContrib--doctype","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;doctype extends=&quot;Folder&quot; name=&quot;ManagementRoot&quot;&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n      &lt;facet name=&quot;HiddenInNavigation&quot;/&gt;\n    &lt;/doctype&gt;","id":"ManagementRoot","label":"doctype ManagementRoot","rawXml":"<doctype extends=\"Folder\" name=\"ManagementRoot\">\n      <schema name=\"dublincore\"/>\n      <facet name=\"HiddenInNavigation\"/>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Folder&quot; name=&quot;AdministrativeStatusContainer&quot;&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n      &lt;facet name=&quot;HiddenInNavigation&quot;/&gt;\n    &lt;/doctype&gt;","id":"AdministrativeStatusContainer","label":"doctype AdministrativeStatusContainer","rawXml":"<doctype extends=\"Folder\" name=\"AdministrativeStatusContainer\">\n      <schema name=\"dublincore\"/>\n      <facet name=\"HiddenInNavigation\"/>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Document&quot; name=&quot;AdministrativeStatus&quot;&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n      &lt;schema name=&quot;status&quot;/&gt;\n      &lt;facet name=&quot;HiddenInNavigation&quot;/&gt;\n    &lt;/doctype&gt;","id":"AdministrativeStatus","label":"doctype AdministrativeStatus","rawXml":"<doctype extends=\"Document\" name=\"AdministrativeStatus\">\n      <schema name=\"dublincore\"/>\n      <schema name=\"status\"/>\n      <facet name=\"HiddenInNavigation\"/>\n    </doctype>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.typesContrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-management/bin/main/OSGI-INF/core-management-types-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.management.typesContrib\">\n\n  <extension target=\"org.nuxeo.ecm.core.schema.TypeService\" point=\"schema\">\n    <schema name=\"status\" src=\"schemas/status.xsd\" />\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.schema.TypeService\" point=\"doctype\">\n\n    <doctype name=\"ManagementRoot\" extends=\"Folder\">\n      <schema name=\"dublincore\" />\n      <facet name=\"HiddenInNavigation\" />\n    </doctype>\n\n    <doctype name=\"AdministrativeStatusContainer\" extends=\"Folder\">\n      <schema name=\"dublincore\" />\n      <facet name=\"HiddenInNavigation\" />\n    </doctype>\n\n    <doctype name=\"AdministrativeStatus\" extends=\"Document\">\n      <schema name=\"dublincore\" />\n      <schema name=\"status\" />\n      <facet name=\"HiddenInNavigation\" />\n    </doctype>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.management.CoreManagementComponent","extensionPoints":[{"@type":"NXExtensionPoint","name":"healthCheck","descriptors":["org.nuxeo.ecm.core.management.probes.HealthCheckProbesDescriptor"],"documentation":null,"id":"org.nuxeo.ecm.core.management.CoreManagementComponent--healthCheck","version":"11.1-SNAPSHOT","label":"healthCheck (org.nuxeo.ecm.core.management.CoreManagementComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.CoreManagementComponent/ExtensionPoints/org.nuxeo.ecm.core.management.CoreManagementComponent--healthCheck","documentationHtml":"","componentId":"org.nuxeo.ecm.core.management.CoreManagementComponent"},{"@type":"NXExtensionPoint","name":"storageConfiguration","descriptors":["org.nuxeo.ecm.core.management.storage.DocumentStoreConfigurationDescriptor"],"documentation":null,"id":"org.nuxeo.ecm.core.management.CoreManagementComponent--storageConfiguration","version":"11.1-SNAPSHOT","label":"storageConfiguration (org.nuxeo.ecm.core.management.CoreManagementComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.CoreManagementComponent/ExtensionPoints/org.nuxeo.ecm.core.management.CoreManagementComponent--storageConfiguration","documentationHtml":"","componentId":"org.nuxeo.ecm.core.management.CoreManagementComponent"},{"@type":"NXExtensionPoint","name":"probes","descriptors":["org.nuxeo.ecm.core.management.probes.ProbeDescriptor"],"documentation":null,"id":"org.nuxeo.ecm.core.management.CoreManagementComponent--probes","version":"11.1-SNAPSHOT","label":"probes (org.nuxeo.ecm.core.management.CoreManagementComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.CoreManagementComponent/ExtensionPoints/org.nuxeo.ecm.core.management.CoreManagementComponent--probes","documentationHtml":"","componentId":"org.nuxeo.ecm.core.management.CoreManagementComponent"},{"@type":"NXExtensionPoint","name":"serviceDefinition","descriptors":["org.nuxeo.ecm.core.management.statuses.AdministrableServiceDescriptor"],"documentation":null,"id":"org.nuxeo.ecm.core.management.CoreManagementComponent--serviceDefinition","version":"11.1-SNAPSHOT","label":"serviceDefinition (org.nuxeo.ecm.core.management.CoreManagementComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.CoreManagementComponent/ExtensionPoints/org.nuxeo.ecm.core.management.CoreManagementComponent--serviceDefinition","documentationHtml":"","componentId":"org.nuxeo.ecm.core.management.CoreManagementComponent"},{"@type":"NXExtensionPoint","name":"storageHandlers","descriptors":["org.nuxeo.ecm.core.management.storage.DocumentStoreHandlerDescriptor"],"documentation":null,"id":"org.nuxeo.ecm.core.management.CoreManagementComponent--storageHandlers","version":"11.1-SNAPSHOT","label":"storageHandlers (org.nuxeo.ecm.core.management.CoreManagementComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.CoreManagementComponent/ExtensionPoints/org.nuxeo.ecm.core.management.CoreManagementComponent--storageHandlers","documentationHtml":"","componentId":"org.nuxeo.ecm.core.management.CoreManagementComponent"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.management.api.ProbeManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.CoreManagementComponent/Services/org.nuxeo.ecm.core.management.api.ProbeManager","componentId":"org.nuxeo.ecm.core.management.CoreManagementComponent"},{"@type":"NXService","id":"org.nuxeo.ecm.core.management.api.GlobalAdministrativeStatusManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.CoreManagementComponent/Services/org.nuxeo.ecm.core.management.api.GlobalAdministrativeStatusManager","componentId":"org.nuxeo.ecm.core.management.CoreManagementComponent"},{"@type":"NXService","id":"org.nuxeo.ecm.core.management.api.AdministrativeStatusManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.CoreManagementComponent/Services/org.nuxeo.ecm.core.management.api.AdministrativeStatusManager","componentId":"org.nuxeo.ecm.core.management.CoreManagementComponent"},{"@type":"NXService","id":"org.nuxeo.ecm.core.event.EventStats","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.CoreManagementComponent/Services/org.nuxeo.ecm.core.event.EventStats","componentId":"org.nuxeo.ecm.core.management.CoreManagementComponent"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.management.CoreManagementComponent","documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.CoreManagementComponent","documentationHtml":"","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-management/bin/main/OSGI-INF/core-management-framework.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.management.CoreManagementComponent\">\n\n  <implementation class=\"org.nuxeo.ecm.core.management.CoreManagementComponent\" />\n\n  <require>org.nuxeo.ecm.core.repository.RepositoryService</require>\n  <!-- TODO: Cannot use this ince content template is not in the core .. find another solution.\n  <require>org.nuxeo.ecm.platform.content.template.service.ContentTemplateService</require>\n  -->\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.management.api.ProbeManager\" />\n    <provide\n      interface=\"org.nuxeo.ecm.core.management.api.GlobalAdministrativeStatusManager\" />\n    <provide\n      interface=\"org.nuxeo.ecm.core.management.api.AdministrativeStatusManager\" />\n    <provide\n      interface=\"org.nuxeo.ecm.core.event.EventStats\" />\n  </service>\n\n  <extension-point name=\"probes\">\n    <object class=\"org.nuxeo.ecm.core.management.probes.ProbeDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"serviceDefinition\">\n    <object\n      class=\"org.nuxeo.ecm.core.management.statuses.AdministrableServiceDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"storageConfiguration\">\n    <object\n      class=\"org.nuxeo.ecm.core.management.storage.DocumentStoreConfigurationDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"storageHandlers\">\n    <object\n      class=\"org.nuxeo.ecm.core.management.storage.DocumentStoreHandlerDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"healthCheck\">\n    <!-- @since 9.3, list of probes to be evaluated for the healthCheck -->\n    <object class=\"org.nuxeo.ecm.core.management.probes.HealthCheckProbesDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.management.runtime.management.contribs","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.management.runtime.management.contribs--factories","extensionPoint":"org.nuxeo.runtime.management.ResourcePublisher--factories","documentation":null,"xml":"<extension point=\"factories\" target=\"org.nuxeo.runtime.management.ResourcePublisher\">\n    <factory class=\"org.nuxeo.ecm.core.management.StatusesManagementFactory\" name=\"managementStatusesFactory\"/>\n    <factory class=\"org.nuxeo.ecm.core.management.events.EventMonitoringFactory\" name=\"EventMonitoring\"/>\n     <factory class=\"org.nuxeo.ecm.core.management.works.WorksMonitoringFactory\" name=\"WorkMonitoring\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.management.ResourcePublisher","rawName":"service:org.nuxeo.runtime.management.ResourcePublisher"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.runtime.management.contribs/Contributions/org.nuxeo.ecm.core.management.runtime.management.contribs--factories","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;factory class=&quot;org.nuxeo.ecm.core.management.StatusesManagementFactory&quot; name=&quot;managementStatusesFactory&quot;/&gt;","id":"managementStatusesFactory","label":"factory managementStatusesFactory","rawXml":"<factory class=\"org.nuxeo.ecm.core.management.StatusesManagementFactory\" name=\"managementStatusesFactory\"/>"},{"documentation":"","xml":"&lt;factory class=&quot;org.nuxeo.ecm.core.management.events.EventMonitoringFactory&quot; name=&quot;EventMonitoring&quot;/&gt;","id":"EventMonitoring","label":"factory EventMonitoring","rawXml":"<factory class=\"org.nuxeo.ecm.core.management.events.EventMonitoringFactory\" name=\"EventMonitoring\"/>"},{"documentation":"","xml":"&lt;factory class=&quot;org.nuxeo.ecm.core.management.works.WorksMonitoringFactory&quot; name=&quot;WorkMonitoring&quot;/&gt;","id":"WorkMonitoring","label":"factory WorkMonitoring","rawXml":"<factory class=\"org.nuxeo.ecm.core.management.works.WorksMonitoringFactory\" name=\"WorkMonitoring\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.runtime.management.contribs","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-management/bin/main/OSGI-INF/runtime-management-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.management.runtime.management.contribs\">\n\n  <extension target=\"org.nuxeo.runtime.management.ResourcePublisher\"\n    point=\"factories\">\n    <factory name=\"managementStatusesFactory\"\n      class=\"org.nuxeo.ecm.core.management.StatusesManagementFactory\" />\n    <factory name=\"EventMonitoring\"\n      class=\"org.nuxeo.ecm.core.management.events.EventMonitoringFactory\" />\n     <factory name=\"WorkMonitoring\"\n      class=\"org.nuxeo.ecm.core.management.works.WorksMonitoringFactory\" />\n  </extension>\n\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.managemment.standby","extensionPoints":[],"services":[],"extensions":[],"componentClass":"org.nuxeo.ecm.core.management.standby.StandbyComponent","documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.managemment.standby","documentationHtml":"","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-management/bin/main/OSGI-INF/standby.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.managemment.standby\">\n\n  <require>org.nuxeo.runtime.EventService</require>\n  <require>org.nuxeo.runtime.management.ResourcePublisher</require>\n  <require>org.nuxeo.runtime.metrics.MetricsService</require>\n\n  <implementation class=\"org.nuxeo.ecm.core.management.standby.StandbyComponent\" />\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.management.contribs","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.management.contribs--serviceDefinition","extensionPoint":"org.nuxeo.ecm.core.management.CoreManagementComponent--serviceDefinition","documentation":null,"xml":"<extension point=\"serviceDefinition\" target=\"org.nuxeo.ecm.core.management.CoreManagementComponent\">\n\n    <administrableService id=\"org.nuxeo.ecm.instance.availability\" name=\"nuxeoInstance\">\n      <label>Nuxeo Instance</label>\n      <description>\n        Indicates if the Nuxeo Instance is available or not.\n      </description>\n    </administrableService>\n\n    <administrableService id=\"org.nuxeo.ecm.administrator.message\" name=\"adminMessage\">\n      <label>Administrator message</label>\n      <description>\n        Displays a message from administrator on all pages\n      </description>\n      <initialState>passive</initialState>\n    </administrableService>\n\n    <administrableService id=\"org.nuxeo.ecm.smtp\" name=\"smtpService\">\n      <label>SMTP services</label>\n      <description>\n        Indicates if the Nuxeo instance can send e-mails\n      </description>\n    </administrableService>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.management.CoreManagementComponent","rawName":"service:org.nuxeo.ecm.core.management.CoreManagementComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.contribs/Contributions/org.nuxeo.ecm.core.management.contribs--serviceDefinition","documentationHtml":"","contributionItems":[{"documentation":"<p/>\nIndicates if the Nuxeo Instance is available or not.","xml":"&lt;administrableService id=&quot;org.nuxeo.ecm.instance.availability&quot; name=&quot;nuxeoInstance&quot;&gt;\n      &lt;label&gt;Nuxeo Instance&lt;/label&gt;\n      &lt;description&gt;\n        Indicates if the Nuxeo Instance is available or not.\n      &lt;/description&gt;\n    &lt;/administrableService&gt;","id":"nuxeoInstance","label":"administrableService nuxeoInstance","rawXml":"<administrableService id=\"org.nuxeo.ecm.instance.availability\" name=\"nuxeoInstance\">\n      <label>Nuxeo Instance</label>\n      <description>\n        Indicates if the Nuxeo Instance is available or not.\n      </description>\n    </administrableService>"},{"documentation":"<p/>\nDisplays a message from administrator on all pages","xml":"&lt;administrableService id=&quot;org.nuxeo.ecm.administrator.message&quot; name=&quot;adminMessage&quot;&gt;\n      &lt;label&gt;Administrator message&lt;/label&gt;\n      &lt;description&gt;\n        Displays a message from administrator on all pages\n      &lt;/description&gt;\n      &lt;initialState&gt;passive&lt;/initialState&gt;\n    &lt;/administrableService&gt;","id":"adminMessage","label":"administrableService adminMessage","rawXml":"<administrableService id=\"org.nuxeo.ecm.administrator.message\" name=\"adminMessage\">\n      <label>Administrator message</label>\n      <description>\n        Displays a message from administrator on all pages\n      </description>\n      <initialState>passive</initialState>\n    </administrableService>"},{"documentation":"<p/>\nIndicates if the Nuxeo instance can send e-mails","xml":"&lt;administrableService id=&quot;org.nuxeo.ecm.smtp&quot; name=&quot;smtpService&quot;&gt;\n      &lt;label&gt;SMTP services&lt;/label&gt;\n      &lt;description&gt;\n        Indicates if the Nuxeo instance can send e-mails\n      &lt;/description&gt;\n    &lt;/administrableService&gt;","id":"smtpService","label":"administrableService smtpService","rawXml":"<administrableService id=\"org.nuxeo.ecm.smtp\" name=\"smtpService\">\n      <label>SMTP services</label>\n      <description>\n        Indicates if the Nuxeo instance can send e-mails\n      </description>\n    </administrableService>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.management.contribs--probes","extensionPoint":"org.nuxeo.ecm.core.management.CoreManagementComponent--probes","documentation":null,"xml":"<extension point=\"probes\" target=\"org.nuxeo.ecm.core.management.CoreManagementComponent\">\n\n    <probe class=\"org.nuxeo.ecm.core.management.probes.AdministrativeStatusProbe\" name=\"administrativeStatus\">\n      <label>Local Instance availability</label>\n      <description>Test if local Nuxeo Instance is available</description>\n    </probe>\n\n    <probe class=\"org.nuxeo.ecm.core.management.statuses.RuntimeStartedProbe\" name=\"runtimeStatus\">\n      <label>Runtime started probe</label>\n      <description>Test if the runtime is started or not</description>\n    </probe>\n\n    <probe class=\"org.nuxeo.ecm.core.management.statuses.RepositoryStatusProbe\" name=\"repositoryStatus\">\n      <label>Repository started probe</label>\n      <description>Test the repository by fetching the root document</description>\n    </probe>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.management.CoreManagementComponent","rawName":"service:org.nuxeo.ecm.core.management.CoreManagementComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.contribs/Contributions/org.nuxeo.ecm.core.management.contribs--probes","documentationHtml":"","contributionItems":[{"documentation":"<p/>\nTest if local Nuxeo Instance is available","xml":"&lt;probe class=&quot;org.nuxeo.ecm.core.management.probes.AdministrativeStatusProbe&quot; name=&quot;administrativeStatus&quot;&gt;\n      &lt;label&gt;Local Instance availability&lt;/label&gt;\n      &lt;description&gt;Test if local Nuxeo Instance is available&lt;/description&gt;\n    &lt;/probe&gt;","id":"administrativeStatus","label":"probe administrativeStatus","rawXml":"<probe class=\"org.nuxeo.ecm.core.management.probes.AdministrativeStatusProbe\" name=\"administrativeStatus\">\n      <label>Local Instance availability</label>\n      <description>Test if local Nuxeo Instance is available</description>\n    </probe>"},{"documentation":"<p/>\nTest if the runtime is started or not","xml":"&lt;probe class=&quot;org.nuxeo.ecm.core.management.statuses.RuntimeStartedProbe&quot; name=&quot;runtimeStatus&quot;&gt;\n      &lt;label&gt;Runtime started probe&lt;/label&gt;\n      &lt;description&gt;Test if the runtime is started or not&lt;/description&gt;\n    &lt;/probe&gt;","id":"runtimeStatus","label":"probe runtimeStatus","rawXml":"<probe class=\"org.nuxeo.ecm.core.management.statuses.RuntimeStartedProbe\" name=\"runtimeStatus\">\n      <label>Runtime started probe</label>\n      <description>Test if the runtime is started or not</description>\n    </probe>"},{"documentation":"<p/>\nTest the repository by fetching the root document","xml":"&lt;probe class=&quot;org.nuxeo.ecm.core.management.statuses.RepositoryStatusProbe&quot; name=&quot;repositoryStatus&quot;&gt;\n      &lt;label&gt;Repository started probe&lt;/label&gt;\n      &lt;description&gt;Test the repository by fetching the root document&lt;/description&gt;\n    &lt;/probe&gt;","id":"repositoryStatus","label":"probe repositoryStatus","rawXml":"<probe class=\"org.nuxeo.ecm.core.management.statuses.RepositoryStatusProbe\" name=\"repositoryStatus\">\n      <label>Repository started probe</label>\n      <description>Test the repository by fetching the root document</description>\n    </probe>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.management.contribs--healthCheck","extensionPoint":"org.nuxeo.ecm.core.management.CoreManagementComponent--healthCheck","documentation":null,"xml":"<extension point=\"healthCheck\" target=\"org.nuxeo.ecm.core.management.CoreManagementComponent\">\n     <probe enabled=\"true\" name=\"runtimeStatus\"/>\n     <probe enabled=\"true\" name=\"repositoryStatus\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.management.CoreManagementComponent","rawName":"service:org.nuxeo.ecm.core.management.CoreManagementComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.contribs/Contributions/org.nuxeo.ecm.core.management.contribs--healthCheck","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;probe enabled=&quot;true&quot; name=&quot;runtimeStatus&quot;/&gt;","id":"runtimeStatus","label":"probe runtimeStatus","rawXml":"<probe enabled=\"true\" name=\"runtimeStatus\"/>"},{"documentation":"","xml":"&lt;probe enabled=&quot;true&quot; name=&quot;repositoryStatus&quot;/&gt;","id":"repositoryStatus","label":"probe repositoryStatus","rawXml":"<probe enabled=\"true\" name=\"repositoryStatus\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.contribs","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-management/bin/main/OSGI-INF/core-management-contribs.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.management.contribs\">\n\n  <extension target=\"org.nuxeo.ecm.core.management.CoreManagementComponent\"\n    point=\"serviceDefinition\">\n\n    <administrableService id=\"org.nuxeo.ecm.instance.availability\"\n      name=\"nuxeoInstance\">\n      <label>Nuxeo Instance</label>\n      <description>\n        Indicates if the Nuxeo Instance is available or not.\n      </description>\n    </administrableService>\n\n    <administrableService id=\"org.nuxeo.ecm.administrator.message\"\n      name=\"adminMessage\">\n      <label>Administrator message</label>\n      <description>\n        Displays a message from administrator on all pages\n      </description>\n      <initialState>passive</initialState>\n    </administrableService>\n\n    <administrableService id=\"org.nuxeo.ecm.smtp\" name=\"smtpService\">\n      <label>SMTP services</label>\n      <description>\n        Indicates if the Nuxeo instance can send e-mails\n      </description>\n    </administrableService>\n\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.management.CoreManagementComponent\"\n    point=\"probes\">\n\n    <probe name=\"administrativeStatus\"\n      class=\"org.nuxeo.ecm.core.management.probes.AdministrativeStatusProbe\">\n      <label>Local Instance availability</label>\n      <description>Test if local Nuxeo Instance is available</description>\n    </probe>\n\n    <probe name=\"runtimeStatus\"\n      class=\"org.nuxeo.ecm.core.management.statuses.RuntimeStartedProbe\">\n      <label>Runtime started probe</label>\n      <description>Test if the runtime is started or not</description>\n    </probe>\n\n    <probe name=\"repositoryStatus\"\n      class=\"org.nuxeo.ecm.core.management.statuses.RepositoryStatusProbe\">\n      <label>Repository started probe</label>\n      <description>Test the repository by fetching the root document</description>\n    </probe>\n\n  </extension>\n\n   <extension target=\"org.nuxeo.ecm.core.management.CoreManagementComponent\" point=\"healthCheck\">\n     <probe name=\"runtimeStatus\" enabled=\"true\"/>\n     <probe name=\"repositoryStatus\" enabled=\"true\"/>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.management.listener","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.management.listener--listener","extensionPoint":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentation":null,"xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n    <listener async=\"true\" class=\"org.nuxeo.ecm.core.management.events.EventCounterListener\" name=\"CounterListener\" postCommit=\"true\" priority=\"1000\">\n    </listener>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.event.EventServiceComponent","rawName":"service:org.nuxeo.ecm.core.event.EventServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.listener/Contributions/org.nuxeo.ecm.core.management.listener--listener","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;listener async=&quot;true&quot; class=&quot;org.nuxeo.ecm.core.management.events.EventCounterListener&quot; name=&quot;CounterListener&quot; postCommit=&quot;true&quot; priority=&quot;1000&quot;&gt;\n    &lt;/listener&gt;","id":"CounterListener","label":"listener CounterListener","rawXml":"<listener async=\"true\" class=\"org.nuxeo.ecm.core.management.events.EventCounterListener\" name=\"CounterListener\" postCommit=\"true\" priority=\"1000\">\n    </listener>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.management/org.nuxeo.ecm.core.management.listener","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-management/bin/main/OSGI-INF/listener-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.management.listener\">\n\n  <extension target=\"org.nuxeo.ecm.core.event.EventServiceComponent\"\n    point=\"listener\">\n    <listener name=\"CounterListener\" async=\"true\"\n      postCommit=\"true\" priority=\"1000\"\n      class=\"org.nuxeo.ecm.core.management.events.EventCounterListener\">\n    </listener>\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.runtime","fileName":"main","manifest":"Export-Package: org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.api.login,\n org.nuxeo.runtime.deploy,\n org.nuxeo.runtime.expression,\n org.nuxeo.runtime.model,\n org.nuxeo.runtime.model.impl,\n org.nuxeo.runtime.model.persistence,\n org.nuxeo.runtime.model.persistence.fs,\n org.nuxeo.runtime.osgi,\n org.nuxeo.runtime.service,\n org.nuxeo.runtime.service.sample,\n org.nuxeo.runtime.services.adapter,\n org.nuxeo.runtime.services.adapter.extension,\n org.nuxeo.runtime.services.deployment,\n org.nuxeo.runtime.services.event,\n org.nuxeo.runtime.services.resource,\n org.nuxeo.runtime.services.streaming,\n org.nuxeo.runtime.transaction,\n org.nuxeo.runtime.util\nPrivate-Package: .\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Category: runtime\nBundle-Name: Nuxeo Eclipse Runtime\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Version: 5.4.2.qualifier\nEclipse-BuddyPolicy: registered\nNuxeo-Component: OSGI-INF/EventService.xml,\n OSGI-INF/RuntimeComponent.xml,\n OSGI-INF/ResourceService.xml,\n OSGI-INF/LoginComponent.xml,\n OSGI-INF/LoginAsComponent.xml,\n OSGI-INF/ContributionPersistence.xml,\n OSGI-INF/FileEventTracker.xml,\n OSGI-INF/FileEventTrackerConfig.xml,\n OSGI-INF/ConfigurationService.xml\nBundle-Activator: org.nuxeo.runtime.osgi.OSGiRuntimeActivator\nBundle-ManifestVersion: 2\nImport-Package: javax.management,\n javax.naming,\n javax.naming.spi,\n javax.security.auth,\n javax.security.auth.callback,\n javax.security.auth.login,\n javax.security.auth.spi,\n javax.sql,\n javax.transaction;version=\"1.1\",\n javax.xml.parsers,\n org.apache.commons.io,\n org.apache.commons.jexl;resolution:=optional,\n org.apache.commons.logging,\n org.nuxeo.common,\n org.nuxeo.common.collections,\n org.nuxeo.common.logging,\n org.nuxeo.common.utils,\n org.nuxeo.common.xmap,\n org.nuxeo.common.xmap.annotation,\n org.osgi.framework,\n org.osgi.service.packageadmin,\n org.w3c.dom,\n org.w3c.dom.ranges\nBundle-SymbolicName: org.nuxeo.runtime;singleton:=true\n","requirements":null,"groupId":"org.nuxeo.runtime","artifactId":"nuxeo-runtime","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.runtime","name":"org.nuxeo.runtime","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.runtime","org.nuxeo.runtime.cluster","org.nuxeo.runtime.datasource","org.nuxeo.runtime.jtajca","org.nuxeo.runtime.kv","org.nuxeo.runtime.management","org.nuxeo.runtime.metrics","org.nuxeo.runtime.migration","org.nuxeo.runtime.mongodb","org.nuxeo.runtime.pubsub","org.nuxeo.runtime.reload","org.nuxeo.runtime.stream","org.nuxeo.runtime.stream.test"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.runtime.LoginAsComponent","extensionPoints":[{"@type":"NXExtensionPoint","name":"implementation","descriptors":["org.nuxeo.runtime.api.login.LoginAsDescriptor"],"documentation":"\n      The extension point to define the implementation of the service provided by the component\n    \n","id":"org.nuxeo.runtime.LoginAsComponent--implementation","version":"11.1-SNAPSHOT","label":"implementation (org.nuxeo.runtime.LoginAsComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.LoginAsComponent/ExtensionPoints/org.nuxeo.runtime.LoginAsComponent--implementation","documentationHtml":"<p/>\nThe extension point to define the implementation of the service provided by the component\n<p/>","componentId":"org.nuxeo.runtime.LoginAsComponent"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.api.login.LoginAs","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.LoginAsComponent/Services/org.nuxeo.runtime.api.login.LoginAs","componentId":"org.nuxeo.runtime.LoginAsComponent"}],"extensions":[],"componentClass":"org.nuxeo.runtime.api.login.LoginAsComponent","documentation":"\n    The LoginAs component provides the service that allows to login\n    in the system as the given user without\n    checking the password\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.LoginAsComponent","documentationHtml":"<p/>\nThe LoginAs component provides the service that allows to login\nin the system as the given user without\nchecking the password\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime/bin/main/OSGI-INF/LoginAsComponent.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.runtime.LoginAsComponent\" version=\"1.0\">\n\n  <documentation>\n    The LoginAs component provides the service that allows to login\n    in the system as the given user without\n    checking the password\n  </documentation>\n\n  <implementation class=\"org.nuxeo.runtime.api.login.LoginAsComponent\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.api.login.LoginAs\" />\n  </service>\n\n  <extension-point name=\"implementation\">\n    <documentation>\n      The extension point to define the implementation of the service provided by the component\n    </documentation>\n    <object class=\"org.nuxeo.runtime.api.login.LoginAsDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.test.blobmanager","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.test.blobmanager--configuration","extensionPoint":"org.nuxeo.ecm.core.blob.BlobManager--configuration","documentation":null,"xml":"<extension point=\"configuration\" target=\"org.nuxeo.ecm.core.blob.BlobManager\">\n    <blobprovider name=\"test\">\n      <class>org.nuxeo.ecm.core.blob.binary.DefaultBinaryManager</class>\n    </blobprovider>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.blob.BlobManager","rawName":"service:org.nuxeo.ecm.core.blob.BlobManager"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.ecm.core.test.blobmanager/Contributions/org.nuxeo.ecm.core.test.blobmanager--configuration","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;blobprovider name=&quot;test&quot;&gt;\n      &lt;class&gt;org.nuxeo.ecm.core.blob.binary.DefaultBinaryManager&lt;/class&gt;\n    &lt;/blobprovider&gt;","id":"test","label":"blobprovider test","rawXml":"<blobprovider name=\"test\">\n      <class>org.nuxeo.ecm.core.blob.binary.DefaultBinaryManager</class>\n    </blobprovider>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.ecm.core.test.blobmanager","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-test/bin/main/OSGI-INF/test-storage-blob-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.test.blobmanager\">\n  <extension target=\"org.nuxeo.ecm.core.blob.BlobManager\" point=\"configuration\">\n    <blobprovider name=\"test\">\n      <class>org.nuxeo.ecm.core.blob.binary.DefaultBinaryManager</class>\n    </blobprovider>\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.model.persistence","extensionPoints":[{"@type":"NXExtensionPoint","name":"listeners","descriptors":["org.nuxeo.runtime.model.persistence.ContributionStorageDescriptor"],"documentation":"\n    A class specifying the storage implementation to use. This class must implement the\n    org.nuxeo.runtime.model.persistence.ContributionStorage interface.\n    \n","id":"org.nuxeo.runtime.model.persistence--listeners","version":"11.1-SNAPSHOT","label":"listeners (org.nuxeo.runtime.model.persistence)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.model.persistence/ExtensionPoints/org.nuxeo.runtime.model.persistence--listeners","documentationHtml":"<p/>\nA class specifying the storage implementation to use. This class must implement the\norg.nuxeo.runtime.model.persistence.ContributionStorage interface.\n<p/>","componentId":"org.nuxeo.runtime.model.persistence"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.model.persistence.ContributionPersistenceManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.model.persistence/Services/org.nuxeo.runtime.model.persistence.ContributionPersistenceManager","componentId":"org.nuxeo.runtime.model.persistence"}],"extensions":[],"componentClass":"org.nuxeo.runtime.model.persistence.ContributionPersistenceComponent","documentation":"\n  Manage (install and persist) external contributions.\n\n  The default contribution storage is implemented using the file system.\n  To change the storage implementation you must contribute to the extension point storage.\n\n  Note that you should contribute only one storage implementation.\n  Contributing multiple implementation may lead to inconsistent states (changing the storage on the fly).\n\n  @author Bogdan Stefanescu (bs@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.model.persistence","documentationHtml":"<p/>\nManage (install and persist) external contributions.\n<p/>\nThe default contribution storage is implemented using the file system.\nTo change the storage implementation you must contribute to the extension point storage.\n<p/>\nNote that you should contribute only one storage implementation.\nContributing multiple implementation may lead to inconsistent states (changing the storage on the fly).\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime/bin/main/OSGI-INF/ContributionPersistence.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.runtime.model.persistence\" version=\"1.0\">\n  <documentation>\n  Manage (install and persist) external contributions.\n\n  The default contribution storage is implemented using the file system.\n  To change the storage implementation you must contribute to the extension point storage.\n\n  Note that you should contribute only one storage implementation.\n  Contributing multiple implementation may lead to inconsistent states (changing the storage on the fly).\n\n  @author Bogdan Stefanescu (bs@nuxeo.com)\n  </documentation>\n\n  <implementation class=\"org.nuxeo.runtime.model.persistence.ContributionPersistenceComponent\"/>\n\n  <service>\n\t  <provide interface=\"org.nuxeo.runtime.model.persistence.ContributionPersistenceManager\" />\n  </service>\n\n  <extension-point name=\"listeners\">\n    <documentation>\n    A class specifying the storage implementation to use. This class must implement the\n    org.nuxeo.runtime.model.persistence.ContributionStorage interface.\n    </documentation>\n    <object class=\"org.nuxeo.runtime.model.persistence.ContributionStorageDescriptor\"/>\n  </extension-point>\n\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.services.resource.ResourceService","extensionPoints":[{"@type":"NXExtensionPoint","name":"resources","descriptors":["org.nuxeo.runtime.services.resource.ResourceDescriptor"],"documentation":"Enable clients to register resources contained in their bundle under a name\n","id":"org.nuxeo.runtime.services.resource.ResourceService--resources","version":"11.1-SNAPSHOT","label":"resources (org.nuxeo.runtime.services.resource.ResourceService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.services.resource.ResourceService/ExtensionPoints/org.nuxeo.runtime.services.resource.ResourceService--resources","documentationHtml":"<p/>\nEnable clients to register resources contained in their bundle under a name","componentId":"org.nuxeo.runtime.services.resource.ResourceService"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.services.resource.ResourceService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.services.resource.ResourceService/Services/org.nuxeo.runtime.services.resource.ResourceService","componentId":"org.nuxeo.runtime.services.resource.ResourceService"}],"extensions":[],"componentClass":"org.nuxeo.runtime.services.resource.ResourceService","documentation":"\n  An event notification service. Notifications are grouped by topics.\n  @author Bogdan Stefanescu (bs@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.services.resource.ResourceService","documentationHtml":"<p/>\nAn event notification service. Notifications are grouped by topics.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime/bin/main/OSGI-INF/ResourceService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.runtime.services.resource.ResourceService\" version=\"1.0\">\n  <documentation>\n  An event notification service. Notifications are grouped by topics.\n  @author Bogdan Stefanescu (bs@nuxeo.com)\n  </documentation>\n\n  <implementation class=\"org.nuxeo.runtime.services.resource.ResourceService\"/>\n\n  <service>\n\t  <provide interface=\"org.nuxeo.runtime.services.resource.ResourceService\" />\n  </service>\n\n\n  <extension-point name=\"resources\">\n    <documentation>Enable clients to register resources contained in their bundle under a name</documentation>\n    <object class=\"org.nuxeo.runtime.services.resource.ResourceDescriptor\"/>\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.trackers.files","extensionPoints":[{"@type":"NXExtensionPoint","name":"configs","descriptors":["org.nuxeo.runtime.trackers.files.FileEventTracker.EnableThreadsTracking"],"documentation":null,"id":"org.nuxeo.runtime.trackers.files--configs","version":"11.1-SNAPSHOT","label":"configs (org.nuxeo.runtime.trackers.files)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.trackers.files/ExtensionPoints/org.nuxeo.runtime.trackers.files--configs","documentationHtml":"","componentId":"org.nuxeo.runtime.trackers.files"}],"services":[],"extensions":[],"componentClass":"org.nuxeo.runtime.trackers.files.FileEventTracker","documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.trackers.files","documentationHtml":"","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime/bin/main/OSGI-INF/FileEventTracker.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.trackers.files\">\n\n\t<require>org.nuxeo.runtime.EventService</require>\n\n\t<implementation class=\"org.nuxeo.runtime.trackers.files.FileEventTracker\" />\n\n\t<extension-point name=\"configs\">\n\t\t<object class=\"org.nuxeo.runtime.trackers.files.FileEventTracker$EnableThreadsTracking\" />\n\t</extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.started","extensionPoints":[],"services":[],"extensions":[],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.started","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"","xmlFileContent":""},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.storage.sql.test.repo.repository","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.storage.sql.test.repo.repository--datasources","extensionPoint":"org.nuxeo.runtime.datasource--datasources","documentation":null,"xml":"<extension point=\"datasources\" target=\"org.nuxeo.runtime.datasource\">\n\n    <datasource blockingTimeoutMillis=\"10000\" driverClassName=\"org.h2.Driver\" maxPoolSize=\"30\" minPoolSize=\"5\" name=\"jdbc/nuxeojunittests\">\n      <property name=\"url\">jdbc:h2:mem:nuxeojunittests;DB_CLOSE_DELAY=-1</property>\n      <property name=\"username\">sa</property>\n      <property name=\"password\"/>\n    </datasource>\n\n    <link global=\"jdbc/nuxeojunittests\" name=\"jdbc/repository_test\"/>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.datasource","rawName":"service:org.nuxeo.runtime.datasource"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.ecm.core.storage.sql.test.repo.repository/Contributions/org.nuxeo.ecm.core.storage.sql.test.repo.repository--datasources","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;datasource blockingTimeoutMillis=&quot;10000&quot; driverClassName=&quot;org.h2.Driver&quot; maxPoolSize=&quot;30&quot; minPoolSize=&quot;5&quot; name=&quot;jdbc/nuxeojunittests&quot;&gt;\n      &lt;property name=&quot;url&quot;&gt;jdbc:h2:mem:nuxeojunittests;DB_CLOSE_DELAY=-1&lt;/property&gt;\n      &lt;property name=&quot;username&quot;&gt;sa&lt;/property&gt;\n      &lt;property name=&quot;password&quot;/&gt;\n    &lt;/datasource&gt;","id":"jdbc/nuxeojunittests","label":"datasource jdbc/nuxeojunittests","rawXml":"<datasource blockingTimeoutMillis=\"10000\" driverClassName=\"org.h2.Driver\" maxPoolSize=\"30\" minPoolSize=\"5\" name=\"jdbc/nuxeojunittests\">\n      <property name=\"url\">jdbc:h2:mem:nuxeojunittests;DB_CLOSE_DELAY=-1</property>\n      <property name=\"username\">sa</property>\n      <property name=\"password\"/>\n    </datasource>"},{"documentation":"","xml":"&lt;link global=&quot;jdbc/nuxeojunittests&quot; name=&quot;jdbc/repository_test&quot;/&gt;","id":"jdbc/repository_test","label":"link jdbc/repository_test","rawXml":"<link global=\"jdbc/nuxeojunittests\" name=\"jdbc/repository_test\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.storage.sql.test.repo.repository--repository","extensionPoint":"org.nuxeo.ecm.core.storage.sql.RepositoryService--repository","documentation":null,"xml":"<extension point=\"repository\" target=\"org.nuxeo.ecm.core.storage.sql.RepositoryService\">\n    <repository name=\"test\">\n      <changeTokenEnabled>true</changeTokenEnabled>\n      <schema>\n        <field type=\"largetext\">note</field>\n        <field type=\"largetext\">relatedtext</field>\n      </schema>\n      <indexing>\n        <neverPerDocumentFacets>\n          <facet>NotPerDocFacet</facet>\n        </neverPerDocumentFacets>\n        <fulltext analyzer=\"org.apache.lucene.analysis.fr.FrenchAnalyzer\" disabled=\"${nuxeo.test.fulltext.disabled}\" searchDisabled=\"${nuxeo.test.fulltext.search.disabled}\" storedInBlob=\"${nuxeo.test.fulltext.storedInBlob}\">\n          <index> <!-- name=\"default\" implied -->\n            <!-- all props implied -->\n          </index>\n          <index name=\"title\">\n            <field>dc:title</field>\n          </index>\n        </fulltext>\n      </indexing>\n      <xa-datasource>org.h2.jdbcx.JdbcDataSource</xa-datasource>\n      <property name=\"URL\">jdbc:h2:mem:nuxeojunittests;DB_CLOSE_DELAY=-1</property>\n      <property name=\"User\">sa</property>\n      <property name=\"Password\"/>\n    </repository>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.storage.sql.RepositoryService","rawName":"service:org.nuxeo.ecm.core.storage.sql.RepositoryService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.ecm.core.storage.sql.test.repo.repository/Contributions/org.nuxeo.ecm.core.storage.sql.test.repo.repository--repository","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;repository name=&quot;test&quot;&gt;\n      &lt;changeTokenEnabled&gt;true&lt;/changeTokenEnabled&gt;\n      &lt;schema&gt;\n        &lt;field type=&quot;largetext&quot;&gt;note&lt;/field&gt;\n        &lt;field type=&quot;largetext&quot;&gt;relatedtext&lt;/field&gt;\n      &lt;/schema&gt;\n      &lt;indexing&gt;\n        &lt;neverPerDocumentFacets&gt;\n          &lt;facet&gt;NotPerDocFacet&lt;/facet&gt;\n        &lt;/neverPerDocumentFacets&gt;\n        &lt;fulltext analyzer=&quot;org.apache.lucene.analysis.fr.FrenchAnalyzer&quot; disabled=&quot;${nuxeo.test.fulltext.disabled}&quot; searchDisabled=&quot;${nuxeo.test.fulltext.search.disabled}&quot; storedInBlob=&quot;${nuxeo.test.fulltext.storedInBlob}&quot;&gt;\n          &lt;index&gt; &lt;!-- name=&quot;default&quot; implied --&gt;\n            &lt;!-- all props implied --&gt;\n          &lt;/index&gt;\n          &lt;index name=&quot;title&quot;&gt;\n            &lt;field&gt;dc:title&lt;/field&gt;\n          &lt;/index&gt;\n        &lt;/fulltext&gt;\n      &lt;/indexing&gt;\n      &lt;xa-datasource&gt;org.h2.jdbcx.JdbcDataSource&lt;/xa-datasource&gt;\n      &lt;property name=&quot;URL&quot;&gt;jdbc:h2:mem:nuxeojunittests;DB_CLOSE_DELAY=-1&lt;/property&gt;\n      &lt;property name=&quot;User&quot;&gt;sa&lt;/property&gt;\n      &lt;property name=&quot;Password&quot;/&gt;\n    &lt;/repository&gt;","id":"test","label":"repository test","rawXml":"<repository name=\"test\">\n      <changeTokenEnabled>true</changeTokenEnabled>\n      <schema>\n        <field type=\"largetext\">note</field>\n        <field type=\"largetext\">relatedtext</field>\n      </schema>\n      <indexing>\n        <neverPerDocumentFacets>\n          <facet>NotPerDocFacet</facet>\n        </neverPerDocumentFacets>\n        <fulltext analyzer=\"org.apache.lucene.analysis.fr.FrenchAnalyzer\" disabled=\"${nuxeo.test.fulltext.disabled}\" searchDisabled=\"${nuxeo.test.fulltext.search.disabled}\" storedInBlob=\"${nuxeo.test.fulltext.storedInBlob}\">\n          <index> <!-- name=\"default\" implied -->\n            <!-- all props implied -->\n          </index>\n          <index name=\"title\">\n            <field>dc:title</field>\n          </index>\n        </fulltext>\n      </indexing>\n      <xa-datasource>org.h2.jdbcx.JdbcDataSource</xa-datasource>\n      <property name=\"URL\">jdbc:h2:mem:nuxeojunittests;DB_CLOSE_DELAY=-1</property>\n      <property name=\"User\">sa</property>\n      <property name=\"Password\"/>\n    </repository>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.ecm.core.storage.sql.test.repo.repository","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql-test/target/classes/OSGI-INF/test-repo-repository-h2-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.storage.sql.test.repo.repository\">\n  <extension target=\"org.nuxeo.runtime.datasource\"\n    point=\"datasources\">\n\n    <datasource name=\"jdbc/${nuxeo.test.vcs.database}\" driverClassName=\"${nuxeo.test.vcs.driver}\"\n        maxPoolSize=\"30\" minPoolSize=\"5\" blockingTimeoutMillis=\"10000\">\n      <property name=\"url\">${nuxeo.test.vcs.url}</property>\n      <property name=\"username\">${nuxeo.test.vcs.user}</property>\n      <property name=\"password\">********</property>\n    </datasource>\n\n    <link name=\"jdbc/repository_test\" global=\"jdbc/${nuxeo.test.vcs.database}\"/>\n\n  </extension>\n  <extension target=\"org.nuxeo.ecm.core.storage.sql.RepositoryService\"\n    point=\"repository\">\n    <repository name=\"test\">\n      <changeTokenEnabled>${nuxeo.test.changetoken.enabled}</changeTokenEnabled>\n      <schema>\n        <field type=\"largetext\">note</field>\n        <field type=\"largetext\">relatedtext</field>\n      </schema>\n      <indexing>\n        <neverPerDocumentFacets>\n          <facet>NotPerDocFacet</facet>\n        </neverPerDocumentFacets>\n        <fulltext analyzer=\"org.apache.lucene.analysis.fr.FrenchAnalyzer\"\n                  disabled=\"${nuxeo.test.fulltext.disabled}\"\n                  storedInBlob=\"${nuxeo.test.fulltext.storedInBlob}\"\n                  searchDisabled=\"${nuxeo.test.fulltext.search.disabled}\">\n          <index> <!-- name=\"default\" implied -->\n            <!-- all props implied -->\n          </index>\n          <index name=\"title\">\n            <field>dc:title</field>\n          </index>\n        </fulltext>\n      </indexing>\n      <xa-datasource>org.h2.jdbcx.JdbcDataSource</xa-datasource>\n      <property name=\"URL\">${nuxeo.test.vcs.url}</property>\n      <property name=\"User\">${nuxeo.test.vcs.user}</property>\n      <property name=\"Password\">********</property>\n    </repository>\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.web.common.test.login.as","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.web.common.test.login.as--implementation","extensionPoint":"org.nuxeo.runtime.LoginAsComponent--implementation","documentation":null,"xml":"<extension point=\"implementation\" target=\"org.nuxeo.runtime.LoginAsComponent\">\n    <implementation class=\"org.nuxeo.ecm.platform.ui.web.auth.service.LoginAsImpl\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.LoginAsComponent","rawName":"service:org.nuxeo.runtime.LoginAsComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.ecm.platform.web.common.test.login.as/Contributions/org.nuxeo.ecm.platform.web.common.test.login.as--implementation","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;implementation class=&quot;org.nuxeo.ecm.platform.ui.web.auth.service.LoginAsImpl&quot;/&gt;","id":null,"label":"implementation","rawXml":"<implementation class=\"org.nuxeo.ecm.platform.ui.web.auth.service.LoginAsImpl\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.ecm.platform.web.common.test.login.as","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-test/bin/main/login-as-config.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.web.common.test.login.as\">\n  <require>org.nuxeo.ecm.core.api.local.dummy.login</require>\n\n  <extension target=\"org.nuxeo.runtime.LoginAsComponent\" point=\"implementation\">\n    <implementation class=\"org.nuxeo.ecm.platform.ui.web.auth.service.LoginAsImpl\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.trackers.files.threadstracking.config","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.runtime.trackers.files.threadstracking.config--configs","extensionPoint":"org.nuxeo.runtime.trackers.files--configs","documentation":null,"xml":"<extension point=\"configs\" target=\"org.nuxeo.runtime.trackers.files\">\n\t\t<enableThreadsTracking/>\n\t</extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.trackers.files","rawName":"service:org.nuxeo.runtime.trackers.files"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.trackers.files.threadstracking.config/Contributions/org.nuxeo.runtime.trackers.files.threadstracking.config--configs","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;enableThreadsTracking/&gt;","id":null,"label":"enableThreadsTracking","rawXml":"<enableThreadsTracking/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.trackers.files.threadstracking.config","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime/bin/main/OSGI-INF/FileEventTrackerConfig.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.runtime.trackers.files.threadstracking.config\">\n\n\t<extension target=\"org.nuxeo.runtime.trackers.files\" point=\"configs\">\n\t\t<enableThreadsTracking/>\n\t</extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.LoginComponent","extensionPoints":[],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.api.login.LoginService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.LoginComponent/Services/org.nuxeo.runtime.api.login.LoginService","componentId":"org.nuxeo.runtime.LoginComponent"}],"extensions":[],"componentClass":"org.nuxeo.runtime.api.login.LoginComponent","documentation":"\n  The login component is defining the login infrastructure\n  @author Bogdan Stefanescu (bs@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.LoginComponent","documentationHtml":"<p/>\nThe login component is defining the login infrastructure\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime/bin/main/OSGI-INF/LoginComponent.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.runtime.LoginComponent\" version=\"1.0\">\n  <documentation>\n  The login component is defining the login infrastructure\n  @author Bogdan Stefanescu (bs@nuxeo.com)\n  </documentation>\n\n  <implementation class=\"org.nuxeo.runtime.api.login.LoginComponent\"/>\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.api.login.LoginService\" />\n  </service>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.directory.test.sql","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.directory.test.sql--datasources","extensionPoint":"org.nuxeo.runtime.datasource--datasources","documentation":null,"xml":"<extension point=\"datasources\" target=\"org.nuxeo.runtime.datasource\">\n    <datasource driverClassName=\"org.h2.Driver\" maxPoolSize=\"20\" minPoolSize=\"5\" name=\"jdbc/nxsqldirectory\" password=\"********\" url=\"jdbc:h2:mem:nuxeojunittests;DB_CLOSE_DELAY=-1\" username=\"sa\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.datasource","rawName":"service:org.nuxeo.runtime.datasource"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.directory.test.sql/Contributions/org.nuxeo.directory.test.sql--datasources","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;datasource driverClassName=&quot;org.h2.Driver&quot; maxPoolSize=&quot;20&quot; minPoolSize=&quot;5&quot; name=&quot;jdbc/nxsqldirectory&quot; password=&quot;********&quot; url=&quot;jdbc:h2:mem:nuxeojunittests;DB_CLOSE_DELAY=-1&quot; username=&quot;sa&quot;/&gt;","id":"jdbc/nxsqldirectory","label":"datasource jdbc/nxsqldirectory","rawXml":"<datasource driverClassName=\"org.h2.Driver\" maxPoolSize=\"20\" minPoolSize=\"5\" name=\"jdbc/nxsqldirectory\" password=\"********\" url=\"jdbc:h2:mem:nuxeojunittests;DB_CLOSE_DELAY=-1\" username=\"sa\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.directory.test.sql--directories","extensionPoint":"org.nuxeo.ecm.directory.sql.SQLDirectoryFactory--directories","documentation":null,"xml":"<extension point=\"directories\" target=\"org.nuxeo.ecm.directory.sql.SQLDirectoryFactory\">\n\n    <directory name=\"template-directory\" template=\"true\">\n      <dataSource>java:/nxsqldirectory</dataSource>\n      <createTablePolicy>on_missing_columns</createTablePolicy>\n    </directory>\n\n    <directory extends=\"template-directory\" name=\"template-user\" template=\"true\">\n      <table>users</table>\n      <computeMultiTenantId>false</computeMultiTenantId>\n    </directory>\n\n    <directory extends=\"template-directory\" name=\"template-group\" template=\"true\">\n      <table>groups</table>\n    </directory>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.directory.sql.SQLDirectoryFactory","rawName":"service:org.nuxeo.ecm.directory.sql.SQLDirectoryFactory"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.directory.test.sql/Contributions/org.nuxeo.directory.test.sql--directories","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;directory name=&quot;template-directory&quot; template=&quot;true&quot;&gt;\n      &lt;dataSource&gt;java:/nxsqldirectory&lt;/dataSource&gt;\n      &lt;createTablePolicy&gt;on_missing_columns&lt;/createTablePolicy&gt;\n    &lt;/directory&gt;","id":"template-directory","label":"directory template-directory","rawXml":"<directory name=\"template-directory\" template=\"true\">\n      <dataSource>java:/nxsqldirectory</dataSource>\n      <createTablePolicy>on_missing_columns</createTablePolicy>\n    </directory>"},{"documentation":"","xml":"&lt;directory extends=&quot;template-directory&quot; name=&quot;template-user&quot; template=&quot;true&quot;&gt;\n      &lt;table&gt;users&lt;/table&gt;\n      &lt;computeMultiTenantId&gt;false&lt;/computeMultiTenantId&gt;\n    &lt;/directory&gt;","id":"template-user","label":"directory template-user","rawXml":"<directory extends=\"template-directory\" name=\"template-user\" template=\"true\">\n      <table>users</table>\n      <computeMultiTenantId>false</computeMultiTenantId>\n    </directory>"},{"documentation":"","xml":"&lt;directory extends=&quot;template-directory&quot; name=&quot;template-group&quot; template=&quot;true&quot;&gt;\n      &lt;table&gt;groups&lt;/table&gt;\n    &lt;/directory&gt;","id":"template-group","label":"directory template-group","rawXml":"<directory extends=\"template-directory\" name=\"template-group\" template=\"true\">\n      <table>groups</table>\n    </directory>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.directory.test.sql","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-directory/nuxeo-platform-directory-test/target/test-classes/OSGI-INF/test-directory-sql-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.directory.test.sql\">\n\n  <extension target=\"org.nuxeo.runtime.datasource\" point=\"datasources\">\n    <datasource name=\"jdbc/nxsqldirectory\" driverClassName=\"${nuxeo.test.vcs.driver}\"\n                url=\"${nuxeo.test.vcs.url}\" username=\"${nuxeo.test.vcs.user}\" password=\"********\"\n                maxPoolSize=\"20\" minPoolSize=\"5\"/>\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.directory.sql.SQLDirectoryFactory\" point=\"directories\">\n\n    <directory name=\"template-directory\" template=\"true\">\n      <dataSource>java:/nxsqldirectory</dataSource>\n      <createTablePolicy>on_missing_columns</createTablePolicy>\n    </directory>\n\n    <directory name=\"template-user\" template=\"true\" extends=\"template-directory\">\n      <table>users</table>\n      <computeMultiTenantId>false</computeMultiTenantId>\n    </directory>\n\n    <directory name=\"template-group\" template=\"true\" extends=\"template-directory\">\n      <table>groups</table>\n    </directory>\n\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.api.local.dummy.login","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.api.local.dummy.login--implementation","extensionPoint":"org.nuxeo.runtime.LoginAsComponent--implementation","documentation":null,"xml":"<extension point=\"implementation\" target=\"org.nuxeo.runtime.LoginAsComponent\">\n    <implementation class=\"org.nuxeo.ecm.core.api.local.DummyLoginAs\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.LoginAsComponent","rawName":"service:org.nuxeo.runtime.LoginAsComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.ecm.core.api.local.dummy.login/Contributions/org.nuxeo.ecm.core.api.local.dummy.login--implementation","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;implementation class=&quot;org.nuxeo.ecm.core.api.local.DummyLoginAs&quot;/&gt;","id":null,"label":"implementation","rawXml":"<implementation class=\"org.nuxeo.ecm.core.api.local.DummyLoginAs\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.ecm.core.api.local.dummy.login","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-api/bin/test/OSGI-INF/dummy-login-config.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.api.local.dummy.login\">\n\n  <extension target=\"org.nuxeo.runtime.LoginAsComponent\" point=\"implementation\">\n    <implementation class=\"org.nuxeo.ecm.core.api.local.DummyLoginAs\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.test.directory.sql.storage","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.test.directory.sql.storage--directories","extensionPoint":"org.nuxeo.ecm.directory.GenericDirectory--directories","documentation":null,"xml":"<extension point=\"directories\" target=\"org.nuxeo.ecm.directory.GenericDirectory\">\n\n    <directory extends=\"template-directory\" name=\"userDirectory\">\n\n      <schema>user</schema>\n      <types>\n        <type>system</type>\n      </types>\n      <idField>username</idField>\n      <passwordField>password</passwordField>\n\n      <autoincrementIdField>false</autoincrementIdField>\n      <dataFile>users.csv</dataFile>\n      <createTablePolicy>always</createTablePolicy>\n\n      <references>\n        <reference dataFile=\"user2group.csv\" directory=\"groupDirectory\" field=\"groups\" name=\"user2group\" source=\"userId\" target=\"groupId\"/>\n      </references>\n\n    </directory>\n\n\n    <directory extends=\"template-directory\" name=\"groupDirectory\">\n\n      <schema>group</schema>\n      <types>\n        <type>system</type>\n      </types>\n      <idField>groupname</idField>\n      <autoincrementIdField>false</autoincrementIdField>\n      <dataFile>groups.csv</dataFile>\n      <createTablePolicy>always</createTablePolicy>\n\n      <references>\n        <inverseReference directory=\"userDirectory\" dualReferenceField=\"groups\" field=\"members\"/>\n        <reference directory=\"groupDirectory\" field=\"subGroups\" name=\"group2group\" source=\"childGroupId\" target=\"parentGroupId\"/>\n        <inverseReference directory=\"groupDirectory\" dualReferenceField=\"subGroups\" field=\"parentGroups\"/>\n      </references>\n\n    </directory>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.directory.GenericDirectory","rawName":"service:org.nuxeo.ecm.directory.GenericDirectory"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.ecm.platform.test.directory.sql.storage/Contributions/org.nuxeo.ecm.platform.test.directory.sql.storage--directories","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;directory extends=&quot;template-directory&quot; name=&quot;userDirectory&quot;&gt;\n\n      &lt;schema&gt;user&lt;/schema&gt;\n      &lt;types&gt;\n        &lt;type&gt;system&lt;/type&gt;\n      &lt;/types&gt;\n      &lt;idField&gt;username&lt;/idField&gt;\n      &lt;passwordField&gt;password&lt;/passwordField&gt;\n\n      &lt;autoincrementIdField&gt;false&lt;/autoincrementIdField&gt;\n      &lt;dataFile&gt;users.csv&lt;/dataFile&gt;\n      &lt;createTablePolicy&gt;always&lt;/createTablePolicy&gt;\n\n      &lt;references&gt;\n        &lt;reference dataFile=&quot;user2group.csv&quot; directory=&quot;groupDirectory&quot; field=&quot;groups&quot; name=&quot;user2group&quot; source=&quot;userId&quot; target=&quot;groupId&quot;/&gt;\n      &lt;/references&gt;\n\n    &lt;/directory&gt;","id":"userDirectory","label":"directory userDirectory","rawXml":"<directory extends=\"template-directory\" name=\"userDirectory\">\n\n      <schema>user</schema>\n      <types>\n        <type>system</type>\n      </types>\n      <idField>username</idField>\n      <passwordField>password</passwordField>\n\n      <autoincrementIdField>false</autoincrementIdField>\n      <dataFile>users.csv</dataFile>\n      <createTablePolicy>always</createTablePolicy>\n\n      <references>\n        <reference dataFile=\"user2group.csv\" directory=\"groupDirectory\" field=\"groups\" name=\"user2group\" source=\"userId\" target=\"groupId\"/>\n      </references>\n\n    </directory>"},{"documentation":"","xml":"&lt;directory extends=&quot;template-directory&quot; name=&quot;groupDirectory&quot;&gt;\n\n      &lt;schema&gt;group&lt;/schema&gt;\n      &lt;types&gt;\n        &lt;type&gt;system&lt;/type&gt;\n      &lt;/types&gt;\n      &lt;idField&gt;groupname&lt;/idField&gt;\n      &lt;autoincrementIdField&gt;false&lt;/autoincrementIdField&gt;\n      &lt;dataFile&gt;groups.csv&lt;/dataFile&gt;\n      &lt;createTablePolicy&gt;always&lt;/createTablePolicy&gt;\n\n      &lt;references&gt;\n        &lt;inverseReference directory=&quot;userDirectory&quot; dualReferenceField=&quot;groups&quot; field=&quot;members&quot;/&gt;\n        &lt;reference directory=&quot;groupDirectory&quot; field=&quot;subGroups&quot; name=&quot;group2group&quot; source=&quot;childGroupId&quot; target=&quot;parentGroupId&quot;/&gt;\n        &lt;inverseReference directory=&quot;groupDirectory&quot; dualReferenceField=&quot;subGroups&quot; field=&quot;parentGroups&quot;/&gt;\n      &lt;/references&gt;\n\n    &lt;/directory&gt;","id":"groupDirectory","label":"directory groupDirectory","rawXml":"<directory extends=\"template-directory\" name=\"groupDirectory\">\n\n      <schema>group</schema>\n      <types>\n        <type>system</type>\n      </types>\n      <idField>groupname</idField>\n      <autoincrementIdField>false</autoincrementIdField>\n      <dataFile>groups.csv</dataFile>\n      <createTablePolicy>always</createTablePolicy>\n\n      <references>\n        <inverseReference directory=\"userDirectory\" dualReferenceField=\"groups\" field=\"members\"/>\n        <reference directory=\"groupDirectory\" field=\"subGroups\" name=\"group2group\" source=\"childGroupId\" target=\"parentGroupId\"/>\n        <inverseReference directory=\"groupDirectory\" dualReferenceField=\"subGroups\" field=\"parentGroups\"/>\n      </references>\n\n    </directory>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.ecm.platform.test.directory.sql.storage","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-test/bin/main/test-usermanagerimpl/directory-config.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.test.directory.sql.storage\">\n\n  <extension target=\"org.nuxeo.ecm.directory.GenericDirectory\" point=\"directories\">\n\n    <directory name=\"userDirectory\" extends=\"template-directory\">\n\n      <schema>user</schema>\n      <types>\n        <type>system</type>\n      </types>\n      <idField>username</idField>\n      <passwordField>password</passwordField>\n\n      <autoincrementIdField>false</autoincrementIdField>\n      <dataFile>users.csv</dataFile>\n      <createTablePolicy>always</createTablePolicy>\n\n      <references>\n        <reference field=\"groups\" directory=\"groupDirectory\" name=\"user2group\" source=\"userId\" target=\"groupId\"\n          dataFile=\"user2group.csv\"/>\n      </references>\n\n    </directory>\n\n\n    <directory name=\"groupDirectory\" extends=\"template-directory\">\n\n      <schema>group</schema>\n      <types>\n        <type>system</type>\n      </types>\n      <idField>groupname</idField>\n      <autoincrementIdField>false</autoincrementIdField>\n      <dataFile>groups.csv</dataFile>\n      <createTablePolicy>always</createTablePolicy>\n\n      <references>\n        <inverseReference field=\"members\" directory=\"userDirectory\" dualReferenceField=\"groups\"/>\n        <reference field=\"subGroups\" directory=\"groupDirectory\" name=\"group2group\" source=\"childGroupId\"\n          target=\"parentGroupId\"/>\n        <inverseReference field=\"parentGroups\" directory=\"groupDirectory\" dualReferenceField=\"subGroups\"/>\n      </references>\n\n    </directory>\n\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.management.es.tests","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.management.es.tests--storageConfiguration","extensionPoint":"org.nuxeo.ecm.core.management.CoreManagementComponent--storageConfiguration","documentation":null,"xml":"<extension point=\"storageConfiguration\" target=\"org.nuxeo.ecm.core.management.CoreManagementComponent\">\n    <configuration repository=\"estest\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.management.CoreManagementComponent","rawName":"service:org.nuxeo.ecm.core.management.CoreManagementComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.ecm.core.management.es.tests/Contributions/org.nuxeo.ecm.core.management.es.tests--storageConfiguration","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;configuration repository=&quot;estest&quot;/&gt;","id":null,"label":"configuration","rawXml":"<configuration repository=\"estest\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.ecm.core.management.es.tests","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/target/test-classes/elastic-search-core-management-tests-component.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.management.es.tests\">\n\n  <!-- use a different repository for the administrative status docs to skip index these in tests -->\n  <extension point=\"storageConfiguration\" target=\"org.nuxeo.ecm.core.management.CoreManagementComponent\">\n    <configuration repository=\"estest\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.ConfigurationService","extensionPoints":[{"@type":"NXExtensionPoint","name":"configuration","descriptors":["org.nuxeo.runtime.services.config.ConfigurationPropertyDescriptor"],"documentation":"\n      The configuration extension point allows to define named properties.\n\n      Properties can be marked as list and if defined many times, values will be appended as comma separated values.\n\n      You can override existing list property with the override attribute.\n\n      Example:\n\n      <code>\n    <property name=\"nuxeo.jsf.enableDoubleClickShield\">true</property>\n    <property name=\"nuxeo.jsf.useAjaxTabs\">false</property>\n    <property list=\"true\" name=\"nuxeo.list.value\">foo</property>\n    <property name=\"nuxeo.list.value\">bar</property>\n    <property name=\"nuxeo.list.value\" override=\"true\">I'd like to make sure value is not foo,bar anymore</property>\n</code>\n","id":"org.nuxeo.runtime.ConfigurationService--configuration","version":"11.1-SNAPSHOT","label":"configuration (org.nuxeo.runtime.ConfigurationService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.ConfigurationService/ExtensionPoints/org.nuxeo.runtime.ConfigurationService--configuration","documentationHtml":"<p/>\nThe configuration extension point allows to define named properties.\n<p/>\nProperties can be marked as list and if defined many times, values will be appended as comma separated values.\n<p/>\nYou can override existing list property with the override attribute.\n<p/>\nExample:\n<p/>\n<pre><code>    &lt;property name=\"nuxeo.jsf.enableDoubleClickShield\">true&lt;/property>\n    &lt;property name=\"nuxeo.jsf.useAjaxTabs\">false&lt;/property>\n    &lt;property list=\"true\" name=\"nuxeo.list.value\">foo&lt;/property>\n    &lt;property name=\"nuxeo.list.value\">bar&lt;/property>\n    &lt;property name=\"nuxeo.list.value\" override=\"true\">I'd like to make sure value is not foo,bar anymore&lt;/property>\n</code></pre><p/>","componentId":"org.nuxeo.runtime.ConfigurationService"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.services.config.ConfigurationService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.ConfigurationService/Services/org.nuxeo.runtime.services.config.ConfigurationService","componentId":"org.nuxeo.runtime.ConfigurationService"}],"extensions":[],"componentClass":"org.nuxeo.runtime.services.config.ConfigurationServiceImpl","documentation":"\n    The ConfigurationService service holds application configuration properties that are used at runtime. This\n    service should not include properties that are needed at startup.\n\n    @since 7.4\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.ConfigurationService","documentationHtml":"<p/>\nThe ConfigurationService service holds application configuration properties that are used at runtime. This\nservice should not include properties that are needed at startup.\n<p/>\n@since 7.4\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime/bin/main/OSGI-INF/ConfigurationService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.ConfigurationService\">\n\n  <documentation>\n    The ConfigurationService service holds application configuration properties that are used at runtime. This\n    service should not include properties that are needed at startup.\n\n    @since 7.4\n  </documentation>\n\n  <implementation\n    class=\"org.nuxeo.runtime.services.config.ConfigurationServiceImpl\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.services.config.ConfigurationService\" />\n  </service>\n\n  <extension-point name=\"configuration\">\n    <documentation>\n      The configuration extension point allows to define named properties.\n\n      Properties can be marked as list and if defined many times, values will be appended as comma separated values.\n\n      You can override existing list property with the override attribute.\n\n      Example:\n\n      <code>\n        <property name=\"nuxeo.jsf.enableDoubleClickShield\">true</property>\n        <property name=\"nuxeo.jsf.useAjaxTabs\">false</property>\n\n        <property name=\"nuxeo.list.value\" list=\"true\">foo</property>\n        <property name=\"nuxeo.list.value\">bar</property>\n        <property name=\"nuxeo.list.value\" override=\"true\">I'd like to make sure value is not foo,bar anymore</property>\n      </code>\n    </documentation>\n    <object class=\"org.nuxeo.runtime.services.config.ConfigurationPropertyDescriptor\" />\n  </extension-point>\n\n</component>"},{"@type":"NXComponent","name":"org.nuxeo.runtime.cluster.test.feature","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.runtime.cluster.test.feature--configuration","extensionPoint":"org.nuxeo.runtime.kv.KeyValueService--configuration","documentation":null,"xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.kv.KeyValueService\">\n    <store class=\"org.nuxeo.runtime.kv.MemKeyValueStore\" name=\"cluster\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.kv.KeyValueService","rawName":"service:org.nuxeo.runtime.kv.KeyValueService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.cluster.test.feature/Contributions/org.nuxeo.runtime.cluster.test.feature--configuration","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;store class=&quot;org.nuxeo.runtime.kv.MemKeyValueStore&quot; name=&quot;cluster&quot;/&gt;","id":"cluster","label":"store cluster","rawXml":"<store class=\"org.nuxeo.runtime.kv.MemKeyValueStore\" name=\"cluster\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.cluster.test.feature","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-cluster/bin/test/OSGI-INF/test-cluster-feature.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.cluster.test.feature\" version=\"1.0\">\n\n  <extension target=\"org.nuxeo.runtime.kv.KeyValueService\" point=\"configuration\">\n    <store name=\"cluster\" class=\"org.nuxeo.runtime.kv.MemKeyValueStore\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.RuntimeComponent","extensionPoints":[],"services":[],"extensions":[],"componentClass":"org.nuxeo.runtime.RuntimeComponent","documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.RuntimeComponent","documentationHtml":"","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime/bin/main/OSGI-INF/RuntimeComponent.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.RuntimeComponent\" version=\"1.0\">\n  <implementation class=\"org.nuxeo.runtime.RuntimeComponent\"/>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.EventService","extensionPoints":[{"@type":"NXExtensionPoint","name":"listeners","descriptors":["org.nuxeo.runtime.services.event.ListenerDescriptor"],"documentation":"Enable clients to register event listeners to one or more topics\n","id":"org.nuxeo.runtime.EventService--listeners","version":"11.1-SNAPSHOT","label":"listeners (org.nuxeo.runtime.EventService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.EventService/ExtensionPoints/org.nuxeo.runtime.EventService--listeners","documentationHtml":"<p/>\nEnable clients to register event listeners to one or more topics","componentId":"org.nuxeo.runtime.EventService"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.services.event.EventService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.EventService/Services/org.nuxeo.runtime.services.event.EventService","componentId":"org.nuxeo.runtime.EventService"}],"extensions":[],"componentClass":"org.nuxeo.runtime.services.event.EventService","documentation":"\n  An event notification service. Notifications are grouped by topics.\n  @author Bogdan Stefanescu (bs@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime/org.nuxeo.runtime.EventService","documentationHtml":"<p/>\nAn event notification service. Notifications are grouped by topics.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime/bin/main/OSGI-INF/EventService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.runtime.EventService\" version=\"1.0\">\n  <documentation>\n  An event notification service. Notifications are grouped by topics.\n  @author Bogdan Stefanescu (bs@nuxeo.com)\n  </documentation>\n\n  <implementation class=\"org.nuxeo.runtime.services.event.EventService\"/>\n\n  <service>\n\t  <provide interface=\"org.nuxeo.runtime.services.event.EventService\" />\n  </service>\n\n\n  <extension-point name=\"listeners\">\n    <documentation>Enable clients to register event listeners to one or more topics</documentation>\n    <object class=\"org.nuxeo.runtime.services.event.ListenerDescriptor\"/>\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.runtime.migration","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 2\nBundle-SymbolicName: org.nuxeo.runtime.migration\nNuxeo-Component: OSGI-INF/migration-service.xml\n","requirements":null,"groupId":"org.nuxeo.runtime","artifactId":"nuxeo-runtime-migration","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.runtime","name":"org.nuxeo.runtime","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.runtime","org.nuxeo.runtime.cluster","org.nuxeo.runtime.datasource","org.nuxeo.runtime.jtajca","org.nuxeo.runtime.kv","org.nuxeo.runtime.management","org.nuxeo.runtime.metrics","org.nuxeo.runtime.migration","org.nuxeo.runtime.mongodb","org.nuxeo.runtime.pubsub","org.nuxeo.runtime.reload","org.nuxeo.runtime.stream","org.nuxeo.runtime.stream.test"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-migration/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.runtime.migration.MigrationService","extensionPoints":[{"@type":"NXExtensionPoint","name":"configuration","descriptors":["org.nuxeo.runtime.migration.MigrationDescriptor"],"documentation":"\n      Defines migrations:\n      <code>\n    <migration id=\"my_migration\">\n        <description label=\"my_migration\">My Migration</description>\n        <state id=\"v1\">\n            <description label=\"my_migration.state.v1\">Initial state</description>\n        </state>\n          ... other states ...\n\n          <step\n            fromState=\"v1\" id=\"first\" toState=\"v2\">\n            <description label=\"my_migration.step.first\">First step of the migration, from v1 to v2</description>\n            <class>my.class.Migratorv1v2</class>\n        </step>\n          ... other steps ...\n        </migration>\n</code>\n\n      The migrator class for each step must implement Runnable.\n    \n","id":"org.nuxeo.runtime.migration.MigrationService--configuration","version":"11.1-SNAPSHOT","label":"configuration (org.nuxeo.runtime.migration.MigrationService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.migration/org.nuxeo.runtime.migration.MigrationService/ExtensionPoints/org.nuxeo.runtime.migration.MigrationService--configuration","documentationHtml":"<p/>\nDefines migrations:\n<p/><pre><code>    &lt;migration id=\"my_migration\">\n        &lt;description label=\"my_migration\">My Migration&lt;/description>\n        &lt;state id=\"v1\">\n            &lt;description label=\"my_migration.state.v1\">Initial state&lt;/description>\n        &lt;/state>\n          ... other states ...\n\n          &lt;step\n            fromState=\"v1\" id=\"first\" toState=\"v2\">\n            &lt;description label=\"my_migration.step.first\">First step of the migration, from v1 to v2&lt;/description>\n            &lt;class>my.class.Migratorv1v2&lt;/class>\n        &lt;/step>\n          ... other steps ...\n        &lt;/migration>\n</code></pre><p/>\nThe migrator class for each step must implement Runnable.\n<p/>","componentId":"org.nuxeo.runtime.migration.MigrationService"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.migration.MigrationService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.migration/org.nuxeo.runtime.migration.MigrationService/Services/org.nuxeo.runtime.migration.MigrationService","componentId":"org.nuxeo.runtime.migration.MigrationService"}],"extensions":[],"componentClass":"org.nuxeo.runtime.migration.MigrationServiceImpl","documentation":"\n    The Migration service allows registration and access to migration configurations.\n    A migration configuration contains different states and steps to migrate between these states.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.migration/org.nuxeo.runtime.migration.MigrationService","documentationHtml":"<p/>\nThe Migration service allows registration and access to migration configurations.\nA migration configuration contains different states and steps to migrate between these states.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-migration/bin/main/OSGI-INF/migration-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.migration.MigrationService\" version=\"1.0\">\n\n  <documentation>\n    The Migration service allows registration and access to migration configurations.\n    A migration configuration contains different states and steps to migrate between these states.\n  </documentation>\n\n  <require>org.nuxeo.runtime.kv.KeyValueService</require>\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.migration.MigrationService\" />\n  </service>\n\n  <implementation class=\"org.nuxeo.runtime.migration.MigrationServiceImpl\" />\n\n  <extension-point name=\"configuration\">\n    <documentation>\n      Defines migrations:\n      <code>\n        <migration id=\"my_migration\">\n          <description label=\"my_migration\">My Migration</description>\n          <state id=\"v1\">\n            <description label=\"my_migration.state.v1\">Initial state</description>\n          </state>\n          ... other states ...\n\n          <step id=\"first\" fromState=\"v1\" toState=\"v2\">\n            <description label=\"my_migration.step.first\">First step of the migration, from v1 to v2</description>\n            <class>my.class.Migratorv1v2</class>\n          </step>\n          ... other steps ...\n        </migration>\n      </code>\n      The migrator class for each step must implement Runnable.\n    </documentation>\n\n    <object class=\"org.nuxeo.runtime.migration.MigrationDescriptor\" />\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.apidoc.repo","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 1\nBundle-Name: nuxeo api documentation repository\nBundle-SymbolicName: org.nuxeo.apidoc.repo;singleton:=true\nBundle-Version: 0.0.1\nBundle-Vendor: Nuxeo\nNuxeo-Component: OSGI-INF/schema-contrib.xml,\n  OSGI-INF/doctype-contrib.xml,\n  OSGI-INF/life-cycle-contrib.xml,\n  OSGI-INF/snapshot-service-framework.xml,\n  OSGI-INF/documentation-service-framework.xml,\n  OSGI-INF/adapter-contrib.xml,\n  OSGI-INF/directories-contrib.xml,\n  OSGI-INF/listener-contrib.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-apidoc-repo","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform","name":"org.nuxeo.ecm.platform","liveDoc":{},"subGroups":[{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.directory","name":"org.nuxeo.ecm.directory","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.directory","org.nuxeo.ecm.directory.api","org.nuxeo.ecm.directory.sql","org.nuxeo.ecm.directory.types.contrib"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.query","name":"org.nuxeo.ecm.platform.query","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.query.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.usermanager","name":"org.nuxeo.ecm.platform.usermanager","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.usermanager","org.nuxeo.ecm.platform.usermanager.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]}],"bundleIds":["org.nuxeo.apidoc.core","org.nuxeo.apidoc.repo","org.nuxeo.directory.mongodb","org.nuxeo.ecm.actions","org.nuxeo.ecm.platform.api","org.nuxeo.ecm.platform.commandline.executor","org.nuxeo.ecm.platform.content.template","org.nuxeo.ecm.platform.dublincore","org.nuxeo.ecm.platform.forms.layout.export","org.nuxeo.ecm.platform.login","org.nuxeo.ecm.platform.web.common","org.nuxeo.osgi.app"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.apidoc.listener.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.apidoc.listener.contrib--listener","extensionPoint":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentation":null,"xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n    <listener async=\"false\" class=\"org.nuxeo.apidoc.listener.LatestDistributionsListener\" name=\"latestDistributionsListener\" postCommit=\"false\">\n      <event>aboutToCreate</event>\n      <event>beforeDocumentModification</event>\n    </listener>\n\n    <listener async=\"false\" class=\"org.nuxeo.apidoc.listener.AttributesExtractorStater\" name=\"AttributesExtractorStater\" postCommit=\"false\">\n      <event>aboutToCreate</event>\n      <event>beforeDocumentModification</event>\n    </listener>\n\n    <listener async=\"false\" class=\"org.nuxeo.apidoc.listener.AttributesExtractorScheduler\" name=\"AttributesExtractorScheduler\" postCommit=\"false\" priority=\"20\">\n      <event>documentCreated</event>\n      <event>documentModified</event>\n    </listener>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.event.EventServiceComponent","rawName":"service:org.nuxeo.ecm.core.event.EventServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.listener.contrib/Contributions/org.nuxeo.apidoc.listener.contrib--listener","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;listener async=&quot;false&quot; class=&quot;org.nuxeo.apidoc.listener.LatestDistributionsListener&quot; name=&quot;latestDistributionsListener&quot; postCommit=&quot;false&quot;&gt;\n      &lt;event&gt;aboutToCreate&lt;/event&gt;\n      &lt;event&gt;beforeDocumentModification&lt;/event&gt;\n    &lt;/listener&gt;","id":"latestDistributionsListener","label":"listener latestDistributionsListener","rawXml":"<listener async=\"false\" class=\"org.nuxeo.apidoc.listener.LatestDistributionsListener\" name=\"latestDistributionsListener\" postCommit=\"false\">\n      <event>aboutToCreate</event>\n      <event>beforeDocumentModification</event>\n    </listener>"},{"documentation":"","xml":"&lt;listener async=&quot;false&quot; class=&quot;org.nuxeo.apidoc.listener.AttributesExtractorStater&quot; name=&quot;AttributesExtractorStater&quot; postCommit=&quot;false&quot;&gt;\n      &lt;event&gt;aboutToCreate&lt;/event&gt;\n      &lt;event&gt;beforeDocumentModification&lt;/event&gt;\n    &lt;/listener&gt;","id":"AttributesExtractorStater","label":"listener AttributesExtractorStater","rawXml":"<listener async=\"false\" class=\"org.nuxeo.apidoc.listener.AttributesExtractorStater\" name=\"AttributesExtractorStater\" postCommit=\"false\">\n      <event>aboutToCreate</event>\n      <event>beforeDocumentModification</event>\n    </listener>"},{"documentation":"","xml":"&lt;listener async=&quot;false&quot; class=&quot;org.nuxeo.apidoc.listener.AttributesExtractorScheduler&quot; name=&quot;AttributesExtractorScheduler&quot; postCommit=&quot;false&quot; priority=&quot;20&quot;&gt;\n      &lt;event&gt;documentCreated&lt;/event&gt;\n      &lt;event&gt;documentModified&lt;/event&gt;\n    &lt;/listener&gt;","id":"AttributesExtractorScheduler","label":"listener AttributesExtractorScheduler","rawXml":"<listener async=\"false\" class=\"org.nuxeo.apidoc.listener.AttributesExtractorScheduler\" name=\"AttributesExtractorScheduler\" postCommit=\"false\" priority=\"20\">\n      <event>documentCreated</event>\n      <event>documentModified</event>\n    </listener>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.listener.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/bin/main/OSGI-INF/listener-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.apidoc.listener.contrib\">\n\n  <extension target=\"org.nuxeo.ecm.core.event.EventServiceComponent\" point=\"listener\">\n    <listener name=\"latestDistributionsListener\" async=\"false\" postCommit=\"false\"\n      class=\"org.nuxeo.apidoc.listener.LatestDistributionsListener\">\n      <event>aboutToCreate</event>\n      <event>beforeDocumentModification</event>\n    </listener>\n\n    <listener name=\"AttributesExtractorStater\" async=\"false\" postCommit=\"false\"\n      class=\"org.nuxeo.apidoc.listener.AttributesExtractorStater\">\n      <event>aboutToCreate</event>\n      <event>beforeDocumentModification</event>\n    </listener>\n\n    <listener name=\"AttributesExtractorScheduler\" async=\"false\" postCommit=\"false\"\n      class=\"org.nuxeo.apidoc.listener.AttributesExtractorScheduler\" priority=\"20\">\n      <event>documentCreated</event>\n      <event>documentModified</event>\n    </listener>\n  </extension>\n\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.apidoc.adapterContrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.apidoc.adapterContrib--adapters","extensionPoint":"org.nuxeo.ecm.core.api.DocumentAdapterService--adapters","documentation":null,"xml":"<extension point=\"adapters\" target=\"org.nuxeo.ecm.core.api.DocumentAdapterService\">\n\n    <adapter class=\"org.nuxeo.apidoc.api.BundleGroup\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXBundleGroup\"/>\n    <adapter class=\"org.nuxeo.apidoc.api.BundleInfo\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXBundle\"/>\n    <adapter class=\"org.nuxeo.apidoc.api.ComponentInfo\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXComponent\"/>\n    <adapter class=\"org.nuxeo.apidoc.api.ExtensionPointInfo\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXExtensionPoint\"/>\n    <adapter class=\"org.nuxeo.apidoc.api.ExtensionInfo\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXContribution\"/>\n    <adapter class=\"org.nuxeo.apidoc.api.ServiceInfo\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXService\"/>\n    <adapter class=\"org.nuxeo.apidoc.snapshot.DistributionSnapshot\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXDistribution\"/>\n    <adapter class=\"org.nuxeo.apidoc.api.DocumentationItem\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXDocumentation\"/>\n    <adapter class=\"org.nuxeo.apidoc.api.OperationInfo\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXOperation\"/>\n    <adapter class=\"org.nuxeo.apidoc.api.NuxeoArtifact\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXBundleGroup\"/>\n    <adapter class=\"org.nuxeo.apidoc.api.NuxeoArtifact\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXBundle\"/>\n    <adapter class=\"org.nuxeo.apidoc.api.NuxeoArtifact\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXComponent\"/>\n    <adapter class=\"org.nuxeo.apidoc.api.NuxeoArtifact\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXExtensionPoint\"/>\n    <adapter class=\"org.nuxeo.apidoc.api.NuxeoArtifact\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXContribution\"/>\n    <adapter class=\"org.nuxeo.apidoc.api.NuxeoArtifact\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXService\"/>\n    <adapter class=\"org.nuxeo.apidoc.api.NuxeoArtifact\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXOperation\"/>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.api.DocumentAdapterService","rawName":"service:org.nuxeo.ecm.core.api.DocumentAdapterService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.adapterContrib/Contributions/org.nuxeo.apidoc.adapterContrib--adapters","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.apidoc.api.BundleGroup&quot; factory=&quot;org.nuxeo.apidoc.adapters.AdapterFactory&quot; type=&quot;NXBundleGroup&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.apidoc.api.BundleGroup\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXBundleGroup\"/>"},{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.apidoc.api.BundleInfo&quot; factory=&quot;org.nuxeo.apidoc.adapters.AdapterFactory&quot; type=&quot;NXBundle&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.apidoc.api.BundleInfo\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXBundle\"/>"},{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.apidoc.api.ComponentInfo&quot; factory=&quot;org.nuxeo.apidoc.adapters.AdapterFactory&quot; type=&quot;NXComponent&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.apidoc.api.ComponentInfo\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXComponent\"/>"},{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.apidoc.api.ExtensionPointInfo&quot; factory=&quot;org.nuxeo.apidoc.adapters.AdapterFactory&quot; type=&quot;NXExtensionPoint&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.apidoc.api.ExtensionPointInfo\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXExtensionPoint\"/>"},{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.apidoc.api.ExtensionInfo&quot; factory=&quot;org.nuxeo.apidoc.adapters.AdapterFactory&quot; type=&quot;NXContribution&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.apidoc.api.ExtensionInfo\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXContribution\"/>"},{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.apidoc.api.ServiceInfo&quot; factory=&quot;org.nuxeo.apidoc.adapters.AdapterFactory&quot; type=&quot;NXService&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.apidoc.api.ServiceInfo\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXService\"/>"},{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.apidoc.snapshot.DistributionSnapshot&quot; factory=&quot;org.nuxeo.apidoc.adapters.AdapterFactory&quot; type=&quot;NXDistribution&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.apidoc.snapshot.DistributionSnapshot\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXDistribution\"/>"},{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.apidoc.api.DocumentationItem&quot; factory=&quot;org.nuxeo.apidoc.adapters.AdapterFactory&quot; type=&quot;NXDocumentation&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.apidoc.api.DocumentationItem\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXDocumentation\"/>"},{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.apidoc.api.OperationInfo&quot; factory=&quot;org.nuxeo.apidoc.adapters.AdapterFactory&quot; type=&quot;NXOperation&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.apidoc.api.OperationInfo\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXOperation\"/>"},{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.apidoc.api.NuxeoArtifact&quot; factory=&quot;org.nuxeo.apidoc.adapters.AdapterFactory&quot; type=&quot;NXBundleGroup&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.apidoc.api.NuxeoArtifact\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXBundleGroup\"/>"},{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.apidoc.api.NuxeoArtifact&quot; factory=&quot;org.nuxeo.apidoc.adapters.AdapterFactory&quot; type=&quot;NXBundle&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.apidoc.api.NuxeoArtifact\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXBundle\"/>"},{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.apidoc.api.NuxeoArtifact&quot; factory=&quot;org.nuxeo.apidoc.adapters.AdapterFactory&quot; type=&quot;NXComponent&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.apidoc.api.NuxeoArtifact\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXComponent\"/>"},{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.apidoc.api.NuxeoArtifact&quot; factory=&quot;org.nuxeo.apidoc.adapters.AdapterFactory&quot; type=&quot;NXExtensionPoint&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.apidoc.api.NuxeoArtifact\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXExtensionPoint\"/>"},{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.apidoc.api.NuxeoArtifact&quot; factory=&quot;org.nuxeo.apidoc.adapters.AdapterFactory&quot; type=&quot;NXContribution&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.apidoc.api.NuxeoArtifact\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXContribution\"/>"},{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.apidoc.api.NuxeoArtifact&quot; factory=&quot;org.nuxeo.apidoc.adapters.AdapterFactory&quot; type=&quot;NXService&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.apidoc.api.NuxeoArtifact\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXService\"/>"},{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.apidoc.api.NuxeoArtifact&quot; factory=&quot;org.nuxeo.apidoc.adapters.AdapterFactory&quot; type=&quot;NXOperation&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.apidoc.api.NuxeoArtifact\" factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" type=\"NXOperation\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.adapterContrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/bin/main/OSGI-INF/adapter-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.apidoc.adapterContrib\">\n\n  <extension target=\"org.nuxeo.ecm.core.api.DocumentAdapterService\" point=\"adapters\">\n\n    <adapter type=\"NXBundleGroup\" class=\"org.nuxeo.apidoc.api.BundleGroup\"\n      factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" />\n    <adapter type=\"NXBundle\" class=\"org.nuxeo.apidoc.api.BundleInfo\"\n      factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" />\n    <adapter type=\"NXComponent\" class=\"org.nuxeo.apidoc.api.ComponentInfo\"\n      factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" />\n    <adapter type=\"NXExtensionPoint\" class=\"org.nuxeo.apidoc.api.ExtensionPointInfo\"\n      factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" />\n    <adapter type=\"NXContribution\" class=\"org.nuxeo.apidoc.api.ExtensionInfo\"\n      factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" />\n    <adapter type=\"NXService\" class=\"org.nuxeo.apidoc.api.ServiceInfo\"\n      factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" />\n    <adapter type=\"NXDistribution\" class=\"org.nuxeo.apidoc.snapshot.DistributionSnapshot\"\n      factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" />\n    <adapter type=\"NXDocumentation\" class=\"org.nuxeo.apidoc.api.DocumentationItem\"\n      factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" />\n    <adapter type=\"NXOperation\" class=\"org.nuxeo.apidoc.api.OperationInfo\"\n      factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" />\n    <adapter type=\"NXBundleGroup\" class=\"org.nuxeo.apidoc.api.NuxeoArtifact\"\n      factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" />\n    <adapter type=\"NXBundle\" class=\"org.nuxeo.apidoc.api.NuxeoArtifact\"\n      factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" />\n    <adapter type=\"NXComponent\" class=\"org.nuxeo.apidoc.api.NuxeoArtifact\"\n      factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" />\n    <adapter type=\"NXExtensionPoint\" class=\"org.nuxeo.apidoc.api.NuxeoArtifact\"\n      factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" />\n    <adapter type=\"NXContribution\" class=\"org.nuxeo.apidoc.api.NuxeoArtifact\"\n      factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" />\n    <adapter type=\"NXService\" class=\"org.nuxeo.apidoc.api.NuxeoArtifact\"\n      factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" />\n    <adapter type=\"NXOperation\" class=\"org.nuxeo.apidoc.api.NuxeoArtifact\"\n      factory=\"org.nuxeo.apidoc.adapters.AdapterFactory\" />\n\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.apidoc.snapshot.SnapshotManagerComponent","extensionPoints":[{"@type":"NXExtensionPoint","name":"plugins","descriptors":["org.nuxeo.apidoc.plugin.PluginDescriptor"],"documentation":"<p>\n        A plugin can introspect and persist information related to the current runtime environment.\n      </p>\n<p>\n        Sample contribution:\n        <code>\n        <extension point=\"plugins\" target=\"org.nuxeo.apidoc.snapshot.SnapshotManagerComponent\">\n            <plugin class=\"org.nuxeo.apidoc.seam.plugin.SeamPlugin\"\n                id=\"seam\" snapshotClass=\"org.nuxeo.apidoc.seam.introspection.SeamRuntimeSnapshot\">\n                <ui>\n                    <label>Seam Components</label>\n                    <viewType>seam</viewType>\n                    <homeView>listSeamComponents</homeView>\n                    <styleClass>seam</styleClass>\n                </ui>\n            </plugin>\n        </extension>\n    </code>\n</p>\n<p>\n        The class should implement the\n        <b>org.nuxeo.apidoc.plugin.Plugin</b>\n        interface.\n      </p>\n<p>\n        UI elements are used for rendering on webengine pages. The view type should match a webengine resource type,\n        and\n        the module holding this resource should be contributed to the main webengine module as a fragment using:\n        <code>\n          Fragment-Host: org.nuxeo.apidoc.webengine\n        </code>\n</p>\n","id":"org.nuxeo.apidoc.snapshot.SnapshotManagerComponent--plugins","version":"11.1-SNAPSHOT","label":"plugins (org.nuxeo.apidoc.snapshot.SnapshotManagerComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.snapshot.SnapshotManagerComponent/ExtensionPoints/org.nuxeo.apidoc.snapshot.SnapshotManagerComponent--plugins","documentationHtml":"<p/>\n<p>\nA plugin can introspect and persist information related to the current runtime environment.\n</p>\n<p>\nSample contribution:\n<p/><pre><code>        &lt;extension point=\"plugins\" target=\"org.nuxeo.apidoc.snapshot.SnapshotManagerComponent\">\n            &lt;plugin class=\"org.nuxeo.apidoc.seam.plugin.SeamPlugin\"\n                id=\"seam\" snapshotClass=\"org.nuxeo.apidoc.seam.introspection.SeamRuntimeSnapshot\">\n                &lt;ui>\n                    &lt;label>Seam Components&lt;/label>\n                    &lt;viewType>seam&lt;/viewType>\n                    &lt;homeView>listSeamComponents&lt;/homeView>\n                    &lt;styleClass>seam&lt;/styleClass>\n                &lt;/ui>\n            &lt;/plugin>\n        &lt;/extension>\n</code></pre><p/>\n</p>\n<p>\nThe class should implement the\n<b>org.nuxeo.apidoc.plugin.Plugin</b>\ninterface.\n</p>\n<p>\nUI elements are used for rendering on webengine pages. The view type should match a webengine resource type,\nand\nthe module holding this resource should be contributed to the main webengine module as a fragment using:\n<p/><pre><code>          Fragment-Host: org.nuxeo.apidoc.webengine\n</code></pre><p/>\n</p>","componentId":"org.nuxeo.apidoc.snapshot.SnapshotManagerComponent"}],"services":[{"@type":"NXService","id":"org.nuxeo.apidoc.snapshot.SnapshotManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.snapshot.SnapshotManagerComponent/Services/org.nuxeo.apidoc.snapshot.SnapshotManager","componentId":"org.nuxeo.apidoc.snapshot.SnapshotManagerComponent"}],"extensions":[],"componentClass":"org.nuxeo.apidoc.snapshot.SnapshotManagerComponent","documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.snapshot.SnapshotManagerComponent","documentationHtml":"","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/bin/main/OSGI-INF/snapshot-service-framework.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.apidoc.snapshot.SnapshotManagerComponent\">\n  <implementation class=\"org.nuxeo.apidoc.snapshot.SnapshotManagerComponent\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.apidoc.snapshot.SnapshotManager\" />\n  </service>\n\n  <extension-point name=\"plugins\">\n    <documentation>\n      <p>\n        A plugin can introspect and persist information related to the current runtime environment.\n      </p>\n      <p>\n        Sample contribution:\n        <code>\n          <extension target=\"org.nuxeo.apidoc.snapshot.SnapshotManagerComponent\" point=\"plugins\">\n            <plugin id=\"seam\" class=\"org.nuxeo.apidoc.seam.plugin.SeamPlugin\"\n              snapshotClass=\"org.nuxeo.apidoc.seam.introspection.SeamRuntimeSnapshot\">\n              <ui>\n                <label>Seam Components</label>\n                <viewType>seam</viewType>\n                <homeView>listSeamComponents</homeView>\n                <styleClass>seam</styleClass>\n              </ui>\n            </plugin>\n          </extension>\n        </code>\n      </p>\n      <p>\n        The class should implement the\n        <b>org.nuxeo.apidoc.plugin.Plugin</b>\n        interface.\n      </p>\n      <p>\n        UI elements are used for rendering on webengine pages. The view type should match a webengine resource type,\n        and\n        the module holding this resource should be contributed to the main webengine module as a fragment using:\n        <code>\n          Fragment-Host: org.nuxeo.apidoc.webengine\n        </code>\n      </p>\n    </documentation>\n    <object class=\"org.nuxeo.apidoc.plugin.PluginDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.apidoc.doctypeContrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.apidoc.doctypeContrib--doctype","extensionPoint":"org.nuxeo.ecm.core.schema.TypeService--doctype","documentation":null,"xml":"<extension point=\"doctype\" target=\"org.nuxeo.ecm.core.schema.TypeService\">\n\n    <doctype extends=\"Folder\" name=\"NXDistribution\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n      <schema name=\"nxdistribution\"/>\n\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Folderish\"/>\n\n      <subtypes>\n        <type>NXBundleGroup</type>\n        <type>NXBundle</type>\n        <type>NXOperation</type>\n        <type>Workspace</type>\n      </subtypes>\n    </doctype>\n\n    <doctype extends=\"Folder\" name=\"NXBundleGroup\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n      <schema name=\"nxbundlegroup\"/>\n\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Folderish\"/>\n\n      <subtypes>\n        <type>NXBundleGroup</type>\n      </subtypes>\n    </doctype>\n\n\n    <doctype extends=\"OrderedFolder\" name=\"NXBundle\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n      <schema name=\"nxbundle\"/>\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Folderish\"/>\n      <subtypes>\n        <type>NXComponent</type>\n        <type>NXService</type>\n        <type>NXExtensionPoint</type>\n        <type>NXContribution</type>\n      </subtypes>\n    </doctype>\n\n    <doctype extends=\"OrderedFolder\" name=\"NXComponent\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n      <schema name=\"nxcomponent\"/>\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Folderish\"/>\n      <subtypes>\n        <type>NXService</type>\n        <type>NXExtensionPoint</type>\n        <type>NXContribution</type>\n      </subtypes>\n    </doctype>\n\n    <doctype extends=\"OrderedFolder\" name=\"NXExtensionPoint\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n      <schema name=\"nxextensionpoint\"/>\n      <schema name=\"apidoccommon\"/>\n\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Folderish\"/>\n    </doctype>\n\n    <doctype extends=\"Document\" name=\"NXContribution\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n      <schema name=\"nxcontribution\"/>\n      <schema name=\"apidoccommon\"/>\n\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n    </doctype>\n\n    <doctype extends=\"Document\" name=\"NXService\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n      <schema name=\"nxservice\"/>\n\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n    </doctype>\n\n    <doctype extends=\"Document\" name=\"NXOperation\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n\n      <schema name=\"nxoperation\"/>\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n    </doctype>\n\n    <doctype extends=\"Document\" name=\"NXDocumentation\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n      <schema name=\"files\"/>\n      <schema name=\"nxdocumentation\"/>\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n    </doctype>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.schema.TypeService","rawName":"service:org.nuxeo.ecm.core.schema.TypeService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.doctypeContrib/Contributions/org.nuxeo.apidoc.doctypeContrib--doctype","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;doctype extends=&quot;Folder&quot; name=&quot;NXDistribution&quot;&gt;\n      &lt;schema name=&quot;common&quot;/&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n      &lt;schema name=&quot;file&quot;/&gt;\n      &lt;schema name=&quot;nxdistribution&quot;/&gt;\n\n      &lt;facet name=&quot;Commentable&quot;/&gt;\n      &lt;facet name=&quot;Versionable&quot;/&gt;\n      &lt;facet name=&quot;Folderish&quot;/&gt;\n\n      &lt;subtypes&gt;\n        &lt;type&gt;NXBundleGroup&lt;/type&gt;\n        &lt;type&gt;NXBundle&lt;/type&gt;\n        &lt;type&gt;NXOperation&lt;/type&gt;\n        &lt;type&gt;Workspace&lt;/type&gt;\n      &lt;/subtypes&gt;\n    &lt;/doctype&gt;","id":"NXDistribution","label":"doctype NXDistribution","rawXml":"<doctype extends=\"Folder\" name=\"NXDistribution\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n      <schema name=\"nxdistribution\"/>\n\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Folderish\"/>\n\n      <subtypes>\n        <type>NXBundleGroup</type>\n        <type>NXBundle</type>\n        <type>NXOperation</type>\n        <type>Workspace</type>\n      </subtypes>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Folder&quot; name=&quot;NXBundleGroup&quot;&gt;\n      &lt;schema name=&quot;common&quot;/&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n      &lt;schema name=&quot;file&quot;/&gt;\n      &lt;schema name=&quot;nxbundlegroup&quot;/&gt;\n\n      &lt;facet name=&quot;Commentable&quot;/&gt;\n      &lt;facet name=&quot;Versionable&quot;/&gt;\n      &lt;facet name=&quot;Folderish&quot;/&gt;\n\n      &lt;subtypes&gt;\n        &lt;type&gt;NXBundleGroup&lt;/type&gt;\n      &lt;/subtypes&gt;\n    &lt;/doctype&gt;","id":"NXBundleGroup","label":"doctype NXBundleGroup","rawXml":"<doctype extends=\"Folder\" name=\"NXBundleGroup\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n      <schema name=\"nxbundlegroup\"/>\n\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Folderish\"/>\n\n      <subtypes>\n        <type>NXBundleGroup</type>\n      </subtypes>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;OrderedFolder&quot; name=&quot;NXBundle&quot;&gt;\n      &lt;schema name=&quot;common&quot;/&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n      &lt;schema name=&quot;file&quot;/&gt;\n      &lt;schema name=&quot;nxbundle&quot;/&gt;\n      &lt;facet name=&quot;Commentable&quot;/&gt;\n      &lt;facet name=&quot;Versionable&quot;/&gt;\n      &lt;facet name=&quot;Folderish&quot;/&gt;\n      &lt;subtypes&gt;\n        &lt;type&gt;NXComponent&lt;/type&gt;\n        &lt;type&gt;NXService&lt;/type&gt;\n        &lt;type&gt;NXExtensionPoint&lt;/type&gt;\n        &lt;type&gt;NXContribution&lt;/type&gt;\n      &lt;/subtypes&gt;\n    &lt;/doctype&gt;","id":"NXBundle","label":"doctype NXBundle","rawXml":"<doctype extends=\"OrderedFolder\" name=\"NXBundle\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n      <schema name=\"nxbundle\"/>\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Folderish\"/>\n      <subtypes>\n        <type>NXComponent</type>\n        <type>NXService</type>\n        <type>NXExtensionPoint</type>\n        <type>NXContribution</type>\n      </subtypes>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;OrderedFolder&quot; name=&quot;NXComponent&quot;&gt;\n      &lt;schema name=&quot;common&quot;/&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n      &lt;schema name=&quot;file&quot;/&gt;\n      &lt;schema name=&quot;nxcomponent&quot;/&gt;\n      &lt;facet name=&quot;Commentable&quot;/&gt;\n      &lt;facet name=&quot;Versionable&quot;/&gt;\n      &lt;facet name=&quot;Folderish&quot;/&gt;\n      &lt;subtypes&gt;\n        &lt;type&gt;NXService&lt;/type&gt;\n        &lt;type&gt;NXExtensionPoint&lt;/type&gt;\n        &lt;type&gt;NXContribution&lt;/type&gt;\n      &lt;/subtypes&gt;\n    &lt;/doctype&gt;","id":"NXComponent","label":"doctype NXComponent","rawXml":"<doctype extends=\"OrderedFolder\" name=\"NXComponent\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n      <schema name=\"nxcomponent\"/>\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Folderish\"/>\n      <subtypes>\n        <type>NXService</type>\n        <type>NXExtensionPoint</type>\n        <type>NXContribution</type>\n      </subtypes>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;OrderedFolder&quot; name=&quot;NXExtensionPoint&quot;&gt;\n      &lt;schema name=&quot;common&quot;/&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n      &lt;schema name=&quot;file&quot;/&gt;\n      &lt;schema name=&quot;nxextensionpoint&quot;/&gt;\n      &lt;schema name=&quot;apidoccommon&quot;/&gt;\n\n      &lt;facet name=&quot;Commentable&quot;/&gt;\n      &lt;facet name=&quot;Versionable&quot;/&gt;\n      &lt;facet name=&quot;Folderish&quot;/&gt;\n    &lt;/doctype&gt;","id":"NXExtensionPoint","label":"doctype NXExtensionPoint","rawXml":"<doctype extends=\"OrderedFolder\" name=\"NXExtensionPoint\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n      <schema name=\"nxextensionpoint\"/>\n      <schema name=\"apidoccommon\"/>\n\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n      <facet name=\"Folderish\"/>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Document&quot; name=&quot;NXContribution&quot;&gt;\n      &lt;schema name=&quot;common&quot;/&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n      &lt;schema name=&quot;file&quot;/&gt;\n      &lt;schema name=&quot;nxcontribution&quot;/&gt;\n      &lt;schema name=&quot;apidoccommon&quot;/&gt;\n\n      &lt;facet name=&quot;Commentable&quot;/&gt;\n      &lt;facet name=&quot;Versionable&quot;/&gt;\n    &lt;/doctype&gt;","id":"NXContribution","label":"doctype NXContribution","rawXml":"<doctype extends=\"Document\" name=\"NXContribution\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n      <schema name=\"nxcontribution\"/>\n      <schema name=\"apidoccommon\"/>\n\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Document&quot; name=&quot;NXService&quot;&gt;\n      &lt;schema name=&quot;common&quot;/&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n      &lt;schema name=&quot;file&quot;/&gt;\n      &lt;schema name=&quot;nxservice&quot;/&gt;\n\n      &lt;facet name=&quot;Commentable&quot;/&gt;\n      &lt;facet name=&quot;Versionable&quot;/&gt;\n    &lt;/doctype&gt;","id":"NXService","label":"doctype NXService","rawXml":"<doctype extends=\"Document\" name=\"NXService\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n      <schema name=\"nxservice\"/>\n\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Document&quot; name=&quot;NXOperation&quot;&gt;\n      &lt;schema name=&quot;common&quot;/&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n      &lt;schema name=&quot;file&quot;/&gt;\n\n      &lt;schema name=&quot;nxoperation&quot;/&gt;\n      &lt;facet name=&quot;Commentable&quot;/&gt;\n      &lt;facet name=&quot;Versionable&quot;/&gt;\n    &lt;/doctype&gt;","id":"NXOperation","label":"doctype NXOperation","rawXml":"<doctype extends=\"Document\" name=\"NXOperation\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n\n      <schema name=\"nxoperation\"/>\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n    </doctype>"},{"documentation":"","xml":"&lt;doctype extends=&quot;Document&quot; name=&quot;NXDocumentation&quot;&gt;\n      &lt;schema name=&quot;common&quot;/&gt;\n      &lt;schema name=&quot;dublincore&quot;/&gt;\n      &lt;schema name=&quot;file&quot;/&gt;\n      &lt;schema name=&quot;files&quot;/&gt;\n      &lt;schema name=&quot;nxdocumentation&quot;/&gt;\n      &lt;facet name=&quot;Commentable&quot;/&gt;\n      &lt;facet name=&quot;Versionable&quot;/&gt;\n    &lt;/doctype&gt;","id":"NXDocumentation","label":"doctype NXDocumentation","rawXml":"<doctype extends=\"Document\" name=\"NXDocumentation\">\n      <schema name=\"common\"/>\n      <schema name=\"dublincore\"/>\n      <schema name=\"file\"/>\n      <schema name=\"files\"/>\n      <schema name=\"nxdocumentation\"/>\n      <facet name=\"Commentable\"/>\n      <facet name=\"Versionable\"/>\n    </doctype>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.doctypeContrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/bin/main/OSGI-INF/doctype-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.apidoc.doctypeContrib\">\n\n  <extension target=\"org.nuxeo.ecm.core.schema.TypeService\" point=\"doctype\">\n\n    <doctype name=\"NXDistribution\" extends=\"Folder\">\n      <schema name=\"common\" />\n      <schema name=\"dublincore\" />\n      <schema name=\"file\" />\n      <schema name=\"nxdistribution\" />\n\n      <facet name=\"Commentable\" />\n      <facet name=\"Versionable\" />\n      <facet name=\"Folderish\" />\n\n      <subtypes>\n        <type>NXBundleGroup</type>\n        <type>NXBundle</type>\n        <type>NXOperation</type>\n        <type>Workspace</type>\n      </subtypes>\n    </doctype>\n\n    <doctype name=\"NXBundleGroup\" extends=\"Folder\">\n      <schema name=\"common\" />\n      <schema name=\"dublincore\" />\n      <schema name=\"file\" />\n      <schema name=\"nxbundlegroup\" />\n\n      <facet name=\"Commentable\" />\n      <facet name=\"Versionable\" />\n      <facet name=\"Folderish\" />\n\n      <subtypes>\n        <type>NXBundleGroup</type>\n      </subtypes>\n    </doctype>\n\n\n    <doctype name=\"NXBundle\" extends=\"OrderedFolder\">\n      <schema name=\"common\" />\n      <schema name=\"dublincore\" />\n      <schema name=\"file\" />\n      <schema name=\"nxbundle\" />\n      <facet name=\"Commentable\" />\n      <facet name=\"Versionable\" />\n      <facet name=\"Folderish\" />\n      <subtypes>\n        <type>NXComponent</type>\n        <type>NXService</type>\n        <type>NXExtensionPoint</type>\n        <type>NXContribution</type>\n      </subtypes>\n    </doctype>\n\n    <doctype name=\"NXComponent\" extends=\"OrderedFolder\">\n      <schema name=\"common\" />\n      <schema name=\"dublincore\" />\n      <schema name=\"file\" />\n      <schema name=\"nxcomponent\" />\n      <facet name=\"Commentable\" />\n      <facet name=\"Versionable\" />\n      <facet name=\"Folderish\" />\n      <subtypes>\n        <type>NXService</type>\n        <type>NXExtensionPoint</type>\n        <type>NXContribution</type>\n      </subtypes>\n    </doctype>\n\n    <doctype name=\"NXExtensionPoint\" extends=\"OrderedFolder\">\n      <schema name=\"common\" />\n      <schema name=\"dublincore\" />\n      <schema name=\"file\" />\n      <schema name=\"nxextensionpoint\" />\n      <schema name=\"apidoccommon\" />\n\n      <facet name=\"Commentable\" />\n      <facet name=\"Versionable\" />\n      <facet name=\"Folderish\" />\n    </doctype>\n\n    <doctype name=\"NXContribution\" extends=\"Document\">\n      <schema name=\"common\" />\n      <schema name=\"dublincore\" />\n      <schema name=\"file\" />\n      <schema name=\"nxcontribution\" />\n      <schema name=\"apidoccommon\" />\n\n      <facet name=\"Commentable\" />\n      <facet name=\"Versionable\" />\n    </doctype>\n\n    <doctype name=\"NXService\" extends=\"Document\">\n      <schema name=\"common\" />\n      <schema name=\"dublincore\" />\n      <schema name=\"file\" />\n      <schema name=\"nxservice\" />\n\n      <facet name=\"Commentable\" />\n      <facet name=\"Versionable\" />\n    </doctype>\n\n    <doctype name=\"NXOperation\" extends=\"Document\">\n      <schema name=\"common\" />\n      <schema name=\"dublincore\" />\n      <schema name=\"file\" />\n\n      <schema name=\"nxoperation\" />\n      <facet name=\"Commentable\" />\n      <facet name=\"Versionable\" />\n    </doctype>\n\n    <doctype name=\"NXDocumentation\" extends=\"Document\">\n      <schema name=\"common\" />\n      <schema name=\"dublincore\" />\n      <schema name=\"file\" />\n      <schema name=\"files\" />\n      <schema name=\"nxdocumentation\" />\n      <facet name=\"Commentable\" />\n      <facet name=\"Versionable\" />\n    </doctype>\n\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.apidoc.lifecycle.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.apidoc.lifecycle.contrib--types","extensionPoint":"org.nuxeo.ecm.core.lifecycle.LifeCycleService--types","documentation":null,"xml":"<extension point=\"types\" target=\"org.nuxeo.ecm.core.lifecycle.LifeCycleService\">\n    <types>\n      <type name=\"NXDistribution\">default</type>\n      <type name=\"NXBundleGroup\">default</type>\n      <type name=\"NXBundle\">default</type>\n      <type name=\"NXComponent\">default</type>\n      <type name=\"NXService\">default</type>\n      <type name=\"NXExtensionPoint\">default</type>\n      <type name=\"NXContribution\">default</type>\n      <type name=\"NXOperation\">default</type>\n      <type name=\"NXDocumentation\">default</type>\n    </types>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.lifecycle.LifeCycleService","rawName":"service:org.nuxeo.ecm.core.lifecycle.LifeCycleService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.lifecycle.contrib/Contributions/org.nuxeo.apidoc.lifecycle.contrib--types","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;types&gt;\n      &lt;type name=&quot;NXDistribution&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;NXBundleGroup&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;NXBundle&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;NXComponent&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;NXService&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;NXExtensionPoint&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;NXContribution&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;NXOperation&quot;&gt;default&lt;/type&gt;\n      &lt;type name=&quot;NXDocumentation&quot;&gt;default&lt;/type&gt;\n    &lt;/types&gt;","id":null,"label":"types","rawXml":"<types>\n      <type name=\"NXDistribution\">default</type>\n      <type name=\"NXBundleGroup\">default</type>\n      <type name=\"NXBundle\">default</type>\n      <type name=\"NXComponent\">default</type>\n      <type name=\"NXService\">default</type>\n      <type name=\"NXExtensionPoint\">default</type>\n      <type name=\"NXContribution\">default</type>\n      <type name=\"NXOperation\">default</type>\n      <type name=\"NXDocumentation\">default</type>\n    </types>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.lifecycle.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/bin/main/OSGI-INF/life-cycle-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.apidoc.lifecycle.contrib\">\n\n  <extension target=\"org.nuxeo.ecm.core.lifecycle.LifeCycleService\" point=\"types\">\n    <types>\n      <type name=\"NXDistribution\">default</type>\n      <type name=\"NXBundleGroup\">default</type>\n      <type name=\"NXBundle\">default</type>\n      <type name=\"NXComponent\">default</type>\n      <type name=\"NXService\">default</type>\n      <type name=\"NXExtensionPoint\">default</type>\n      <type name=\"NXContribution\">default</type>\n      <type name=\"NXOperation\">default</type>\n      <type name=\"NXDocumentation\">default</type>\n    </types>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.apidoc.directoryContrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.apidoc.directoryContrib--directories","extensionPoint":"org.nuxeo.ecm.directory.GenericDirectory--directories","documentation":null,"xml":"<extension point=\"directories\" target=\"org.nuxeo.ecm.directory.GenericDirectory\">\n\n    <directory extends=\"template-vocabulary\" name=\"documentationTypes\">\n      <dataFile>directories/documentation-types.csv</dataFile>\n    </directory>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.directory.GenericDirectory","rawName":"service:org.nuxeo.ecm.directory.GenericDirectory"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.directoryContrib/Contributions/org.nuxeo.apidoc.directoryContrib--directories","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;directory extends=&quot;template-vocabulary&quot; name=&quot;documentationTypes&quot;&gt;\n      &lt;dataFile&gt;directories/documentation-types.csv&lt;/dataFile&gt;\n    &lt;/directory&gt;","id":"documentationTypes","label":"directory documentationTypes","rawXml":"<directory extends=\"template-vocabulary\" name=\"documentationTypes\">\n      <dataFile>directories/documentation-types.csv</dataFile>\n    </directory>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.directoryContrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/bin/main/OSGI-INF/directories-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.apidoc.directoryContrib\">\n\n  <extension target=\"org.nuxeo.ecm.directory.GenericDirectory\" point=\"directories\">\n\n    <directory name=\"documentationTypes\" extends=\"template-vocabulary\">\n      <dataFile>directories/documentation-types.csv</dataFile>\n    </directory>\n\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.apidoc.schemaContrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.apidoc.schemaContrib--schema","extensionPoint":"org.nuxeo.ecm.core.schema.TypeService--schema","documentation":null,"xml":"<extension point=\"schema\" target=\"org.nuxeo.ecm.core.schema.TypeService\">\n\n    <schema name=\"nxbundle\" prefix=\"nxbundle\" src=\"schemas/nxbundle.xsd\"/>\n    <schema name=\"nxbundlegroup\" prefix=\"nxbundlegroup\" src=\"schemas/nxbundlegroup.xsd\"/>\n    <schema name=\"nxcomponent\" prefix=\"nxcomponent\" src=\"schemas/nxcomponent.xsd\"/>\n    <schema name=\"nxcontribution\" prefix=\"nxcontribution\" src=\"schemas/nxcontribution.xsd\"/>\n    <schema name=\"nxdistribution\" prefix=\"nxdistribution\" src=\"schemas/nxdistribution.xsd\"/>\n    <schema name=\"nxextensionpoint\" prefix=\"nxextensionpoint\" src=\"schemas/nxextensionpoint.xsd\"/>\n    <schema name=\"nxservice\" prefix=\"nxservice\" src=\"schemas/nxservice.xsd\"/>\n    <schema name=\"nxoperation\" prefix=\"nxop\" src=\"schemas/nxoperation.xsd\"/>\n\n    <schema name=\"nxdocumentation\" prefix=\"nxdoc\" src=\"schemas/nxdocumentation.xsd\"/>\n    <schema name=\"apidoccommon\" prefix=\"adc\" src=\"schemas/apidoccommon.xsd\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.schema.TypeService","rawName":"service:org.nuxeo.ecm.core.schema.TypeService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.schemaContrib/Contributions/org.nuxeo.apidoc.schemaContrib--schema","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;schema name=&quot;nxbundle&quot; prefix=&quot;nxbundle&quot; src=&quot;schemas/nxbundle.xsd&quot;/&gt;","id":"nxbundle","label":"schema nxbundle","rawXml":"<schema name=\"nxbundle\" prefix=\"nxbundle\" src=\"schemas/nxbundle.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;nxbundlegroup&quot; prefix=&quot;nxbundlegroup&quot; src=&quot;schemas/nxbundlegroup.xsd&quot;/&gt;","id":"nxbundlegroup","label":"schema nxbundlegroup","rawXml":"<schema name=\"nxbundlegroup\" prefix=\"nxbundlegroup\" src=\"schemas/nxbundlegroup.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;nxcomponent&quot; prefix=&quot;nxcomponent&quot; src=&quot;schemas/nxcomponent.xsd&quot;/&gt;","id":"nxcomponent","label":"schema nxcomponent","rawXml":"<schema name=\"nxcomponent\" prefix=\"nxcomponent\" src=\"schemas/nxcomponent.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;nxcontribution&quot; prefix=&quot;nxcontribution&quot; src=&quot;schemas/nxcontribution.xsd&quot;/&gt;","id":"nxcontribution","label":"schema nxcontribution","rawXml":"<schema name=\"nxcontribution\" prefix=\"nxcontribution\" src=\"schemas/nxcontribution.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;nxdistribution&quot; prefix=&quot;nxdistribution&quot; src=&quot;schemas/nxdistribution.xsd&quot;/&gt;","id":"nxdistribution","label":"schema nxdistribution","rawXml":"<schema name=\"nxdistribution\" prefix=\"nxdistribution\" src=\"schemas/nxdistribution.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;nxextensionpoint&quot; prefix=&quot;nxextensionpoint&quot; src=&quot;schemas/nxextensionpoint.xsd&quot;/&gt;","id":"nxextensionpoint","label":"schema nxextensionpoint","rawXml":"<schema name=\"nxextensionpoint\" prefix=\"nxextensionpoint\" src=\"schemas/nxextensionpoint.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;nxservice&quot; prefix=&quot;nxservice&quot; src=&quot;schemas/nxservice.xsd&quot;/&gt;","id":"nxservice","label":"schema nxservice","rawXml":"<schema name=\"nxservice\" prefix=\"nxservice\" src=\"schemas/nxservice.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;nxoperation&quot; prefix=&quot;nxop&quot; src=&quot;schemas/nxoperation.xsd&quot;/&gt;","id":"nxoperation","label":"schema nxoperation","rawXml":"<schema name=\"nxoperation\" prefix=\"nxop\" src=\"schemas/nxoperation.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;nxdocumentation&quot; prefix=&quot;nxdoc&quot; src=&quot;schemas/nxdocumentation.xsd&quot;/&gt;","id":"nxdocumentation","label":"schema nxdocumentation","rawXml":"<schema name=\"nxdocumentation\" prefix=\"nxdoc\" src=\"schemas/nxdocumentation.xsd\"/>"},{"documentation":"","xml":"&lt;schema name=&quot;apidoccommon&quot; prefix=&quot;adc&quot; src=&quot;schemas/apidoccommon.xsd&quot;/&gt;","id":"apidoccommon","label":"schema apidoccommon","rawXml":"<schema name=\"apidoccommon\" prefix=\"adc\" src=\"schemas/apidoccommon.xsd\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.schemaContrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/bin/main/OSGI-INF/schema-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.apidoc.schemaContrib\">\n  <extension target=\"org.nuxeo.ecm.core.schema.TypeService\" point=\"schema\">\n\n    <schema name=\"nxbundle\" src=\"schemas/nxbundle.xsd\" prefix=\"nxbundle\" />\n    <schema name=\"nxbundlegroup\" src=\"schemas/nxbundlegroup.xsd\" prefix=\"nxbundlegroup\" />\n    <schema name=\"nxcomponent\" src=\"schemas/nxcomponent.xsd\" prefix=\"nxcomponent\" />\n    <schema name=\"nxcontribution\" src=\"schemas/nxcontribution.xsd\" prefix=\"nxcontribution\" />\n    <schema name=\"nxdistribution\" src=\"schemas/nxdistribution.xsd\" prefix=\"nxdistribution\" />\n    <schema name=\"nxextensionpoint\" src=\"schemas/nxextensionpoint.xsd\" prefix=\"nxextensionpoint\" />\n    <schema name=\"nxservice\" src=\"schemas/nxservice.xsd\" prefix=\"nxservice\" />\n    <schema name=\"nxoperation\" src=\"schemas/nxoperation.xsd\" prefix=\"nxop\" />\n\n    <schema name=\"nxdocumentation\" src=\"schemas/nxdocumentation.xsd\" prefix=\"nxdoc\" />\n    <schema name=\"apidoccommon\" src=\"schemas/apidoccommon.xsd\" prefix=\"adc\" />\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.apidoc.documentation.DocumentationComponent","extensionPoints":[],"services":[{"@type":"NXService","id":"org.nuxeo.apidoc.documentation.DocumentationService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.documentation.DocumentationComponent/Services/org.nuxeo.apidoc.documentation.DocumentationService","componentId":"org.nuxeo.apidoc.documentation.DocumentationComponent"},{"@type":"NXService","id":"org.nuxeo.apidoc.search.ArtifactSearcher","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.documentation.DocumentationComponent/Services/org.nuxeo.apidoc.search.ArtifactSearcher","componentId":"org.nuxeo.apidoc.documentation.DocumentationComponent"}],"extensions":[],"componentClass":"org.nuxeo.apidoc.documentation.DocumentationComponent","documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.documentation.DocumentationComponent","documentationHtml":"","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/bin/main/OSGI-INF/documentation-service-framework.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.apidoc.documentation.DocumentationComponent\">\n  <implementation class=\"org.nuxeo.apidoc.documentation.DocumentationComponent\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.apidoc.documentation.DocumentationService\" />\n    <provide interface=\"org.nuxeo.apidoc.search.ArtifactSearcher\" />\n  </service>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.apidoc.test.works","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.apidoc.test.works--queues","extensionPoint":"org.nuxeo.ecm.core.work.service--queues","documentation":null,"xml":"<extension point=\"queues\" target=\"org.nuxeo.ecm.core.work.service\">\n    <queue id=\"apidoc-xml-extractor\">\n      <maxThreads>1</maxThreads>\n      <category>apidoc-xml-extractor</category>\n    </queue>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.work.service","rawName":"service:org.nuxeo.ecm.core.work.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.test.works/Contributions/org.nuxeo.apidoc.test.works--queues","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;queue id=&quot;apidoc-xml-extractor&quot;&gt;\n      &lt;maxThreads&gt;1&lt;/maxThreads&gt;\n      &lt;category&gt;apidoc-xml-extractor&lt;/category&gt;\n    &lt;/queue&gt;","id":"apidoc-xml-extractor","label":"queue apidoc-xml-extractor","rawXml":"<queue id=\"apidoc-xml-extractor\">\n      <maxThreads>1</maxThreads>\n      <category>apidoc-xml-extractor</category>\n    </queue>"}]},{"@type":"NXContribution","id":"org.nuxeo.apidoc.test.works--queues1","extensionPoint":"org.nuxeo.ecm.core.work.service--queues","documentation":null,"xml":"<extension point=\"queues\" target=\"org.nuxeo.ecm.core.work.service\">\n    <queue id=\"apidoc-xml-extractor-2\">\n      <maxThreads>1</maxThreads>\n      <category>apidoc-xml-extractor-2</category>\n    </queue>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.work.service","rawName":"service:org.nuxeo.ecm.core.work.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.test.works/Contributions/org.nuxeo.apidoc.test.works--queues1","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;queue id=&quot;apidoc-xml-extractor-2&quot;&gt;\n      &lt;maxThreads&gt;1&lt;/maxThreads&gt;\n      &lt;category&gt;apidoc-xml-extractor-2&lt;/category&gt;\n    &lt;/queue&gt;","id":"apidoc-xml-extractor-2","label":"queue apidoc-xml-extractor-2","rawXml":"<queue id=\"apidoc-xml-extractor-2\">\n      <maxThreads>1</maxThreads>\n      <category>apidoc-xml-extractor-2</category>\n    </queue>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.apidoc.repo/org.nuxeo.apidoc.test.works","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-repo/bin/test/apidoc-works-test-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.apidoc.test.works\" version=\"1.0\">\n\n  <extension target=\"org.nuxeo.ecm.core.work.service\" point=\"queues\">\n    <queue id=\"apidoc-xml-extractor\">\n      <maxThreads>1</maxThreads>\n      <category>apidoc-xml-extractor</category>\n    </queue>\n  </extension>\n\n  <!-- additional contrib to the same extension point as non-regression test for NXP-19849 -->\n  <extension target=\"org.nuxeo.ecm.core.work.service\" point=\"queues\">\n    <queue id=\"apidoc-xml-extractor-2\">\n      <maxThreads>1</maxThreads>\n      <category>apidoc-xml-extractor-2</category>\n    </queue>\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.runtime.kv","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 2\nBundle-SymbolicName: org.nuxeo.runtime.kv\nNuxeo-Component: OSGI-INF/keyvalue-service.xml\n","requirements":null,"groupId":"org.nuxeo.runtime","artifactId":"nuxeo-runtime-kv","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.runtime","name":"org.nuxeo.runtime","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.runtime","org.nuxeo.runtime.cluster","org.nuxeo.runtime.datasource","org.nuxeo.runtime.jtajca","org.nuxeo.runtime.kv","org.nuxeo.runtime.management","org.nuxeo.runtime.metrics","org.nuxeo.runtime.migration","org.nuxeo.runtime.mongodb","org.nuxeo.runtime.pubsub","org.nuxeo.runtime.reload","org.nuxeo.runtime.stream","org.nuxeo.runtime.stream.test"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-kv/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.runtime.kv.KeyValueService","extensionPoints":[{"@type":"NXExtensionPoint","name":"configuration","descriptors":["org.nuxeo.runtime.kv.KeyValueStoreDescriptor"],"documentation":"\n      Defines the implementations of the Key/Value stores:\n      <code>\n    <store class=\"org.nuxeo.runtime.kv.MemKeyValueStore\" name=\"default\"/>\n</code>\n\n      The class must implement org.nuxeo.runtime.kv.KeyValueStoreProvider.\n    \n","id":"org.nuxeo.runtime.kv.KeyValueService--configuration","version":"11.1-SNAPSHOT","label":"configuration (org.nuxeo.runtime.kv.KeyValueService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.kv/org.nuxeo.runtime.kv.KeyValueService/ExtensionPoints/org.nuxeo.runtime.kv.KeyValueService--configuration","documentationHtml":"<p/>\nDefines the implementations of the Key/Value stores:\n<p/><pre><code>    &lt;store class=\"org.nuxeo.runtime.kv.MemKeyValueStore\" name=\"default\"/>\n</code></pre><p/>\nThe class must implement org.nuxeo.runtime.kv.KeyValueStoreProvider.\n<p/>","componentId":"org.nuxeo.runtime.kv.KeyValueService"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.kv.KeyValueService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.kv/org.nuxeo.runtime.kv.KeyValueService/Services/org.nuxeo.runtime.kv.KeyValueService","componentId":"org.nuxeo.runtime.kv.KeyValueService"}],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.runtime.kv.KeyValueService--configuration","extensionPoint":"org.nuxeo.runtime.kv.KeyValueService--configuration","documentation":null,"xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.kv.KeyValueService\">\n    <store class=\"org.nuxeo.runtime.kv.MemKeyValueStore\" name=\"default\">\n    </store>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.kv.KeyValueService","rawName":"service:org.nuxeo.runtime.kv.KeyValueService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.kv/org.nuxeo.runtime.kv.KeyValueService/Contributions/org.nuxeo.runtime.kv.KeyValueService--configuration","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;store class=&quot;org.nuxeo.runtime.kv.MemKeyValueStore&quot; name=&quot;default&quot;&gt;\n    &lt;/store&gt;","id":"default","label":"store default","rawXml":"<store class=\"org.nuxeo.runtime.kv.MemKeyValueStore\" name=\"default\">\n    </store>"}]}],"componentClass":"org.nuxeo.runtime.kv.KeyValueServiceImpl","documentation":"\n    The Key/Value service allows registration and access to KeyValueStores\n    to store simple values associated to keys.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.kv/org.nuxeo.runtime.kv.KeyValueService","documentationHtml":"<p/>\nThe Key/Value service allows registration and access to KeyValueStores\nto store simple values associated to keys.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-kv/bin/main/OSGI-INF/keyvalue-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.kv.KeyValueService\" version=\"1.0\">\n\n  <documentation>\n    The Key/Value service allows registration and access to KeyValueStores\n    to store simple values associated to keys.\n  </documentation>\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.kv.KeyValueService\" />\n  </service>\n\n  <implementation class=\"org.nuxeo.runtime.kv.KeyValueServiceImpl\" />\n\n  <extension-point name=\"configuration\">\n    <documentation>\n      Defines the implementations of the Key/Value stores:\n      <code>\n        <store name=\"default\" class=\"org.nuxeo.runtime.kv.MemKeyValueStore\"/>\n      </code>\n      The class must implement org.nuxeo.runtime.kv.KeyValueStoreProvider.\n    </documentation>\n\n    <object class=\"org.nuxeo.runtime.kv.KeyValueStoreDescriptor\" />\n  </extension-point>\n\n  <extension target=\"org.nuxeo.runtime.kv.KeyValueService\" point=\"configuration\">\n    <store name=\"default\" class=\"org.nuxeo.runtime.kv.MemKeyValueStore\">\n    </store>\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.convert.plugins","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.core.convert.plugins.text.extractors\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Category: core\nBundle-Name: org.nuxeo.ecm.core.convert.plugins\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Version: 0.0.0.SNAPSHOT\nBundle-ManifestVersion: 2\nNuxeo-Component: OSGI-INF/convert-service-contrib.xml,\n OSGI-INF/commandline-pdf2text-contrib.xml\nImport-Package: javax.mail,\n javax.mail.internet,\n javax.xml.parsers,\n javax.xml.transform,\n javax.xml.transform.sax,\n org.apache.commons.logging,\n org.apache.poi,\n org.apache.poi.extractor,\n org.apache.poi.hslf.extractor,\n org.apache.poi.hssf.usermodel,\n org.apache.poi.hwpf.extractor,\n org.apache.poi.openxml4j.opc,\n org.apache.poi.poifs.filesystem,\n org.apache.poi.ss.usermodel,\n org.apache.poi.xssf.usermodel,\n org.apache.xerces.parsers,\n org.apache.xerces.xni,\n org.apache.xerces.xni.parser,\n org.apache.xmlbeans,\n org.cyberneko.html,\n org.nuxeo.common.utils,\n org.nuxeo.ecm.core.api,\n org.nuxeo.ecm.core.api.blobholder,\n org.nuxeo.ecm.core.api.impl.blob,\n org.nuxeo.ecm.core.convert.api,\n org.nuxeo.ecm.core.convert.cache,\n org.nuxeo.ecm.core.convert.extension,\n org.nuxeo.runtime.api,\n org.pdfbox.pdmodel,\n org.pdfbox.pdmodel.encryption,\n org.pdfbox.util,\n org.xml.sax,\n org.xml.sax.helpers\nBundle-SymbolicName: org.nuxeo.ecm.core.convert.plugins;singleton=true\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-convert-plugins","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-convert-plugins/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.convert.commandline.pdf2text","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.convert.commandline.pdf2text--command","extensionPoint":"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent--command","documentation":null,"xml":"<extension point=\"command\" target=\"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent\">\n\n    <command enabled=\"true\" name=\"pdftotext\">\n      <commandLine>pdftotext</commandLine>\n      <parameterString>-enc UTF-8 #{sourceFilePath} #{targetFilePath}</parameterString>\n      <winParameterString>-enc UTF-8 #{sourceFilePath} #{targetFilePath}</winParameterString>\n      <installationDirective>You need to install pdftotext.</installationDirective>\n    </command>\n\n    <command enabled=\"true\" name=\"ps2pdf\">\n      <commandLine>gs</commandLine>\n      <winCommand>gswin64c</winCommand>\n      <parameterString>-dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dEPSFitPage -sOutputFile=#{targetFilePath}\n        #{sourceFilePath}</parameterString>\n      <testParameterString>-dNODISPLAY</testParameterString>\n      <installationDirective>You need to install GhostScript.</installationDirective>\n    </command>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent","rawName":"service:org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.convert.plugins/org.nuxeo.ecm.platform.convert.commandline.pdf2text/Contributions/org.nuxeo.ecm.platform.convert.commandline.pdf2text--command","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;command enabled=&quot;true&quot; name=&quot;pdftotext&quot;&gt;\n      &lt;commandLine&gt;pdftotext&lt;/commandLine&gt;\n      &lt;parameterString&gt;-enc UTF-8 #{sourceFilePath} #{targetFilePath}&lt;/parameterString&gt;\n      &lt;winParameterString&gt;-enc UTF-8 #{sourceFilePath} #{targetFilePath}&lt;/winParameterString&gt;\n      &lt;installationDirective&gt;You need to install pdftotext.&lt;/installationDirective&gt;\n    &lt;/command&gt;","id":"pdftotext","label":"command pdftotext","rawXml":"<command enabled=\"true\" name=\"pdftotext\">\n      <commandLine>pdftotext</commandLine>\n      <parameterString>-enc UTF-8 #{sourceFilePath} #{targetFilePath}</parameterString>\n      <winParameterString>-enc UTF-8 #{sourceFilePath} #{targetFilePath}</winParameterString>\n      <installationDirective>You need to install pdftotext.</installationDirective>\n    </command>"},{"documentation":"","xml":"&lt;command enabled=&quot;true&quot; name=&quot;ps2pdf&quot;&gt;\n      &lt;commandLine&gt;gs&lt;/commandLine&gt;\n      &lt;winCommand&gt;gswin64c&lt;/winCommand&gt;\n      &lt;parameterString&gt;-dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dEPSFitPage -sOutputFile=#{targetFilePath}\n        #{sourceFilePath}&lt;/parameterString&gt;\n      &lt;testParameterString&gt;-dNODISPLAY&lt;/testParameterString&gt;\n      &lt;installationDirective&gt;You need to install GhostScript.&lt;/installationDirective&gt;\n    &lt;/command&gt;","id":"ps2pdf","label":"command ps2pdf","rawXml":"<command enabled=\"true\" name=\"ps2pdf\">\n      <commandLine>gs</commandLine>\n      <winCommand>gswin64c</winCommand>\n      <parameterString>-dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dEPSFitPage -sOutputFile=#{targetFilePath}\n        #{sourceFilePath}</parameterString>\n      <testParameterString>-dNODISPLAY</testParameterString>\n      <installationDirective>You need to install GhostScript.</installationDirective>\n    </command>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.convert.plugins/org.nuxeo.ecm.platform.convert.commandline.pdf2text","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-convert-plugins/bin/main/OSGI-INF/commandline-pdf2text-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.convert.commandline.pdf2text\">\n\n  <require>org.nuxeo.ecm.platform.commandline.executor.service.defaultContrib</require>\n  <extension target=\"org.nuxeo.ecm.platform.commandline.executor.service.CommandLineExecutorComponent\" point=\"command\">\n\n    <command name=\"pdftotext\" enabled=\"true\">\n      <commandLine>pdftotext</commandLine>\n      <parameterString>-enc UTF-8 #{sourceFilePath} #{targetFilePath}</parameterString>\n      <winParameterString>-enc UTF-8 #{sourceFilePath} #{targetFilePath}</winParameterString>\n      <installationDirective>You need to install pdftotext.</installationDirective>\n    </command>\n\n    <command enabled=\"true\" name=\"ps2pdf\">\n      <commandLine>gs</commandLine>\n      <winCommand>gswin64c</winCommand>\n      <parameterString>-dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dEPSFitPage -sOutputFile=#{targetFilePath}\n        #{sourceFilePath}</parameterString>\n      <testParameterString>-dNODISPLAY</testParameterString>\n      <installationDirective>You need to install GhostScript.</installationDirective>\n    </command>\n\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.convert.plugins","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.convert.plugins--converter","extensionPoint":"org.nuxeo.ecm.core.convert.service.ConversionServiceImpl--converter","documentation":null,"xml":"<extension point=\"converter\" target=\"org.nuxeo.ecm.core.convert.service.ConversionServiceImpl\">\n\n    <converter class=\"org.nuxeo.ecm.platform.convert.plugins.CommandLineConverter\" name=\"pdf2text\">\n      <sourceMimeType>application/pdf</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n      <parameters>\n        <parameter name=\"CommandLineName\">pdftotext</parameter>\n      </parameters>\n    </converter>\n\n    <converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.XML2TextConverter\" name=\"xml2text\">\n      <sourceMimeType>text/xml</sourceMimeType>\n      <sourceMimeType>application/xml</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.Html2TextConverter\" name=\"html2text\">\n      <sourceMimeType>text/html</sourceMimeType>\n      <sourceMimeType>text/xhtml</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.MD2TextConverter\" name=\"md2text\">\n      <sourceMimeType>text/x-web-markdown</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.XL2TextConverter\" name=\"xl2text\">\n      <sourceMimeType>application/vnd.ms-excel</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.XLX2TextConverter\" name=\"xlx2text\">\n      <sourceMimeType>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n      <parameters>\n       <parameter name=\"MAX_SIZE\">3145728</parameter>\n      </parameters>\n    </converter>\n\n    <converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.MSOffice2TextConverter\" name=\"msoffice2text\">\n      <sourceMimeType>application/msword</sourceMimeType>\n      <sourceMimeType>application/vnd.ms-powerpoint</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.RTF2TextConverter\" name=\"rtf2text\">\n      <sourceMimeType>application/rtf</sourceMimeType>\n      <sourceMimeType>text/rtf</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.DOCX2TextConverter\" name=\"docx2text\">\n      <sourceMimeType>application/vnd.openxmlformats-officedocument.wordprocessingml.document</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.PPTX2TextConverter\" name=\"pptx2text\">\n      <sourceMimeType>\n        application/vnd.openxmlformats-officedocument.presentationml.presentation\n      </sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.OOo2TextConverter\" name=\"oo2text\">\n      <sourceMimeType>application/vnd.sun.xml.impress</sourceMimeType>\n      <sourceMimeType>application/vnd.sun.xml.impress.template</sourceMimeType>\n      <sourceMimeType>\n        application/vnd.oasis.opendocument.presentation\n      </sourceMimeType>\n      <sourceMimeType>\n        application/vnd.oasis.opendocument.presentation-template\n      </sourceMimeType>\n      <sourceMimeType>application/vnd.sun.xml.calc</sourceMimeType>\n      <sourceMimeType>application/vnd.sun.xml.calc.template</sourceMimeType>\n      <sourceMimeType>\n        application/vnd.oasis.opendocument.spreadsheet\n      </sourceMimeType>\n      <sourceMimeType>\n        application/vnd.oasis.opendocument.spreadsheet-template\n      </sourceMimeType>\n      <sourceMimeType>application/vnd.sun.xml.writer</sourceMimeType>\n      <sourceMimeType>application/vnd.sun.xml.writer.template</sourceMimeType>\n      <sourceMimeType>application/vnd.oasis.opendocument.text</sourceMimeType>\n      <sourceMimeType>\n        application/vnd.oasis.opendocument.text-template\n      </sourceMimeType>\n\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.RFC822ToTextConverter\" name=\"rfc822totext\">\n      <destinationMimeType>text/plain</destinationMimeType>\n      <sourceMimeType>message/rfc822</sourceMimeType>\n    </converter>\n\n    <converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.FullTextConverter\" name=\"any2text\">\n      <sourceMimeType>*</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter class=\"org.nuxeo.ecm.platform.convert.plugins.CommandLineConverter\" name=\"ps2pdf\">\n      <sourceMimeType>application/postscript</sourceMimeType>\n      <sourceMimeType>application/eps</sourceMimeType>\n      <sourceMimeType>application/x-eps</sourceMimeType>\n      <sourceMimeType>image/eps</sourceMimeType>\n      <sourceMimeType>image/x-eps</sourceMimeType>\n      <sourceMimeType>application/illustrator</sourceMimeType>\n      <destinationMimeType>application/pdf</destinationMimeType>\n      <parameters>\n        <parameter name=\"CommandLineName\">ps2pdf</parameter>\n      </parameters>\n    </converter>\n\n    <converter name=\"ps2pdf2text\">\n      <sourceMimeType>application/postscript</sourceMimeType>\n      <sourceMimeType>application/eps</sourceMimeType>\n      <sourceMimeType>application/x-eps</sourceMimeType>\n      <sourceMimeType>image/eps</sourceMimeType>\n      <sourceMimeType>image/x-eps</sourceMimeType>\n      <sourceMimeType>application/illustrator</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n      <conversionSteps>\n        <subconverter>ps2pdf</subconverter>\n        <subconverter>pdf2text</subconverter>\n      </conversionSteps>\n    </converter>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.convert.service.ConversionServiceImpl","rawName":"service:org.nuxeo.ecm.core.convert.service.ConversionServiceImpl"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.convert.plugins/org.nuxeo.ecm.core.convert.plugins/Contributions/org.nuxeo.ecm.core.convert.plugins--converter","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;converter class=&quot;org.nuxeo.ecm.platform.convert.plugins.CommandLineConverter&quot; name=&quot;pdf2text&quot;&gt;\n      &lt;sourceMimeType&gt;application/pdf&lt;/sourceMimeType&gt;\n      &lt;destinationMimeType&gt;text/plain&lt;/destinationMimeType&gt;\n      &lt;parameters&gt;\n        &lt;parameter name=&quot;CommandLineName&quot;&gt;pdftotext&lt;/parameter&gt;\n      &lt;/parameters&gt;\n    &lt;/converter&gt;","id":"pdf2text","label":"converter pdf2text","rawXml":"<converter class=\"org.nuxeo.ecm.platform.convert.plugins.CommandLineConverter\" name=\"pdf2text\">\n      <sourceMimeType>application/pdf</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n      <parameters>\n        <parameter name=\"CommandLineName\">pdftotext</parameter>\n      </parameters>\n    </converter>"},{"documentation":"","xml":"&lt;converter class=&quot;org.nuxeo.ecm.core.convert.plugins.text.extractors.XML2TextConverter&quot; name=&quot;xml2text&quot;&gt;\n      &lt;sourceMimeType&gt;text/xml&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;application/xml&lt;/sourceMimeType&gt;\n      &lt;destinationMimeType&gt;text/plain&lt;/destinationMimeType&gt;\n    &lt;/converter&gt;","id":"xml2text","label":"converter xml2text","rawXml":"<converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.XML2TextConverter\" name=\"xml2text\">\n      <sourceMimeType>text/xml</sourceMimeType>\n      <sourceMimeType>application/xml</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>"},{"documentation":"","xml":"&lt;converter class=&quot;org.nuxeo.ecm.core.convert.plugins.text.extractors.Html2TextConverter&quot; name=&quot;html2text&quot;&gt;\n      &lt;sourceMimeType&gt;text/html&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;text/xhtml&lt;/sourceMimeType&gt;\n      &lt;destinationMimeType&gt;text/plain&lt;/destinationMimeType&gt;\n    &lt;/converter&gt;","id":"html2text","label":"converter html2text","rawXml":"<converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.Html2TextConverter\" name=\"html2text\">\n      <sourceMimeType>text/html</sourceMimeType>\n      <sourceMimeType>text/xhtml</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>"},{"documentation":"","xml":"&lt;converter class=&quot;org.nuxeo.ecm.core.convert.plugins.text.extractors.MD2TextConverter&quot; name=&quot;md2text&quot;&gt;\n      &lt;sourceMimeType&gt;text/x-web-markdown&lt;/sourceMimeType&gt;\n      &lt;destinationMimeType&gt;text/plain&lt;/destinationMimeType&gt;\n    &lt;/converter&gt;","id":"md2text","label":"converter md2text","rawXml":"<converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.MD2TextConverter\" name=\"md2text\">\n      <sourceMimeType>text/x-web-markdown</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>"},{"documentation":"","xml":"&lt;converter class=&quot;org.nuxeo.ecm.core.convert.plugins.text.extractors.XL2TextConverter&quot; name=&quot;xl2text&quot;&gt;\n      &lt;sourceMimeType&gt;application/vnd.ms-excel&lt;/sourceMimeType&gt;\n      &lt;destinationMimeType&gt;text/plain&lt;/destinationMimeType&gt;\n    &lt;/converter&gt;","id":"xl2text","label":"converter xl2text","rawXml":"<converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.XL2TextConverter\" name=\"xl2text\">\n      <sourceMimeType>application/vnd.ms-excel</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>"},{"documentation":"","xml":"&lt;converter class=&quot;org.nuxeo.ecm.core.convert.plugins.text.extractors.XLX2TextConverter&quot; name=&quot;xlx2text&quot;&gt;\n      &lt;sourceMimeType&gt;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&lt;/sourceMimeType&gt;\n      &lt;destinationMimeType&gt;text/plain&lt;/destinationMimeType&gt;\n      &lt;parameters&gt;\n       &lt;parameter name=&quot;MAX_SIZE&quot;&gt;3145728&lt;/parameter&gt;\n      &lt;/parameters&gt;\n    &lt;/converter&gt;","id":"xlx2text","label":"converter xlx2text","rawXml":"<converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.XLX2TextConverter\" name=\"xlx2text\">\n      <sourceMimeType>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n      <parameters>\n       <parameter name=\"MAX_SIZE\">3145728</parameter>\n      </parameters>\n    </converter>"},{"documentation":"","xml":"&lt;converter class=&quot;org.nuxeo.ecm.core.convert.plugins.text.extractors.MSOffice2TextConverter&quot; name=&quot;msoffice2text&quot;&gt;\n      &lt;sourceMimeType&gt;application/msword&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;application/vnd.ms-powerpoint&lt;/sourceMimeType&gt;\n      &lt;destinationMimeType&gt;text/plain&lt;/destinationMimeType&gt;\n    &lt;/converter&gt;","id":"msoffice2text","label":"converter msoffice2text","rawXml":"<converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.MSOffice2TextConverter\" name=\"msoffice2text\">\n      <sourceMimeType>application/msword</sourceMimeType>\n      <sourceMimeType>application/vnd.ms-powerpoint</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>"},{"documentation":"","xml":"&lt;converter class=&quot;org.nuxeo.ecm.core.convert.plugins.text.extractors.RTF2TextConverter&quot; name=&quot;rtf2text&quot;&gt;\n      &lt;sourceMimeType&gt;application/rtf&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;text/rtf&lt;/sourceMimeType&gt;\n      &lt;destinationMimeType&gt;text/plain&lt;/destinationMimeType&gt;\n    &lt;/converter&gt;","id":"rtf2text","label":"converter rtf2text","rawXml":"<converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.RTF2TextConverter\" name=\"rtf2text\">\n      <sourceMimeType>application/rtf</sourceMimeType>\n      <sourceMimeType>text/rtf</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>"},{"documentation":"","xml":"&lt;converter class=&quot;org.nuxeo.ecm.core.convert.plugins.text.extractors.DOCX2TextConverter&quot; name=&quot;docx2text&quot;&gt;\n      &lt;sourceMimeType&gt;application/vnd.openxmlformats-officedocument.wordprocessingml.document&lt;/sourceMimeType&gt;\n      &lt;destinationMimeType&gt;text/plain&lt;/destinationMimeType&gt;\n    &lt;/converter&gt;","id":"docx2text","label":"converter docx2text","rawXml":"<converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.DOCX2TextConverter\" name=\"docx2text\">\n      <sourceMimeType>application/vnd.openxmlformats-officedocument.wordprocessingml.document</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>"},{"documentation":"","xml":"&lt;converter class=&quot;org.nuxeo.ecm.core.convert.plugins.text.extractors.PPTX2TextConverter&quot; name=&quot;pptx2text&quot;&gt;\n      &lt;sourceMimeType&gt;\n        application/vnd.openxmlformats-officedocument.presentationml.presentation\n      &lt;/sourceMimeType&gt;\n      &lt;destinationMimeType&gt;text/plain&lt;/destinationMimeType&gt;\n    &lt;/converter&gt;","id":"pptx2text","label":"converter pptx2text","rawXml":"<converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.PPTX2TextConverter\" name=\"pptx2text\">\n      <sourceMimeType>\n        application/vnd.openxmlformats-officedocument.presentationml.presentation\n      </sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>"},{"documentation":"","xml":"&lt;converter class=&quot;org.nuxeo.ecm.core.convert.plugins.text.extractors.OOo2TextConverter&quot; name=&quot;oo2text&quot;&gt;\n      &lt;sourceMimeType&gt;application/vnd.sun.xml.impress&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;application/vnd.sun.xml.impress.template&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;\n        application/vnd.oasis.opendocument.presentation\n      &lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;\n        application/vnd.oasis.opendocument.presentation-template\n      &lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;application/vnd.sun.xml.calc&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;application/vnd.sun.xml.calc.template&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;\n        application/vnd.oasis.opendocument.spreadsheet\n      &lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;\n        application/vnd.oasis.opendocument.spreadsheet-template\n      &lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;application/vnd.sun.xml.writer&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;application/vnd.sun.xml.writer.template&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;application/vnd.oasis.opendocument.text&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;\n        application/vnd.oasis.opendocument.text-template\n      &lt;/sourceMimeType&gt;\n\n      &lt;destinationMimeType&gt;text/plain&lt;/destinationMimeType&gt;\n    &lt;/converter&gt;","id":"oo2text","label":"converter oo2text","rawXml":"<converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.OOo2TextConverter\" name=\"oo2text\">\n      <sourceMimeType>application/vnd.sun.xml.impress</sourceMimeType>\n      <sourceMimeType>application/vnd.sun.xml.impress.template</sourceMimeType>\n      <sourceMimeType>\n        application/vnd.oasis.opendocument.presentation\n      </sourceMimeType>\n      <sourceMimeType>\n        application/vnd.oasis.opendocument.presentation-template\n      </sourceMimeType>\n      <sourceMimeType>application/vnd.sun.xml.calc</sourceMimeType>\n      <sourceMimeType>application/vnd.sun.xml.calc.template</sourceMimeType>\n      <sourceMimeType>\n        application/vnd.oasis.opendocument.spreadsheet\n      </sourceMimeType>\n      <sourceMimeType>\n        application/vnd.oasis.opendocument.spreadsheet-template\n      </sourceMimeType>\n      <sourceMimeType>application/vnd.sun.xml.writer</sourceMimeType>\n      <sourceMimeType>application/vnd.sun.xml.writer.template</sourceMimeType>\n      <sourceMimeType>application/vnd.oasis.opendocument.text</sourceMimeType>\n      <sourceMimeType>\n        application/vnd.oasis.opendocument.text-template\n      </sourceMimeType>\n\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>"},{"documentation":"","xml":"&lt;converter class=&quot;org.nuxeo.ecm.core.convert.plugins.text.extractors.RFC822ToTextConverter&quot; name=&quot;rfc822totext&quot;&gt;\n      &lt;destinationMimeType&gt;text/plain&lt;/destinationMimeType&gt;\n      &lt;sourceMimeType&gt;message/rfc822&lt;/sourceMimeType&gt;\n    &lt;/converter&gt;","id":"rfc822totext","label":"converter rfc822totext","rawXml":"<converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.RFC822ToTextConverter\" name=\"rfc822totext\">\n      <destinationMimeType>text/plain</destinationMimeType>\n      <sourceMimeType>message/rfc822</sourceMimeType>\n    </converter>"},{"documentation":"","xml":"&lt;converter class=&quot;org.nuxeo.ecm.core.convert.plugins.text.extractors.FullTextConverter&quot; name=&quot;any2text&quot;&gt;\n      &lt;sourceMimeType&gt;*&lt;/sourceMimeType&gt;\n      &lt;destinationMimeType&gt;text/plain&lt;/destinationMimeType&gt;\n    &lt;/converter&gt;","id":"any2text","label":"converter any2text","rawXml":"<converter class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.FullTextConverter\" name=\"any2text\">\n      <sourceMimeType>*</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>"},{"documentation":"","xml":"&lt;converter class=&quot;org.nuxeo.ecm.platform.convert.plugins.CommandLineConverter&quot; name=&quot;ps2pdf&quot;&gt;\n      &lt;sourceMimeType&gt;application/postscript&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;application/eps&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;application/x-eps&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;image/eps&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;image/x-eps&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;application/illustrator&lt;/sourceMimeType&gt;\n      &lt;destinationMimeType&gt;application/pdf&lt;/destinationMimeType&gt;\n      &lt;parameters&gt;\n        &lt;parameter name=&quot;CommandLineName&quot;&gt;ps2pdf&lt;/parameter&gt;\n      &lt;/parameters&gt;\n    &lt;/converter&gt;","id":"ps2pdf","label":"converter ps2pdf","rawXml":"<converter class=\"org.nuxeo.ecm.platform.convert.plugins.CommandLineConverter\" name=\"ps2pdf\">\n      <sourceMimeType>application/postscript</sourceMimeType>\n      <sourceMimeType>application/eps</sourceMimeType>\n      <sourceMimeType>application/x-eps</sourceMimeType>\n      <sourceMimeType>image/eps</sourceMimeType>\n      <sourceMimeType>image/x-eps</sourceMimeType>\n      <sourceMimeType>application/illustrator</sourceMimeType>\n      <destinationMimeType>application/pdf</destinationMimeType>\n      <parameters>\n        <parameter name=\"CommandLineName\">ps2pdf</parameter>\n      </parameters>\n    </converter>"},{"documentation":"","xml":"&lt;converter name=&quot;ps2pdf2text&quot;&gt;\n      &lt;sourceMimeType&gt;application/postscript&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;application/eps&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;application/x-eps&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;image/eps&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;image/x-eps&lt;/sourceMimeType&gt;\n      &lt;sourceMimeType&gt;application/illustrator&lt;/sourceMimeType&gt;\n      &lt;destinationMimeType&gt;text/plain&lt;/destinationMimeType&gt;\n      &lt;conversionSteps&gt;\n        &lt;subconverter&gt;ps2pdf&lt;/subconverter&gt;\n        &lt;subconverter&gt;pdf2text&lt;/subconverter&gt;\n      &lt;/conversionSteps&gt;\n    &lt;/converter&gt;","id":"ps2pdf2text","label":"converter ps2pdf2text","rawXml":"<converter name=\"ps2pdf2text\">\n      <sourceMimeType>application/postscript</sourceMimeType>\n      <sourceMimeType>application/eps</sourceMimeType>\n      <sourceMimeType>application/x-eps</sourceMimeType>\n      <sourceMimeType>image/eps</sourceMimeType>\n      <sourceMimeType>image/x-eps</sourceMimeType>\n      <sourceMimeType>application/illustrator</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n      <conversionSteps>\n        <subconverter>ps2pdf</subconverter>\n        <subconverter>pdf2text</subconverter>\n      </conversionSteps>\n    </converter>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.convert.plugins/org.nuxeo.ecm.core.convert.plugins","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-convert-plugins/bin/main/OSGI-INF/convert-service-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.convert.plugins\">\n\n  <extension target=\"org.nuxeo.ecm.core.convert.service.ConversionServiceImpl\"\n    point=\"converter\">\n\n    <converter name=\"pdf2text\" class=\"org.nuxeo.ecm.platform.convert.plugins.CommandLineConverter\">\n      <sourceMimeType>application/pdf</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n      <parameters>\n        <parameter name=\"CommandLineName\">pdftotext</parameter>\n      </parameters>\n    </converter>\n\n    <converter name=\"xml2text\" class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.XML2TextConverter\">\n      <sourceMimeType>text/xml</sourceMimeType>\n      <sourceMimeType>application/xml</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter name=\"html2text\" class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.Html2TextConverter\">\n      <sourceMimeType>text/html</sourceMimeType>\n      <sourceMimeType>text/xhtml</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter name=\"md2text\" class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.MD2TextConverter\">\n      <sourceMimeType>text/x-web-markdown</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter name=\"xl2text\" class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.XL2TextConverter\">\n      <sourceMimeType>application/vnd.ms-excel</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter name=\"xlx2text\" class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.XLX2TextConverter\">\n      <sourceMimeType>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n      <parameters>\n       <parameter name=\"MAX_SIZE\">3145728</parameter>\n      </parameters>\n    </converter>\n\n    <converter name=\"msoffice2text\" class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.MSOffice2TextConverter\">\n      <sourceMimeType>application/msword</sourceMimeType>\n      <sourceMimeType>application/vnd.ms-powerpoint</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter name=\"rtf2text\" class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.RTF2TextConverter\">\n      <sourceMimeType>application/rtf</sourceMimeType>\n      <sourceMimeType>text/rtf</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter name=\"docx2text\" class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.DOCX2TextConverter\">\n      <sourceMimeType>application/vnd.openxmlformats-officedocument.wordprocessingml.document</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter name=\"pptx2text\" class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.PPTX2TextConverter\">\n      <sourceMimeType>\n        application/vnd.openxmlformats-officedocument.presentationml.presentation\n      </sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter name=\"oo2text\" class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.OOo2TextConverter\">\n      <sourceMimeType>application/vnd.sun.xml.impress</sourceMimeType>\n      <sourceMimeType>application/vnd.sun.xml.impress.template</sourceMimeType>\n      <sourceMimeType>\n        application/vnd.oasis.opendocument.presentation\n      </sourceMimeType>\n      <sourceMimeType>\n        application/vnd.oasis.opendocument.presentation-template\n      </sourceMimeType>\n      <sourceMimeType>application/vnd.sun.xml.calc</sourceMimeType>\n      <sourceMimeType>application/vnd.sun.xml.calc.template</sourceMimeType>\n      <sourceMimeType>\n        application/vnd.oasis.opendocument.spreadsheet\n      </sourceMimeType>\n      <sourceMimeType>\n        application/vnd.oasis.opendocument.spreadsheet-template\n      </sourceMimeType>\n      <sourceMimeType>application/vnd.sun.xml.writer</sourceMimeType>\n      <sourceMimeType>application/vnd.sun.xml.writer.template</sourceMimeType>\n      <sourceMimeType>application/vnd.oasis.opendocument.text</sourceMimeType>\n      <sourceMimeType>\n        application/vnd.oasis.opendocument.text-template\n      </sourceMimeType>\n\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter name=\"rfc822totext\"\n      class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.RFC822ToTextConverter\">\n      <destinationMimeType>text/plain</destinationMimeType>\n      <sourceMimeType>message/rfc822</sourceMimeType>\n    </converter>\n\n    <converter name=\"any2text\" class=\"org.nuxeo.ecm.core.convert.plugins.text.extractors.FullTextConverter\">\n      <sourceMimeType>*</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n    </converter>\n\n    <converter class=\"org.nuxeo.ecm.platform.convert.plugins.CommandLineConverter\" name=\"ps2pdf\">\n      <sourceMimeType>application/postscript</sourceMimeType>\n      <sourceMimeType>application/eps</sourceMimeType>\n      <sourceMimeType>application/x-eps</sourceMimeType>\n      <sourceMimeType>image/eps</sourceMimeType>\n      <sourceMimeType>image/x-eps</sourceMimeType>\n      <sourceMimeType>application/illustrator</sourceMimeType>\n      <destinationMimeType>application/pdf</destinationMimeType>\n      <parameters>\n        <parameter name=\"CommandLineName\">ps2pdf</parameter>\n      </parameters>\n    </converter>\n\n    <converter name=\"ps2pdf2text\">\n      <sourceMimeType>application/postscript</sourceMimeType>\n      <sourceMimeType>application/eps</sourceMimeType>\n      <sourceMimeType>application/x-eps</sourceMimeType>\n      <sourceMimeType>image/eps</sourceMimeType>\n      <sourceMimeType>image/x-eps</sourceMimeType>\n      <sourceMimeType>application/illustrator</sourceMimeType>\n      <destinationMimeType>text/plain</destinationMimeType>\n      <conversionSteps>\n        <subconverter>ps2pdf</subconverter>\n        <subconverter>pdf2text</subconverter>\n      </conversionSteps>\n    </converter>\n\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.directory","fileName":"classes","manifest":"Export-Package: org.nuxeo.ecm.directory;core=api,\n org.nuxeo.ecm.directory.memory,\n org.nuxeo.ecm.directory.constants\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Category: web,\n stateful\nBundle-Name: Nuxeo Directory\nBundle-Localization: bundle\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nRequire-Bundle: org.nuxeo.ecm.directory.api;visibility:=reexport,\n org.nuxeo.ecm.core.schema\nBundle-Vendor: Nuxeo\nEclipse-LazyStart: true\nBundle-Version: 0.0.0.SNAPSHOT\nNuxeo-Component: OSGI-INF/DirectoryService.xml,\n OSGI-INF/GenericDirectory.xml,\n OSGI-INF/CoreDirectory.xml,\n OSGI-INF/directory-local-configuration.xml,\n OSGI-INF/directory-resolver-contrib.xml,\n OSGI-INF/marshallers-contrib.xml\nBundle-ManifestVersion: 2\nImport-Package: org.apache.commons.logging,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.impl,\n org.nuxeo.ecm.core.api.model,\n org.nuxeo.ecm.core.schema,\n org.nuxeo.ecm.core.schema.types,\n org.nuxeo.ecm.directory.api,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model\nBundle-SymbolicName: org.nuxeo.ecm.directory;singleton:=true\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-platform-directory-core","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.directory","name":"org.nuxeo.ecm.directory","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.directory","org.nuxeo.ecm.directory.api","org.nuxeo.ecm.directory.sql","org.nuxeo.ecm.directory.types.contrib"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-directory/nuxeo-platform-directory-core/target/classes","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.directory.DirectoryServiceImpl","extensionPoints":[{"@type":"NXExtensionPoint","name":"factoryDescriptor","descriptors":["org.nuxeo.ecm.directory.DirectoryFactoryDescriptor"],"documentation":"\n      This extension point is obsolete.\n    \n","id":"org.nuxeo.ecm.directory.DirectoryServiceImpl--factoryDescriptor","version":"11.1-SNAPSHOT","label":"factoryDescriptor (org.nuxeo.ecm.directory.DirectoryServiceImpl)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.DirectoryServiceImpl/ExtensionPoints/org.nuxeo.ecm.directory.DirectoryServiceImpl--factoryDescriptor","documentationHtml":"<p/>\nThis extension point is obsolete.\n<p/>","componentId":"org.nuxeo.ecm.directory.DirectoryServiceImpl"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.directory.api.DirectoryService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.DirectoryServiceImpl/Services/org.nuxeo.ecm.directory.api.DirectoryService","componentId":"org.nuxeo.ecm.directory.DirectoryServiceImpl"}],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.directory.DirectoryServiceImpl--listeners","extensionPoint":"org.nuxeo.runtime.EventService--listeners","documentation":null,"xml":"<extension point=\"listeners\" target=\"org.nuxeo.runtime.EventService\">\n    <listener class=\"org.nuxeo.ecm.directory.DirectoryCacheFlusher\">\n      <topic>org.nuxeo.runtime.reload</topic>\n    </listener>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.EventService","rawName":"service:org.nuxeo.runtime.EventService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.DirectoryServiceImpl/Contributions/org.nuxeo.ecm.directory.DirectoryServiceImpl--listeners","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;listener class=&quot;org.nuxeo.ecm.directory.DirectoryCacheFlusher&quot;&gt;\n      &lt;topic&gt;org.nuxeo.runtime.reload&lt;/topic&gt;\n    &lt;/listener&gt;","id":null,"label":"listener","rawXml":"<listener class=\"org.nuxeo.ecm.directory.DirectoryCacheFlusher\">\n      <topic>org.nuxeo.runtime.reload</topic>\n    </listener>"}]}],"componentClass":"org.nuxeo.ecm.directory.DirectoryServiceImpl","documentation":"\n    The directory service holds registered directories.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.DirectoryServiceImpl","documentationHtml":"<p/>\nThe directory service holds registered directories.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-directory/nuxeo-platform-directory-core/target/classes/OSGI-INF/DirectoryService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.directory.DirectoryServiceImpl\">\n\n  <!-- The cache service must be started before me: TODO use a start level dependency? -->\n  <require>org.nuxeo.ecm.core.cache.CacheService</require>\n  <require>org.nuxeo.runtime.cluster.ClusterService</require>\n\n  <implementation class=\"org.nuxeo.ecm.directory.DirectoryServiceImpl\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.directory.api.DirectoryService\" />\n  </service>\n\n  <documentation>\n    The directory service holds registered directories.\n  </documentation>\n\n  <extension-point name=\"factoryDescriptor\">\n    <documentation>\n      This extension point is obsolete.\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.directory.DirectoryFactoryDescriptor\" />\n  </extension-point>\n\n  <extension target=\"org.nuxeo.runtime.EventService\" point=\"listeners\">\n    <listener class=\"org.nuxeo.ecm.directory.DirectoryCacheFlusher\">\n      <topic>org.nuxeo.runtime.reload</topic>\n    </listener>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.directory.resolver","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.directory.resolver--resolvers","extensionPoint":"org.nuxeo.ecm.core.schema.ObjectResolverService--resolvers","documentation":null,"xml":"<extension point=\"resolvers\" target=\"org.nuxeo.ecm.core.schema.ObjectResolverService\">\n    <resolver class=\"org.nuxeo.ecm.directory.DirectoryEntryResolver\" type=\"directoryResolver\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.schema.ObjectResolverService","rawName":"service:org.nuxeo.ecm.core.schema.ObjectResolverService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.resolver/Contributions/org.nuxeo.ecm.directory.resolver--resolvers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;resolver class=&quot;org.nuxeo.ecm.directory.DirectoryEntryResolver&quot; type=&quot;directoryResolver&quot;/&gt;","id":null,"label":"resolver","rawXml":"<resolver class=\"org.nuxeo.ecm.directory.DirectoryEntryResolver\" type=\"directoryResolver\"/>"}]}],"componentClass":null,"documentation":"\n    Resolver for document properties containing Directory entries id. This resolver reference a proper\n    directory.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.resolver","documentationHtml":"<p/>\nResolver for document properties containing Directory entries id. This resolver reference a proper\ndirectory.\n<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-directory/nuxeo-platform-directory-core/target/classes/OSGI-INF/directory-resolver-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.directory.resolver\">\n  <documentation>\n    Resolver for document properties containing Directory entries id. This resolver reference a proper\n    directory.\n  </documentation>\n\n  <extension target=\"org.nuxeo.ecm.core.schema.ObjectResolverService\" point=\"resolvers\">\n    <resolver type=\"directoryResolver\" class=\"org.nuxeo.ecm.directory.DirectoryEntryResolver\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.directory.local.configuration","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.directory.local.configuration--schema","extensionPoint":"org.nuxeo.ecm.core.schema.TypeService--schema","documentation":null,"xml":"<extension point=\"schema\" target=\"org.nuxeo.ecm.core.schema.TypeService\">\n    <schema name=\"directory_configuration\" prefix=\"dirconf\" src=\"schemas/directory_configuration.xsd\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.schema.TypeService","rawName":"service:org.nuxeo.ecm.core.schema.TypeService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.local.configuration/Contributions/org.nuxeo.ecm.directory.local.configuration--schema","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;schema name=&quot;directory_configuration&quot; prefix=&quot;dirconf&quot; src=&quot;schemas/directory_configuration.xsd&quot;/&gt;","id":"directory_configuration","label":"schema directory_configuration","rawXml":"<schema name=\"directory_configuration\" prefix=\"dirconf\" src=\"schemas/directory_configuration.xsd\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.directory.local.configuration--doctype","extensionPoint":"org.nuxeo.ecm.core.schema.TypeService--doctype","documentation":null,"xml":"<extension point=\"doctype\" target=\"org.nuxeo.ecm.core.schema.TypeService\">\n\n    <facet name=\"DirectoryLocalConfiguration\">\n      <schema name=\"directory_configuration\"/>\n    </facet>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.schema.TypeService","rawName":"service:org.nuxeo.ecm.core.schema.TypeService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.local.configuration/Contributions/org.nuxeo.ecm.directory.local.configuration--doctype","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;facet name=&quot;DirectoryLocalConfiguration&quot;&gt;\n      &lt;schema name=&quot;directory_configuration&quot;/&gt;\n    &lt;/facet&gt;","id":"DirectoryLocalConfiguration","label":"facet DirectoryLocalConfiguration","rawXml":"<facet name=\"DirectoryLocalConfiguration\">\n      <schema name=\"directory_configuration\"/>\n    </facet>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.directory.local.configuration--adapters","extensionPoint":"org.nuxeo.ecm.core.api.DocumentAdapterService--adapters","documentation":null,"xml":"<extension point=\"adapters\" target=\"org.nuxeo.ecm.core.api.DocumentAdapterService\">\n    <adapter class=\"org.nuxeo.ecm.directory.localconfiguration.DirectoryConfiguration\" factory=\"org.nuxeo.ecm.directory.localconfiguration.DirectoryConfigurationFactory\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.api.DocumentAdapterService","rawName":"service:org.nuxeo.ecm.core.api.DocumentAdapterService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.local.configuration/Contributions/org.nuxeo.ecm.directory.local.configuration--adapters","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.ecm.directory.localconfiguration.DirectoryConfiguration&quot; factory=&quot;org.nuxeo.ecm.directory.localconfiguration.DirectoryConfigurationFactory&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.ecm.directory.localconfiguration.DirectoryConfiguration\" factory=\"org.nuxeo.ecm.directory.localconfiguration.DirectoryConfigurationFactory\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.local.configuration","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-directory/nuxeo-platform-directory-core/target/classes/OSGI-INF/directory-local-configuration.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.directory.local.configuration\">\n\n  <extension target=\"org.nuxeo.ecm.core.schema.TypeService\" point=\"schema\">\n    <schema name=\"directory_configuration\" prefix=\"dirconf\"\n      src=\"schemas/directory_configuration.xsd\" />\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.schema.TypeService\"\n    point=\"doctype\">\n\n    <facet name=\"DirectoryLocalConfiguration\">\n      <schema name=\"directory_configuration\" />\n    </facet>\n\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.api.DocumentAdapterService\"\n    point=\"adapters\">\n    <adapter\n      class=\"org.nuxeo.ecm.directory.localconfiguration.DirectoryConfiguration\"\n      factory=\"org.nuxeo.ecm.directory.localconfiguration.DirectoryConfigurationFactory\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.directory.core.CoreDirectoryFactory","extensionPoints":[{"@type":"NXExtensionPoint","name":"directories","descriptors":["org.nuxeo.ecm.directory.core.CoreDirectoryDescriptor","org.nuxeo.ecm.directory.core.CoreDirectoryDescriptor.ACLDescriptor"],"documentation":"\n\n      This extension point can be used to register new\n      core directories.\n      <code>\n        ...\n        <directory name=\"myCoreDirectory\">\n        <schema>user</schema>\n        <idField>username</idField>\n        <passwordField>password</passwordField>\n        <readOnly>false</readOnly>\n        <references/>\n    </directory>\n</code>\n","id":"org.nuxeo.ecm.directory.core.CoreDirectoryFactory--directories","version":"11.1-SNAPSHOT","label":"directories (org.nuxeo.ecm.directory.core.CoreDirectoryFactory)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.core.CoreDirectoryFactory/ExtensionPoints/org.nuxeo.ecm.directory.core.CoreDirectoryFactory--directories","documentationHtml":"<p/>\nThis extension point can be used to register new\ncore directories.\n<p/><pre><code>        ...\n        &lt;directory name=\"myCoreDirectory\">\n        &lt;schema>user&lt;/schema>\n        &lt;idField>username&lt;/idField>\n        &lt;passwordField>password&lt;/passwordField>\n        &lt;readOnly>false&lt;/readOnly>\n        &lt;references/>\n    &lt;/directory>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.directory.core.CoreDirectoryFactory"}],"services":[],"extensions":[],"componentClass":"org.nuxeo.ecm.directory.core.CoreDirectoryFactory","documentation":"Core directory implementation.\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.core.CoreDirectoryFactory","documentationHtml":"<p/>\nCore directory implementation.","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-directory/nuxeo-platform-directory-core/target/classes/OSGI-INF/CoreDirectory.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.directory.core.CoreDirectoryFactory\">\n\n  <implementation\n    class=\"org.nuxeo.ecm.directory.core.CoreDirectoryFactory\" />\n\n  <require>org.nuxeo.ecm.directory.DirectoryServiceImpl</require>\n\n  <documentation>Core directory implementation.</documentation>\n\n  <extension-point name=\"directories\">\n    <object class=\"org.nuxeo.ecm.directory.core.CoreDirectoryDescriptor\" />\n    <object class=\"org.nuxeo.ecm.directory.core.CoreDirectoryDescriptor$ACLDescriptor\" />\n\n    <documentation>\n      This extension point can be used to register new\n      core directories.\n      <code>\n        ...\n        <directory name=\"myCoreDirectory\">\n          <schema>user</schema>\n          <idField>username</idField>\n          <passwordField>password</passwordField>\n          <readOnly>false</readOnly>\n          <references>\n          </references>\n        </directory>\n\n      </code>\n\n    </documentation>\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.directory.GenericDirectory","extensionPoints":[{"@type":"NXExtensionPoint","name":"directories","descriptors":["org.nuxeo.ecm.directory.BaseDirectoryDescriptor"],"documentation":"\n      Registration of generic directories. Generic directories are usable only as extensions to\n      other directories which have been defined as templates.\n\n      First, register a template directory:\n      <code>\n    <extension point=\"directories\" target=\"org.nuxeo.ecm.directory.sql.SQLDirectoryFactory\">\n        <directory name=\"template-dir\" template=\"true\">\n            <dataSource>java:/nxsqldirectory</dataSource>\n            <createTablePolicy>always</createTablePolicy>\n            <querySizeLimit>100</querySizeLimit>\n        </directory>\n    </extension>\n</code>\n\n      Then use a generic directory to provide specific customizations:\n      <code>\n    <extension point=\"directories\" target=\"org.nuxeo.ecm.directory.GenericDirectory\">\n        <directory extends=\"template-dir\" name=\"my-directory\">\n            <schema>myschema</schema>\n            <table>mytable</table>\n            <idField>id</idField>\n            <passwordField>password</passwordField>\n            <passwordHashAlgorithm>SSHA</passwordHashAlgorithm>\n            <substringMatchType>subany</substringMatchType>\n            <cacheTimeout>3600</cacheTimeout>\n            <cacheMaxSize>1000</cacheMaxSize>\n            <!-- <dataFile>my-directory.csv</dataFile> -->\n        </directory>\n    </extension>\n</code>\n","id":"org.nuxeo.ecm.directory.GenericDirectory--directories","version":"11.1-SNAPSHOT","label":"directories (org.nuxeo.ecm.directory.GenericDirectory)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.GenericDirectory/ExtensionPoints/org.nuxeo.ecm.directory.GenericDirectory--directories","documentationHtml":"<p/>\nRegistration of generic directories. Generic directories are usable only as extensions to\nother directories which have been defined as templates.\n<p/>\nFirst, register a template directory:\n<p/><pre><code>    &lt;extension point=\"directories\" target=\"org.nuxeo.ecm.directory.sql.SQLDirectoryFactory\">\n        &lt;directory name=\"template-dir\" template=\"true\">\n            &lt;dataSource>java:/nxsqldirectory&lt;/dataSource>\n            &lt;createTablePolicy>always&lt;/createTablePolicy>\n            &lt;querySizeLimit>100&lt;/querySizeLimit>\n        &lt;/directory>\n    &lt;/extension>\n</code></pre><p/>\nThen use a generic directory to provide specific customizations:\n<p/><pre><code>    &lt;extension point=\"directories\" target=\"org.nuxeo.ecm.directory.GenericDirectory\">\n        &lt;directory extends=\"template-dir\" name=\"my-directory\">\n            &lt;schema>myschema&lt;/schema>\n            &lt;table>mytable&lt;/table>\n            &lt;idField>id&lt;/idField>\n            &lt;passwordField>password&lt;/passwordField>\n            &lt;passwordHashAlgorithm>SSHA&lt;/passwordHashAlgorithm>\n            &lt;substringMatchType>subany&lt;/substringMatchType>\n            &lt;cacheTimeout>3600&lt;/cacheTimeout>\n            &lt;cacheMaxSize>1000&lt;/cacheMaxSize>\n            &lt;!-- &lt;dataFile>my-directory.csv&lt;/dataFile> -->\n        &lt;/directory>\n    &lt;/extension>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.directory.GenericDirectory"}],"services":[],"extensions":[],"componentClass":"org.nuxeo.ecm.directory.GenericDirectoryComponent","documentation":"\n    Registration of generic directories.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.GenericDirectory","documentationHtml":"<p/>\nRegistration of generic directories.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-directory/nuxeo-platform-directory-core/target/classes/OSGI-INF/GenericDirectory.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.directory.GenericDirectory\">\n\n  <require>org.nuxeo.ecm.directory.DirectoryServiceImpl</require>\n\n  <implementation class=\"org.nuxeo.ecm.directory.GenericDirectoryComponent\" />\n\n  <documentation>\n    Registration of generic directories.\n  </documentation>\n\n  <extension-point name=\"directories\">\n\n    <documentation>\n      Registration of generic directories. Generic directories are usable only as extensions to\n      other directories which have been defined as templates.\n\n      First, register a template directory:\n      <code>\n        <extension target=\"org.nuxeo.ecm.directory.sql.SQLDirectoryFactory\" point=\"directories\">\n          <directory name=\"template-dir\" template=\"true\">\n            <dataSource>java:/nxsqldirectory</dataSource>\n            <createTablePolicy>always</createTablePolicy>\n            <querySizeLimit>100</querySizeLimit>\n          </directory>\n        </extension>\n      </code>\n      Then use a generic directory to provide specific customizations:\n      <code>\n        <extension target=\"org.nuxeo.ecm.directory.GenericDirectory\" point=\"directories\">\n          <directory name=\"my-directory\" extends=\"template-dir\">\n            <schema>myschema</schema>\n            <table>mytable</table>\n            <idField>id</idField>\n            <passwordField>password</passwordField>\n            <passwordHashAlgorithm>SSHA</passwordHashAlgorithm>\n            <substringMatchType>subany</substringMatchType>\n            <cacheTimeout>3600</cacheTimeout>\n            <cacheMaxSize>1000</cacheMaxSize>\n            <!-- <dataFile>my-directory.csv</dataFile> -->\n          </directory>\n        </extension>\n      </code>\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.directory.BaseDirectoryDescriptor\" />\n\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.directory.marshallers","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.directory.marshallers--marshallers","extensionPoint":"org.nuxeo.ecm.core.io.MarshallerRegistry--marshallers","documentation":null,"xml":"<extension point=\"marshallers\" target=\"org.nuxeo.ecm.core.io.MarshallerRegistry\">\n    <register class=\"org.nuxeo.ecm.directory.io.DirectoryEntryJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.directory.io.DirectoryEntryJsonReader\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.directory.io.DirectoryEntryListJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.directory.io.DirectoryEntryListJsonReader\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.directory.io.DirectoryJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.directory.io.DirectoryListJsonWriter\" enable=\"true\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.io.MarshallerRegistry","rawName":"service:org.nuxeo.ecm.core.io.MarshallerRegistry"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.marshallers/Contributions/org.nuxeo.ecm.directory.marshallers--marshallers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.directory.io.DirectoryEntryJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.directory.io.DirectoryEntryJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.directory.io.DirectoryEntryJsonReader&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.directory.io.DirectoryEntryJsonReader\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.directory.io.DirectoryEntryListJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.directory.io.DirectoryEntryListJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.directory.io.DirectoryEntryListJsonReader&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.directory.io.DirectoryEntryListJsonReader\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.directory.io.DirectoryJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.directory.io.DirectoryJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.directory.io.DirectoryListJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.directory.io.DirectoryListJsonWriter\" enable=\"true\"/>"}]}],"componentClass":null,"documentation":"\n    Core IO registered marshallers set.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.marshallers","documentationHtml":"<p/>\nCore IO registered marshallers set.\n<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-directory/nuxeo-platform-directory-core/target/classes/OSGI-INF/marshallers-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.directory.marshallers\" version=\"1.0.0\">\n  <documentation>\n    Core IO registered marshallers set.\n  </documentation>\n  <extension target=\"org.nuxeo.ecm.core.io.MarshallerRegistry\" point=\"marshallers\">\n    <register class=\"org.nuxeo.ecm.directory.io.DirectoryEntryJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.directory.io.DirectoryEntryJsonReader\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.directory.io.DirectoryEntryListJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.directory.io.DirectoryEntryListJsonReader\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.directory.io.DirectoryJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.directory.io.DirectoryListJsonWriter\" enable=\"true\" />\n  </extension>\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.actions","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.platform.actions,\n org.nuxeo.ecm.platform.actions.ejb,\n org.nuxeo.ecm.platform.actions.elcache\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Localization: bundle\nBundle-Name: Nuxeo ECM Actions Manager\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Vendor: Nuxeo\nEclipse-LazyStart: true\nBundle-Version: 0.0.0.SNAPSHOT\nNuxeo-Component: OSGI-INF/actions-properties.xml,\n  OSGI-INF/actions-framework.xml,\n  OSGI-INF/filters-contrib.xml\nBundle-ManifestVersion: 2\nImport-Package: javax.annotation;version=\"1.0\",\n javax.ejb,\n org.apache.commons.logging,\n org.jboss.seam.pageflow,\n org.jbpm.graph.def,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.impl,\n org.nuxeo.ecm.directory;api=split,\n org.nuxeo.ecm.platform.actions,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.expression,\n org.nuxeo.runtime.model\nBundle-SymbolicName: org.nuxeo.ecm.actions;singleton:=true\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-platform-actions-core","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform","name":"org.nuxeo.ecm.platform","liveDoc":{},"subGroups":[{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.directory","name":"org.nuxeo.ecm.directory","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.directory","org.nuxeo.ecm.directory.api","org.nuxeo.ecm.directory.sql","org.nuxeo.ecm.directory.types.contrib"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.query","name":"org.nuxeo.ecm.platform.query","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.query.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.usermanager","name":"org.nuxeo.ecm.platform.usermanager","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.usermanager","org.nuxeo.ecm.platform.usermanager.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]}],"bundleIds":["org.nuxeo.apidoc.core","org.nuxeo.apidoc.repo","org.nuxeo.directory.mongodb","org.nuxeo.ecm.actions","org.nuxeo.ecm.platform.api","org.nuxeo.ecm.platform.commandline.executor","org.nuxeo.ecm.platform.content.template","org.nuxeo.ecm.platform.dublincore","org.nuxeo.ecm.platform.forms.layout.export","org.nuxeo.ecm.platform.login","org.nuxeo.ecm.platform.web.common","org.nuxeo.osgi.app"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-actions-core/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.actions.ActionService","extensionPoints":[{"@type":"NXExtensionPoint","name":"actions","descriptors":["org.nuxeo.ecm.platform.actions.Action"],"documentation":"\n      An action is defined by the following properties:\n\n      - id: string identifying the action\n\n      - label: the action name\n\n      - help: the action help message\n\n      - link: string representing the command the action will trigger\n\n      - category: a string useful to group actions that will be rendered in the\n      same area of a page. An action can define several categories.\n\n      - filter-ids: id of a filter that will be used to control the action\n      visibility. An action can have several filters: it is visible if all its\n      filters grant the access.\n\n      - filter: a filter definition can be done directly within the action\n      definition. It is a filter like others and can be referred by other\n      actions.\n\n      - icon: the optional icon path for this action\n\n      - confirm: an optional javascript confirmation string that can be\n      triggered when executing the command.\n\n      - enabled: boolean indicating whether the action is currently active. This\n      can be used to hide existing actions when customizing the site behaviour.\n\n      - order: an optional integer used to sort actions within the same\n      category. This attribute may be depracated in the future.\n\n      - immediate: an optional boolean (available since 5.4.2) that makes it\n      possible to call command actions without validating the enclosing form.\n\n      - type: the UI type action (available since 5.6)\n\n      UI Type properties, defined within a \"properties\" tag:\n      - property: the property value\n      - name: the property name\n\n      Properties also accept list or map-like values.\n\n      Before 5.6, it is important to understand that an action does *not*\n      define the way it will be rendered: this is left to pages, templates\n      and other components displaying it. Most of the time, actions will be\n      rendered as command link or command buttons.\n\n      Since 5.6, the template /incl/action/generic_action_template.xhtml handles\n      rendering of an action depending on its type.\n\n      Examples:\n\n      <code>\n    <action enabled=\"true\" icon=\"/icons/file.gif\" id=\"TAB_RIGHTS\"\n        label=\"action.view.rights\"\n        link=\"/incl/tabs/document_rights.xhtml\" type=\"fancybox\">\n        <category>VIEW_ACTION_LIST</category>\n        <filter-id>rights</filter-id>\n        <properties>\n            <property name=\"url\">/incl/fancybox.xhtml</property>\n            <propertyList name=\"myListProp\">\n                <value>item1</value>\n                <value>item2</value>\n            </propertyList>\n            <propertyMap name=\"myMapProp\">\n                <property name=\"mySubProp\">mySubPropValue</property>\n            </propertyMap>\n        </properties>\n    </action>\n    <action enabled=\"true\" icon=\"/icons/action_add_file.gif\"\n        id=\"newFile\" label=\"action.new.file\" link=\"create_file\" type=\"button\">\n        <category>SUBVIEW_UPPER_LIST</category>\n        <filter-id>create</filter-id>\n    </action>\n    <action enabled=\"true\" icon=\"/icons/action_add.gif\" id=\"newSection\"\n        label=\"command.create.section\"\n        link=\"#{documentActions.createDocument('Section')}\" type=\"icon\">\n        <category>SUBVIEW_UPPER_LIST</category>\n        <filter id=\"newSection\">\n            <rule grant=\"true\">\n                <permission>AddChildren</permission>\n                <type>SectionRoot</type>\n            </rule>\n        </filter>\n    </action>\n</code>\n\n\n      Actions extension point provides mergeing features: you can change an\n      existing action definition in your custom extension point provided you use\n      the same identifier.\n\n    \n","id":"org.nuxeo.ecm.platform.actions.ActionService--actions","version":"11.1-SNAPSHOT","label":"actions (org.nuxeo.ecm.platform.actions.ActionService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.actions/org.nuxeo.ecm.platform.actions.ActionService/ExtensionPoints/org.nuxeo.ecm.platform.actions.ActionService--actions","documentationHtml":"<p/>\nAn action is defined by the following properties:\n<p/>\n- id: string identifying the action\n<p/>\n- label: the action name\n<p/>\n- help: the action help message\n<p/>\n- link: string representing the command the action will trigger\n<p/>\n- category: a string useful to group actions that will be rendered in the\nsame area of a page. An action can define several categories.\n<p/>\n- filter-ids: id of a filter that will be used to control the action\nvisibility. An action can have several filters: it is visible if all its\nfilters grant the access.\n<p/>\n- filter: a filter definition can be done directly within the action\ndefinition. It is a filter like others and can be referred by other\nactions.\n<p/>\n- icon: the optional icon path for this action\n<p/>\n- confirm: an optional javascript confirmation string that can be\ntriggered when executing the command.\n<p/>\n- enabled: boolean indicating whether the action is currently active. This\ncan be used to hide existing actions when customizing the site behaviour.\n<p/>\n- order: an optional integer used to sort actions within the same\ncategory. This attribute may be depracated in the future.\n<p/>\n- immediate: an optional boolean (available since 5.4.2) that makes it\npossible to call command actions without validating the enclosing form.\n<p/>\n- type: the UI type action (available since 5.6)\n<p/>\nUI Type properties, defined within a \"properties\" tag:\n- property: the property value\n- name: the property name\n<p/>\nProperties also accept list or map-like values.\n<p/>\nBefore 5.6, it is important to understand that an action does *not*\ndefine the way it will be rendered: this is left to pages, templates\nand other components displaying it. Most of the time, actions will be\nrendered as command link or command buttons.\n<p/>\nSince 5.6, the template /incl/action/generic_action_template.xhtml handles\nrendering of an action depending on its type.\n<p/>\nExamples:\n<p/>\n<pre><code>    &lt;action enabled=\"true\" icon=\"/icons/file.gif\" id=\"TAB_RIGHTS\"\n        label=\"action.view.rights\"\n        link=\"/incl/tabs/document_rights.xhtml\" type=\"fancybox\">\n        &lt;category>VIEW_ACTION_LIST&lt;/category>\n        &lt;filter-id>rights&lt;/filter-id>\n        &lt;properties>\n            &lt;property name=\"url\">/incl/fancybox.xhtml&lt;/property>\n            &lt;propertyList name=\"myListProp\">\n                &lt;value>item1&lt;/value>\n                &lt;value>item2&lt;/value>\n            &lt;/propertyList>\n            &lt;propertyMap name=\"myMapProp\">\n                &lt;property name=\"mySubProp\">mySubPropValue&lt;/property>\n            &lt;/propertyMap>\n        &lt;/properties>\n    &lt;/action>\n    &lt;action enabled=\"true\" icon=\"/icons/action_add_file.gif\"\n        id=\"newFile\" label=\"action.new.file\" link=\"create_file\" type=\"button\">\n        &lt;category>SUBVIEW_UPPER_LIST&lt;/category>\n        &lt;filter-id>create&lt;/filter-id>\n    &lt;/action>\n    &lt;action enabled=\"true\" icon=\"/icons/action_add.gif\" id=\"newSection\"\n        label=\"command.create.section\"\n        link=\"#{documentActions.createDocument('Section')}\" type=\"icon\">\n        &lt;category>SUBVIEW_UPPER_LIST&lt;/category>\n        &lt;filter id=\"newSection\">\n            &lt;rule grant=\"true\">\n                &lt;permission>AddChildren&lt;/permission>\n                &lt;type>SectionRoot&lt;/type>\n            &lt;/rule>\n        &lt;/filter>\n    &lt;/action>\n</code></pre><p/>\nActions extension point provides mergeing features: you can change an\nexisting action definition in your custom extension point provided you use\nthe same identifier.\n<p/>","componentId":"org.nuxeo.ecm.platform.actions.ActionService"},{"@type":"NXExtensionPoint","name":"filters","descriptors":["org.nuxeo.ecm.platform.actions.DefaultActionFilter","org.nuxeo.ecm.platform.actions.FilterFactory"],"documentation":"\n      An action filter is a set of rules that will apply - or not - given an\n      action and a context.\n\n      Filter properties :\n\n      - id: will be used ot identify the filter from actions definitions.\n\n      - rules: set of rules composing the filter\n\n\n      The default filter implementation uses filter rules with the following\n      properties:\n\n      - grant: boolean indicating whether this is a granting rule or a denying\n      rule.\n\n      - permission: permission like \"Write\" that will be checked on the context\n      for the given user. A rule can hold several permissions: it applies if\n      user holds at least one of them.\n\n      - facet: facet like \"Folderish\" that can be set on the document type\n      ({@see org.nuxeo.ecm.core.schema.types.Type}) to desribe the document type\n      genral behaviour. A rule can hold several facets: it applies if current\n      document in context has at least one of them.\n\n      - group: group like \"members\" to check against current user in context. A rule\n       can hold several groups: it applies if current user is in one of them.\n\n      - condition: expression that can be evaluated against the current context.\n      A rule can hold several conditions; it applies if at least one of the conditions\n      is verified. The condition can be of the form #{somevar} or #{somevar.somemethod},\n      or #{somevar.somemethod(arg)}, in which case it will be interpreted a Seam expression,\n      otherwise it will be interpreted as a Jexl expression. A reference for Jexl can be found at\n      http://commons.apache.org/jexl/reference/syntax.html\n      The Jexl context for the expression contains the variables \"document\", \"principal\",\n      and \"SeamContext\".\n\n      - type: document type to check against current document in context. A rule\n      can hold several types: it applies if current document is one of them. The\n      fake 'Server' type is used to check the server context.\n\n      - schema: document schema to check against current document in context. A\n      rule can hold several schemas: it applies if current document has one of\n      them.\n\n      A filter is granting access to an action if, among its rules, no denying\n      rule is found and at least one granting rule is found. If no rule is set,\n      it is granted.\n\n      Custom filters can be defined on the extension point, provided they follow\n      the {@see org.nuxeo.ecm.platform.actions.ActionFilter} interface, using\n      the following syntax:\n\n      <code>\n    <object class=\"my.package.MyFilter\"/>\n</code>\n\n\n      Example of action filter using default filter implementation:\n\n      <code>\n    <filter id=\"theFilter\">\n        <rule grant=\"\">\n            <permission>Write</permission>\n            <facet>Folderish</facet>\n            <condition>condition</condition>\n            <type>Workspace</type>\n            <type>Section</type>\n        </rule>\n        <rule grant=\"false\">\n            <condition>condition 1</condition>\n            <condition>condition 2</condition>\n        </rule>\n    </filter>\n</code>\n","id":"org.nuxeo.ecm.platform.actions.ActionService--filters","version":"11.1-SNAPSHOT","label":"filters (org.nuxeo.ecm.platform.actions.ActionService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.actions/org.nuxeo.ecm.platform.actions.ActionService/ExtensionPoints/org.nuxeo.ecm.platform.actions.ActionService--filters","documentationHtml":"<p/>\nAn action filter is a set of rules that will apply - or not - given an\naction and a context.\n<p/>\nFilter properties :\n<p/>\n- id: will be used ot identify the filter from actions definitions.\n<p/>\n- rules: set of rules composing the filter\n<p/>\nThe default filter implementation uses filter rules with the following\nproperties:\n<p/>\n- grant: boolean indicating whether this is a granting rule or a denying\nrule.\n<p/>\n- permission: permission like \"Write\" that will be checked on the context\nfor the given user. A rule can hold several permissions: it applies if\nuser holds at least one of them.\n<p/>\n- facet: facet like \"Folderish\" that can be set on the document type\n({@see org.nuxeo.ecm.core.schema.types.Type}) to desribe the document type\ngenral behaviour. A rule can hold several facets: it applies if current\ndocument in context has at least one of them.\n<p/>\n- group: group like \"members\" to check against current user in context. A rule\ncan hold several groups: it applies if current user is in one of them.\n<p/>\n- condition: expression that can be evaluated against the current context.\nA rule can hold several conditions; it applies if at least one of the conditions\nis verified. The condition can be of the form #{somevar} or #{somevar.somemethod},\nor #{somevar.somemethod(arg)}, in which case it will be interpreted a Seam expression,\notherwise it will be interpreted as a Jexl expression. A reference for Jexl can be found at\nhttp://commons.apache.org/jexl/reference/syntax.html\nThe Jexl context for the expression contains the variables \"document\", \"principal\",\nand \"SeamContext\".\n<p/>\n- type: document type to check against current document in context. A rule\ncan hold several types: it applies if current document is one of them. The\nfake 'Server' type is used to check the server context.\n<p/>\n- schema: document schema to check against current document in context. A\nrule can hold several schemas: it applies if current document has one of\nthem.\n<p/>\nA filter is granting access to an action if, among its rules, no denying\nrule is found and at least one granting rule is found. If no rule is set,\nit is granted.\n<p/>\nCustom filters can be defined on the extension point, provided they follow\nthe {@see org.nuxeo.ecm.platform.actions.ActionFilter} interface, using\nthe following syntax:\n<p/>\n<pre><code>    &lt;object class=\"my.package.MyFilter\"/>\n</code></pre><p/>\nExample of action filter using default filter implementation:\n<p/>\n<pre><code>    &lt;filter id=\"theFilter\">\n        &lt;rule grant=\"\">\n            &lt;permission>Write&lt;/permission>\n            &lt;facet>Folderish&lt;/facet>\n            &lt;condition>condition&lt;/condition>\n            &lt;type>Workspace&lt;/type>\n            &lt;type>Section&lt;/type>\n        &lt;/rule>\n        &lt;rule grant=\"false\">\n            &lt;condition>condition 1&lt;/condition>\n            &lt;condition>condition 2&lt;/condition>\n        &lt;/rule>\n    &lt;/filter>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.platform.actions.ActionService"},{"@type":"NXExtensionPoint","name":"typeCompatibility","descriptors":["org.nuxeo.ecm.platform.actions.TypeCompatibility"],"documentation":"\n      Action compatibility type (since 5.6) defining the UI type action\n      from deprecated action category:\n\n      - category: category action\n\n      - type:\n      UI action type\n\n      Examples:\n\n      <code>\n    <typeCompatibility type=\"link_icon\">\n        <category>DOCUMENT_UPPER_ACTION</category>\n        <category>DOCUMENT_HEADER_ACTIONS_LIST</category>\n    </typeCompatibility>\n    <typeCompatibility type=\"link_icon_text\">\n        <category>DEFAULT_LIST</category>\n        <category>CLIPBOARD_LIST</category>\n    </typeCompatibility>\n    <typeCompatibility type=\"button\">\n        <category>CURRENT_SELECTION_COPY</category>\n        <category>CLIPBOARD_PASTE</category>\n        <category>CURRENT_SELECTION_ADDTOLIST</category>\n        <category>CURRENT_SELECTION_TRASH</category>\n        <category>CREATE_DOCUMENT_FORM</category>\n        <category>EDIT_DOCUMENT_FORM</category>\n    </typeCompatibility>\n    <typeCompatibility type=\"link\">\n        <category>USER_SERVICES</category>\n        <category>USER_MENU_ACTIONS</category>\n    </typeCompatibility>\n    <typeCompatibility type=\"bare_link\">\n        <category>DOCUMENT_HEADER_ACTIONS_LIST_HREF</category>\n    </typeCompatibility>\n</code>\n","id":"org.nuxeo.ecm.platform.actions.ActionService--typeCompatibility","version":"11.1-SNAPSHOT","label":"typeCompatibility (org.nuxeo.ecm.platform.actions.ActionService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.actions/org.nuxeo.ecm.platform.actions.ActionService/ExtensionPoints/org.nuxeo.ecm.platform.actions.ActionService--typeCompatibility","documentationHtml":"<p/>\nAction compatibility type (since 5.6) defining the UI type action\nfrom deprecated action category:\n<p/>\n- category: category action\n<p/>\n- type:\nUI action type\n<p/>\nExamples:\n<p/>\n<pre><code>    &lt;typeCompatibility type=\"link_icon\">\n        &lt;category>DOCUMENT_UPPER_ACTION&lt;/category>\n        &lt;category>DOCUMENT_HEADER_ACTIONS_LIST&lt;/category>\n    &lt;/typeCompatibility>\n    &lt;typeCompatibility type=\"link_icon_text\">\n        &lt;category>DEFAULT_LIST&lt;/category>\n        &lt;category>CLIPBOARD_LIST&lt;/category>\n    &lt;/typeCompatibility>\n    &lt;typeCompatibility type=\"button\">\n        &lt;category>CURRENT_SELECTION_COPY&lt;/category>\n        &lt;category>CLIPBOARD_PASTE&lt;/category>\n        &lt;category>CURRENT_SELECTION_ADDTOLIST&lt;/category>\n        &lt;category>CURRENT_SELECTION_TRASH&lt;/category>\n        &lt;category>CREATE_DOCUMENT_FORM&lt;/category>\n        &lt;category>EDIT_DOCUMENT_FORM&lt;/category>\n    &lt;/typeCompatibility>\n    &lt;typeCompatibility type=\"link\">\n        &lt;category>USER_SERVICES&lt;/category>\n        &lt;category>USER_MENU_ACTIONS&lt;/category>\n    &lt;/typeCompatibility>\n    &lt;typeCompatibility type=\"bare_link\">\n        &lt;category>DOCUMENT_HEADER_ACTIONS_LIST_HREF&lt;/category>\n    &lt;/typeCompatibility>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.platform.actions.ActionService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.platform.actions.ejb.ActionManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.actions/org.nuxeo.ecm.platform.actions.ActionService/Services/org.nuxeo.ecm.platform.actions.ejb.ActionManager","componentId":"org.nuxeo.ecm.platform.actions.ActionService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.platform.actions.ActionService","documentation":"\n    The action service provides extension points for pluggable actions and\n    filters and manage UI type action compatibility (since 5.6)\n\n    Actions are commands that can be accessed and triggered from the site pages.\n    Their visibility is adapted to the current user and site possibilities using\n    filters.\n\n    @author Anahide Tchertchian (at@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.actions/org.nuxeo.ecm.platform.actions.ActionService","documentationHtml":"<p/>\nThe action service provides extension points for pluggable actions and\nfilters and manage UI type action compatibility (since 5.6)\n<p/>\nActions are commands that can be accessed and triggered from the site pages.\nTheir visibility is adapted to the current user and site possibilities using\nfilters.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-actions-core/bin/main/OSGI-INF/actions-framework.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.actions.ActionService\">\n  <documentation>\n    The action service provides extension points for pluggable actions and\n    filters and manage UI type action compatibility (since 5.6)\n\n    Actions are commands that can be accessed and triggered from the site pages.\n    Their visibility is adapted to the current user and site possibilities using\n    filters.\n\n    @author Anahide Tchertchian (at@nuxeo.com)\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.platform.actions.ActionService\" />\n\n  <service>\n          <provide interface=\"org.nuxeo.ecm.platform.actions.ejb.ActionManager\" />\n  </service>\n\n  <extension-point name=\"filters\">\n    <documentation>\n      An action filter is a set of rules that will apply - or not - given an\n      action and a context.\n\n      Filter properties :\n\n      - id: will be used ot identify the filter from actions definitions.\n\n      - rules: set of rules composing the filter\n\n\n      The default filter implementation uses filter rules with the following\n      properties:\n\n      - grant: boolean indicating whether this is a granting rule or a denying\n      rule.\n\n      - permission: permission like \"Write\" that will be checked on the context\n      for the given user. A rule can hold several permissions: it applies if\n      user holds at least one of them.\n\n      - facet: facet like \"Folderish\" that can be set on the document type\n      ({@see org.nuxeo.ecm.core.schema.types.Type}) to desribe the document type\n      genral behaviour. A rule can hold several facets: it applies if current\n      document in context has at least one of them.\n\n      - group: group like \"members\" to check against current user in context. A rule\n       can hold several groups: it applies if current user is in one of them.\n\n      - condition: expression that can be evaluated against the current context.\n      A rule can hold several conditions; it applies if at least one of the conditions\n      is verified. The condition can be of the form #{somevar} or #{somevar.somemethod},\n      or #{somevar.somemethod(arg)}, in which case it will be interpreted a Seam expression,\n      otherwise it will be interpreted as a Jexl expression. A reference for Jexl can be found at\n      http://commons.apache.org/jexl/reference/syntax.html\n      The Jexl context for the expression contains the variables \"document\", \"principal\",\n      and \"SeamContext\".\n\n      - type: document type to check against current document in context. A rule\n      can hold several types: it applies if current document is one of them. The\n      fake 'Server' type is used to check the server context.\n\n      - schema: document schema to check against current document in context. A\n      rule can hold several schemas: it applies if current document has one of\n      them.\n\n      A filter is granting access to an action if, among its rules, no denying\n      rule is found and at least one granting rule is found. If no rule is set,\n      it is granted.\n\n      Custom filters can be defined on the extension point, provided they follow\n      the {@see org.nuxeo.ecm.platform.actions.ActionFilter} interface, using\n      the following syntax:\n\n      <code>\n        <object class=\"my.package.MyFilter\" />\n      </code>\n\n      Example of action filter using default filter implementation:\n\n      <code>\n        <filter id=\"theFilter\">\n          <rule grant=\"\">\n            <permission>Write</permission>\n            <facet>Folderish</facet>\n            <condition>condition</condition>\n            <type>Workspace</type>\n            <type>Section</type>\n          </rule>\n          <rule grant=\"false\">\n            <condition>condition 1</condition>\n            <condition>condition 2</condition>\n          </rule>\n        </filter>\n      </code>\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.platform.actions.DefaultActionFilter\" />\n    <object class=\"org.nuxeo.ecm.platform.actions.FilterFactory\" />\n  </extension-point>\n\n  <extension-point name=\"actions\">\n    <documentation>\n      An action is defined by the following properties:\n\n      - id: string identifying the action\n\n      - label: the action name\n\n      - help: the action help message\n\n      - link: string representing the command the action will trigger\n\n      - category: a string useful to group actions that will be rendered in the\n      same area of a page. An action can define several categories.\n\n      - filter-ids: id of a filter that will be used to control the action\n      visibility. An action can have several filters: it is visible if all its\n      filters grant the access.\n\n      - filter: a filter definition can be done directly within the action\n      definition. It is a filter like others and can be referred by other\n      actions.\n\n      - icon: the optional icon path for this action\n\n      - confirm: an optional javascript confirmation string that can be\n      triggered when executing the command.\n\n      - enabled: boolean indicating whether the action is currently active. This\n      can be used to hide existing actions when customizing the site behaviour.\n\n      - order: an optional integer used to sort actions within the same\n      category. This attribute may be depracated in the future.\n\n      - immediate: an optional boolean (available since 5.4.2) that makes it\n      possible to call command actions without validating the enclosing form.\n\n      - type: the UI type action (available since 5.6)\n\n      UI Type properties, defined within a \"properties\" tag:\n      - property: the property value\n      - name: the property name\n\n      Properties also accept list or map-like values.\n\n      Before 5.6, it is important to understand that an action does *not*\n      define the way it will be rendered: this is left to pages, templates\n      and other components displaying it. Most of the time, actions will be\n      rendered as command link or command buttons.\n\n      Since 5.6, the template /incl/action/generic_action_template.xhtml handles\n      rendering of an action depending on its type.\n\n      Examples:\n\n      <code>\n        <action id=\"TAB_RIGHTS\" link=\"/incl/tabs/document_rights.xhtml\"\n          enabled=\"true\" label=\"action.view.rights\" icon=\"/icons/file.gif\"\n          type=\"fancybox\">\n          <category>VIEW_ACTION_LIST</category>\n          <filter-id>rights</filter-id>\n          <properties>\n            <property name=\"url\">/incl/fancybox.xhtml</property>\n            <propertyList name=\"myListProp\">\n              <value>item1</value>\n              <value>item2</value>\n            </propertyList>\n            <propertyMap name=\"myMapProp\">\n              <property name=\"mySubProp\">mySubPropValue</property>\n            </propertyMap>\n          </properties>\n        </action>\n\n        <action id=\"newFile\" link=\"create_file\" enabled=\"true\"\n          label=\"action.new.file\" icon=\"/icons/action_add_file.gif\" type=\"button\">\n          <category>SUBVIEW_UPPER_LIST</category>\n          <filter-id>create</filter-id>\n        </action>\n\n        <action id=\"newSection\"\n          link=\"#{documentActions.createDocument('Section')}\" enabled=\"true\"\n          label=\"command.create.section\" icon=\"/icons/action_add.gif\" type=\"icon\">\n          <category>SUBVIEW_UPPER_LIST</category>\n          <filter id=\"newSection\">\n            <rule grant=\"true\">\n              <permission>AddChildren</permission>\n              <type>SectionRoot</type>\n            </rule>\n          </filter>\n        </action>\n      </code>\n\n      Actions extension point provides mergeing features: you can change an\n      existing action definition in your custom extension point provided you use\n      the same identifier.\n\n    </documentation>\n    <object class=\"org.nuxeo.ecm.platform.actions.Action\" />\n  </extension-point>\n\n  <extension-point name=\"typeCompatibility\">\n    <documentation>\n      Action compatibility type (since 5.6) defining the UI type action\n      from deprecated action category:\n\n      - category: category action\n\n      - type:\n      UI action type\n\n      Examples:\n\n      <code>\n        <typeCompatibility type=\"link_icon\">\n          <category>DOCUMENT_UPPER_ACTION</category>\n          <category>DOCUMENT_HEADER_ACTIONS_LIST</category>\n        </typeCompatibility>\n        <typeCompatibility type=\"link_icon_text\">\n          <category>DEFAULT_LIST</category>\n          <category>CLIPBOARD_LIST</category>\n        </typeCompatibility>\n        <typeCompatibility type=\"button\">\n          <category>CURRENT_SELECTION_COPY</category>\n          <category>CLIPBOARD_PASTE</category>\n          <category>CURRENT_SELECTION_ADDTOLIST</category>\n          <category>CURRENT_SELECTION_TRASH</category>\n          <category>CREATE_DOCUMENT_FORM</category>\n          <category>EDIT_DOCUMENT_FORM</category>\n        </typeCompatibility>\n        <typeCompatibility type=\"link\">\n          <category>USER_SERVICES</category>\n          <category>USER_MENU_ACTIONS</category>\n        </typeCompatibility>\n        <typeCompatibility type=\"bare_link\">\n          <category>DOCUMENT_HEADER_ACTIONS_LIST_HREF</category>\n        </typeCompatibility>\n      </code>\n\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.platform.actions.TypeCompatibility\" />\n  </extension-point>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.actions.ActionService.properties","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.actions.ActionService.properties--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":null,"xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <property name=\"nuxeo.actions.debug.log_min_duration_ms\">-1</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.actions/org.nuxeo.ecm.platform.actions.ActionService.properties/Contributions/org.nuxeo.ecm.platform.actions.ActionService.properties--configuration","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;nuxeo.actions.debug.log_min_duration_ms&quot;&gt;-1&lt;/property&gt;","id":"nuxeo.actions.debug.log_min_duration_ms","label":"property nuxeo.actions.debug.log_min_duration_ms","rawXml":"<property name=\"nuxeo.actions.debug.log_min_duration_ms\">-1</property>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.actions/org.nuxeo.ecm.platform.actions.ActionService.properties","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-actions-core/bin/main/OSGI-INF/actions-properties.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.actions.ActionService.properties\">\n\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\"\n    point=\"configuration\">\n    <property name=\"nuxeo.actions.debug.log_min_duration_ms\">-1</property>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.filters","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.filters--filters","extensionPoint":"org.nuxeo.ecm.platform.actions.ActionService--filters","documentation":null,"xml":"<extension point=\"filters\" target=\"org.nuxeo.ecm.platform.actions.ActionService\">\n\n    <filter id=\"not_folder\">\n      <rule grant=\"false\">\n        <facet>Folderish</facet>\n      </rule>\n    </filter>\n\n    <filter id=\"folder\">\n      <rule grant=\"true\">\n        <facet>Folderish</facet>\n      </rule>\n    </filter>\n\n    <filter id=\"not_collection\">\n      <rule grant=\"false\">\n        <facet>Collection</facet>\n      </rule>\n    </filter>\n\n    <filter id=\"collection\">\n      <rule grant=\"true\">\n        <facet>Collection</facet>\n      </rule>\n    </filter>\n\n    <filter id=\"not_container\">\n      <rule grant=\"false\">\n        <facet>Collection</facet>\n        <facet>Folderish</facet>\n      </rule>\n    </filter>\n\n    <filter id=\"container\">\n      <rule grant=\"true\">\n        <facet>Collection</facet>\n        <facet>Folderish</facet>\n      </rule>\n    </filter>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.actions.ActionService","rawName":"service:org.nuxeo.ecm.platform.actions.ActionService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.actions/org.nuxeo.ecm.platform.filters/Contributions/org.nuxeo.ecm.platform.filters--filters","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;filter id=&quot;not_folder&quot;&gt;\n      &lt;rule grant=&quot;false&quot;&gt;\n        &lt;facet&gt;Folderish&lt;/facet&gt;\n      &lt;/rule&gt;\n    &lt;/filter&gt;","id":"not_folder","label":"filter not_folder","rawXml":"<filter id=\"not_folder\">\n      <rule grant=\"false\">\n        <facet>Folderish</facet>\n      </rule>\n    </filter>"},{"documentation":"","xml":"&lt;filter id=&quot;folder&quot;&gt;\n      &lt;rule grant=&quot;true&quot;&gt;\n        &lt;facet&gt;Folderish&lt;/facet&gt;\n      &lt;/rule&gt;\n    &lt;/filter&gt;","id":"folder","label":"filter folder","rawXml":"<filter id=\"folder\">\n      <rule grant=\"true\">\n        <facet>Folderish</facet>\n      </rule>\n    </filter>"},{"documentation":"","xml":"&lt;filter id=&quot;not_collection&quot;&gt;\n      &lt;rule grant=&quot;false&quot;&gt;\n        &lt;facet&gt;Collection&lt;/facet&gt;\n      &lt;/rule&gt;\n    &lt;/filter&gt;","id":"not_collection","label":"filter not_collection","rawXml":"<filter id=\"not_collection\">\n      <rule grant=\"false\">\n        <facet>Collection</facet>\n      </rule>\n    </filter>"},{"documentation":"","xml":"&lt;filter id=&quot;collection&quot;&gt;\n      &lt;rule grant=&quot;true&quot;&gt;\n        &lt;facet&gt;Collection&lt;/facet&gt;\n      &lt;/rule&gt;\n    &lt;/filter&gt;","id":"collection","label":"filter collection","rawXml":"<filter id=\"collection\">\n      <rule grant=\"true\">\n        <facet>Collection</facet>\n      </rule>\n    </filter>"},{"documentation":"","xml":"&lt;filter id=&quot;not_container&quot;&gt;\n      &lt;rule grant=&quot;false&quot;&gt;\n        &lt;facet&gt;Collection&lt;/facet&gt;\n        &lt;facet&gt;Folderish&lt;/facet&gt;\n      &lt;/rule&gt;\n    &lt;/filter&gt;","id":"not_container","label":"filter not_container","rawXml":"<filter id=\"not_container\">\n      <rule grant=\"false\">\n        <facet>Collection</facet>\n        <facet>Folderish</facet>\n      </rule>\n    </filter>"},{"documentation":"","xml":"&lt;filter id=&quot;container&quot;&gt;\n      &lt;rule grant=&quot;true&quot;&gt;\n        &lt;facet&gt;Collection&lt;/facet&gt;\n        &lt;facet&gt;Folderish&lt;/facet&gt;\n      &lt;/rule&gt;\n    &lt;/filter&gt;","id":"container","label":"filter container","rawXml":"<filter id=\"container\">\n      <rule grant=\"true\">\n        <facet>Collection</facet>\n        <facet>Folderish</facet>\n      </rule>\n    </filter>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.actions/org.nuxeo.ecm.platform.filters","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-actions-core/bin/main/OSGI-INF/filters-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.filters\">\n\n  <extension target=\"org.nuxeo.ecm.platform.actions.ActionService\"\n    point=\"filters\">\n\n    <filter id=\"not_folder\">\n      <rule grant=\"false\">\n        <facet>Folderish</facet>\n      </rule>\n    </filter>\n\n    <filter id=\"folder\">\n      <rule grant=\"true\">\n        <facet>Folderish</facet>\n      </rule>\n    </filter>\n\n    <filter id=\"not_collection\">\n      <rule grant=\"false\">\n        <facet>Collection</facet>\n      </rule>\n    </filter>\n\n    <filter id=\"collection\">\n      <rule grant=\"true\">\n        <facet>Collection</facet>\n      </rule>\n    </filter>\n\n    <filter id=\"not_container\">\n      <rule grant=\"false\">\n        <facet>Collection</facet>\n        <facet>Folderish</facet>\n      </rule>\n    </filter>\n\n    <filter id=\"container\">\n      <rule grant=\"true\">\n        <facet>Collection</facet>\n        <facet>Folderish</facet>\n      </rule>\n    </filter>\n\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.bulk.test","fileName":"test","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 1\nBundle-Name: Nuxeo Core Bulk - Test Jar\nBundle-SymbolicName: org.nuxeo.ecm.core.bulk.test;singleton:=true\nBundle-Version: 1.0.0\nNuxeo-Component: OSGI-INF/bulk-stream-configuration-tests.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-bulk","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-bulk/bin/test","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.bulk.tests","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.bulk.tests--configuration","extensionPoint":"org.nuxeo.runtime.kv.KeyValueService--configuration","documentation":null,"xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.kv.KeyValueService\">\n    <store class=\"org.nuxeo.runtime.kv.MemKeyValueStore\" name=\"bulk\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.kv.KeyValueService","rawName":"service:org.nuxeo.runtime.kv.KeyValueService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk.test/org.nuxeo.ecm.core.bulk.tests/Contributions/org.nuxeo.ecm.core.bulk.tests--configuration","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;store class=&quot;org.nuxeo.runtime.kv.MemKeyValueStore&quot; name=&quot;bulk&quot;/&gt;","id":"bulk","label":"store bulk","rawXml":"<store class=\"org.nuxeo.runtime.kv.MemKeyValueStore\" name=\"bulk\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.bulk.tests--logConfig","extensionPoint":"org.nuxeo.runtime.stream.service--logConfig","documentation":null,"xml":"<extension point=\"logConfig\" target=\"org.nuxeo.runtime.stream.service\">\n    <logConfig name=\"bulk\" type=\"${nuxeo.test.stream}\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.stream.service","rawName":"service:org.nuxeo.runtime.stream.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk.test/org.nuxeo.ecm.core.bulk.tests/Contributions/org.nuxeo.ecm.core.bulk.tests--logConfig","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;logConfig name=&quot;bulk&quot; type=&quot;${nuxeo.test.stream}&quot;/&gt;","id":"bulk","label":"logConfig bulk","rawXml":"<logConfig name=\"bulk\" type=\"${nuxeo.test.stream}\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk.test/org.nuxeo.ecm.core.bulk.tests","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-bulk/bin/test/OSGI-INF/bulk-stream-configuration-tests.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.bulk.tests\" version=\"1.0.0\">\n\n  <extension target=\"org.nuxeo.runtime.kv.KeyValueService\" point=\"configuration\">\n    <store name=\"bulk\" class=\"org.nuxeo.runtime.kv.MemKeyValueStore\" />\n  </extension>\n\n  <extension target=\"org.nuxeo.runtime.stream.service\" point=\"logConfig\">\n    <logConfig name=\"bulk\" type=\"${nuxeo.test.stream}\" />\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.storage.sql.test","fileName":"classes","manifest":"Export-Package: org.nuxeo.ecm.core.storage.sql\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Name: Nuxeo Core SQL Storage Tests\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-Vendor: Nuxeo\nBundle-Version: 0.0.0.SNAPSHOT\nBundle-ManifestVersion: 2\nBundle-License: http://www.gnu.org/copyleft/lesser.txt\nBundle-Description: Nuxeo Core: SQL Storage Tests.\nBundle-DocURL: http://www.nuxeo.com/en\nBundle-SymbolicName: org.nuxeo.ecm.core.storage.sql.test\nImport-Package: javax.naming,\n javax.resource.cci;version=\"1.0.0\",\n javax.resource.spi;version=\"1.5.0\",\n javax.transaction;version=\"1.1\",\n junit.framework,\n org.apache.commons.logging,\n org.jmock,\n org.junit.runner,\n org.nuxeo.common.collections,\n org.nuxeo.common.utils,\n org.nuxeo.ecm.core,\n org.nuxeo.ecm.core.api,\n org.nuxeo.ecm.core.api.blobholder,\n org.nuxeo.ecm.core.api.externalblob,\n org.nuxeo.ecm.core.api.facet,\n org.nuxeo.ecm.core.api.impl,\n org.nuxeo.ecm.core.api.impl.blob,\n org.nuxeo.ecm.core.api.model,\n org.nuxeo.ecm.core.api.model.impl.primitives,\n org.nuxeo.ecm.core.api.security,\n org.nuxeo.ecm.core.api.security.impl,\n org.nuxeo.ecm.core.event,\n org.nuxeo.ecm.core.query,\n org.nuxeo.ecm.core.query.sql,\n org.nuxeo.ecm.core.schema,\n org.nuxeo.ecm.core.schema.types,\n org.nuxeo.ecm.core.security,\n org.nuxeo.ecm.core.storage,\n org.nuxeo.ecm.core.storage.sql,\n org.nuxeo.ecm.core.storage.sql.coremodel,\n org.nuxeo.ecm.core.storage.sql.jdbc,\n org.nuxeo.osgi,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.jtajca,\n org.nuxeo.runtime.services.streaming,\n org.nuxeo.runtime.test,\n org.nuxeo.runtime.transaction,\n org.osgi.framework;version=\"1.4\"\nRequire-Bundle: org.nuxeo.ecm.core\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-storage-sql-test","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql-test/target/classes","components":[]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.bulk","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 1\nBundle-Name: Nuxeo Core Bulk\nBundle-SymbolicName: org.nuxeo.ecm.core.bulk;singleton:=true\nBundle-Version: 1.0.0\nNuxeo-Component: OSGI-INF/scroll-service.xml,\n OSGI-INF/scroll-contrib.xml,\n OSGI-INF/bulk-component.xml,\n OSGI-INF/bulk-config.xml,\n OSGI-INF/bulk-io-contrib.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-bulk","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-bulk/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.bulk","extensionPoints":[{"@type":"NXExtensionPoint","name":"actions","descriptors":["org.nuxeo.ecm.core.bulk.BulkActionDescriptor"],"documentation":"\n      Allows to define the bulk actions.\n\n      A bulk action is a stream processing composed of one or more computations.\n\n      A bulk action can be made available through http APIs, default is false.\n\n      The bucket size determines the number of document ids per record at the scroller level, default is 100.\n\n      The batch size determines the number of document ids handled per transactions at the computation level, default is 25.\n\n      <code>\n    <extension point=\"actions\" target=\"org.nuxeo.ecm.core.bulk\">\n        <action batchSize=\"25\" bucketSize=\"100\" name=\"internalAction\"/>\n        <action batchSize=\"25\" bucketSize=\"100\" httpEnabled=\"true\" name=\"publicAction\"/>\n    </extension>\n</code>\n","id":"org.nuxeo.ecm.core.bulk--actions","version":"11.1-SNAPSHOT","label":"actions (org.nuxeo.ecm.core.bulk)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.bulk/ExtensionPoints/org.nuxeo.ecm.core.bulk--actions","documentationHtml":"<p/>\nAllows to define the bulk actions.\n<p/>\nA bulk action is a stream processing composed of one or more computations.\n<p/>\nA bulk action can be made available through http APIs, default is false.\n<p/>\nThe bucket size determines the number of document ids per record at the scroller level, default is 100.\n<p/>\nThe batch size determines the number of document ids handled per transactions at the computation level, default is 25.\n<p/>\n<pre><code>    &lt;extension point=\"actions\" target=\"org.nuxeo.ecm.core.bulk\">\n        &lt;action batchSize=\"25\" bucketSize=\"100\" name=\"internalAction\"/>\n        &lt;action batchSize=\"25\" bucketSize=\"100\" httpEnabled=\"true\" name=\"publicAction\"/>\n    &lt;/extension>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.core.bulk"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.bulk.BulkService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.bulk/Services/org.nuxeo.ecm.core.bulk.BulkService","componentId":"org.nuxeo.ecm.core.bulk"},{"@type":"NXService","id":"org.nuxeo.ecm.core.bulk.BulkAdminService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.bulk/Services/org.nuxeo.ecm.core.bulk.BulkAdminService","componentId":"org.nuxeo.ecm.core.bulk"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.bulk.BulkComponent","documentation":"\n    The Bulk Service allows to execute a Bulk Command. This consists of two steps:\n    <ul>\n    <li>Creation of a document set by scrolling the database</li>\n    <li>Execution of a bulk on document set</li>\n</ul>\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.bulk","documentationHtml":"<p/>\nThe Bulk Service allows to execute a Bulk Command. This consists of two steps:\n<ul>\n<li>Creation of a document set by scrolling the database</li>\n<li>Execution of a bulk on document set</li>\n</ul>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-bulk/bin/main/OSGI-INF/bulk-component.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.bulk\" version=\"1.0.0\">\n\n  <documentation>\n    The Bulk Service allows to execute a Bulk Command. This consists of two steps:\n    <ul>\n      <li>Creation of a document set by scrolling the database</li>\n      <li>Execution of a bulk on document set</li>\n    </ul>\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.bulk.BulkComponent\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.bulk.BulkService\" />\n    <provide interface=\"org.nuxeo.ecm.core.bulk.BulkAdminService\" />\n  </service>\n\n  <extension-point name=\"actions\">\n    <documentation>\n      Allows to define the bulk actions.\n\n      A bulk action is a stream processing composed of one or more computations.\n\n      A bulk action can be made available through http APIs, default is false.\n\n      The bucket size determines the number of document ids per record at the scroller level, default is 100.\n\n      The batch size determines the number of document ids handled per transactions at the computation level, default is 25.\n\n      <code>\n        <extension target=\"org.nuxeo.ecm.core.bulk\" point=\"actions\">\n          <action name=\"internalAction\" bucketSize=\"100\" batchSize=\"25\" />\n          <action name=\"publicAction\" bucketSize=\"100\" batchSize=\"25\" httpEnabled=\"true\" />\n        </extension>\n      </code>\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.bulk.BulkActionDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.bulk.io","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.bulk.io--marshallers","extensionPoint":"org.nuxeo.ecm.core.io.MarshallerRegistry--marshallers","documentation":null,"xml":"<extension point=\"marshallers\" target=\"org.nuxeo.ecm.core.io.MarshallerRegistry\">\n    <register class=\"org.nuxeo.ecm.core.bulk.io.BulkStatusJsonReader\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.bulk.io.BulkStatusJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.bulk.io.BulkCommandJsonReader\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.bulk.io.BulkCommandJsonWriter\" enable=\"true\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.io.MarshallerRegistry","rawName":"service:org.nuxeo.ecm.core.io.MarshallerRegistry"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.bulk.io/Contributions/org.nuxeo.ecm.core.bulk.io--marshallers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.bulk.io.BulkStatusJsonReader&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.bulk.io.BulkStatusJsonReader\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.bulk.io.BulkStatusJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.bulk.io.BulkStatusJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.bulk.io.BulkCommandJsonReader&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.bulk.io.BulkCommandJsonReader\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.bulk.io.BulkCommandJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.bulk.io.BulkCommandJsonWriter\" enable=\"true\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.bulk.io","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-bulk/bin/main/OSGI-INF/bulk-io-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.bulk.io\" version=\"1.0.0\">\n\n  <extension target=\"org.nuxeo.ecm.core.io.MarshallerRegistry\" point=\"marshallers\">\n    <register class=\"org.nuxeo.ecm.core.bulk.io.BulkStatusJsonReader\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.bulk.io.BulkStatusJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.bulk.io.BulkCommandJsonReader\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.bulk.io.BulkCommandJsonWriter\" enable=\"true\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.scroll.contrib.default","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.scroll.contrib.default--scroll","extensionPoint":"org.nuxeo.ecm.core.scroll.service--scroll","documentation":null,"xml":"<extension point=\"scroll\" target=\"org.nuxeo.ecm.core.scroll.service\">\n    <scroll class=\"org.nuxeo.ecm.core.scroll.RepositoryScroll\" default=\"true\" name=\"repository\" type=\"document\"/>\n    <scroll class=\"org.nuxeo.ecm.core.scroll.StaticScroll\" name=\"list\" type=\"static\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.scroll.service","rawName":"service:org.nuxeo.ecm.core.scroll.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.scroll.contrib.default/Contributions/org.nuxeo.ecm.core.scroll.contrib.default--scroll","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;scroll class=&quot;org.nuxeo.ecm.core.scroll.RepositoryScroll&quot; default=&quot;true&quot; name=&quot;repository&quot; type=&quot;document&quot;/&gt;","id":"repository","label":"scroll repository","rawXml":"<scroll class=\"org.nuxeo.ecm.core.scroll.RepositoryScroll\" default=\"true\" name=\"repository\" type=\"document\"/>"},{"documentation":"","xml":"&lt;scroll class=&quot;org.nuxeo.ecm.core.scroll.StaticScroll&quot; name=&quot;list&quot; type=&quot;static&quot;/&gt;","id":"list","label":"scroll list","rawXml":"<scroll class=\"org.nuxeo.ecm.core.scroll.StaticScroll\" name=\"list\" type=\"static\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.scroll.contrib.default","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-bulk/bin/main/OSGI-INF/scroll-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.scroll.contrib.default\" version=\"1.0\">\n  <require>org.nuxeo.ecm.core.scroll.service</require>\n  <extension point=\"scroll\" target=\"org.nuxeo.ecm.core.scroll.service\">\n    <scroll type=\"document\" name=\"repository\" default=\"true\" class=\"org.nuxeo.ecm.core.scroll.RepositoryScroll\" />\n    <scroll type=\"static\" name=\"list\" class=\"org.nuxeo.ecm.core.scroll.StaticScroll\" />\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.bulk.config","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.bulk.config--logConfig","extensionPoint":"org.nuxeo.runtime.stream.service--logConfig","documentation":null,"xml":"<extension point=\"logConfig\" target=\"org.nuxeo.runtime.stream.service\">\n    <logConfig name=\"bulk\">\n      <!-- command stream size sets the maximum concurrency for the scroller computation in the Nuxeo cluster -->\n      <log name=\"command\" size=\"2\"/>\n      <!-- status stream size sets the maximum concurrency for the status computation in the Nuxeo cluster -->\n      <log name=\"status\" size=\"1\"/>\n      <!-- done stream size sets the maximum concurrency for the triggers computations -->\n      <log name=\"done\" size=\"1\"/>\n    </logConfig>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.stream.service","rawName":"service:org.nuxeo.runtime.stream.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.bulk.config/Contributions/org.nuxeo.ecm.core.bulk.config--logConfig","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;logConfig name=&quot;bulk&quot;&gt;\n      &lt;!-- command stream size sets the maximum concurrency for the scroller computation in the Nuxeo cluster --&gt;\n      &lt;log name=&quot;command&quot; size=&quot;2&quot;/&gt;\n      &lt;!-- status stream size sets the maximum concurrency for the status computation in the Nuxeo cluster --&gt;\n      &lt;log name=&quot;status&quot; size=&quot;1&quot;/&gt;\n      &lt;!-- done stream size sets the maximum concurrency for the triggers computations --&gt;\n      &lt;log name=&quot;done&quot; size=&quot;1&quot;/&gt;\n    &lt;/logConfig&gt;","id":"bulk","label":"logConfig bulk","rawXml":"<logConfig name=\"bulk\">\n      <!-- command stream size sets the maximum concurrency for the scroller computation in the Nuxeo cluster -->\n      <log name=\"command\" size=\"2\"/>\n      <!-- status stream size sets the maximum concurrency for the status computation in the Nuxeo cluster -->\n      <log name=\"status\" size=\"1\"/>\n      <!-- done stream size sets the maximum concurrency for the triggers computations -->\n      <log name=\"done\" size=\"1\"/>\n    </logConfig>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.bulk.config--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":null,"xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <property name=\"nuxeo.core.bulk.scroller.scroll.size\">200</property>\n    <property name=\"nuxeo.core.bulk.scroller.scroll.keepAliveSeconds\">60</property>\n    <property name=\"nuxeo.core.bulk.scroller.produceImmediate\">false</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.bulk.config/Contributions/org.nuxeo.ecm.core.bulk.config--configuration","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;nuxeo.core.bulk.scroller.scroll.size&quot;&gt;200&lt;/property&gt;","id":"nuxeo.core.bulk.scroller.scroll.size","label":"property nuxeo.core.bulk.scroller.scroll.size","rawXml":"<property name=\"nuxeo.core.bulk.scroller.scroll.size\">200</property>"},{"documentation":"","xml":"&lt;property name=&quot;nuxeo.core.bulk.scroller.scroll.keepAliveSeconds&quot;&gt;60&lt;/property&gt;","id":"nuxeo.core.bulk.scroller.scroll.keepAliveSeconds","label":"property nuxeo.core.bulk.scroller.scroll.keepAliveSeconds","rawXml":"<property name=\"nuxeo.core.bulk.scroller.scroll.keepAliveSeconds\">60</property>"},{"documentation":"","xml":"&lt;property name=&quot;nuxeo.core.bulk.scroller.produceImmediate&quot;&gt;false&lt;/property&gt;","id":"nuxeo.core.bulk.scroller.produceImmediate","label":"property nuxeo.core.bulk.scroller.produceImmediate","rawXml":"<property name=\"nuxeo.core.bulk.scroller.produceImmediate\">false</property>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.bulk.config--streamProcessor","extensionPoint":"org.nuxeo.runtime.stream.service--streamProcessor","documentation":null,"xml":"<extension point=\"streamProcessor\" target=\"org.nuxeo.runtime.stream.service\">\n    <streamProcessor class=\"org.nuxeo.ecm.core.bulk.BulkServiceProcessor\" defaultCodec=\"avro\" defaultConcurrency=\"1\" defaultExternal=\"true\" defaultPartitions=\"1\" logConfig=\"bulk\" name=\"bulkServiceProcessor\" start=\"false\">\n      <stream external=\"false\" name=\"command\"/>\n      <stream external=\"false\" name=\"status\"/>\n      <stream external=\"false\" name=\"done\"/>\n      <policy continueOnFailure=\"false\" delay=\"1s\" maxDelay=\"60s\" maxRetries=\"0\" name=\"scroller\"/>\n      <policy continueOnFailure=\"false\" delay=\"1s\" maxDelay=\"60s\" maxRetries=\"20\" name=\"status\"/>\n      <computation concurrency=\"2\" name=\"scroller\"/>\n      <computation concurrency=\"1\" name=\"status\"/>\n    </streamProcessor>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.stream.service","rawName":"service:org.nuxeo.runtime.stream.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.bulk.config/Contributions/org.nuxeo.ecm.core.bulk.config--streamProcessor","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;streamProcessor class=&quot;org.nuxeo.ecm.core.bulk.BulkServiceProcessor&quot; defaultCodec=&quot;avro&quot; defaultConcurrency=&quot;1&quot; defaultExternal=&quot;true&quot; defaultPartitions=&quot;1&quot; logConfig=&quot;bulk&quot; name=&quot;bulkServiceProcessor&quot; start=&quot;false&quot;&gt;\n      &lt;stream external=&quot;false&quot; name=&quot;command&quot;/&gt;\n      &lt;stream external=&quot;false&quot; name=&quot;status&quot;/&gt;\n      &lt;stream external=&quot;false&quot; name=&quot;done&quot;/&gt;\n      &lt;policy continueOnFailure=&quot;false&quot; delay=&quot;1s&quot; maxDelay=&quot;60s&quot; maxRetries=&quot;0&quot; name=&quot;scroller&quot;/&gt;\n      &lt;policy continueOnFailure=&quot;false&quot; delay=&quot;1s&quot; maxDelay=&quot;60s&quot; maxRetries=&quot;20&quot; name=&quot;status&quot;/&gt;\n      &lt;computation concurrency=&quot;2&quot; name=&quot;scroller&quot;/&gt;\n      &lt;computation concurrency=&quot;1&quot; name=&quot;status&quot;/&gt;\n    &lt;/streamProcessor&gt;","id":"bulkServiceProcessor","label":"streamProcessor bulkServiceProcessor","rawXml":"<streamProcessor class=\"org.nuxeo.ecm.core.bulk.BulkServiceProcessor\" defaultCodec=\"avro\" defaultConcurrency=\"1\" defaultExternal=\"true\" defaultPartitions=\"1\" logConfig=\"bulk\" name=\"bulkServiceProcessor\" start=\"false\">\n      <stream external=\"false\" name=\"command\"/>\n      <stream external=\"false\" name=\"status\"/>\n      <stream external=\"false\" name=\"done\"/>\n      <policy continueOnFailure=\"false\" delay=\"1s\" maxDelay=\"60s\" maxRetries=\"0\" name=\"scroller\"/>\n      <policy continueOnFailure=\"false\" delay=\"1s\" maxDelay=\"60s\" maxRetries=\"20\" name=\"status\"/>\n      <computation concurrency=\"2\" name=\"scroller\"/>\n      <computation concurrency=\"1\" name=\"status\"/>\n    </streamProcessor>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.bulk.config--actions","extensionPoint":"org.nuxeo.ecm.core.bulk--actions","documentation":null,"xml":"<extension point=\"actions\" target=\"org.nuxeo.ecm.core.bulk\">\n    <!-- Internal -->\n    <action batchSize=\"25\" bucketSize=\"100\" name=\"trash\" sequentialCommands=\"true\"/>\n    <action batchSize=\"25\" bucketSize=\"100\" name=\"removeProxy\"/>\n    <action batchSize=\"25\" bucketSize=\"100\" name=\"setSystemProperties\"/>\n    <!-- Exposed through REST API -->\n    <action batchSize=\"25\" bucketSize=\"100\" httpEnabled=\"true\" name=\"setProperties\" validationClass=\"org.nuxeo.ecm.core.bulk.validation.SetPropertiesValidation\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.bulk","rawName":"service:org.nuxeo.ecm.core.bulk"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.bulk.config/Contributions/org.nuxeo.ecm.core.bulk.config--actions","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;action batchSize=&quot;25&quot; bucketSize=&quot;100&quot; name=&quot;trash&quot; sequentialCommands=&quot;true&quot;/&gt;","id":"trash","label":"action trash","rawXml":"<action batchSize=\"25\" bucketSize=\"100\" name=\"trash\" sequentialCommands=\"true\"/>"},{"documentation":"","xml":"&lt;action batchSize=&quot;25&quot; bucketSize=&quot;100&quot; name=&quot;removeProxy&quot;/&gt;","id":"removeProxy","label":"action removeProxy","rawXml":"<action batchSize=\"25\" bucketSize=\"100\" name=\"removeProxy\"/>"},{"documentation":"","xml":"&lt;action batchSize=&quot;25&quot; bucketSize=&quot;100&quot; name=&quot;setSystemProperties&quot;/&gt;","id":"setSystemProperties","label":"action setSystemProperties","rawXml":"<action batchSize=\"25\" bucketSize=\"100\" name=\"setSystemProperties\"/>"},{"documentation":"","xml":"&lt;action batchSize=&quot;25&quot; bucketSize=&quot;100&quot; httpEnabled=&quot;true&quot; name=&quot;setProperties&quot; validationClass=&quot;org.nuxeo.ecm.core.bulk.validation.SetPropertiesValidation&quot;/&gt;","id":"setProperties","label":"action setProperties","rawXml":"<action batchSize=\"25\" bucketSize=\"100\" httpEnabled=\"true\" name=\"setProperties\" validationClass=\"org.nuxeo.ecm.core.bulk.validation.SetPropertiesValidation\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.bulk.config--streamProcessor1","extensionPoint":"org.nuxeo.runtime.stream.service--streamProcessor","documentation":null,"xml":"<extension point=\"streamProcessor\" target=\"org.nuxeo.runtime.stream.service\">\n    <!-- SetProperty processor -->\n    <streamProcessor class=\"org.nuxeo.ecm.core.bulk.action.SetPropertiesAction\" defaultConcurrency=\"2\" defaultPartitions=\"2\" logConfig=\"bulk\" name=\"setProperties\">\n      <policy continueOnFailure=\"false\" delay=\"500ms\" maxDelay=\"10s\" maxRetries=\"3\" name=\"default\"/>\n    </streamProcessor>\n\n    <!-- SetSystemProperty processor -->\n    <streamProcessor class=\"org.nuxeo.ecm.core.bulk.action.SetSystemPropertiesAction\" defaultConcurrency=\"2\" defaultPartitions=\"2\" logConfig=\"bulk\" name=\"setSystemProperties\">\n      <policy continueOnFailure=\"false\" delay=\"500ms\" maxDelay=\"10s\" maxRetries=\"3\" name=\"default\"/>\n    </streamProcessor>\n\n    <!-- RemoveProxy processor -->\n    <streamProcessor class=\"org.nuxeo.ecm.core.bulk.action.RemoveProxyAction\" defaultConcurrency=\"2\" defaultPartitions=\"2\" logConfig=\"bulk\" name=\"removeProxy\">\n      <policy continueOnFailure=\"false\" delay=\"500ms\" maxDelay=\"10s\" maxRetries=\"3\" name=\"default\"/>\n    </streamProcessor>\n\n    <!-- Trash processor -->\n    <streamProcessor class=\"org.nuxeo.ecm.core.bulk.action.TrashAction\" defaultConcurrency=\"1\" defaultPartitions=\"1\" logConfig=\"bulk\" name=\"trash\">\n      <policy continueOnFailure=\"false\" delay=\"500ms\" maxDelay=\"10s\" maxRetries=\"3\" name=\"default\"/>\n    </streamProcessor>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.stream.service","rawName":"service:org.nuxeo.runtime.stream.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.bulk.config/Contributions/org.nuxeo.ecm.core.bulk.config--streamProcessor1","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;streamProcessor class=&quot;org.nuxeo.ecm.core.bulk.action.SetPropertiesAction&quot; defaultConcurrency=&quot;2&quot; defaultPartitions=&quot;2&quot; logConfig=&quot;bulk&quot; name=&quot;setProperties&quot;&gt;\n      &lt;policy continueOnFailure=&quot;false&quot; delay=&quot;500ms&quot; maxDelay=&quot;10s&quot; maxRetries=&quot;3&quot; name=&quot;default&quot;/&gt;\n    &lt;/streamProcessor&gt;","id":"setProperties","label":"streamProcessor setProperties","rawXml":"<streamProcessor class=\"org.nuxeo.ecm.core.bulk.action.SetPropertiesAction\" defaultConcurrency=\"2\" defaultPartitions=\"2\" logConfig=\"bulk\" name=\"setProperties\">\n      <policy continueOnFailure=\"false\" delay=\"500ms\" maxDelay=\"10s\" maxRetries=\"3\" name=\"default\"/>\n    </streamProcessor>"},{"documentation":"","xml":"&lt;streamProcessor class=&quot;org.nuxeo.ecm.core.bulk.action.SetSystemPropertiesAction&quot; defaultConcurrency=&quot;2&quot; defaultPartitions=&quot;2&quot; logConfig=&quot;bulk&quot; name=&quot;setSystemProperties&quot;&gt;\n      &lt;policy continueOnFailure=&quot;false&quot; delay=&quot;500ms&quot; maxDelay=&quot;10s&quot; maxRetries=&quot;3&quot; name=&quot;default&quot;/&gt;\n    &lt;/streamProcessor&gt;","id":"setSystemProperties","label":"streamProcessor setSystemProperties","rawXml":"<streamProcessor class=\"org.nuxeo.ecm.core.bulk.action.SetSystemPropertiesAction\" defaultConcurrency=\"2\" defaultPartitions=\"2\" logConfig=\"bulk\" name=\"setSystemProperties\">\n      <policy continueOnFailure=\"false\" delay=\"500ms\" maxDelay=\"10s\" maxRetries=\"3\" name=\"default\"/>\n    </streamProcessor>"},{"documentation":"","xml":"&lt;streamProcessor class=&quot;org.nuxeo.ecm.core.bulk.action.RemoveProxyAction&quot; defaultConcurrency=&quot;2&quot; defaultPartitions=&quot;2&quot; logConfig=&quot;bulk&quot; name=&quot;removeProxy&quot;&gt;\n      &lt;policy continueOnFailure=&quot;false&quot; delay=&quot;500ms&quot; maxDelay=&quot;10s&quot; maxRetries=&quot;3&quot; name=&quot;default&quot;/&gt;\n    &lt;/streamProcessor&gt;","id":"removeProxy","label":"streamProcessor removeProxy","rawXml":"<streamProcessor class=\"org.nuxeo.ecm.core.bulk.action.RemoveProxyAction\" defaultConcurrency=\"2\" defaultPartitions=\"2\" logConfig=\"bulk\" name=\"removeProxy\">\n      <policy continueOnFailure=\"false\" delay=\"500ms\" maxDelay=\"10s\" maxRetries=\"3\" name=\"default\"/>\n    </streamProcessor>"},{"documentation":"","xml":"&lt;streamProcessor class=&quot;org.nuxeo.ecm.core.bulk.action.TrashAction&quot; defaultConcurrency=&quot;1&quot; defaultPartitions=&quot;1&quot; logConfig=&quot;bulk&quot; name=&quot;trash&quot;&gt;\n      &lt;policy continueOnFailure=&quot;false&quot; delay=&quot;500ms&quot; maxDelay=&quot;10s&quot; maxRetries=&quot;3&quot; name=&quot;default&quot;/&gt;\n    &lt;/streamProcessor&gt;","id":"trash","label":"streamProcessor trash","rawXml":"<streamProcessor class=\"org.nuxeo.ecm.core.bulk.action.TrashAction\" defaultConcurrency=\"1\" defaultPartitions=\"1\" logConfig=\"bulk\" name=\"trash\">\n      <policy continueOnFailure=\"false\" delay=\"500ms\" maxDelay=\"10s\" maxRetries=\"3\" name=\"default\"/>\n    </streamProcessor>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.bulk.config","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-bulk/bin/main/OSGI-INF/bulk-config.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.bulk.config\" version=\"1.0.0\">\n\n  <require>org.nuxeo.runtime.stream.service</require>\n\n  <!-- ======================================================================================= -->\n  <!-- Bulk Service configuration -->\n\n  <!-- Initialize bulk service streams before action processors -->\n  <extension point=\"logConfig\" target=\"org.nuxeo.runtime.stream.service\">\n    <logConfig name=\"bulk\">\n      <!-- command stream size sets the maximum concurrency for the scroller computation in the Nuxeo cluster -->\n      <log name=\"command\" size=\"2\" />\n      <!-- status stream size sets the maximum concurrency for the status computation in the Nuxeo cluster -->\n      <log name=\"status\" size=\"1\" />\n      <!-- done stream size sets the maximum concurrency for the triggers computations -->\n      <log name=\"done\" size=\"1\" />\n    </logConfig>\n  </extension>\n\n  <!-- Configure the default scroller behavior -->\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n    <property name=\"nuxeo.core.bulk.scroller.scroll.size\">200</property>\n    <property name=\"nuxeo.core.bulk.scroller.scroll.keepAliveSeconds\">60</property>\n    <property name=\"nuxeo.core.bulk.scroller.produceImmediate\">false</property>\n  </extension>\n\n  <!-- Bulk service processor -->\n  <extension target=\"org.nuxeo.runtime.stream.service\" point=\"streamProcessor\">\n    <streamProcessor name=\"bulkServiceProcessor\" class=\"org.nuxeo.ecm.core.bulk.BulkServiceProcessor\" logConfig=\"bulk\"\n      defaultCodec=\"avro\" defaultConcurrency=\"1\" defaultPartitions=\"1\" defaultExternal=\"true\" start=\"false\">\n      <stream name=\"command\" external=\"false\" />\n      <stream name=\"status\" external=\"false\" />\n      <stream name=\"done\" external=\"false\" />\n      <policy name=\"scroller\" maxRetries=\"0\" delay=\"1s\" maxDelay=\"60s\"\n        continueOnFailure=\"${nuxeo.core.bulk.scroller.continueOnFailure:=false}\" />\n      <policy name=\"status\" maxRetries=\"20\" delay=\"1s\" maxDelay=\"60s\"\n        continueOnFailure=\"${nuxeo.core.bulk.status.continueOnFailure:=false}\" />\n      <computation name=\"scroller\" concurrency=\"${nuxeo.core.bulk.scroller.concurrency:=2}\" />\n      <computation name=\"status\" concurrency=\"${nuxeo.core.bulk.status.concurrency:=1}\" />\n    </streamProcessor>\n  </extension>\n\n  <!-- ======================================================================================= -->\n  <!-- Actions configuration -->\n\n  <extension target=\"org.nuxeo.ecm.core.bulk\" point=\"actions\">\n    <!-- Internal -->\n    <action name=\"trash\" bucketSize=\"100\" batchSize=\"25\" sequentialCommands=\"true\" />\n    <action name=\"removeProxy\" bucketSize=\"100\" batchSize=\"25\" />\n    <action name=\"setSystemProperties\" bucketSize=\"100\" batchSize=\"25\" />\n    <!-- Exposed through REST API -->\n    <action name=\"setProperties\" bucketSize=\"100\" batchSize=\"25\" httpEnabled=\"true\"\n      validationClass=\"org.nuxeo.ecm.core.bulk.validation.SetPropertiesValidation\"/>\n  </extension>\n\n  <!-- Action's processor -->\n  <extension target=\"org.nuxeo.runtime.stream.service\" point=\"streamProcessor\">\n    <!-- SetProperty processor -->\n    <streamProcessor name=\"setProperties\" class=\"org.nuxeo.ecm.core.bulk.action.SetPropertiesAction\" logConfig=\"bulk\"\n      defaultConcurrency=\"2\" defaultPartitions=\"2\">\n      <policy name=\"default\" maxRetries=\"3\" delay=\"500ms\" maxDelay=\"10s\" continueOnFailure=\"false\" />\n    </streamProcessor>\n\n    <!-- SetSystemProperty processor -->\n    <streamProcessor name=\"setSystemProperties\" class=\"org.nuxeo.ecm.core.bulk.action.SetSystemPropertiesAction\"\n      logConfig=\"bulk\" defaultConcurrency=\"2\" defaultPartitions=\"2\">\n      <policy name=\"default\" maxRetries=\"3\" delay=\"500ms\" maxDelay=\"10s\" continueOnFailure=\"false\" />\n    </streamProcessor>\n\n    <!-- RemoveProxy processor -->\n    <streamProcessor name=\"removeProxy\" class=\"org.nuxeo.ecm.core.bulk.action.RemoveProxyAction\" logConfig=\"bulk\"\n      defaultConcurrency=\"2\" defaultPartitions=\"2\">\n      <policy name=\"default\" maxRetries=\"3\" delay=\"500ms\" maxDelay=\"10s\" continueOnFailure=\"false\" />\n    </streamProcessor>\n\n    <!-- Trash processor -->\n    <streamProcessor name=\"trash\" class=\"org.nuxeo.ecm.core.bulk.action.TrashAction\" logConfig=\"bulk\"\n      defaultConcurrency=\"1\" defaultPartitions=\"1\">\n      <policy name=\"default\" maxRetries=\"3\" delay=\"500ms\" maxDelay=\"10s\" continueOnFailure=\"false\" />\n    </streamProcessor>\n\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.scroll.service","extensionPoints":[{"@type":"NXExtensionPoint","name":"scroll","descriptors":["org.nuxeo.ecm.core.scroll.ScrollDescriptor"],"documentation":null,"id":"org.nuxeo.ecm.core.scroll.service--scroll","version":"11.1-SNAPSHOT","label":"scroll (org.nuxeo.ecm.core.scroll.service)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.scroll.service/ExtensionPoints/org.nuxeo.ecm.core.scroll.service--scroll","documentationHtml":"","componentId":"org.nuxeo.ecm.core.scroll.service"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.api.scroll.ScrollService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.scroll.service/Services/org.nuxeo.ecm.core.api.scroll.ScrollService","componentId":"org.nuxeo.ecm.core.scroll.service"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.scroll.ScrollComponent","documentation":"\n    The scroll service offers an unified API to scroll large result set.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.bulk/org.nuxeo.ecm.core.scroll.service","documentationHtml":"<p/>\nThe scroll service offers an unified API to scroll large result set.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-bulk/bin/main/OSGI-INF/scroll-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.scroll.service\" version=\"1.0\">\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.api.scroll.ScrollService\" />\n  </service>\n\n  <implementation class=\"org.nuxeo.ecm.core.scroll.ScrollComponent\" />\n\n  <documentation>\n    The scroll service offers an unified API to scroll large result set.\n  </documentation>\n\n  <extension-point name=\"scroll\">\n    <object class=\"org.nuxeo.ecm.core.scroll.ScrollDescriptor\" />\n  </extension-point>\n\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.webengine.jaxrs","fileName":"classes","manifest":"Export-Package: org.nuxeo.ecm.webengine.jaxrs,\n org.nuxeo.ecm.webengine.jaxrs.annotations,\n org.nuxeo.ecm.webengine.jaxrs.context,\n org.nuxeo.ecm.webengine.jaxrs.servlet,\n org.nuxeo.ecm.webengine.jaxrs.servlet.config,\n org.nuxeo.ecm.webengine.jaxrs.servlet.mapping,\n org.nuxeo.ecm.webengine.jaxrs.session,\n org.nuxeo.ecm.webengine.jaxrs.session.impl,\n org.nuxeo.ecm.webengine.jaxrs.tx,\n org.nuxeo.ecm.webengine.jaxrs.views\nPrivate-Package: .\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Category: stateless\nBundle-Name: Nuxeo WebEngine JAX-RS\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Version: 5.4.2.qualifier\nBundle-ManifestVersion: 2\nRequire-Bundle: org.nuxeo.ecm.core,\n org.nuxeo.ecm.core.io,\n javax.servlet;bundle-version=\"2.5.0\",\n com.sun.jersey.server;bundle-version=\"1.1.5\",\n com.sun.jersey.core;bundle-version=\"1.1.5\"\nImport-Package: META-INF.services,\n freemarker.core;resolution:=optional,\n freemarker.template;resolution:=optional,\n javax.naming,\n javax.security.auth.login,\n javax.servlet,\n javax.servlet.http,\n javax.ws.rs,\n javax.ws.rs.core,\n javax.ws.rs.ext,\n org.apache.commons.logging,\n org.apache.xerces.jaxp;version=\"2.9.0\",\n org.nuxeo.common.collections,\n org.nuxeo.common.utils,\n org.nuxeo.common.xmap,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core.api;resolution:=optional,\n org.nuxeo.ecm.core.api.local;resolution:=optional,\n org.nuxeo.ecm.core.api.repository;resolution:=optional,\n org.nuxeo.ecm.platform.rendering.api;resolution:=optional,\n org.nuxeo.ecm.platform.rendering.fm;resolution:=optional,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model,\n org.nuxeo.runtime.transaction;resolution:=optional,\n org.osgi.framework,\n org.osgi.service.http,\n org.osgi.service.packageadmin,\n org.osgi.util.tracker\nEclipse-BuddyPolicy: dependent\nBundle-SymbolicName: org.nuxeo.ecm.webengine.jaxrs;singleton:=true\nBundle-Activator: org.nuxeo.ecm.webengine.jaxrs.Activator\nNuxeo-Component: OSGI-INF/servlet-registry.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.webengine","artifactId":"nuxeo-webengine-jaxrs","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.webengine","name":"org.nuxeo.ecm.webengine","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.webengine.core","org.nuxeo.ecm.webengine.jaxrs"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-webengine/nuxeo-webengine-jaxrs/target/classes","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent","extensionPoints":[{"@type":"NXExtensionPoint","name":"resources","descriptors":["org.nuxeo.ecm.webengine.jaxrs.servlet.config.ResourcesDescriptor"],"documentation":"Resource resolvers can be contributed from outside to a servlet using this extension point\n","id":"org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent--resources","version":"11.1-SNAPSHOT","label":"resources (org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.jaxrs/org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent/ExtensionPoints/org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent--resources","documentationHtml":"<p/>\nResource resolvers can be contributed from outside to a servlet using this extension point","componentId":"org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent"},{"@type":"NXExtensionPoint","name":"servlets","descriptors":["org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletDescriptor"],"documentation":"Servlet registration for OSGi HttpService\n","id":"org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent--servlets","version":"11.1-SNAPSHOT","label":"servlets (org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.jaxrs/org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent/ExtensionPoints/org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent--servlets","documentationHtml":"<p/>\nServlet registration for OSGi HttpService","componentId":"org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent"},{"@type":"NXExtensionPoint","name":"filters","descriptors":["org.nuxeo.ecm.webengine.jaxrs.servlet.config.FilterSetDescriptor"],"documentation":"Filters set registry to contribute new filters to an existing servlet\n","id":"org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent--filters","version":"11.1-SNAPSHOT","label":"filters (org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.jaxrs/org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent/ExtensionPoints/org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent--filters","documentationHtml":"<p/>\nFilters set registry to contribute new filters to an existing servlet","componentId":"org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent"},{"@type":"NXExtensionPoint","name":"subresources","descriptors":["org.nuxeo.ecm.webengine.jaxrs.servlet.config.ResourceExtension"],"documentation":"Sub-resources that can be injected into the given application\n","id":"org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent--subresources","version":"11.1-SNAPSHOT","label":"subresources (org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.jaxrs/org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent/ExtensionPoints/org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent--subresources","documentationHtml":"<p/>\nSub-resources that can be injected into the given application","componentId":"org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent"}],"services":[],"extensions":[],"componentClass":"org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent","documentation":"@author Bogdan Stefanescu (bs@nuxeo.com)\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.webengine/org.nuxeo.ecm.webengine.jaxrs/org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent","documentationHtml":"<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-webengine/nuxeo-webengine-jaxrs/target/classes/OSGI-INF/servlet-registry.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent\"\n  version=\"1.0\">\n\n  <documentation>@author Bogdan Stefanescu (bs@nuxeo.com)</documentation>\n\n  <implementation class=\"org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletRegistryComponent\" />\n\n  <extension-point name=\"servlets\">\n    <documentation>Servlet registration for OSGi HttpService</documentation>\n    <object class=\"org.nuxeo.ecm.webengine.jaxrs.servlet.config.ServletDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"filters\">\n    <documentation>Filters set registry to contribute new filters to an existing servlet</documentation>\n    <object class=\"org.nuxeo.ecm.webengine.jaxrs.servlet.config.FilterSetDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"resources\">\n    <documentation>Resource resolvers can be contributed from outside to a servlet using this extension point</documentation>\n    <object class=\"org.nuxeo.ecm.webengine.jaxrs.servlet.config.ResourcesDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"subresources\">\n    <documentation>Sub-resources that can be injected into the given application</documentation>\n    <object class=\"org.nuxeo.ecm.webengine.jaxrs.servlet.config.ResourceExtension\" />\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.runtime.metrics","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 1\nBundle-Name: Nuxeo Runtime Metrics\nBundle-SymbolicName: org.nuxeo.runtime.metrics;singleton:=true\nBundle-Vendor: Nuxeo\nNuxeo-Component: OSGI-INF/runtime-metrics-service.xml\n","requirements":null,"groupId":"org.nuxeo.runtime","artifactId":"nuxeo-runtime-metrics","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.runtime","name":"org.nuxeo.runtime","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.runtime","org.nuxeo.runtime.cluster","org.nuxeo.runtime.datasource","org.nuxeo.runtime.jtajca","org.nuxeo.runtime.kv","org.nuxeo.runtime.management","org.nuxeo.runtime.metrics","org.nuxeo.runtime.migration","org.nuxeo.runtime.mongodb","org.nuxeo.runtime.pubsub","org.nuxeo.runtime.reload","org.nuxeo.runtime.stream","org.nuxeo.runtime.stream.test"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-metrics/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.runtime.metrics.MetricsService","extensionPoints":[{"@type":"NXExtensionPoint","name":"reporter","descriptors":["org.nuxeo.runtime.metrics.MetricsReporterDescriptor"],"documentation":null,"id":"org.nuxeo.runtime.metrics.MetricsService--reporter","version":"11.1-SNAPSHOT","label":"reporter (org.nuxeo.runtime.metrics.MetricsService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.metrics/org.nuxeo.runtime.metrics.MetricsService/ExtensionPoints/org.nuxeo.runtime.metrics.MetricsService--reporter","documentationHtml":"","componentId":"org.nuxeo.runtime.metrics.MetricsService"},{"@type":"NXExtensionPoint","name":"configuration","descriptors":["org.nuxeo.runtime.metrics.MetricsConfigurationDescriptor"],"documentation":null,"id":"org.nuxeo.runtime.metrics.MetricsService--configuration","version":"11.1-SNAPSHOT","label":"configuration (org.nuxeo.runtime.metrics.MetricsService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.metrics/org.nuxeo.runtime.metrics.MetricsService/ExtensionPoints/org.nuxeo.runtime.metrics.MetricsService--configuration","documentationHtml":"","componentId":"org.nuxeo.runtime.metrics.MetricsService"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.metrics.MetricsService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.metrics/org.nuxeo.runtime.metrics.MetricsService/Services/org.nuxeo.runtime.metrics.MetricsService","componentId":"org.nuxeo.runtime.metrics.MetricsService"}],"extensions":[],"componentClass":"org.nuxeo.runtime.metrics.MetricsServiceImpl","documentation":"\n    Filter and Report Dropwizzard Metrics and Tracing.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.metrics/org.nuxeo.runtime.metrics.MetricsService","documentationHtml":"<p/>\nFilter and Report Dropwizzard Metrics and Tracing.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-metrics/bin/main/OSGI-INF/runtime-metrics-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.metrics.MetricsService\">\n\n  <documentation>\n    Filter and Report Dropwizzard Metrics and Tracing.\n  </documentation>\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.metrics.MetricsService\" />\n  </service>\n\n  <implementation class=\"org.nuxeo.runtime.metrics.MetricsServiceImpl\" />\n\n  <extension-point name=\"configuration\">\n    <object class=\"org.nuxeo.runtime.metrics.MetricsConfigurationDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"reporter\">\n    <object class=\"org.nuxeo.runtime.metrics.MetricsReporterDescriptor\" />\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.automation.scripting","fileName":"classes","manifest":"Manifest-Version: 1.0\nBundle-Vendor: Nuxeo\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nBundle-Name: org.nuxeo.ecm.automation.scripting\nBundle-ManifestVersion: 2\nBundle-SymbolicName: org.nuxeo.ecm.automation.scripting\nNuxeo-Component: OSGI-INF/automation-scripting-service.xml,\n OSGI-INF/helpers-contrib.xml,\n OSGI-INF/classfilter-contrib.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.automation","artifactId":"nuxeo-automation-scripting","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.automation","name":"org.nuxeo.ecm.automation","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.automation.core","org.nuxeo.ecm.automation.features","org.nuxeo.ecm.automation.io","org.nuxeo.ecm.automation.scripting","org.nuxeo.ecm.automation.server"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-scripting/target/classes","components":[{"@type":"NXComponent","name":"org.nuxeo.automation.scripting.internals.AutomationScriptingComponent","extensionPoints":[{"@type":"NXExtensionPoint","name":"classFilter","descriptors":["org.nuxeo.automation.scripting.internals.ClassFilterDescriptor"],"documentation":"\n      This can be used to allow additional classes to be accessible by the scripting engine.\n      The deny element can be used to disallow classes allowed by previous contributions.\n      By default, no classes are allowed.\n\n      @since 10.2\n      <code>\n    <classFilter>\n        <allow>java.util.ArrayList</allow>\n        <allow>java.util.UUID</allow>\n        <deny>java.io.File</deny>\n        <deny>java.lang.Class</deny>\n    </classFilter>\n</code>\n\n\n      To deny everything from previous contributions and only allow specific classes, use:\n      <code>\n    <classFilter>\n        <deny>*</deny>\n        <allow>java.util.ArrayList</allow>\n    </classFilter>\n</code>\n","id":"org.nuxeo.automation.scripting.internals.AutomationScriptingComponent--classFilter","version":"11.1-SNAPSHOT","label":"classFilter (org.nuxeo.automation.scripting.internals.AutomationScriptingComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.scripting/org.nuxeo.automation.scripting.internals.AutomationScriptingComponent/ExtensionPoints/org.nuxeo.automation.scripting.internals.AutomationScriptingComponent--classFilter","documentationHtml":"<p/>\nThis can be used to allow additional classes to be accessible by the scripting engine.\nThe deny element can be used to disallow classes allowed by previous contributions.\nBy default, no classes are allowed.\n<p/>\n@since 10.2\n<p/><pre><code>    &lt;classFilter>\n        &lt;allow>java.util.ArrayList&lt;/allow>\n        &lt;allow>java.util.UUID&lt;/allow>\n        &lt;deny>java.io.File&lt;/deny>\n        &lt;deny>java.lang.Class&lt;/deny>\n    &lt;/classFilter>\n</code></pre><p/>\nTo deny everything from previous contributions and only allow specific classes, use:\n<p/><pre><code>    &lt;classFilter>\n        &lt;deny>*&lt;/deny>\n        &lt;allow>java.util.ArrayList&lt;/allow>\n    &lt;/classFilter>\n</code></pre><p/>","componentId":"org.nuxeo.automation.scripting.internals.AutomationScriptingComponent"},{"@type":"NXExtensionPoint","name":"operation","descriptors":["org.nuxeo.automation.scripting.internals.ScriptingOperationDescriptor"],"documentation":"<code>\n    <scriptedOperation id=\"Scripting.HelloWorld\">\n        <inputType>string</inputType>\n        <outputType>string</outputType>\n        <param name=\"lang\" type=\"string\"/>\n        <script>\n          function run(input, params) {\n          if (params.lang === \"fr\") {\n          return \"Bonjour \" + input;\n          } else {\n          return \"Hello \" + input;\n          }\n          }\n        </script>\n    </scriptedOperation>\n</code>\n","id":"org.nuxeo.automation.scripting.internals.AutomationScriptingComponent--operation","version":"11.1-SNAPSHOT","label":"operation (org.nuxeo.automation.scripting.internals.AutomationScriptingComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.scripting/org.nuxeo.automation.scripting.internals.AutomationScriptingComponent/ExtensionPoints/org.nuxeo.automation.scripting.internals.AutomationScriptingComponent--operation","documentationHtml":"<p/>\n<pre><code>    &lt;scriptedOperation id=\"Scripting.HelloWorld\">\n        &lt;inputType>string&lt;/inputType>\n        &lt;outputType>string&lt;/outputType>\n        &lt;param name=\"lang\" type=\"string\"/>\n        &lt;script>\n          function run(input, params) {\n          if (params.lang === \"fr\") {\n          return \"Bonjour \" + input;\n          } else {\n          return \"Hello \" + input;\n          }\n          }\n        &lt;/script>\n    &lt;/scriptedOperation>\n</code></pre><p/>","componentId":"org.nuxeo.automation.scripting.internals.AutomationScriptingComponent"}],"services":[{"@type":"NXService","id":"org.nuxeo.automation.scripting.api.AutomationScriptingService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.scripting/org.nuxeo.automation.scripting.internals.AutomationScriptingComponent/Services/org.nuxeo.automation.scripting.api.AutomationScriptingService","componentId":"org.nuxeo.automation.scripting.internals.AutomationScriptingComponent"}],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.automation.scripting.internals.AutomationScriptingComponent--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n       Configuration property for enabling backward compatibility with scripting parameters where\n       context variables were inlined.\n     \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n     <documentation>\n       Configuration property for enabling backward compatibility with scripting parameters where\n       context variables were inlined.\n     </documentation>\n     <property name=\"nuxeo.automation.scripting.inline-context-in-params\">false</property>\n   </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.scripting/org.nuxeo.automation.scripting.internals.AutomationScriptingComponent/Contributions/org.nuxeo.automation.scripting.internals.AutomationScriptingComponent--configuration","documentationHtml":"<p/>\nConfiguration property for enabling backward compatibility with scripting parameters where\ncontext variables were inlined.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;nuxeo.automation.scripting.inline-context-in-params&quot;&gt;false&lt;/property&gt;","id":"nuxeo.automation.scripting.inline-context-in-params","label":"property nuxeo.automation.scripting.inline-context-in-params","rawXml":"<property name=\"nuxeo.automation.scripting.inline-context-in-params\">false</property>"}]}],"componentClass":"org.nuxeo.automation.scripting.internals.AutomationScriptingComponent","documentation":"\n    Automation Scripting is a Nuxeo module which provides ability to create and contribute Automation chain/operation in JavaScript.\n\n    For backward compatibility with version prior to 9.1, you may want to inline the context in the scripting parameters by contributing the\n    extension\n    <code>\n    <extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n        <property name=\"nuxeo.automation.scripting.inline-context-in-params\">true</property>\n    </extension>\n</code>\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.scripting/org.nuxeo.automation.scripting.internals.AutomationScriptingComponent","documentationHtml":"<p/>\nAutomation Scripting is a Nuxeo module which provides ability to create and contribute Automation chain/operation in JavaScript.\n<p/>\nFor backward compatibility with version prior to 9.1, you may want to inline the context in the scripting parameters by contributing the\nextension\n<p/><pre><code>    &lt;extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n        &lt;property name=\"nuxeo.automation.scripting.inline-context-in-params\">true&lt;/property>\n    &lt;/extension>\n</code></pre><p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-scripting/target/classes/OSGI-INF/automation-scripting-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.automation.scripting.internals.AutomationScriptingComponent\" version=\"1.0\">\n\n   <documentation>\n    Automation Scripting is a Nuxeo module which provides ability to create and contribute Automation chain/operation in JavaScript.\n\n    For backward compatibility with version prior to 9.1, you may want to inline the context in the scripting parameters by contributing the\n    extension\n    <code>\n      <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n        <property name=\"nuxeo.automation.scripting.inline-context-in-params\">true</property>\n      </extension>\n    </code>\n  </documentation>\n\n  <require>org.nuxeo.ecm.core.operation.OperationServiceComponent</require>\n\n  <implementation class=\"org.nuxeo.automation.scripting.internals.AutomationScriptingComponent\" />\n\n  <service>\n      <provide interface=\"org.nuxeo.automation.scripting.api.AutomationScriptingService\" />\n  </service>\n\n   <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n     <documentation>\n       Configuration property for enabling backward compatibility with scripting parameters where\n       context variables were inlined.\n     </documentation>\n     <property name=\"nuxeo.automation.scripting.inline-context-in-params\">false</property>\n   </extension>\n\n  <extension-point name=\"operation\">\n    <documentation>\n      <code>\n      <scriptedOperation id=\"Scripting.HelloWorld\">\n        <inputType>string</inputType>\n        <outputType>string</outputType>\n        <param name=\"lang\" type=\"string\"/>\n        <script>\n          function run(input, params) {\n          if (params.lang === \"fr\") {\n          return \"Bonjour \" + input;\n          } else {\n          return \"Hello \" + input;\n          }\n          }\n        </script>\n      </scriptedOperation>\n      </code>\n    </documentation>\n\n    <object\n      class=\"org.nuxeo.automation.scripting.internals.ScriptingOperationDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"classFilter\">\n    <documentation>\n      This can be used to allow additional classes to be accessible by the scripting engine.\n      The deny element can be used to disallow classes allowed by previous contributions.\n      By default, no classes are allowed.\n\n      @since 10.2\n      <code>\n        <classFilter>\n          <allow>java.util.ArrayList</allow>\n          <allow>java.util.UUID</allow>\n          <deny>java.io.File</deny>\n          <deny>java.lang.Class</deny>\n        </classFilter>\n      </code>\n\n      To deny everything from previous contributions and only allow specific classes, use:\n      <code>\n        <classFilter>\n          <deny>*</deny>\n          <allow>java.util.ArrayList</allow>\n        </classFilter>\n      </code>\n\n    </documentation>\n\n    <object class=\"org.nuxeo.automation.scripting.internals.ClassFilterDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.automation.scripting.classfilter","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.automation.scripting.classfilter--classFilter","extensionPoint":"org.nuxeo.automation.scripting.internals.AutomationScriptingComponent--classFilter","documentation":null,"xml":"<extension point=\"classFilter\" target=\"org.nuxeo.automation.scripting.internals.AutomationScriptingComponent\">\n    <classFilter>\n      <allow>java.text.SimpleDateFormat</allow>\n      <allow>java.util.ArrayList</allow>\n      <allow>java.util.Arrays</allow>\n      <allow>java.util.Collections</allow>\n      <allow>java.util.UUID</allow>\n      <allow>org.apache.commons.codec.digest.DigestUtils</allow>\n      <allow>org.nuxeo.runtime.transaction.TransactionHelper</allow>\n      <allow>org.nuxeo.ecm.core.api.Blobs</allow>\n      <allow>org.nuxeo.ecm.core.api.impl.blob.StringBlob</allow>\n      <allow>org.nuxeo.ecm.core.api.impl.blob.JSONBlob</allow>\n      <allow>org.nuxeo.ecm.core.api.NuxeoException</allow>\n    </classFilter>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.automation.scripting.internals.AutomationScriptingComponent","rawName":"service:org.nuxeo.automation.scripting.internals.AutomationScriptingComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.scripting/org.nuxeo.automation.scripting.classfilter/Contributions/org.nuxeo.automation.scripting.classfilter--classFilter","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;classFilter&gt;\n      &lt;allow&gt;java.text.SimpleDateFormat&lt;/allow&gt;\n      &lt;allow&gt;java.util.ArrayList&lt;/allow&gt;\n      &lt;allow&gt;java.util.Arrays&lt;/allow&gt;\n      &lt;allow&gt;java.util.Collections&lt;/allow&gt;\n      &lt;allow&gt;java.util.UUID&lt;/allow&gt;\n      &lt;allow&gt;org.apache.commons.codec.digest.DigestUtils&lt;/allow&gt;\n      &lt;allow&gt;org.nuxeo.runtime.transaction.TransactionHelper&lt;/allow&gt;\n      &lt;allow&gt;org.nuxeo.ecm.core.api.Blobs&lt;/allow&gt;\n      &lt;allow&gt;org.nuxeo.ecm.core.api.impl.blob.StringBlob&lt;/allow&gt;\n      &lt;allow&gt;org.nuxeo.ecm.core.api.impl.blob.JSONBlob&lt;/allow&gt;\n      &lt;allow&gt;org.nuxeo.ecm.core.api.NuxeoException&lt;/allow&gt;\n    &lt;/classFilter&gt;","id":null,"label":"classFilter","rawXml":"<classFilter>\n      <allow>java.text.SimpleDateFormat</allow>\n      <allow>java.util.ArrayList</allow>\n      <allow>java.util.Arrays</allow>\n      <allow>java.util.Collections</allow>\n      <allow>java.util.UUID</allow>\n      <allow>org.apache.commons.codec.digest.DigestUtils</allow>\n      <allow>org.nuxeo.runtime.transaction.TransactionHelper</allow>\n      <allow>org.nuxeo.ecm.core.api.Blobs</allow>\n      <allow>org.nuxeo.ecm.core.api.impl.blob.StringBlob</allow>\n      <allow>org.nuxeo.ecm.core.api.impl.blob.JSONBlob</allow>\n      <allow>org.nuxeo.ecm.core.api.NuxeoException</allow>\n    </classFilter>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.scripting/org.nuxeo.automation.scripting.classfilter","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-scripting/target/classes/OSGI-INF/classfilter-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.automation.scripting.classfilter\" version=\"1.0\">\n\n  <extension target=\"org.nuxeo.automation.scripting.internals.AutomationScriptingComponent\" point=\"classFilter\">\n    <classFilter>\n      <allow>java.text.SimpleDateFormat</allow>\n      <allow>java.util.ArrayList</allow>\n      <allow>java.util.Arrays</allow>\n      <allow>java.util.Collections</allow>\n      <allow>java.util.UUID</allow>\n      <allow>org.apache.commons.codec.digest.DigestUtils</allow>\n      <allow>org.nuxeo.runtime.transaction.TransactionHelper</allow>\n      <allow>org.nuxeo.ecm.core.api.Blobs</allow>\n      <allow>org.nuxeo.ecm.core.api.impl.blob.StringBlob</allow>\n      <allow>org.nuxeo.ecm.core.api.impl.blob.JSONBlob</allow>\n      <allow>org.nuxeo.ecm.core.api.NuxeoException</allow>\n    </classFilter>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.automation.scripting.contextContrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.automation.scripting.contextContrib--contextHelpers","extensionPoint":"org.nuxeo.ecm.core.operation.OperationServiceComponent--contextHelpers","documentation":null,"xml":"<extension point=\"contextHelpers\" target=\"org.nuxeo.ecm.core.operation.OperationServiceComponent\">\n    <contextHelper class=\"org.nuxeo.automation.scripting.helper.Console\" id=\"Console\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.operation.OperationServiceComponent","rawName":"service:org.nuxeo.ecm.core.operation.OperationServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.scripting/org.nuxeo.ecm.core.automation.scripting.contextContrib/Contributions/org.nuxeo.ecm.core.automation.scripting.contextContrib--contextHelpers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;contextHelper class=&quot;org.nuxeo.automation.scripting.helper.Console&quot; id=&quot;Console&quot;/&gt;","id":"Console","label":"contextHelper Console","rawXml":"<contextHelper class=\"org.nuxeo.automation.scripting.helper.Console\" id=\"Console\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.scripting/org.nuxeo.ecm.core.automation.scripting.contextContrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-scripting/target/classes/OSGI-INF/helpers-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.automation.scripting.contextContrib\" version=\"1.0\">\n\n  <extension target=\"org.nuxeo.ecm.core.operation.OperationServiceComponent\"\n             point=\"contextHelpers\">\n    <contextHelper id=\"Console\" class=\"org.nuxeo.automation.scripting.helper.Console\"/>\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.mimetype","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 2\nBundle-SymbolicName: org.nuxeo.ecm.core.mimetype\nNuxeo-Component: OSGI-INF/nxmimetype-service.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-mimetype","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-mimetype/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService","extensionPoints":[{"@type":"NXExtensionPoint","name":"extension","descriptors":["org.nuxeo.ecm.platform.mimetype.service.ExtensionDescriptor"],"documentation":"\n\n      Extension to register filename extension to mimetype association rules.\n\n      <p/>\n\n\n      Specify how a given extension should be used to detect a mimetype. If the\n      extension is marked 'ambiguous', a sniffing of the content of the file is\n      advised.\n\n      For instance :\n\n      <code>\n    <fileExtension ambiguous=\"true\" mimetype=\"text/xml\" name=\"xml\"/>\n</code>\n","id":"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService--extension","version":"11.1-SNAPSHOT","label":"extension (org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.mimetype/org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService/ExtensionPoints/org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService--extension","documentationHtml":"<p/>\nExtension to register filename extension to mimetype association rules.\n<p/>\nSpecify how a given extension should be used to detect a mimetype. If the\nextension is marked 'ambiguous', a sniffing of the content of the file is\nadvised.\n<p/>\nFor instance :\n<p/>\n<pre><code>    &lt;fileExtension ambiguous=\"true\" mimetype=\"text/xml\" name=\"xml\"/>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService"},{"@type":"NXExtensionPoint","name":"mimetype","descriptors":["org.nuxeo.ecm.platform.mimetype.service.MimetypeDescriptor"],"documentation":"\n\n      Extension allowing one to register mimetypes.\n\n      <p/>\n\n\n      A mimetype holds meta information about a given mimetype.\n\n      <ul>\n    <li>RFC-2046 major</li>\n    <li>RFC-2046 minor</li>\n    <li>Icon</li>\n    <li>List of extensions (the first one will be used as default)</li>\n    <li>List of mimetype names</li>\n    <li>Boolean flag if a file of this mimetype is binary</li>\n    <li>\n          Boolean flag onlineEditable if a file of this mimetype is supported by\n          online Edit - default is false\n        </li>\n    <li>\n          Boolean flag oleSupported if a file of this mimetype is supported by\n          the oleExtract plugin - default is false\n        </li>\n</ul>\n\n\n      For instance :\n\n      <code>\n    <mimetype binary=\"true\" iconPath=\"pdf.png\" normalized=\"application/pdf\">\n        <mimetypes>\n            <mimetype>application/pdf</mimetype>\n        </mimetypes>\n        <extensions>\n            <extension>pdf</extension>\n        </extensions>\n    </mimetype>\n</code>\n","id":"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService--mimetype","version":"11.1-SNAPSHOT","label":"mimetype (org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.mimetype/org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService/ExtensionPoints/org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService--mimetype","documentationHtml":"<p/>\nExtension allowing one to register mimetypes.\n<p/>\nA mimetype holds meta information about a given mimetype.\n<p/>\n<ul>\n<li>RFC-2046 major</li>\n<li>RFC-2046 minor</li>\n<li>Icon</li>\n<li>List of extensions (the first one will be used as default)</li>\n<li>List of mimetype names</li>\n<li>Boolean flag if a file of this mimetype is binary</li>\n<li>\nBoolean flag onlineEditable if a file of this mimetype is supported by\nonline Edit - default is false\n</li>\n<li>\nBoolean flag oleSupported if a file of this mimetype is supported by\nthe oleExtract plugin - default is false\n</li>\n</ul>\n<p/>\nFor instance :\n<p/>\n<pre><code>    &lt;mimetype binary=\"true\" iconPath=\"pdf.png\" normalized=\"application/pdf\">\n        &lt;mimetypes>\n            &lt;mimetype>application/pdf&lt;/mimetype>\n        &lt;/mimetypes>\n        &lt;extensions>\n            &lt;extension>pdf&lt;/extension>\n        &lt;/extensions>\n    &lt;/mimetype>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.platform.mimetype.interfaces.MimetypeRegistry","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.mimetype/org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService/Services/org.nuxeo.ecm.platform.mimetype.interfaces.MimetypeRegistry","componentId":"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService"}],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService--mimetype","extensionPoint":"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService--mimetype","documentation":"\n\n      Default mimetype contributions.\n\n    \n","xml":"<extension point=\"mimetype\" target=\"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService\">\n\n    <documentation>\n\n      Default mimetype contributions.\n\n    </documentation>\n\n\n    <!--  text based document types -->\n\n    <mimetype binary=\"false\" iconPath=\"text.png\" normalized=\"text/plain\">\n      <mimetypes>\n        <mimetype>text/plain</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>txt</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"false\" iconPath=\"text.png\" normalized=\"text/html\">\n      <mimetypes>\n        <mimetype>text/html</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>html</extension>\n        <extension>xhtml</extension>\n        <extension>shtml</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"false\" iconPath=\"text.png\" normalized=\"text/structured\">\n      <mimetypes>\n        <mimetype>text/structured</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>stx</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"false\" iconPath=\"text.png\" normalized=\"text/x-rst\">\n      <mimetypes>\n        <mimetype>text/x-rst</mimetype>\n        <mimetype>text/restructured</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>rst</extension>\n        <extension>rest</extension>\n        <extension>restx</extension>\n        <extension>rest</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"false\" iconPath=\"py.png\" normalized=\"text/python-source\">\n      <mimetypes>\n        <mimetype>text/python-source</mimetype>\n        <mimetype>text/x-python</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>py</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"false\" iconPath=\"java.png\" normalized=\"text/java-source\">\n      <mimetypes>\n        <mimetype>text/java-source</mimetype>\n        <mimetype>text/x-java</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>java</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"text.png\" normalized=\"text/rtf\">\n      <mimetypes>\n        <mimetype>text/rtf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>rtf</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"false\" iconPath=\"text.png\" normalized=\"text/x-web-markdown\">\n     <mimetypes>\n       <mimetype>text/x-web-markdown</mimetype>\n     </mimetypes>\n     <extensions>\n       <extension>md</extension>\n       <extension>mkd</extension>\n       <extension>markdown</extension>\n     </extensions>\n   </mimetype>\n\n    <mimetype binary=\"false\" iconPath=\"email.png\" normalized=\"message/rfc822\">\n      <mimetypes>\n        <mimetype>message/rfc822</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>eml</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"email.png\" normalized=\"application/vnd.ms-outlook\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-outlook</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>msg</extension>\n      </extensions>\n    </mimetype>\n\n    <!--  Microsoft Office document -->\n\n    <mimetype binary=\"true\" iconPath=\"word.png\" normalized=\"application/msword\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/msword</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>doc</extension>\n        <extension>dot</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"xls.png\" normalized=\"application/vnd.ms-excel\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-excel</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xls</extension>\n        <extension>xlt</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"ppt.png\" normalized=\"application/vnd.ms-powerpoint\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-powerpoint</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ppt</extension>\n        <extension>pot</extension>\n        <extension>pps</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"mpp.png\" normalized=\"application/vnd.ms-project\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-project</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mpp</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"pub.png\" normalized=\"application/vnd.ms-publisher\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-publisher</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pub</extension>\n      </extensions>\n    </mimetype>\n\n    <!--  XML based document types -->\n\n    <mimetype binary=\"true\" iconPath=\"xml.png\" normalized=\"application/docbook+xml\">\n      <mimetypes>\n        <mimetype>application/docbook+xml</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>doc.xml</extension>\n        <extension>docb.xml</extension>\n        <extension>docb</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"false\" iconPath=\"xml.png\" normalized=\"text/xml\">\n      <mimetypes>\n        <mimetype>text/xml</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xml</extension>\n        <extension>graffle</extension>\n        <extension>twb</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- OpenOffice.org 1.x document types -->\n\n    <mimetype binary=\"true\" iconPath=\"sxw.png\" normalized=\"application/vnd.sun.xml.writer\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.writer</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sxw</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"stw.png\" normalized=\"application/vnd.sun.xml.writer.template\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.writer.template</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>stw</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"sxi.png\" normalized=\"application/vnd.sun.xml.impress\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.impress</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sxi</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"sti.png\" normalized=\"application/vnd.sun.xml.impress.template\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.impress.template</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sti</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"sxc.png\" normalized=\"application/vnd.sun.xml.calc\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.calc</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sxc</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"stc.png\" normalized=\"application/vnd.sun.xml.calc.template\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.calc.template</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>stc</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"sxd.png\" normalized=\"application/vnd.sun.xml.draw\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.draw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sxd</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"std.png\" normalized=\"application/vnd.sun.xml.draw.template\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.draw.template</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>std</extension>\n      </extensions>\n    </mimetype>\n\n    <!--  OpenOffice.org 2.x document types -->\n\n    <mimetype binary=\"true\" iconPath=\"ods.png\" normalized=\"application/vnd.oasis.opendocument.spreadsheet\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.oasis.opendocument.spreadsheet</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ods</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"ots.png\" normalized=\"application/vnd.oasis.opendocument.spreadsheet-template\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.oasis.opendocument.spreadsheet-template\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ots</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"odt.png\" normalized=\"application/vnd.oasis.opendocument.text\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.oasis.opendocument.text</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>odt</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"ott.png\" normalized=\"application/vnd.oasis.opendocument.text-template\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.oasis.opendocument.text-template</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ott</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"odp.png\" normalized=\"application/vnd.oasis.opendocument.presentation\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.oasis.opendocument.presentation</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>odp</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"otp.png\" normalized=\"application/vnd.oasis.opendocument.presentation-template\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.oasis.opendocument.presentation-template\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>otp</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"odg.png\" normalized=\"application/vnd.oasis.opendocument.graphics\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.oasis.opendocument.graphics</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>odg</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"otg.png\" normalized=\"application/vnd.oasis.opendocument.graphics-template\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.oasis.opendocument.graphics-template\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>otg</extension>\n      </extensions>\n    </mimetype>\n\n    <!--  Adobe PDF -->\n    <mimetype binary=\"true\" iconPath=\"pdf.png\" normalized=\"application/pdf\">\n      <mimetypes>\n        <mimetype>application/pdf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pdf</extension>\n      </extensions>\n    </mimetype>\n\n    <!--  binaries -->\n\n    <mimetype binary=\"true\" iconPath=\"application.png\" normalized=\"application/octet-stream\">\n      <mimetypes>\n        <mimetype>application/octet-stream</mimetype>\n      </mimetypes>\n      <extensions/>\n    </mimetype>\n\n    <!--  Archives -->\n    <mimetype binary=\"true\" iconPath=\"tar.png\" normalized=\"application/x-gtar\">\n      <mimetypes>\n        <mimetype>application/x-gtar</mimetype>\n      </mimetypes>\n      <extensions/>\n    </mimetype>\n\n\n    <!-- Ms Office 2007 -->\n\n    <mimetype binary=\"true\" iconPath=\"docx.png\" normalized=\"application/vnd.ms-word.document.macroEnabled.12\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-word.document.macroEnabled.12</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>docm</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype binary=\"true\" iconPath=\"docx.png\" normalized=\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.openxmlformats-officedocument.wordprocessingml.document\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>docx</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype binary=\"true\" iconPath=\"docx.png\" normalized=\"application/vnd.ms-word.template.macroEnabled.12\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-word.template.macroEnabled.12</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>dotm</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype binary=\"true\" iconPath=\"docx.png\" normalized=\"application/vnd.openxmlformats-officedocument.wordprocessingml.template\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.openxmlformats-officedocument.wordprocessingml.template\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>dotx</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype binary=\"true\" iconPath=\"pptx.png\" normalized=\"application/vnd.ms-powerpoint.slideshow.macroEnabled.12\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.ms-powerpoint.slideshow.macroEnabled.12\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ppsm</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype binary=\"true\" iconPath=\"pptx.png\" normalized=\"application/vnd.openxmlformats-officedocument.presentationml.slideshow\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.openxmlformats-officedocument.presentationml.slideshow\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ppsx</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"pptx.png\" normalized=\"application/vnd.ms-powerpoint.presentation.macroEnabled.12\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.ms-powerpoint.presentation.macroEnabled.12\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pptm</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype binary=\"true\" iconPath=\"pptx.png\" normalized=\"application/vnd.openxmlformats-officedocument.presentationml.presentation\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.openxmlformats-officedocument.presentationml.presentation\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pptx</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"xlsx.png\" normalized=\"application/vnd.ms-excel.sheet.binary.macroEnabled.12\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.ms-excel.sheet.binary.macroEnabled.12\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xlsb</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"xlsx.png\" normalized=\"application/vnd.ms-excel.sheet.macroEnabled.12\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-excel.sheet.macroEnabled.12</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xlsm</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"xlsx.png\" normalized=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xlsx</extension>\n      </extensions>\n    </mimetype>\n\n    <!--  element of office 2007, but which one ??? -->\n    <mimetype binary=\"true\" iconPath=\"xlsx.png\" normalized=\"application/vnd.ms-xpsdocument\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-xpsdocument</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xps</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"zip.png\" normalized=\"application/zip\">\n      <mimetypes>\n        <mimetype>application/zip</mimetype>\n        <mimetype>application/x-zip-compressed</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>zip</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- images -->\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/gif\">\n      <mimetypes>\n        <mimetype>image/gif</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>gif</extension>\n      </extensions>\n    </mimetype>\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/png\">\n      <mimetypes>\n        <mimetype>image/png</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>png</extension>\n      </extensions>\n    </mimetype>\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/jpeg\">\n      <mimetypes>\n        <mimetype>image/jpeg</mimetype>\n        <mimetype>image/pjpeg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>jpg</extension>\n        <extension>jpeg</extension>\n      </extensions>\n    </mimetype>\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-portable-bitmap\">\n      <mimetypes>\n        <mimetype>image/x-portable-bitmap</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pbm</extension>\n      </extensions>\n    </mimetype>\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/bmp\">\n      <mimetypes>\n        <mimetype>image/x-bitmap</mimetype>\n        <mimetype>image/bmp</mimetype>\n\n      </mimetypes>\n      <extensions>\n        <extension>bmp</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-portable-graymap\">\n      <mimetypes>\n        <mimetype>image/x-portable-graymap</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ppm</extension>\n      </extensions>\n    </mimetype>\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/g3fax\">\n      <mimetypes>\n        <mimetype>image/g3fax</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>fax</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/tiff\">\n      <mimetypes>\n        <mimetype>image/tiff</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>tiff</extension>\n        <extension>tif</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"false\" iconPath=\"image.gif\" normalized=\"image/svg+xml\">\n      <mimetypes>\n        <mimetype>image/svg+xml</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>svg</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-dpx\">\n      <mimetypes>\n        <mimetype>image/x-dpx</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>dpx</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Adobe Illustrator -->\n   <mimetype binary=\"false\" iconPath=\"image.gif\" normalized=\"application/illustrator\">\n     <mimetypes>\n       <mimetype>application/illustrator</mimetype>\n     </mimetypes>\n     <extensions>\n       <extension>ai</extension>\n     </extensions>\n   </mimetype>\n\n   <!-- Adobe Photoshop -->\n   <mimetype binary=\"false\" iconPath=\"image.gif\" normalized=\"application/photoshop\">\n     <mimetypes>\n       <mimetype>application/photoshop</mimetype>\n       <mimetype>application/x-photoshop</mimetype>\n       <mimetype>image/photoshop</mimetype>\n       <mimetype>image/x-photoshop</mimetype>\n       <mimetype>image/psd</mimetype>\n       <mimetype>image/x-psd</mimetype>\n       <mimetype>image/vnd.adobe.photoshop</mimetype>\n       <mimetype>application/psd</mimetype>\n       <mimetype>zz-application</mimetype>\n       <mimetype>zz-winassoc-psd</mimetype>\n     </mimetypes>\n     <extensions>\n       <extension>psd</extension>\n     </extensions>\n   </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"application/x-emf\">\n      <mimetypes>\n        <mimetype>application/x-emf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>emf</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"application/x-vclmtf\">\n      <mimetypes>\n        <mimetype>application/x-vclmtf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>vclmtf</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"false\" iconPath=\"csv.png\" normalized=\"text/csv\">\n      <mimetypes>\n        <mimetype>text/csv</mimetype>\n        <mimetype>text/comma-separated-values</mimetype>\n        <mimetype>application/csv</mimetype>\n        <mimetype>application/excel</mimetype>\n        <mimetype>application/vnd.ms-excel</mimetype>\n        <mimetype>application/vnd.msexcel</mimetype>\n        <mimetype>text/anytext</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>csv</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"visio.gif\" normalized=\"application/visio\">\n      <mimetypes>\n        <mimetype>application/vnd.visio</mimetype>\n        <mimetype>application/vnd.visio2013</mimetype>\n        <mimetype>application/visio</mimetype>\n        <mimetype>application/x-visio</mimetype>\n        <mimetype>application/visio.drawing</mimetype>\n        <mimetype>application/vsd</mimetype>\n        <mimetype>application/x-vsd</mimetype>\n        <mimetype>image/x-vsd</mimetype>\n        <mimetype>zz-application/zz-winassoc-vsd</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>vsdx</extension>\n        <extension>vsd</extension>\n        <extension>vst</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/mpeg\">\n      <mimetypes>\n        <mimetype>audio/mpeg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mp3</extension>\n        <extension>mpga</extension>\n        <extension>mp2</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"wav.png\" normalized=\"audio/x-wav\">\n      <mimetypes>\n        <mimetype>audio/x-wav</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wav</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/x-mpegurl\">\n      <mimetypes>\n        <mimetype>audio/x-mpegurl</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>m3u</extension>\n      </extensions>\n    </mimetype>\n\n\n\n    <mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/x-aiff\">\n      <mimetypes>\n        <mimetype>audio/x-aiff</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>aif</extension>\n        <extension>aifc</extension>\n        <extension>aiff</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/ogg\">\n      <mimetypes>\n        <mimetype>audio/ogg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ogg</extension>\n        <extension>oga</extension>\n        <extension>spx</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/flac\">\n      <mimetypes>\n        <mimetype>audio/flac</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>flac</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"application/ogg\">\n      <mimetypes>\n        <mimetype>application/ogg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ogm</extension>\n        <extension>ogx</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/aac\">\n      <mimetypes>\n        <mimetype>audio/aac</mimetype>\n        <mimetype>audio/aacp</mimetype>\n        <mimetype>audio/3gpp</mimetype>\n        <mimetype>audio/3gpp2</mimetype>\n        <mimetype>audio/mp4</mimetype>\n        <mimetype>audio/MP4A-LATM</mimetype>\n        <mimetype>audio/mpeg4-generic</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>aac</extension>\n        <extension>m4a</extension>\n        <extension>m4b</extension>\n        <extension>m4p</extension>\n        <extension>m4r</extension>\n        <extension>mp4</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/x-matroska\">\n      <mimetypes>\n        <mimetype>audio/x-matroska</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mka</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/x-ms-wax\">\n      <mimetypes>\n        <mimetype>audio/x-ms-wax</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wax</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/x-ms-wma\">\n      <mimetypes>\n        <mimetype>audio/x-ms-wma</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wma</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/mpeg\">\n      <mimetypes>\n        <mimetype>video/mpeg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mpa</extension>\n        <extension>mpe</extension>\n        <extension>mpeg</extension>\n        <extension>mpg</extension>\n        <extension>mpv2</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/mp4\">\n      <mimetypes>\n        <mimetype>video/mp4</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mp4</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/quicktime\">\n      <mimetypes>\n        <mimetype>video/quicktime</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mov</extension>\n        <extension>qt</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/ogg\">\n      <mimetypes>\n        <mimetype>video/ogg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ogv</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/webm\">\n      <mimetypes>\n        <mimetype>video/webm</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>webm</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/x-matroska\">\n      <mimetypes>\n        <mimetype>video/x-matroska</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mkv</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/x-ms-asf\">\n      <mimetypes>\n        <mimetype>video/x-ms-asf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>asf</extension>\n        <extension>asr</extension>\n        <extension>asx</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/x-msvideo\">\n      <mimetypes>\n        <mimetype>video/x-msvideo</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>avi</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/fli\">\n      <mimetypes>\n        <mimetype>video/fli</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>fli</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/flv\">\n      <mimetypes>\n        <mimetype>video/flv</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>flv</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/vnd.vivo\">\n      <mimetypes>\n        <mimetype>video/vnd.vivo</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>viv</extension>\n        <extension>vivo</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/x-m4v\">\n      <mimetypes>\n        <mimetype>video/x-m4v</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>m4v</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/3gpp\">\n      <mimetypes>\n        <mimetype>video/3gpp</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>3gp</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/3gpp2\">\n      <mimetypes>\n        <mimetype>video/3gpp2</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>3g2</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/x-ms-wmv\">\n      <mimetypes>\n        <mimetype>video/x-ms-wmv</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wmv</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/x-ms-wm\">\n      <mimetypes>\n        <mimetype>video/x-ms-wm</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wm</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/x-ms-wvx\">\n      <mimetypes>\n        <mimetype>video/x-ms-wvx</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wvx</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/x-ms-wmx\">\n      <mimetypes>\n        <mimetype>video/x-ms-wmx</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wmx</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"application/gxf\">\n      <mimetypes>\n        <mimetype>application/gxf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>gxf</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"application/mxf\">\n      <mimetypes>\n        <mimetype>application/mxf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mxf</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"java.png\" normalized=\"application/java-archive\">\n      <mimetypes>\n        <mimetype>application/java-archive</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>jar</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype binary=\"true\" iconPath=\"ps.png\" normalized=\"application/postscript\">\n      <mimetypes>\n        <mimetype>application/postscript</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ps</extension>\n        <extension>eps</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- MIME types specific to RAW images; for more details see\n      http://www.rawsamples.ch\n      http://ufraw.sourceforge.net/wiki\n      http://dotwhat.net/\n      http://trac.imagemagick.org/browser/ImageMagick/trunk/config/mime.xml -->\n\n    <!-- Canon RAW image file format -->\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-canon-cr2\">\n      <mimetypes>\n        <mimetype>image/x-canon-cr2</mimetype>\n        <mimetype>image/CR2</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>cr2</extension>\n      </extensions>\n    </mimetype>\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-canon-crw\">\n      <mimetypes>\n        <mimetype>image/x-canon-crw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>crw</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Nikon RAW image file format -->\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-nikon-nef\">\n      <mimetypes>\n        <mimetype>image/x-nikon-nef</mimetype>\n        <mimetype>image/NEF</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>nef</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Leica RAW image files format -->\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-adobe-dng\">\n      <mimetypes>\n        <mimetype>image/x-adobe-dng</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>dng</extension>\n      </extensions>\n    </mimetype>\n    <!-- Panasonic RAW image file format -->\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-panasonic-raw\">\n      <mimetypes>\n        <mimetype>image/x-panasonic-raw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>raw</extension>\n        <extension>rw2</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Fuji RAW image file format -->\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-fuji-raf\">\n      <mimetypes>\n        <mimetype>image/x-fuji-raf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>raf</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Sigma RAW image file format. A file with the extension .X3F is associated with a RAW image file taken with a digital cameras that incorporate the Foveon X3 direct image sensor. -->\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-sigma-x3f\">\n      <mimetypes>\n        <mimetype>image/x-sigma-x3f</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>x3f</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Pentax RAW image file format -->\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-pentax-pef\">\n      <mimetypes>\n        <mimetype>image/x-pentax-pef</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pef</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Kodak RAW image file format -->\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-kodak-dcr\">\n      <mimetypes>\n        <mimetype>image/x-kodak-dcr</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>dcr</extension>\n      </extensions>\n    </mimetype>\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-kodak-kdc\">\n      <mimetypes>\n        <mimetype>image/x-kodak-kdc</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>kdc</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Sony RAW image files format -->\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-sony-sr2\">\n      <mimetypes>\n        <mimetype>image/x-sony-sr2</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sr2</extension>\n      </extensions>\n    </mimetype>\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-sony-arw\">\n      <mimetypes>\n        <mimetype>image/x-sony-arw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>arw</extension>\n      </extensions>\n    </mimetype>\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-sony-srf\">\n      <mimetypes>\n        <mimetype>image/x-sony-srf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>srf</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Minolta RAW image file format -->\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-minolta-mrw\">\n      <mimetypes>\n        <mimetype>image/x-minolta-mrw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mrw</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Olympus RAW image file format -->\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-olympus-orf\">\n      <mimetypes>\n        <mimetype>image/x-olympus-orf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>orf</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Epson RAW image file format -->\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-raw-epson\">\n      <mimetypes>\n        <mimetype>image/x-raw-epson</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>erf</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Portable Pixmap image file Format -->\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-portable-pixmap\">\n      <mimetypes>\n        <mimetype>image/x-portable-pixmap</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ppm</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- the bellow registered file extensions are not sure  as Image Magick does not have them registered... -->\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/raw\">\n      <mimetypes>\n        <mimetype>image/raw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mos</extension>\n        <extension>nrw</extension>\n        <!-- Hasselblad RAW image file format -->\n        <extension>3fr</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Mamiya RAW image file format -->\n    <mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-raw\">\n      <mimetypes>\n        <mimetype>image/x-raw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mef</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype binary=\"true\" iconPath=\"wpd.png\" normalized=\"application/wordperfect\" oleSupported=\"false\">\n     <mimetypes>\n       <mimetype>application/wordperfect</mimetype>\n     </mimetypes>\n     <extensions>\n       <extension>wpd</extension>\n     </extensions>\n   </mimetype>\n\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService","rawName":"service:org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.mimetype/org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService/Contributions/org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService--mimetype","documentationHtml":"<p/>\nDefault mimetype contributions.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;mimetype binary=&quot;false&quot; iconPath=&quot;text.png&quot; normalized=&quot;text/plain&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;text/plain&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;txt&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"false\" iconPath=\"text.png\" normalized=\"text/plain\">\n      <mimetypes>\n        <mimetype>text/plain</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>txt</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;false&quot; iconPath=&quot;text.png&quot; normalized=&quot;text/html&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;text/html&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;html&lt;/extension&gt;\n        &lt;extension&gt;xhtml&lt;/extension&gt;\n        &lt;extension&gt;shtml&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"false\" iconPath=\"text.png\" normalized=\"text/html\">\n      <mimetypes>\n        <mimetype>text/html</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>html</extension>\n        <extension>xhtml</extension>\n        <extension>shtml</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;false&quot; iconPath=&quot;text.png&quot; normalized=&quot;text/structured&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;text/structured&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;stx&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"false\" iconPath=\"text.png\" normalized=\"text/structured\">\n      <mimetypes>\n        <mimetype>text/structured</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>stx</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;false&quot; iconPath=&quot;text.png&quot; normalized=&quot;text/x-rst&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;text/x-rst&lt;/mimetype&gt;\n        &lt;mimetype&gt;text/restructured&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;rst&lt;/extension&gt;\n        &lt;extension&gt;rest&lt;/extension&gt;\n        &lt;extension&gt;restx&lt;/extension&gt;\n        &lt;extension&gt;rest&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"false\" iconPath=\"text.png\" normalized=\"text/x-rst\">\n      <mimetypes>\n        <mimetype>text/x-rst</mimetype>\n        <mimetype>text/restructured</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>rst</extension>\n        <extension>rest</extension>\n        <extension>restx</extension>\n        <extension>rest</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;false&quot; iconPath=&quot;py.png&quot; normalized=&quot;text/python-source&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;text/python-source&lt;/mimetype&gt;\n        &lt;mimetype&gt;text/x-python&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;py&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"false\" iconPath=\"py.png\" normalized=\"text/python-source\">\n      <mimetypes>\n        <mimetype>text/python-source</mimetype>\n        <mimetype>text/x-python</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>py</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;false&quot; iconPath=&quot;java.png&quot; normalized=&quot;text/java-source&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;text/java-source&lt;/mimetype&gt;\n        &lt;mimetype&gt;text/x-java&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;java&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"false\" iconPath=\"java.png\" normalized=\"text/java-source\">\n      <mimetypes>\n        <mimetype>text/java-source</mimetype>\n        <mimetype>text/x-java</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>java</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;text.png&quot; normalized=&quot;text/rtf&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;text/rtf&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;rtf&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"text.png\" normalized=\"text/rtf\">\n      <mimetypes>\n        <mimetype>text/rtf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>rtf</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;false&quot; iconPath=&quot;text.png&quot; normalized=&quot;text/x-web-markdown&quot;&gt;\n     &lt;mimetypes&gt;\n       &lt;mimetype&gt;text/x-web-markdown&lt;/mimetype&gt;\n     &lt;/mimetypes&gt;\n     &lt;extensions&gt;\n       &lt;extension&gt;md&lt;/extension&gt;\n       &lt;extension&gt;mkd&lt;/extension&gt;\n       &lt;extension&gt;markdown&lt;/extension&gt;\n     &lt;/extensions&gt;\n   &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"false\" iconPath=\"text.png\" normalized=\"text/x-web-markdown\">\n     <mimetypes>\n       <mimetype>text/x-web-markdown</mimetype>\n     </mimetypes>\n     <extensions>\n       <extension>md</extension>\n       <extension>mkd</extension>\n       <extension>markdown</extension>\n     </extensions>\n   </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;false&quot; iconPath=&quot;email.png&quot; normalized=&quot;message/rfc822&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;message/rfc822&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;eml&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"false\" iconPath=\"email.png\" normalized=\"message/rfc822\">\n      <mimetypes>\n        <mimetype>message/rfc822</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>eml</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;email.png&quot; normalized=&quot;application/vnd.ms-outlook&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.ms-outlook&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;msg&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"email.png\" normalized=\"application/vnd.ms-outlook\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-outlook</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>msg</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;word.png&quot; normalized=&quot;application/msword&quot; oleSupported=&quot;true&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/msword&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;doc&lt;/extension&gt;\n        &lt;extension&gt;dot&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"word.png\" normalized=\"application/msword\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/msword</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>doc</extension>\n        <extension>dot</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;xls.png&quot; normalized=&quot;application/vnd.ms-excel&quot; oleSupported=&quot;true&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.ms-excel&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;xls&lt;/extension&gt;\n        &lt;extension&gt;xlt&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"xls.png\" normalized=\"application/vnd.ms-excel\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-excel</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xls</extension>\n        <extension>xlt</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;ppt.png&quot; normalized=&quot;application/vnd.ms-powerpoint&quot; oleSupported=&quot;true&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.ms-powerpoint&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;ppt&lt;/extension&gt;\n        &lt;extension&gt;pot&lt;/extension&gt;\n        &lt;extension&gt;pps&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"ppt.png\" normalized=\"application/vnd.ms-powerpoint\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-powerpoint</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ppt</extension>\n        <extension>pot</extension>\n        <extension>pps</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;mpp.png&quot; normalized=&quot;application/vnd.ms-project&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.ms-project&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;mpp&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"mpp.png\" normalized=\"application/vnd.ms-project\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-project</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mpp</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;pub.png&quot; normalized=&quot;application/vnd.ms-publisher&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.ms-publisher&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;pub&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"pub.png\" normalized=\"application/vnd.ms-publisher\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-publisher</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pub</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;xml.png&quot; normalized=&quot;application/docbook+xml&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/docbook+xml&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;doc.xml&lt;/extension&gt;\n        &lt;extension&gt;docb.xml&lt;/extension&gt;\n        &lt;extension&gt;docb&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"xml.png\" normalized=\"application/docbook+xml\">\n      <mimetypes>\n        <mimetype>application/docbook+xml</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>doc.xml</extension>\n        <extension>docb.xml</extension>\n        <extension>docb</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;false&quot; iconPath=&quot;xml.png&quot; normalized=&quot;text/xml&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;text/xml&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;xml&lt;/extension&gt;\n        &lt;extension&gt;graffle&lt;/extension&gt;\n        &lt;extension&gt;twb&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"false\" iconPath=\"xml.png\" normalized=\"text/xml\">\n      <mimetypes>\n        <mimetype>text/xml</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xml</extension>\n        <extension>graffle</extension>\n        <extension>twb</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;sxw.png&quot; normalized=&quot;application/vnd.sun.xml.writer&quot; oleSupported=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.sun.xml.writer&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;sxw&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"sxw.png\" normalized=\"application/vnd.sun.xml.writer\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.writer</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sxw</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;stw.png&quot; normalized=&quot;application/vnd.sun.xml.writer.template&quot; oleSupported=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.sun.xml.writer.template&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;stw&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"stw.png\" normalized=\"application/vnd.sun.xml.writer.template\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.writer.template</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>stw</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;sxi.png&quot; normalized=&quot;application/vnd.sun.xml.impress&quot; oleSupported=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.sun.xml.impress&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;sxi&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"sxi.png\" normalized=\"application/vnd.sun.xml.impress\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.impress</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sxi</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;sti.png&quot; normalized=&quot;application/vnd.sun.xml.impress.template&quot; oleSupported=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.sun.xml.impress.template&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;sti&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"sti.png\" normalized=\"application/vnd.sun.xml.impress.template\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.impress.template</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sti</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;sxc.png&quot; normalized=&quot;application/vnd.sun.xml.calc&quot; oleSupported=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.sun.xml.calc&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;sxc&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"sxc.png\" normalized=\"application/vnd.sun.xml.calc\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.calc</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sxc</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;stc.png&quot; normalized=&quot;application/vnd.sun.xml.calc.template&quot; oleSupported=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.sun.xml.calc.template&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;stc&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"stc.png\" normalized=\"application/vnd.sun.xml.calc.template\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.calc.template</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>stc</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;sxd.png&quot; normalized=&quot;application/vnd.sun.xml.draw&quot; oleSupported=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.sun.xml.draw&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;sxd&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"sxd.png\" normalized=\"application/vnd.sun.xml.draw\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.draw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sxd</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;std.png&quot; normalized=&quot;application/vnd.sun.xml.draw.template&quot; oleSupported=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.sun.xml.draw.template&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;std&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"std.png\" normalized=\"application/vnd.sun.xml.draw.template\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.draw.template</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>std</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;ods.png&quot; normalized=&quot;application/vnd.oasis.opendocument.spreadsheet&quot; oleSupported=&quot;true&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.oasis.opendocument.spreadsheet&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;ods&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"ods.png\" normalized=\"application/vnd.oasis.opendocument.spreadsheet\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.oasis.opendocument.spreadsheet</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ods</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;ots.png&quot; normalized=&quot;application/vnd.oasis.opendocument.spreadsheet-template&quot; oleSupported=&quot;true&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;\n          application/vnd.oasis.opendocument.spreadsheet-template\n        &lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;ots&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"ots.png\" normalized=\"application/vnd.oasis.opendocument.spreadsheet-template\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.oasis.opendocument.spreadsheet-template\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ots</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;odt.png&quot; normalized=&quot;application/vnd.oasis.opendocument.text&quot; oleSupported=&quot;true&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.oasis.opendocument.text&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;odt&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"odt.png\" normalized=\"application/vnd.oasis.opendocument.text\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.oasis.opendocument.text</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>odt</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;ott.png&quot; normalized=&quot;application/vnd.oasis.opendocument.text-template&quot; oleSupported=&quot;true&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.oasis.opendocument.text-template&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;ott&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"ott.png\" normalized=\"application/vnd.oasis.opendocument.text-template\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.oasis.opendocument.text-template</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ott</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;odp.png&quot; normalized=&quot;application/vnd.oasis.opendocument.presentation&quot; oleSupported=&quot;true&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.oasis.opendocument.presentation&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;odp&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"odp.png\" normalized=\"application/vnd.oasis.opendocument.presentation\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.oasis.opendocument.presentation</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>odp</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;otp.png&quot; normalized=&quot;application/vnd.oasis.opendocument.presentation-template&quot; oleSupported=&quot;true&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;\n          application/vnd.oasis.opendocument.presentation-template\n        &lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;otp&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"otp.png\" normalized=\"application/vnd.oasis.opendocument.presentation-template\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.oasis.opendocument.presentation-template\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>otp</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;odg.png&quot; normalized=&quot;application/vnd.oasis.opendocument.graphics&quot; oleSupported=&quot;true&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.oasis.opendocument.graphics&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;odg&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"odg.png\" normalized=\"application/vnd.oasis.opendocument.graphics\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.oasis.opendocument.graphics</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>odg</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;otg.png&quot; normalized=&quot;application/vnd.oasis.opendocument.graphics-template&quot; oleSupported=&quot;true&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;\n          application/vnd.oasis.opendocument.graphics-template\n        &lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;otg&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"otg.png\" normalized=\"application/vnd.oasis.opendocument.graphics-template\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.oasis.opendocument.graphics-template\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>otg</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;pdf.png&quot; normalized=&quot;application/pdf&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/pdf&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;pdf&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"pdf.png\" normalized=\"application/pdf\">\n      <mimetypes>\n        <mimetype>application/pdf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pdf</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;application.png&quot; normalized=&quot;application/octet-stream&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/octet-stream&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions/&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"application.png\" normalized=\"application/octet-stream\">\n      <mimetypes>\n        <mimetype>application/octet-stream</mimetype>\n      </mimetypes>\n      <extensions/>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;tar.png&quot; normalized=&quot;application/x-gtar&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/x-gtar&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions/&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"tar.png\" normalized=\"application/x-gtar\">\n      <mimetypes>\n        <mimetype>application/x-gtar</mimetype>\n      </mimetypes>\n      <extensions/>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;docx.png&quot; normalized=&quot;application/vnd.ms-word.document.macroEnabled.12&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.ms-word.document.macroEnabled.12&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;docm&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"docx.png\" normalized=\"application/vnd.ms-word.document.macroEnabled.12\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-word.document.macroEnabled.12</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>docm</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;docx.png&quot; normalized=&quot;application/vnd.openxmlformats-officedocument.wordprocessingml.document&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;\n          application/vnd.openxmlformats-officedocument.wordprocessingml.document\n        &lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;docx&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"docx.png\" normalized=\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.openxmlformats-officedocument.wordprocessingml.document\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>docx</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;docx.png&quot; normalized=&quot;application/vnd.ms-word.template.macroEnabled.12&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.ms-word.template.macroEnabled.12&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;dotm&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"docx.png\" normalized=\"application/vnd.ms-word.template.macroEnabled.12\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-word.template.macroEnabled.12</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>dotm</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;docx.png&quot; normalized=&quot;application/vnd.openxmlformats-officedocument.wordprocessingml.template&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;\n          application/vnd.openxmlformats-officedocument.wordprocessingml.template\n        &lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;dotx&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"docx.png\" normalized=\"application/vnd.openxmlformats-officedocument.wordprocessingml.template\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.openxmlformats-officedocument.wordprocessingml.template\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>dotx</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;pptx.png&quot; normalized=&quot;application/vnd.ms-powerpoint.slideshow.macroEnabled.12&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;\n          application/vnd.ms-powerpoint.slideshow.macroEnabled.12\n        &lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;ppsm&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"pptx.png\" normalized=\"application/vnd.ms-powerpoint.slideshow.macroEnabled.12\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.ms-powerpoint.slideshow.macroEnabled.12\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ppsm</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;pptx.png&quot; normalized=&quot;application/vnd.openxmlformats-officedocument.presentationml.slideshow&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;\n          application/vnd.openxmlformats-officedocument.presentationml.slideshow\n        &lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;ppsx&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"pptx.png\" normalized=\"application/vnd.openxmlformats-officedocument.presentationml.slideshow\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.openxmlformats-officedocument.presentationml.slideshow\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ppsx</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;pptx.png&quot; normalized=&quot;application/vnd.ms-powerpoint.presentation.macroEnabled.12&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;\n          application/vnd.ms-powerpoint.presentation.macroEnabled.12\n        &lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;pptm&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"pptx.png\" normalized=\"application/vnd.ms-powerpoint.presentation.macroEnabled.12\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.ms-powerpoint.presentation.macroEnabled.12\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pptm</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;pptx.png&quot; normalized=&quot;application/vnd.openxmlformats-officedocument.presentationml.presentation&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;\n          application/vnd.openxmlformats-officedocument.presentationml.presentation\n        &lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;pptx&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"pptx.png\" normalized=\"application/vnd.openxmlformats-officedocument.presentationml.presentation\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.openxmlformats-officedocument.presentationml.presentation\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pptx</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;xlsx.png&quot; normalized=&quot;application/vnd.ms-excel.sheet.binary.macroEnabled.12&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;\n          application/vnd.ms-excel.sheet.binary.macroEnabled.12\n        &lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;xlsb&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"xlsx.png\" normalized=\"application/vnd.ms-excel.sheet.binary.macroEnabled.12\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.ms-excel.sheet.binary.macroEnabled.12\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xlsb</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;xlsx.png&quot; normalized=&quot;application/vnd.ms-excel.sheet.macroEnabled.12&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.ms-excel.sheet.macroEnabled.12&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;xlsm&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"xlsx.png\" normalized=\"application/vnd.ms-excel.sheet.macroEnabled.12\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-excel.sheet.macroEnabled.12</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xlsm</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;xlsx.png&quot; normalized=&quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;\n          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n        &lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;xlsx&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"xlsx.png\" normalized=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xlsx</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;xlsx.png&quot; normalized=&quot;application/vnd.ms-xpsdocument&quot; onlineEditable=&quot;true&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.ms-xpsdocument&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;xps&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"xlsx.png\" normalized=\"application/vnd.ms-xpsdocument\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-xpsdocument</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xps</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;zip.png&quot; normalized=&quot;application/zip&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/zip&lt;/mimetype&gt;\n        &lt;mimetype&gt;application/x-zip-compressed&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;zip&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"zip.png\" normalized=\"application/zip\">\n      <mimetypes>\n        <mimetype>application/zip</mimetype>\n        <mimetype>application/x-zip-compressed</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>zip</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/gif&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/gif&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;gif&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/gif\">\n      <mimetypes>\n        <mimetype>image/gif</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>gif</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/png&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/png&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;png&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/png\">\n      <mimetypes>\n        <mimetype>image/png</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>png</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/jpeg&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/jpeg&lt;/mimetype&gt;\n        &lt;mimetype&gt;image/pjpeg&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;jpg&lt;/extension&gt;\n        &lt;extension&gt;jpeg&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/jpeg\">\n      <mimetypes>\n        <mimetype>image/jpeg</mimetype>\n        <mimetype>image/pjpeg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>jpg</extension>\n        <extension>jpeg</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-portable-bitmap&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-portable-bitmap&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;pbm&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-portable-bitmap\">\n      <mimetypes>\n        <mimetype>image/x-portable-bitmap</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pbm</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/bmp&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-bitmap&lt;/mimetype&gt;\n        &lt;mimetype&gt;image/bmp&lt;/mimetype&gt;\n\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;bmp&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/bmp\">\n      <mimetypes>\n        <mimetype>image/x-bitmap</mimetype>\n        <mimetype>image/bmp</mimetype>\n\n      </mimetypes>\n      <extensions>\n        <extension>bmp</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-portable-graymap&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-portable-graymap&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;ppm&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-portable-graymap\">\n      <mimetypes>\n        <mimetype>image/x-portable-graymap</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ppm</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/g3fax&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/g3fax&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;fax&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/g3fax\">\n      <mimetypes>\n        <mimetype>image/g3fax</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>fax</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/tiff&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/tiff&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;tiff&lt;/extension&gt;\n        &lt;extension&gt;tif&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/tiff\">\n      <mimetypes>\n        <mimetype>image/tiff</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>tiff</extension>\n        <extension>tif</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;false&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/svg+xml&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/svg+xml&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;svg&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"false\" iconPath=\"image.gif\" normalized=\"image/svg+xml\">\n      <mimetypes>\n        <mimetype>image/svg+xml</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>svg</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-dpx&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-dpx&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;dpx&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-dpx\">\n      <mimetypes>\n        <mimetype>image/x-dpx</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>dpx</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;false&quot; iconPath=&quot;image.gif&quot; normalized=&quot;application/illustrator&quot;&gt;\n     &lt;mimetypes&gt;\n       &lt;mimetype&gt;application/illustrator&lt;/mimetype&gt;\n     &lt;/mimetypes&gt;\n     &lt;extensions&gt;\n       &lt;extension&gt;ai&lt;/extension&gt;\n     &lt;/extensions&gt;\n   &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"false\" iconPath=\"image.gif\" normalized=\"application/illustrator\">\n     <mimetypes>\n       <mimetype>application/illustrator</mimetype>\n     </mimetypes>\n     <extensions>\n       <extension>ai</extension>\n     </extensions>\n   </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;false&quot; iconPath=&quot;image.gif&quot; normalized=&quot;application/photoshop&quot;&gt;\n     &lt;mimetypes&gt;\n       &lt;mimetype&gt;application/photoshop&lt;/mimetype&gt;\n       &lt;mimetype&gt;application/x-photoshop&lt;/mimetype&gt;\n       &lt;mimetype&gt;image/photoshop&lt;/mimetype&gt;\n       &lt;mimetype&gt;image/x-photoshop&lt;/mimetype&gt;\n       &lt;mimetype&gt;image/psd&lt;/mimetype&gt;\n       &lt;mimetype&gt;image/x-psd&lt;/mimetype&gt;\n       &lt;mimetype&gt;image/vnd.adobe.photoshop&lt;/mimetype&gt;\n       &lt;mimetype&gt;application/psd&lt;/mimetype&gt;\n       &lt;mimetype&gt;zz-application&lt;/mimetype&gt;\n       &lt;mimetype&gt;zz-winassoc-psd&lt;/mimetype&gt;\n     &lt;/mimetypes&gt;\n     &lt;extensions&gt;\n       &lt;extension&gt;psd&lt;/extension&gt;\n     &lt;/extensions&gt;\n   &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"false\" iconPath=\"image.gif\" normalized=\"application/photoshop\">\n     <mimetypes>\n       <mimetype>application/photoshop</mimetype>\n       <mimetype>application/x-photoshop</mimetype>\n       <mimetype>image/photoshop</mimetype>\n       <mimetype>image/x-photoshop</mimetype>\n       <mimetype>image/psd</mimetype>\n       <mimetype>image/x-psd</mimetype>\n       <mimetype>image/vnd.adobe.photoshop</mimetype>\n       <mimetype>application/psd</mimetype>\n       <mimetype>zz-application</mimetype>\n       <mimetype>zz-winassoc-psd</mimetype>\n     </mimetypes>\n     <extensions>\n       <extension>psd</extension>\n     </extensions>\n   </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;application/x-emf&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/x-emf&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;emf&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"application/x-emf\">\n      <mimetypes>\n        <mimetype>application/x-emf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>emf</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;application/x-vclmtf&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/x-vclmtf&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;vclmtf&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"application/x-vclmtf\">\n      <mimetypes>\n        <mimetype>application/x-vclmtf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>vclmtf</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;false&quot; iconPath=&quot;csv.png&quot; normalized=&quot;text/csv&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;text/csv&lt;/mimetype&gt;\n        &lt;mimetype&gt;text/comma-separated-values&lt;/mimetype&gt;\n        &lt;mimetype&gt;application/csv&lt;/mimetype&gt;\n        &lt;mimetype&gt;application/excel&lt;/mimetype&gt;\n        &lt;mimetype&gt;application/vnd.ms-excel&lt;/mimetype&gt;\n        &lt;mimetype&gt;application/vnd.msexcel&lt;/mimetype&gt;\n        &lt;mimetype&gt;text/anytext&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;csv&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"false\" iconPath=\"csv.png\" normalized=\"text/csv\">\n      <mimetypes>\n        <mimetype>text/csv</mimetype>\n        <mimetype>text/comma-separated-values</mimetype>\n        <mimetype>application/csv</mimetype>\n        <mimetype>application/excel</mimetype>\n        <mimetype>application/vnd.ms-excel</mimetype>\n        <mimetype>application/vnd.msexcel</mimetype>\n        <mimetype>text/anytext</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>csv</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;visio.gif&quot; normalized=&quot;application/visio&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/vnd.visio&lt;/mimetype&gt;\n        &lt;mimetype&gt;application/vnd.visio2013&lt;/mimetype&gt;\n        &lt;mimetype&gt;application/visio&lt;/mimetype&gt;\n        &lt;mimetype&gt;application/x-visio&lt;/mimetype&gt;\n        &lt;mimetype&gt;application/visio.drawing&lt;/mimetype&gt;\n        &lt;mimetype&gt;application/vsd&lt;/mimetype&gt;\n        &lt;mimetype&gt;application/x-vsd&lt;/mimetype&gt;\n        &lt;mimetype&gt;image/x-vsd&lt;/mimetype&gt;\n        &lt;mimetype&gt;zz-application/zz-winassoc-vsd&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;vsdx&lt;/extension&gt;\n        &lt;extension&gt;vsd&lt;/extension&gt;\n        &lt;extension&gt;vst&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"visio.gif\" normalized=\"application/visio\">\n      <mimetypes>\n        <mimetype>application/vnd.visio</mimetype>\n        <mimetype>application/vnd.visio2013</mimetype>\n        <mimetype>application/visio</mimetype>\n        <mimetype>application/x-visio</mimetype>\n        <mimetype>application/visio.drawing</mimetype>\n        <mimetype>application/vsd</mimetype>\n        <mimetype>application/x-vsd</mimetype>\n        <mimetype>image/x-vsd</mimetype>\n        <mimetype>zz-application/zz-winassoc-vsd</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>vsdx</extension>\n        <extension>vsd</extension>\n        <extension>vst</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;audio.png&quot; normalized=&quot;audio/mpeg&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;audio/mpeg&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;mp3&lt;/extension&gt;\n        &lt;extension&gt;mpga&lt;/extension&gt;\n        &lt;extension&gt;mp2&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/mpeg\">\n      <mimetypes>\n        <mimetype>audio/mpeg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mp3</extension>\n        <extension>mpga</extension>\n        <extension>mp2</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;wav.png&quot; normalized=&quot;audio/x-wav&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;audio/x-wav&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;wav&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"wav.png\" normalized=\"audio/x-wav\">\n      <mimetypes>\n        <mimetype>audio/x-wav</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wav</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;audio.png&quot; normalized=&quot;audio/x-mpegurl&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;audio/x-mpegurl&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;m3u&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/x-mpegurl\">\n      <mimetypes>\n        <mimetype>audio/x-mpegurl</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>m3u</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;audio.png&quot; normalized=&quot;audio/x-aiff&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;audio/x-aiff&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;aif&lt;/extension&gt;\n        &lt;extension&gt;aifc&lt;/extension&gt;\n        &lt;extension&gt;aiff&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/x-aiff\">\n      <mimetypes>\n        <mimetype>audio/x-aiff</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>aif</extension>\n        <extension>aifc</extension>\n        <extension>aiff</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;audio.png&quot; normalized=&quot;audio/ogg&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;audio/ogg&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;ogg&lt;/extension&gt;\n        &lt;extension&gt;oga&lt;/extension&gt;\n        &lt;extension&gt;spx&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/ogg\">\n      <mimetypes>\n        <mimetype>audio/ogg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ogg</extension>\n        <extension>oga</extension>\n        <extension>spx</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;audio.png&quot; normalized=&quot;audio/flac&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;audio/flac&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;flac&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/flac\">\n      <mimetypes>\n        <mimetype>audio/flac</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>flac</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;audio.png&quot; normalized=&quot;application/ogg&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/ogg&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;ogm&lt;/extension&gt;\n        &lt;extension&gt;ogx&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"application/ogg\">\n      <mimetypes>\n        <mimetype>application/ogg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ogm</extension>\n        <extension>ogx</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;audio.png&quot; normalized=&quot;audio/aac&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;audio/aac&lt;/mimetype&gt;\n        &lt;mimetype&gt;audio/aacp&lt;/mimetype&gt;\n        &lt;mimetype&gt;audio/3gpp&lt;/mimetype&gt;\n        &lt;mimetype&gt;audio/3gpp2&lt;/mimetype&gt;\n        &lt;mimetype&gt;audio/mp4&lt;/mimetype&gt;\n        &lt;mimetype&gt;audio/MP4A-LATM&lt;/mimetype&gt;\n        &lt;mimetype&gt;audio/mpeg4-generic&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;aac&lt;/extension&gt;\n        &lt;extension&gt;m4a&lt;/extension&gt;\n        &lt;extension&gt;m4b&lt;/extension&gt;\n        &lt;extension&gt;m4p&lt;/extension&gt;\n        &lt;extension&gt;m4r&lt;/extension&gt;\n        &lt;extension&gt;mp4&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/aac\">\n      <mimetypes>\n        <mimetype>audio/aac</mimetype>\n        <mimetype>audio/aacp</mimetype>\n        <mimetype>audio/3gpp</mimetype>\n        <mimetype>audio/3gpp2</mimetype>\n        <mimetype>audio/mp4</mimetype>\n        <mimetype>audio/MP4A-LATM</mimetype>\n        <mimetype>audio/mpeg4-generic</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>aac</extension>\n        <extension>m4a</extension>\n        <extension>m4b</extension>\n        <extension>m4p</extension>\n        <extension>m4r</extension>\n        <extension>mp4</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;audio.png&quot; normalized=&quot;audio/x-matroska&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;audio/x-matroska&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;mka&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/x-matroska\">\n      <mimetypes>\n        <mimetype>audio/x-matroska</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mka</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;audio.png&quot; normalized=&quot;audio/x-ms-wax&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;audio/x-ms-wax&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;wax&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/x-ms-wax\">\n      <mimetypes>\n        <mimetype>audio/x-ms-wax</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wax</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;audio.png&quot; normalized=&quot;audio/x-ms-wma&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;audio/x-ms-wma&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;wma&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"audio.png\" normalized=\"audio/x-ms-wma\">\n      <mimetypes>\n        <mimetype>audio/x-ms-wma</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wma</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/mpeg&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/mpeg&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;mpa&lt;/extension&gt;\n        &lt;extension&gt;mpe&lt;/extension&gt;\n        &lt;extension&gt;mpeg&lt;/extension&gt;\n        &lt;extension&gt;mpg&lt;/extension&gt;\n        &lt;extension&gt;mpv2&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/mpeg\">\n      <mimetypes>\n        <mimetype>video/mpeg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mpa</extension>\n        <extension>mpe</extension>\n        <extension>mpeg</extension>\n        <extension>mpg</extension>\n        <extension>mpv2</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/mp4&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/mp4&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;mp4&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/mp4\">\n      <mimetypes>\n        <mimetype>video/mp4</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mp4</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/quicktime&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/quicktime&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;mov&lt;/extension&gt;\n        &lt;extension&gt;qt&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/quicktime\">\n      <mimetypes>\n        <mimetype>video/quicktime</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mov</extension>\n        <extension>qt</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/ogg&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/ogg&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;ogv&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/ogg\">\n      <mimetypes>\n        <mimetype>video/ogg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ogv</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/webm&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/webm&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;webm&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/webm\">\n      <mimetypes>\n        <mimetype>video/webm</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>webm</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/x-matroska&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/x-matroska&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;mkv&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/x-matroska\">\n      <mimetypes>\n        <mimetype>video/x-matroska</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mkv</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/x-ms-asf&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/x-ms-asf&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;asf&lt;/extension&gt;\n        &lt;extension&gt;asr&lt;/extension&gt;\n        &lt;extension&gt;asx&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/x-ms-asf\">\n      <mimetypes>\n        <mimetype>video/x-ms-asf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>asf</extension>\n        <extension>asr</extension>\n        <extension>asx</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/x-msvideo&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/x-msvideo&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;avi&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/x-msvideo\">\n      <mimetypes>\n        <mimetype>video/x-msvideo</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>avi</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/fli&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/fli&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;fli&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/fli\">\n      <mimetypes>\n        <mimetype>video/fli</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>fli</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/flv&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/flv&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;flv&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/flv\">\n      <mimetypes>\n        <mimetype>video/flv</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>flv</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/vnd.vivo&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/vnd.vivo&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;viv&lt;/extension&gt;\n        &lt;extension&gt;vivo&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/vnd.vivo\">\n      <mimetypes>\n        <mimetype>video/vnd.vivo</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>viv</extension>\n        <extension>vivo</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/x-m4v&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/x-m4v&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;m4v&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/x-m4v\">\n      <mimetypes>\n        <mimetype>video/x-m4v</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>m4v</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/3gpp&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/3gpp&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;3gp&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/3gpp\">\n      <mimetypes>\n        <mimetype>video/3gpp</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>3gp</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/3gpp2&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/3gpp2&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;3g2&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/3gpp2\">\n      <mimetypes>\n        <mimetype>video/3gpp2</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>3g2</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/x-ms-wmv&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/x-ms-wmv&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;wmv&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/x-ms-wmv\">\n      <mimetypes>\n        <mimetype>video/x-ms-wmv</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wmv</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/x-ms-wm&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/x-ms-wm&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;wm&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/x-ms-wm\">\n      <mimetypes>\n        <mimetype>video/x-ms-wm</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wm</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/x-ms-wvx&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/x-ms-wvx&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;wvx&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/x-ms-wvx\">\n      <mimetypes>\n        <mimetype>video/x-ms-wvx</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wvx</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;video/x-ms-wmx&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;video/x-ms-wmx&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;wmx&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"video/x-ms-wmx\">\n      <mimetypes>\n        <mimetype>video/x-ms-wmx</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wmx</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;application/gxf&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/gxf&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;gxf&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"application/gxf\">\n      <mimetypes>\n        <mimetype>application/gxf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>gxf</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;video.png&quot; normalized=&quot;application/mxf&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/mxf&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;mxf&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"video.png\" normalized=\"application/mxf\">\n      <mimetypes>\n        <mimetype>application/mxf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mxf</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;java.png&quot; normalized=&quot;application/java-archive&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/java-archive&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;jar&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"java.png\" normalized=\"application/java-archive\">\n      <mimetypes>\n        <mimetype>application/java-archive</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>jar</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;ps.png&quot; normalized=&quot;application/postscript&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;application/postscript&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;ps&lt;/extension&gt;\n        &lt;extension&gt;eps&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"ps.png\" normalized=\"application/postscript\">\n      <mimetypes>\n        <mimetype>application/postscript</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ps</extension>\n        <extension>eps</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-canon-cr2&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-canon-cr2&lt;/mimetype&gt;\n        &lt;mimetype&gt;image/CR2&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;cr2&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-canon-cr2\">\n      <mimetypes>\n        <mimetype>image/x-canon-cr2</mimetype>\n        <mimetype>image/CR2</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>cr2</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-canon-crw&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-canon-crw&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;crw&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-canon-crw\">\n      <mimetypes>\n        <mimetype>image/x-canon-crw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>crw</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-nikon-nef&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-nikon-nef&lt;/mimetype&gt;\n        &lt;mimetype&gt;image/NEF&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;nef&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-nikon-nef\">\n      <mimetypes>\n        <mimetype>image/x-nikon-nef</mimetype>\n        <mimetype>image/NEF</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>nef</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-adobe-dng&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-adobe-dng&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;dng&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-adobe-dng\">\n      <mimetypes>\n        <mimetype>image/x-adobe-dng</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>dng</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-panasonic-raw&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-panasonic-raw&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;raw&lt;/extension&gt;\n        &lt;extension&gt;rw2&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-panasonic-raw\">\n      <mimetypes>\n        <mimetype>image/x-panasonic-raw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>raw</extension>\n        <extension>rw2</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-fuji-raf&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-fuji-raf&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;raf&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-fuji-raf\">\n      <mimetypes>\n        <mimetype>image/x-fuji-raf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>raf</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-sigma-x3f&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-sigma-x3f&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;x3f&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-sigma-x3f\">\n      <mimetypes>\n        <mimetype>image/x-sigma-x3f</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>x3f</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-pentax-pef&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-pentax-pef&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;pef&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-pentax-pef\">\n      <mimetypes>\n        <mimetype>image/x-pentax-pef</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pef</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-kodak-dcr&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-kodak-dcr&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;dcr&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-kodak-dcr\">\n      <mimetypes>\n        <mimetype>image/x-kodak-dcr</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>dcr</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-kodak-kdc&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-kodak-kdc&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;kdc&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-kodak-kdc\">\n      <mimetypes>\n        <mimetype>image/x-kodak-kdc</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>kdc</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-sony-sr2&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-sony-sr2&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;sr2&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-sony-sr2\">\n      <mimetypes>\n        <mimetype>image/x-sony-sr2</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sr2</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-sony-arw&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-sony-arw&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;arw&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-sony-arw\">\n      <mimetypes>\n        <mimetype>image/x-sony-arw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>arw</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-sony-srf&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-sony-srf&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;srf&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-sony-srf\">\n      <mimetypes>\n        <mimetype>image/x-sony-srf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>srf</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-minolta-mrw&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-minolta-mrw&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;mrw&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-minolta-mrw\">\n      <mimetypes>\n        <mimetype>image/x-minolta-mrw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mrw</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-olympus-orf&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-olympus-orf&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;orf&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-olympus-orf\">\n      <mimetypes>\n        <mimetype>image/x-olympus-orf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>orf</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-raw-epson&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-raw-epson&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;erf&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-raw-epson\">\n      <mimetypes>\n        <mimetype>image/x-raw-epson</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>erf</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-portable-pixmap&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-portable-pixmap&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;ppm&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-portable-pixmap\">\n      <mimetypes>\n        <mimetype>image/x-portable-pixmap</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ppm</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/raw&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/raw&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;mos&lt;/extension&gt;\n        &lt;extension&gt;nrw&lt;/extension&gt;\n        &lt;!-- Hasselblad RAW image file format --&gt;\n        &lt;extension&gt;3fr&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/raw\">\n      <mimetypes>\n        <mimetype>image/raw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mos</extension>\n        <extension>nrw</extension>\n        <!-- Hasselblad RAW image file format -->\n        <extension>3fr</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;image.gif&quot; normalized=&quot;image/x-raw&quot;&gt;\n      &lt;mimetypes&gt;\n        &lt;mimetype&gt;image/x-raw&lt;/mimetype&gt;\n      &lt;/mimetypes&gt;\n      &lt;extensions&gt;\n        &lt;extension&gt;mef&lt;/extension&gt;\n      &lt;/extensions&gt;\n    &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"image.gif\" normalized=\"image/x-raw\">\n      <mimetypes>\n        <mimetype>image/x-raw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mef</extension>\n      </extensions>\n    </mimetype>"},{"documentation":"","xml":"&lt;mimetype binary=&quot;true&quot; iconPath=&quot;wpd.png&quot; normalized=&quot;application/wordperfect&quot; oleSupported=&quot;false&quot;&gt;\n     &lt;mimetypes&gt;\n       &lt;mimetype&gt;application/wordperfect&lt;/mimetype&gt;\n     &lt;/mimetypes&gt;\n     &lt;extensions&gt;\n       &lt;extension&gt;wpd&lt;/extension&gt;\n     &lt;/extensions&gt;\n   &lt;/mimetype&gt;","id":null,"label":"mimetype","rawXml":"<mimetype binary=\"true\" iconPath=\"wpd.png\" normalized=\"application/wordperfect\" oleSupported=\"false\">\n     <mimetypes>\n       <mimetype>application/wordperfect</mimetype>\n     </mimetypes>\n     <extensions>\n       <extension>wpd</extension>\n     </extensions>\n   </mimetype>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService--extension","extensionPoint":"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService--extension","documentation":"Default filename extension to mimetype rules.\n","xml":"<extension point=\"extension\" target=\"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService\">\n\n    <documentation>Default filename extension to mimetype rules.</documentation>\n\n    <fileExtension ambiguous=\"true\" mimetype=\"text/xml\" name=\"xml\"/>\n    <fileExtension ambiguous=\"false\" mimetype=\"application/visio\" name=\"vsd\"/>\n    <fileExtension ambiguous=\"false\" mimetype=\"application/visio\" name=\"vst\"/>\n    <fileExtension ambiguous=\"false\" mimetype=\"application/illustrator\" name=\"ai\"/>\n    <fileExtension ambiguous=\"false\" mimetype=\"application/vnd.apple.keynote\" name=\"key\"/>\n    <fileExtension ambiguous=\"false\" mimetype=\"application/vnd.apple.numbers\" name=\"numbers\"/>\n    <fileExtension ambiguous=\"false\" mimetype=\"application/vnd.apple.pages\" name=\"pages\"/>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService","rawName":"service:org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.mimetype/org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService/Contributions/org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService--extension","documentationHtml":"<p/>\nDefault filename extension to mimetype rules.","contributionItems":[{"documentation":"","xml":"&lt;fileExtension ambiguous=&quot;true&quot; mimetype=&quot;text/xml&quot; name=&quot;xml&quot;/&gt;","id":"xml","label":"fileExtension xml","rawXml":"<fileExtension ambiguous=\"true\" mimetype=\"text/xml\" name=\"xml\"/>"},{"documentation":"","xml":"&lt;fileExtension ambiguous=&quot;false&quot; mimetype=&quot;application/visio&quot; name=&quot;vsd&quot;/&gt;","id":"vsd","label":"fileExtension vsd","rawXml":"<fileExtension ambiguous=\"false\" mimetype=\"application/visio\" name=\"vsd\"/>"},{"documentation":"","xml":"&lt;fileExtension ambiguous=&quot;false&quot; mimetype=&quot;application/visio&quot; name=&quot;vst&quot;/&gt;","id":"vst","label":"fileExtension vst","rawXml":"<fileExtension ambiguous=\"false\" mimetype=\"application/visio\" name=\"vst\"/>"},{"documentation":"","xml":"&lt;fileExtension ambiguous=&quot;false&quot; mimetype=&quot;application/illustrator&quot; name=&quot;ai&quot;/&gt;","id":"ai","label":"fileExtension ai","rawXml":"<fileExtension ambiguous=\"false\" mimetype=\"application/illustrator\" name=\"ai\"/>"},{"documentation":"","xml":"&lt;fileExtension ambiguous=&quot;false&quot; mimetype=&quot;application/vnd.apple.keynote&quot; name=&quot;key&quot;/&gt;","id":"key","label":"fileExtension key","rawXml":"<fileExtension ambiguous=\"false\" mimetype=\"application/vnd.apple.keynote\" name=\"key\"/>"},{"documentation":"","xml":"&lt;fileExtension ambiguous=&quot;false&quot; mimetype=&quot;application/vnd.apple.numbers&quot; name=&quot;numbers&quot;/&gt;","id":"numbers","label":"fileExtension numbers","rawXml":"<fileExtension ambiguous=\"false\" mimetype=\"application/vnd.apple.numbers\" name=\"numbers\"/>"},{"documentation":"","xml":"&lt;fileExtension ambiguous=&quot;false&quot; mimetype=&quot;application/vnd.apple.pages&quot; name=&quot;pages&quot;/&gt;","id":"pages","label":"fileExtension pages","rawXml":"<fileExtension ambiguous=\"false\" mimetype=\"application/vnd.apple.pages\" name=\"pages\"/>"}]}],"componentClass":"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService","documentation":"\n    Core mimetype registry service.\n\n    <p>Deals with mimetypes registration and mimetype detection (BETA).</p>\n\n\n    @version 2.0\n    @author <a href=\"mailto:ja@nuxeo.com\">Julien Anguenot</a>\n\n    @author <a href=\"mailto:lgodard@nuxeo.com\">Laurent Godard</a>\n\n    @author <a href=\"mailto:og@nuxeo.com\">Olivier Grisel</a>\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.mimetype/org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService","documentationHtml":"<p/>\nCore mimetype registry service.\n<p/>\n<p>Deals with mimetypes registration and mimetype detection (BETA).</p>\n<p/>\n@version 2.0\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-mimetype/bin/main/OSGI-INF/nxmimetype-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component\n  name=\"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService\">\n\n  <documentation>\n    Core mimetype registry service.\n\n    <p>Deals with mimetypes registration and mimetype detection (BETA).</p>\n\n    @version 2.0\n    @author <a href=\"mailto:ja@nuxeo.com\">Julien Anguenot</a>\n    @author <a href=\"mailto:lgodard@nuxeo.com\">Laurent Godard</a>\n    @author <a href=\"mailto:og@nuxeo.com\">Olivier Grisel</a>\n  </documentation>\n\n  <implementation\n    class=\"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService\" />\n\n  <service>\n    <provide\n      interface=\"org.nuxeo.ecm.platform.mimetype.interfaces.MimetypeRegistry\" />\n  </service>\n\n  <extension-point name=\"mimetype\">\n\n    <documentation>\n\n      Extension allowing one to register mimetypes.\n\n      <p />\n\n      A mimetype holds meta information about a given mimetype.\n\n      <ul>\n        <li>RFC-2046 major</li>\n        <li>RFC-2046 minor</li>\n        <li>Icon</li>\n        <li>List of extensions (the first one will be used as default)</li>\n        <li>List of mimetype names</li>\n        <li>Boolean flag if a file of this mimetype is binary</li>\n        <li>\n          Boolean flag onlineEditable if a file of this mimetype is supported by\n          online Edit - default is false\n        </li>\n        <li>\n          Boolean flag oleSupported if a file of this mimetype is supported by\n          the oleExtract plugin - default is false\n        </li>\n      </ul>\n\n      For instance :\n\n      <code>\n\n        <mimetype normalized=\"application/pdf\" binary=\"true\"\n          iconPath=\"pdf.png\">\n          <mimetypes>\n            <mimetype>application/pdf</mimetype>\n          </mimetypes>\n          <extensions>\n            <extension>pdf</extension>\n          </extensions>\n        </mimetype>\n\n      </code>\n\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.platform.mimetype.service.MimetypeDescriptor\" />\n\n  </extension-point>\n\n  <extension-point name=\"extension\">\n\n    <documentation>\n\n      Extension to register filename extension to mimetype association rules.\n\n      <p />\n\n      Specify how a given extension should be used to detect a mimetype. If the\n      extension is marked 'ambiguous', a sniffing of the content of the file is\n      advised.\n\n      For instance :\n\n      <code>\n\n        <fileExtension name=\"xml\" mimetype=\"text/xml\" ambiguous=\"true\" />\n\n      </code>\n\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.platform.mimetype.service.ExtensionDescriptor\" />\n\n  </extension-point>\n\n\n  <extension\n    target=\"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService\"\n    point=\"mimetype\">\n\n    <documentation>\n\n      Default mimetype contributions.\n\n    </documentation>\n\n\n    <!--  text based document types -->\n\n    <mimetype normalized=\"text/plain\" binary=\"false\" iconPath=\"text.png\">\n      <mimetypes>\n        <mimetype>text/plain</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>txt</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"text/html\" binary=\"false\" iconPath=\"text.png\">\n      <mimetypes>\n        <mimetype>text/html</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>html</extension>\n        <extension>xhtml</extension>\n        <extension>shtml</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"text/structured\" binary=\"false\" iconPath=\"text.png\">\n      <mimetypes>\n        <mimetype>text/structured</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>stx</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"text/x-rst\" binary=\"false\" iconPath=\"text.png\">\n      <mimetypes>\n        <mimetype>text/x-rst</mimetype>\n        <mimetype>text/restructured</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>rst</extension>\n        <extension>rest</extension>\n        <extension>restx</extension>\n        <extension>rest</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"text/python-source\" binary=\"false\"\n      iconPath=\"py.png\">\n      <mimetypes>\n        <mimetype>text/python-source</mimetype>\n        <mimetype>text/x-python</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>py</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"text/java-source\" binary=\"false\"\n      iconPath=\"java.png\">\n      <mimetypes>\n        <mimetype>text/java-source</mimetype>\n        <mimetype>text/x-java</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>java</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"text/rtf\" binary=\"true\" iconPath=\"text.png\">\n      <mimetypes>\n        <mimetype>text/rtf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>rtf</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"text/x-web-markdown\"\n     binary=\"false\" iconPath=\"text.png\">\n     <mimetypes>\n       <mimetype>text/x-web-markdown</mimetype>\n     </mimetypes>\n     <extensions>\n       <extension>md</extension>\n       <extension>mkd</extension>\n       <extension>markdown</extension>\n     </extensions>\n   </mimetype>\n\n    <mimetype normalized=\"message/rfc822\" binary=\"false\" iconPath=\"email.png\">\n      <mimetypes>\n        <mimetype>message/rfc822</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>eml</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.ms-outlook\" binary=\"true\" iconPath=\"email.png\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-outlook</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>msg</extension>\n      </extensions>\n    </mimetype>\n\n    <!--  Microsoft Office document -->\n\n    <mimetype normalized=\"application/msword\" binary=\"true\" iconPath=\"word.png\"\n      onlineEditable=\"true\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/msword</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>doc</extension>\n        <extension>dot</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.ms-excel\" binary=\"true\"\n      iconPath=\"xls.png\" onlineEditable=\"true\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-excel</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xls</extension>\n        <extension>xlt</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.ms-powerpoint\" binary=\"true\"\n      iconPath=\"ppt.png\" onlineEditable=\"true\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-powerpoint</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ppt</extension>\n        <extension>pot</extension>\n        <extension>pps</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.ms-project\" binary=\"true\"\n      iconPath=\"mpp.png\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-project</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mpp</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.ms-publisher\" binary=\"true\"\n      iconPath=\"pub.png\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-publisher</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pub</extension>\n      </extensions>\n    </mimetype>\n\n    <!--  XML based document types -->\n\n    <mimetype normalized=\"application/docbook+xml\" binary=\"true\"\n      iconPath=\"xml.png\">\n      <mimetypes>\n        <mimetype>application/docbook+xml</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>doc.xml</extension>\n        <extension>docb.xml</extension>\n        <extension>docb</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"text/xml\" binary=\"false\" iconPath=\"xml.png\">\n      <mimetypes>\n        <mimetype>text/xml</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xml</extension>\n        <extension>graffle</extension>\n        <extension>twb</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- OpenOffice.org 1.x document types -->\n\n    <mimetype normalized=\"application/vnd.sun.xml.writer\" binary=\"true\"\n      iconPath=\"sxw.png\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.writer</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sxw</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.sun.xml.writer.template\" binary=\"true\"\n      iconPath=\"stw.png\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.writer.template</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>stw</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.sun.xml.impress\" binary=\"true\"\n      iconPath=\"sxi.png\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.impress</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sxi</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.sun.xml.impress.template\"\n      binary=\"true\" iconPath=\"sti.png\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.impress.template</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sti</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.sun.xml.calc\" binary=\"true\"\n      iconPath=\"sxc.png\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.calc</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sxc</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.sun.xml.calc.template\" binary=\"true\"\n      iconPath=\"stc.png\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.calc.template</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>stc</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.sun.xml.draw\" binary=\"true\"\n      iconPath=\"sxd.png\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.draw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sxd</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.sun.xml.draw.template\" binary=\"true\"\n      iconPath=\"std.png\" oleSupported=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.sun.xml.draw.template</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>std</extension>\n      </extensions>\n    </mimetype>\n\n    <!--  OpenOffice.org 2.x document types -->\n\n    <mimetype normalized=\"application/vnd.oasis.opendocument.spreadsheet\"\n      binary=\"true\" iconPath=\"ods.png\" oleSupported=\"true\"\n      onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.oasis.opendocument.spreadsheet</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ods</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype\n      normalized=\"application/vnd.oasis.opendocument.spreadsheet-template\"\n      binary=\"true\" iconPath=\"ots.png\" oleSupported=\"true\"\n      onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.oasis.opendocument.spreadsheet-template\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ots</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.oasis.opendocument.text\" binary=\"true\"\n      iconPath=\"odt.png\" oleSupported=\"true\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.oasis.opendocument.text</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>odt</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.oasis.opendocument.text-template\"\n      binary=\"true\" iconPath=\"ott.png\" oleSupported=\"true\"\n      onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.oasis.opendocument.text-template</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ott</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.oasis.opendocument.presentation\"\n      binary=\"true\" iconPath=\"odp.png\" oleSupported=\"true\"\n      onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.oasis.opendocument.presentation</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>odp</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype\n      normalized=\"application/vnd.oasis.opendocument.presentation-template\"\n      binary=\"true\" iconPath=\"otp.png\" oleSupported=\"true\"\n      onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.oasis.opendocument.presentation-template\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>otp</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.oasis.opendocument.graphics\"\n      binary=\"true\" iconPath=\"odg.png\" oleSupported=\"true\"\n      onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.oasis.opendocument.graphics</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>odg</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.oasis.opendocument.graphics-template\"\n      binary=\"true\" iconPath=\"otg.png\" oleSupported=\"true\"\n      onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.oasis.opendocument.graphics-template\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>otg</extension>\n      </extensions>\n    </mimetype>\n\n    <!--  Adobe PDF -->\n    <mimetype normalized=\"application/pdf\" binary=\"true\" iconPath=\"pdf.png\">\n      <mimetypes>\n        <mimetype>application/pdf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pdf</extension>\n      </extensions>\n    </mimetype>\n\n    <!--  binaries -->\n\n    <mimetype normalized=\"application/octet-stream\" binary=\"true\"\n      iconPath=\"application.png\">\n      <mimetypes>\n        <mimetype>application/octet-stream</mimetype>\n      </mimetypes>\n      <extensions />\n    </mimetype>\n\n    <!--  Archives -->\n    <mimetype normalized=\"application/x-gtar\" binary=\"true\"\n      iconPath=\"tar.png\">\n      <mimetypes>\n        <mimetype>application/x-gtar</mimetype>\n      </mimetypes>\n      <extensions />\n    </mimetype>\n\n\n    <!-- Ms Office 2007 -->\n\n    <mimetype normalized=\"application/vnd.ms-word.document.macroEnabled.12\"\n      binary=\"true\" iconPath=\"docx.png\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-word.document.macroEnabled.12</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>docm</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype\n      normalized=\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n      binary=\"true\" iconPath=\"docx.png\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.openxmlformats-officedocument.wordprocessingml.document\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>docx</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype normalized=\"application/vnd.ms-word.template.macroEnabled.12\"\n      binary=\"true\" iconPath=\"docx.png\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-word.template.macroEnabled.12</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>dotm</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype\n      normalized=\"application/vnd.openxmlformats-officedocument.wordprocessingml.template\"\n      binary=\"true\" iconPath=\"docx.png\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.openxmlformats-officedocument.wordprocessingml.template\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>dotx</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype\n      normalized=\"application/vnd.ms-powerpoint.slideshow.macroEnabled.12\"\n      binary=\"true\" iconPath=\"pptx.png\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.ms-powerpoint.slideshow.macroEnabled.12\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ppsm</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype\n      normalized=\"application/vnd.openxmlformats-officedocument.presentationml.slideshow\"\n      binary=\"true\" iconPath=\"pptx.png\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.openxmlformats-officedocument.presentationml.slideshow\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ppsx</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype\n      normalized=\"application/vnd.ms-powerpoint.presentation.macroEnabled.12\"\n      binary=\"true\" iconPath=\"pptx.png\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.ms-powerpoint.presentation.macroEnabled.12\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pptm</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype\n      normalized=\"application/vnd.openxmlformats-officedocument.presentationml.presentation\"\n      binary=\"true\" iconPath=\"pptx.png\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.openxmlformats-officedocument.presentationml.presentation\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pptx</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.ms-excel.sheet.binary.macroEnabled.12\"\n      binary=\"true\" iconPath=\"xlsx.png\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.ms-excel.sheet.binary.macroEnabled.12\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xlsb</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/vnd.ms-excel.sheet.macroEnabled.12\"\n      binary=\"true\" iconPath=\"xlsx.png\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-excel.sheet.macroEnabled.12</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xlsm</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype\n      normalized=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n      binary=\"true\" iconPath=\"xlsx.png\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>\n          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n        </mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xlsx</extension>\n      </extensions>\n    </mimetype>\n\n    <!--  element of office 2007, but which one ??? -->\n    <mimetype normalized=\"application/vnd.ms-xpsdocument\" binary=\"true\"\n      iconPath=\"xlsx.png\" onlineEditable=\"true\">\n      <mimetypes>\n        <mimetype>application/vnd.ms-xpsdocument</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>xps</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/zip\" binary=\"true\" iconPath=\"zip.png\">\n      <mimetypes>\n        <mimetype>application/zip</mimetype>\n        <mimetype>application/x-zip-compressed</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>zip</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- images -->\n    <mimetype normalized=\"image/gif\" binary=\"true\" iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/gif</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>gif</extension>\n      </extensions>\n    </mimetype>\n    <mimetype normalized=\"image/png\" binary=\"true\" iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/png</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>png</extension>\n      </extensions>\n    </mimetype>\n    <mimetype normalized=\"image/jpeg\" binary=\"true\" iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/jpeg</mimetype>\n        <mimetype>image/pjpeg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>jpg</extension>\n        <extension>jpeg</extension>\n      </extensions>\n    </mimetype>\n    <mimetype normalized=\"image/x-portable-bitmap\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-portable-bitmap</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pbm</extension>\n      </extensions>\n    </mimetype>\n    <mimetype normalized=\"image/bmp\" binary=\"true\" iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-bitmap</mimetype>\n        <mimetype>image/bmp</mimetype>\n\n      </mimetypes>\n      <extensions>\n        <extension>bmp</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"image/x-portable-graymap\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-portable-graymap</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ppm</extension>\n      </extensions>\n    </mimetype>\n    <mimetype normalized=\"image/g3fax\" binary=\"true\" iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/g3fax</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>fax</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"image/tiff\" binary=\"true\" iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/tiff</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>tiff</extension>\n        <extension>tif</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"image/svg+xml\" binary=\"false\" iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/svg+xml</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>svg</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"image/x-dpx\" binary=\"true\" iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-dpx</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>dpx</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Adobe Illustrator -->\n   <mimetype normalized=\"application/illustrator\" binary=\"false\" iconPath=\"image.gif\">\n     <mimetypes>\n       <mimetype>application/illustrator</mimetype>\n     </mimetypes>\n     <extensions>\n       <extension>ai</extension>\n     </extensions>\n   </mimetype>\n\n   <!-- Adobe Photoshop -->\n   <mimetype normalized=\"application/photoshop\" binary=\"false\" iconPath=\"image.gif\">\n     <mimetypes>\n       <mimetype>application/photoshop</mimetype>\n       <mimetype>application/x-photoshop</mimetype>\n       <mimetype>image/photoshop</mimetype>\n       <mimetype>image/x-photoshop</mimetype>\n       <mimetype>image/psd</mimetype>\n       <mimetype>image/x-psd</mimetype>\n       <mimetype>image/vnd.adobe.photoshop</mimetype>\n       <mimetype>application/psd</mimetype>\n       <mimetype>zz-application</mimetype>\n       <mimetype>zz-winassoc-psd</mimetype>\n     </mimetypes>\n     <extensions>\n       <extension>psd</extension>\n     </extensions>\n   </mimetype>\n\n    <mimetype normalized=\"application/x-emf\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>application/x-emf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>emf</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/x-vclmtf\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>application/x-vclmtf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>vclmtf</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"text/csv\" binary=\"false\" iconPath=\"csv.png\">\n      <mimetypes>\n        <mimetype>text/csv</mimetype>\n        <mimetype>text/comma-separated-values</mimetype>\n        <mimetype>application/csv</mimetype>\n        <mimetype>application/excel</mimetype>\n        <mimetype>application/vnd.ms-excel</mimetype>\n        <mimetype>application/vnd.msexcel</mimetype>\n        <mimetype>text/anytext</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>csv</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/visio\" binary=\"true\"\n      iconPath=\"visio.gif\">\n      <mimetypes>\n        <mimetype>application/vnd.visio</mimetype>\n        <mimetype>application/vnd.visio2013</mimetype>\n        <mimetype>application/visio</mimetype>\n        <mimetype>application/x-visio</mimetype>\n        <mimetype>application/visio.drawing</mimetype>\n        <mimetype>application/vsd</mimetype>\n        <mimetype>application/x-vsd</mimetype>\n        <mimetype>image/x-vsd</mimetype>\n        <mimetype>zz-application/zz-winassoc-vsd</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>vsdx</extension>\n        <extension>vsd</extension>\n        <extension>vst</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype normalized=\"audio/mpeg\" binary=\"true\" iconPath=\"audio.png\">\n      <mimetypes>\n        <mimetype>audio/mpeg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mp3</extension>\n        <extension>mpga</extension>\n        <extension>mp2</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"audio/x-wav\" binary=\"true\" iconPath=\"wav.png\">\n      <mimetypes>\n        <mimetype>audio/x-wav</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wav</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"audio/x-mpegurl\" binary=\"true\" iconPath=\"audio.png\">\n      <mimetypes>\n        <mimetype>audio/x-mpegurl</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>m3u</extension>\n      </extensions>\n    </mimetype>\n\n\n\n    <mimetype normalized=\"audio/x-aiff\" binary=\"true\" iconPath=\"audio.png\">\n      <mimetypes>\n        <mimetype>audio/x-aiff</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>aif</extension>\n        <extension>aifc</extension>\n        <extension>aiff</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"audio/ogg\" binary=\"true\" iconPath=\"audio.png\">\n      <mimetypes>\n        <mimetype>audio/ogg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ogg</extension>\n        <extension>oga</extension>\n        <extension>spx</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"audio/flac\" binary=\"true\" iconPath=\"audio.png\">\n      <mimetypes>\n        <mimetype>audio/flac</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>flac</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/ogg\" binary=\"true\" iconPath=\"audio.png\">\n      <mimetypes>\n        <mimetype>application/ogg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ogm</extension>\n        <extension>ogx</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"audio/aac\" binary=\"true\" iconPath=\"audio.png\">\n      <mimetypes>\n        <mimetype>audio/aac</mimetype>\n        <mimetype>audio/aacp</mimetype>\n        <mimetype>audio/3gpp</mimetype>\n        <mimetype>audio/3gpp2</mimetype>\n        <mimetype>audio/mp4</mimetype>\n        <mimetype>audio/MP4A-LATM</mimetype>\n        <mimetype>audio/mpeg4-generic</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>aac</extension>\n        <extension>m4a</extension>\n        <extension>m4b</extension>\n        <extension>m4p</extension>\n        <extension>m4r</extension>\n        <extension>mp4</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"audio/x-matroska\" binary=\"true\" iconPath=\"audio.png\">\n      <mimetypes>\n        <mimetype>audio/x-matroska</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mka</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"audio/x-ms-wax\" binary=\"true\" iconPath=\"audio.png\">\n      <mimetypes>\n        <mimetype>audio/x-ms-wax</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wax</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"audio/x-ms-wma\" binary=\"true\" iconPath=\"audio.png\">\n      <mimetypes>\n        <mimetype>audio/x-ms-wma</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wma</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/mpeg\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/mpeg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mpa</extension>\n        <extension>mpe</extension>\n        <extension>mpeg</extension>\n        <extension>mpg</extension>\n        <extension>mpv2</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/mp4\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/mp4</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mp4</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype normalized=\"video/quicktime\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/quicktime</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mov</extension>\n        <extension>qt</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/ogg\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/ogg</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ogv</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/webm\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/webm</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>webm</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/x-matroska\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/x-matroska</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mkv</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/x-ms-asf\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/x-ms-asf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>asf</extension>\n        <extension>asr</extension>\n        <extension>asx</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/x-msvideo\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/x-msvideo</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>avi</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/fli\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/fli</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>fli</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/flv\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/flv</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>flv</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/vnd.vivo\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/vnd.vivo</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>viv</extension>\n        <extension>vivo</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/x-m4v\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/x-m4v</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>m4v</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/3gpp\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/3gpp</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>3gp</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/3gpp2\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/3gpp2</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>3g2</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/x-ms-wmv\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/x-ms-wmv</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wmv</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/x-ms-wm\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/x-ms-wm</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wm</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/x-ms-wvx\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/x-ms-wvx</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wvx</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"video/x-ms-wmx\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>video/x-ms-wmx</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>wmx</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/gxf\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>application/gxf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>gxf</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/mxf\" binary=\"true\" iconPath=\"video.png\">\n      <mimetypes>\n        <mimetype>application/mxf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mxf</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/java-archive\" binary=\"true\"\n      iconPath=\"java.png\">\n      <mimetypes>\n        <mimetype>application/java-archive</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>jar</extension>\n      </extensions>\n    </mimetype>\n\n\n    <mimetype normalized=\"application/postscript\" binary=\"true\"\n      iconPath=\"ps.png\">\n      <mimetypes>\n        <mimetype>application/postscript</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ps</extension>\n        <extension>eps</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- MIME types specific to RAW images; for more details see\n      http://www.rawsamples.ch\n      http://ufraw.sourceforge.net/wiki\n      http://dotwhat.net/\n      http://trac.imagemagick.org/browser/ImageMagick/trunk/config/mime.xml -->\n\n    <!-- Canon RAW image file format -->\n    <mimetype normalized=\"image/x-canon-cr2\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-canon-cr2</mimetype>\n        <mimetype>image/CR2</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>cr2</extension>\n      </extensions>\n    </mimetype>\n    <mimetype normalized=\"image/x-canon-crw\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-canon-crw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>crw</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Nikon RAW image file format -->\n    <mimetype normalized=\"image/x-nikon-nef\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-nikon-nef</mimetype>\n        <mimetype>image/NEF</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>nef</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Leica RAW image files format -->\n    <mimetype normalized=\"image/x-adobe-dng\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-adobe-dng</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>dng</extension>\n      </extensions>\n    </mimetype>\n    <!-- Panasonic RAW image file format -->\n    <mimetype normalized=\"image/x-panasonic-raw\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-panasonic-raw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>raw</extension>\n        <extension>rw2</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Fuji RAW image file format -->\n    <mimetype normalized=\"image/x-fuji-raf\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-fuji-raf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>raf</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Sigma RAW image file format. A file with the extension .X3F is associated with a RAW image file taken with a digital cameras that incorporate the Foveon X3 direct image sensor. -->\n    <mimetype normalized=\"image/x-sigma-x3f\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-sigma-x3f</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>x3f</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Pentax RAW image file format -->\n    <mimetype normalized=\"image/x-pentax-pef\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-pentax-pef</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>pef</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Kodak RAW image file format -->\n    <mimetype normalized=\"image/x-kodak-dcr\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-kodak-dcr</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>dcr</extension>\n      </extensions>\n    </mimetype>\n    <mimetype normalized=\"image/x-kodak-kdc\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-kodak-kdc</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>kdc</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Sony RAW image files format -->\n    <mimetype normalized=\"image/x-sony-sr2\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-sony-sr2</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>sr2</extension>\n      </extensions>\n    </mimetype>\n    <mimetype normalized=\"image/x-sony-arw\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-sony-arw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>arw</extension>\n      </extensions>\n    </mimetype>\n    <mimetype normalized=\"image/x-sony-srf\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-sony-srf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>srf</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Minolta RAW image file format -->\n    <mimetype normalized=\"image/x-minolta-mrw\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-minolta-mrw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mrw</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Olympus RAW image file format -->\n    <mimetype normalized=\"image/x-olympus-orf\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-olympus-orf</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>orf</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Epson RAW image file format -->\n    <mimetype normalized=\"image/x-raw-epson\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-raw-epson</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>erf</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Portable Pixmap image file Format -->\n    <mimetype normalized=\"image/x-portable-pixmap\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-portable-pixmap</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>ppm</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- the bellow registered file extensions are not sure  as Image Magick does not have them registered... -->\n    <mimetype normalized=\"image/raw\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/raw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mos</extension>\n        <extension>nrw</extension>\n        <!-- Hasselblad RAW image file format -->\n        <extension>3fr</extension>\n      </extensions>\n    </mimetype>\n\n    <!-- Mamiya RAW image file format -->\n    <mimetype normalized=\"image/x-raw\" binary=\"true\"\n      iconPath=\"image.gif\">\n      <mimetypes>\n        <mimetype>image/x-raw</mimetype>\n      </mimetypes>\n      <extensions>\n        <extension>mef</extension>\n      </extensions>\n    </mimetype>\n\n    <mimetype normalized=\"application/wordperfect\"\n     binary=\"true\" iconPath=\"wpd.png\" oleSupported=\"false\">\n     <mimetypes>\n       <mimetype>application/wordperfect</mimetype>\n     </mimetypes>\n     <extensions>\n       <extension>wpd</extension>\n     </extensions>\n   </mimetype>\n\n\n  </extension>\n\n  <extension\n    target=\"org.nuxeo.ecm.platform.mimetype.service.MimetypeRegistryService\"\n    point=\"extension\">\n\n    <documentation>Default filename extension to mimetype rules.</documentation>\n\n    <fileExtension name=\"xml\" mimetype=\"text/xml\" ambiguous=\"true\" />\n    <fileExtension name=\"vsd\" mimetype=\"application/visio\" ambiguous=\"false\" />\n    <fileExtension name=\"vst\" mimetype=\"application/visio\" ambiguous=\"false\" />\n    <fileExtension name=\"ai\" mimetype=\"application/illustrator\" ambiguous=\"false\" />\n    <fileExtension name=\"key\" mimetype=\"application/vnd.apple.keynote\" ambiguous=\"false\" />\n    <fileExtension name=\"numbers\" mimetype=\"application/vnd.apple.numbers\" ambiguous=\"false\" />\n    <fileExtension name=\"pages\" mimetype=\"application/vnd.apple.pages\" ambiguous=\"false\" />\n\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.runtime.pubsub","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 2\nBundle-SymbolicName: org.nuxeo.runtime.pubsub;singleton:=true\nNuxeo-Component: OSGI-INF/pubsub-service.xml\n","requirements":null,"groupId":"org.nuxeo.runtime","artifactId":"nuxeo-runtime-pubsub","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.runtime","name":"org.nuxeo.runtime","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.runtime","org.nuxeo.runtime.cluster","org.nuxeo.runtime.datasource","org.nuxeo.runtime.jtajca","org.nuxeo.runtime.kv","org.nuxeo.runtime.management","org.nuxeo.runtime.metrics","org.nuxeo.runtime.migration","org.nuxeo.runtime.mongodb","org.nuxeo.runtime.pubsub","org.nuxeo.runtime.reload","org.nuxeo.runtime.stream","org.nuxeo.runtime.stream.test"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-pubsub/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.runtime.pubsub.PubSubService","extensionPoints":[{"@type":"NXExtensionPoint","name":"configuration","descriptors":["org.nuxeo.runtime.pubsub.PubSubProviderDescriptor"],"documentation":"\n      Defines the implementation of the PubSub service:\n      <code>\n    <provider class=\"org.nuxeo.runtime.pubsub.MemPubSubProvider\"/>\n</code>\n\n      The class must implement org.nuxeo.runtime.pubsub.PubSubProvider.\n\n      This component comes with a Nuxeo Stream PubSubProvider implementation:\n      <code>\n    <provider class=\"org.nuxeo.runtime.pubsub.StreamPubSubProvider\">\n        <option name=\"logConfig\">default</option>\n        <option name=\"logName\">pubsub</option>\n        <option name=\"codec\">avroBinary</option>\n    </provider>\n</code>\n","id":"org.nuxeo.runtime.pubsub.PubSubService--configuration","version":"11.1-SNAPSHOT","label":"configuration (org.nuxeo.runtime.pubsub.PubSubService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.pubsub/org.nuxeo.runtime.pubsub.PubSubService/ExtensionPoints/org.nuxeo.runtime.pubsub.PubSubService--configuration","documentationHtml":"<p/>\nDefines the implementation of the PubSub service:\n<p/><pre><code>    &lt;provider class=\"org.nuxeo.runtime.pubsub.MemPubSubProvider\"/>\n</code></pre><p/>\nThe class must implement org.nuxeo.runtime.pubsub.PubSubProvider.\n<p/>\nThis component comes with a Nuxeo Stream PubSubProvider implementation:\n<p/><pre><code>    &lt;provider class=\"org.nuxeo.runtime.pubsub.StreamPubSubProvider\">\n        &lt;option name=\"logConfig\">default&lt;/option>\n        &lt;option name=\"logName\">pubsub&lt;/option>\n        &lt;option name=\"codec\">avroBinary&lt;/option>\n    &lt;/provider>\n</code></pre><p/>","componentId":"org.nuxeo.runtime.pubsub.PubSubService"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.pubsub.PubSubService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.pubsub/org.nuxeo.runtime.pubsub.PubSubService/Services/org.nuxeo.runtime.pubsub.PubSubService","componentId":"org.nuxeo.runtime.pubsub.PubSubService"}],"extensions":[],"componentClass":"org.nuxeo.runtime.pubsub.PubSubServiceImpl","documentation":"\n    The PubSub service allows cross-instance notifications through simple messages sent to topics.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.pubsub/org.nuxeo.runtime.pubsub.PubSubService","documentationHtml":"<p/>\nThe PubSub service allows cross-instance notifications through simple messages sent to topics.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-pubsub/bin/main/OSGI-INF/pubsub-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.pubsub.PubSubService\" version=\"1.0\">\n\n  <documentation>\n    The PubSub service allows cross-instance notifications through simple messages sent to topics.\n  </documentation>\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.pubsub.PubSubService\" />\n  </service>\n\n  <implementation class=\"org.nuxeo.runtime.pubsub.PubSubServiceImpl\" />\n\n  <extension-point name=\"configuration\">\n    <documentation>\n      Defines the implementation of the PubSub service:\n      <code>\n        <provider class=\"org.nuxeo.runtime.pubsub.MemPubSubProvider\"/>\n      </code>\n      The class must implement org.nuxeo.runtime.pubsub.PubSubProvider.\n\n      This component comes with a Nuxeo Stream PubSubProvider implementation:\n      <code>\n        <provider class=\"org.nuxeo.runtime.pubsub.StreamPubSubProvider\">\n          <option name=\"logConfig\">default</option>\n          <option name=\"logName\">pubsub</option>\n          <option name=\"codec\">avroBinary</option>\n        </provider>\n      </code>\n    </documentation>\n\n    <object class=\"org.nuxeo.runtime.pubsub.PubSubProviderDescriptor\" />\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.test","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.core.test,\n org.nuxeo.ecm.core.test.annotations\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Name: Nuxeo Core Test Framework\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-Vendor: Nuxeo\nBundle-Version: 0.0.0.SNAPSHOT\nBundle-ManifestVersion: 2\nBundle-Description: Nuxeo Core: Testing framewok\nBundle-License: http://www.gnu.org/copyleft/lesser.txt\nBundle-DocURL: http://www.nuxeo.com/en\nBundle-SymbolicName: org.nuxeo.ecm.core.test\nImport-Package: com.google.inject,\n com.google.inject.binder,\n org.apache.commons.logging,\n org.junit,\n org.junit.runner,\n org.junit.runner.notification,\n org.junit.runners,\n org.junit.runners.model,\n org.nuxeo.ecm.core.event,\n org.nuxeo.ecm.core.storage.sql;core=split,\n org.nuxeo.ecm.core.test,\n org.nuxeo.ecm.core.test.annotations,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.test.runner,\n org.osgi.framework,\n org.nuxeo.ecm.core.work,\n org.nuxeo.runtime\nRequire-Bundle: org.nuxeo.ecm.core\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-test","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-test/bin/main","components":[]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.event.test","fileName":"test","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 2\nBundle-SymbolicName: org.nuxeo.ecm.core.event.test\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-event","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-event/bin/test","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.work.test.default.queuing","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.work.test.default.queuing--implementation","extensionPoint":"org.nuxeo.ecm.core.work.service--implementation","documentation":null,"xml":"<extension point=\"implementation\" target=\"org.nuxeo.ecm.core.work.service\">\n    <queuing class=\"org.nuxeo.ecm.core.work.TestWorkQueuing\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.work.service","rawName":"service:org.nuxeo.ecm.core.work.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event.test/org.nuxeo.ecm.core.work.test.default.queuing/Contributions/org.nuxeo.ecm.core.work.test.default.queuing--implementation","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;queuing class=&quot;org.nuxeo.ecm.core.work.TestWorkQueuing&quot;/&gt;","id":null,"label":"queuing","rawXml":"<queuing class=\"org.nuxeo.ecm.core.work.TestWorkQueuing\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.event.test/org.nuxeo.ecm.core.work.test.default.queuing","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-event/bin/test/OSGI-INF/test-default-workmanager-config.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.work.test.default.queuing\">\n\n  <extension target=\"org.nuxeo.ecm.core.work.service\" point=\"implementation\">\n    <queuing class=\"org.nuxeo.ecm.core.work.TestWorkQueuing\" />\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.storage.mem","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 2\nBundle-SymbolicName: org.nuxeo.ecm.core.storage.mem\nNuxeo-Component: OSGI-INF/mem-repository-service.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-storage-mem","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage-mem/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.storage.mem.MemRepositoryService","extensionPoints":[{"@type":"NXExtensionPoint","name":"repository","descriptors":["org.nuxeo.ecm.core.storage.mem.MemRepositoryDescriptor"],"documentation":"\n      Extension points to register Memory repositories. Example:\n      <code>\n    <repository isDefault=\"true\" label=\"Mem Repository\" name=\"default\">\n        <fulltext disabled=\"false\"/>\n    </repository>\n</code>\n","id":"org.nuxeo.ecm.core.storage.mem.MemRepositoryService--repository","version":"11.1-SNAPSHOT","label":"repository (org.nuxeo.ecm.core.storage.mem.MemRepositoryService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.mem/org.nuxeo.ecm.core.storage.mem.MemRepositoryService/ExtensionPoints/org.nuxeo.ecm.core.storage.mem.MemRepositoryService--repository","documentationHtml":"<p/>\nExtension points to register Memory repositories. Example:\n<p/><pre><code>    &lt;repository isDefault=\"true\" label=\"Mem Repository\" name=\"default\">\n        &lt;fulltext disabled=\"false\"/>\n    &lt;/repository>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.core.storage.mem.MemRepositoryService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.storage.mem.MemRepositoryService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.mem/org.nuxeo.ecm.core.storage.mem.MemRepositoryService/Services/org.nuxeo.ecm.core.storage.mem.MemRepositoryService","componentId":"org.nuxeo.ecm.core.storage.mem.MemRepositoryService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.storage.mem.MemRepositoryService","documentation":"\n    Manages Memory repositories.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.mem/org.nuxeo.ecm.core.storage.mem.MemRepositoryService","documentationHtml":"<p/>\nManages Memory repositories.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage-mem/bin/main/OSGI-INF/mem-repository-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.storage.mem.MemRepositoryService\" version=\"1.0.0\">\n\n  <require>org.nuxeo.ecm.core.storage.dbs.DBSRepositoryService</require>\n\n  <documentation>\n    Manages Memory repositories.\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.storage.mem.MemRepositoryService\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.storage.mem.MemRepositoryService\" />\n  </service>\n\n  <extension-point name=\"repository\">\n    <documentation>\n      Extension points to register Memory repositories. Example:\n      <code>\n        <repository name=\"default\" label=\"Mem Repository\" isDefault=\"true\">\n          <fulltext disabled=\"false\" />\n        </repository>\n      </code>\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.storage.mem.MemRepositoryDescriptor\" />\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.osgi.app","fileName":"nxruntime-main-18069003432725917313.tmp","manifest":null,"requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-apidoc-repo","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform","name":"org.nuxeo.ecm.platform","liveDoc":{},"subGroups":[{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.directory","name":"org.nuxeo.ecm.directory","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.directory","org.nuxeo.ecm.directory.api","org.nuxeo.ecm.directory.sql","org.nuxeo.ecm.directory.types.contrib"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.query","name":"org.nuxeo.ecm.platform.query","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.query.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.usermanager","name":"org.nuxeo.ecm.platform.usermanager","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.usermanager","org.nuxeo.ecm.platform.usermanager.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]}],"bundleIds":["org.nuxeo.apidoc.core","org.nuxeo.apidoc.repo","org.nuxeo.directory.mongodb","org.nuxeo.ecm.actions","org.nuxeo.ecm.platform.api","org.nuxeo.ecm.platform.commandline.executor","org.nuxeo.ecm.platform.content.template","org.nuxeo.ecm.platform.dublincore","org.nuxeo.ecm.platform.forms.layout.export","org.nuxeo.ecm.platform.login","org.nuxeo.ecm.platform.web.common","org.nuxeo.osgi.app"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"target/nxruntime-main-18069003432725917313.tmp","components":[]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.storage.mongodb","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 2\nBundle-SymbolicName: org.nuxeo.ecm.core.storage.mongodb\nNuxeo-Component: OSGI-INF/mongodb-repository-service.xml,\n OSGI-INF/mongodb-configuration-properties.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-storage-mongodb","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage-mongodb/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService","extensionPoints":[{"@type":"NXExtensionPoint","name":"repository","descriptors":["org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryDescriptor"],"documentation":"\n      Extension points to register MongoDB repositories. The repository will ask for a MongoDB access to\n      MongoDBConnectionService with id 'repository/[repositoryName]'.\n\n      Example:\n      <code>\n    <repository isDefault=\"true\" label=\"MongoDB Repository\" name=\"default\">\n        <fulltext disabled=\"false\"/>\n    </repository>\n</code>\n","id":"org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService--repository","version":"11.1-SNAPSHOT","label":"repository (org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.mongodb/org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService/ExtensionPoints/org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService--repository","documentationHtml":"<p/>\nExtension points to register MongoDB repositories. The repository will ask for a MongoDB access to\nMongoDBConnectionService with id 'repository/[repositoryName]'.\n<p/>\nExample:\n<p/><pre><code>    &lt;repository isDefault=\"true\" label=\"MongoDB Repository\" name=\"default\">\n        &lt;fulltext disabled=\"false\"/>\n    &lt;/repository>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.mongodb/org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService/Services/org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService","componentId":"org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService","documentation":"\n    Manages MongoDB repositories.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.mongodb/org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService","documentationHtml":"<p/>\nManages MongoDB repositories.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage-mongodb/bin/main/OSGI-INF/mongodb-repository-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService\" version=\"1.0.0\">\n\n  <require>org.nuxeo.ecm.core.storage.dbs.DBSRepositoryService</require>\n\n  <documentation>\n    Manages MongoDB repositories.\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryService\" />\n  </service>\n\n  <extension-point name=\"repository\">\n    <documentation>\n      Extension points to register MongoDB repositories. The repository will ask for a MongoDB access to\n      MongoDBConnectionService with id 'repository/[repositoryName]'.\n\n      Example:\n      <code>\n        <repository name=\"default\" label=\"MongoDB Repository\" isDefault=\"true\">\n          <fulltext disabled=\"false\" />\n        </repository>\n      </code>\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.storage.mongodb.MongoDBRepositoryDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.storage.mongodb.configuration","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.storage.mongodb.configuration--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n      Property to disable the fact that on MongoDB a LIKE match anchors its search\n      (like in SQL databases), i.e., absent wildcards, it does not match in the middle of a string.\n\n      When true, does not match in the middle of a string.\n      When false, works as if there was a % on each side of the LIKE expression.\n\n      @since 10.3\n    \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <documentation>\n      Property to disable the fact that on MongoDB a LIKE match anchors its search\n      (like in SQL databases), i.e., absent wildcards, it does not match in the middle of a string.\n\n      When true, does not match in the middle of a string.\n      When false, works as if there was a % on each side of the LIKE expression.\n\n      @since 10.3\n    </documentation>\n    <!-- default is true for 10.3 and later -->\n    <property name=\"nuxeo.mongodb.like.anchored\">true</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.mongodb/org.nuxeo.ecm.core.storage.mongodb.configuration/Contributions/org.nuxeo.ecm.core.storage.mongodb.configuration--configuration","documentationHtml":"<p/>\nProperty to disable the fact that on MongoDB a LIKE match anchors its search\n(like in SQL databases), i.e., absent wildcards, it does not match in the middle of a string.\n<p/>\nWhen true, does not match in the middle of a string.\nWhen false, works as if there was a % on each side of the LIKE expression.\n<p/>\n@since 10.3\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;nuxeo.mongodb.like.anchored&quot;&gt;true&lt;/property&gt;","id":"nuxeo.mongodb.like.anchored","label":"property nuxeo.mongodb.like.anchored","rawXml":"<property name=\"nuxeo.mongodb.like.anchored\">true</property>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.mongodb/org.nuxeo.ecm.core.storage.mongodb.configuration","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage-mongodb/bin/main/OSGI-INF/mongodb-configuration-properties.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.storage.mongodb.configuration\">\n\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n    <documentation>\n      Property to disable the fact that on MongoDB a LIKE match anchors its search\n      (like in SQL databases), i.e., absent wildcards, it does not match in the middle of a string.\n\n      When true, does not match in the middle of a string.\n      When false, works as if there was a % on each side of the LIKE expression.\n\n      @since 10.3\n    </documentation>\n    <!-- default is true for 10.3 and later -->\n    <property name=\"nuxeo.mongodb.like.anchored\">true</property>\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.storage.sql","fileName":"classes","manifest":"Export-Package: org.nuxeo.ecm.core.storage,\n org.nuxeo.ecm.core.storage.sql;core=split,\n org.nuxeo.ecm.core.storage.sql.coremodel,\n org.nuxeo.ecm.core.storage.sql.jdbc,\n org.nuxeo.ecm.core.storage.sql.jdbc.db,\n org.nuxeo.ecm.core.storage.sql.jdbc.dialect,\n org.nuxeo.ecm.core.storage.sql.net\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Category: core\nBundle-Name: org.nuxeo.ecm.core.storage.sql\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Version: 5.4.2.qualifier\nEclipse-BuddyPolicy: registered, dependent\nEclipse-RegisterBuddy: org.nuxeo.common\nNuxeo-Component: OSGI-INF/querymaker-service.xml,\n  OSGI-INF/querymaker-contrib.xml,\n  OSGI-INF/repo-softdelete-contrib.xml,\n  OSGI-INF/repository-compat-service.xml,\n  OSGI-INF/repository-service.xml\nBundle-ManifestVersion: 2\nImport-Package: javax.resource,\n javax.resource.cci,\n javax.servlet;resolution:=optional,\n javax.servlet.http;resolution:=optional,\n javax.sql,\n javax.transaction.xa,\n org.apache.commons.beanutils,\n org.apache.commons.collections.map,\n org.apache.commons.httpclient,\n org.apache.commons.httpclient.auth,\n org.apache.commons.httpclient.methods,\n org.apache.commons.httpclient.params,\n org.apache.commons.io,\n org.apache.commons.logging,\n org.mortbay.component;resolution:=optional,\n org.mortbay.jetty;resolution:=optional,\n org.mortbay.jetty.bio;resolution:=optional,\n org.mortbay.jetty.handler;resolution:=optional,\n org.mortbay.jetty.servlet;resolution:=optional,\n org.nuxeo.common,\n org.nuxeo.common.collections,\n org.nuxeo.common.utils,\n org.nuxeo.common.xmap,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core,\n org.nuxeo.ecm.core.api,\n org.nuxeo.ecm.core.api.blobholder,\n org.nuxeo.ecm.core.api.impl,\n org.nuxeo.ecm.core.api.impl.blob,\n org.nuxeo.ecm.core.api.model,\n org.nuxeo.ecm.core.api.security,\n org.nuxeo.ecm.core.api.security.impl,\n org.nuxeo.ecm.core.convert.api,\n org.nuxeo.ecm.core.event,\n org.nuxeo.ecm.core.event.impl,\n org.nuxeo.ecm.core.lifecycle,\n org.nuxeo.ecm.core.model,\n org.nuxeo.ecm.core.query,\n org.nuxeo.ecm.core.query.sql,\n org.nuxeo.ecm.core.query.sql.model,\n org.nuxeo.ecm.core.repository,\n org.nuxeo.ecm.core.schema,\n org.nuxeo.ecm.core.schema.types,\n org.nuxeo.ecm.core.schema.types.primitives,\n org.nuxeo.ecm.core.security,\n org.nuxeo.ecm.core.storage.sql,\n org.nuxeo.ecm.core.utils,\n org.nuxeo.ecm.core.versioning,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model,\n org.nuxeo.runtime.services.event,\n org.nuxeo.runtime.services.streaming,\n org.osgi.framework\nBundle-SymbolicName: org.nuxeo.ecm.core.storage.sql;singleton:=true\nBundle-Activator: org.nuxeo.ecm.core.storage.sql.Activator\nRequire-Bundle: javax.servlet;bundle-version=\"2.5.0\"\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-storage-sql","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/target/classes","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.storage.sql.jdbc.querymaker.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.storage.sql.jdbc.querymaker.contrib--queryMaker","extensionPoint":"org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService--queryMaker","documentation":null,"xml":"<extension point=\"queryMaker\" target=\"org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService\">\n    <queryMaker name=\"NXQL\">org.nuxeo.ecm.core.storage.sql.jdbc.NXQLQueryMaker\n    </queryMaker>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService","rawName":"service:org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.sql/org.nuxeo.ecm.core.storage.sql.jdbc.querymaker.contrib/Contributions/org.nuxeo.ecm.core.storage.sql.jdbc.querymaker.contrib--queryMaker","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;queryMaker name=&quot;NXQL&quot;&gt;org.nuxeo.ecm.core.storage.sql.jdbc.NXQLQueryMaker\n    &lt;/queryMaker&gt;","id":"NXQL","label":"queryMaker NXQL","rawXml":"<queryMaker name=\"NXQL\">org.nuxeo.ecm.core.storage.sql.jdbc.NXQLQueryMaker\n    </queryMaker>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.sql/org.nuxeo.ecm.core.storage.sql.jdbc.querymaker.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/target/classes/OSGI-INF/querymaker-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.storage.sql.jdbc.querymaker.contrib\"\n  version=\"1.0.0\">\n\n  <extension target=\"org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService\"\n    point=\"queryMaker\">\n    <queryMaker name=\"NXQL\">org.nuxeo.ecm.core.storage.sql.jdbc.NXQLQueryMaker\n    </queryMaker>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.repository.RepositoryService","extensionPoints":[{"@type":"NXExtensionPoint","name":"repository","descriptors":["org.nuxeo.ecm.core.storage.sql.RepositoryDescriptor"],"documentation":"\n      Compatibility extension point to register VCS repositories.\n      Use org.nuxeo.ecm.core.storage.sql.RepositoryService instead.\n    \n","id":"org.nuxeo.ecm.core.repository.RepositoryService--repository","version":"11.1-SNAPSHOT","label":"repository (org.nuxeo.ecm.core.repository.RepositoryService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.sql/org.nuxeo.ecm.core.repository.RepositoryService/ExtensionPoints/org.nuxeo.ecm.core.repository.RepositoryService--repository","documentationHtml":"<p/>\nCompatibility extension point to register VCS repositories.\nUse org.nuxeo.ecm.core.storage.sql.RepositoryService instead.\n<p/>","componentId":"org.nuxeo.ecm.core.repository.RepositoryService"}],"services":[],"extensions":[],"componentClass":"org.nuxeo.ecm.core.storage.sql.coremodel.SQLRepositoryCompatService","documentation":"\n    Compatibility component to register old extension point.\n    Use org.nuxeo.ecm.core.storage.sql.RepositoryService instead.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.sql/org.nuxeo.ecm.core.repository.RepositoryService","documentationHtml":"<p/>\nCompatibility component to register old extension point.\nUse org.nuxeo.ecm.core.storage.sql.RepositoryService instead.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/target/classes/OSGI-INF/repository-compat-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.repository.RepositoryService\" version=\"1.0.0\">\n\n  <require>org.nuxeo.ecm.core.storage.sql.RepositoryService</require>\n\n  <documentation>\n    Compatibility component to register old extension point.\n    Use org.nuxeo.ecm.core.storage.sql.RepositoryService instead.\n  </documentation>\n\n  <implementation\n    class=\"org.nuxeo.ecm.core.storage.sql.coremodel.SQLRepositoryCompatService\" />\n\n  <extension-point name=\"repository\">\n    <documentation>\n      Compatibility extension point to register VCS repositories.\n      Use org.nuxeo.ecm.core.storage.sql.RepositoryService instead.\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.storage.sql.RepositoryDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.storage.sql.RepositoryService","extensionPoints":[{"@type":"NXExtensionPoint","name":"repository","descriptors":["org.nuxeo.ecm.core.storage.sql.RepositoryDescriptor"],"documentation":"\n      Extension points to register VCS repositories.\n      See http://doc.nuxeo.com/x/hwQz for documentation.\n    \n","id":"org.nuxeo.ecm.core.storage.sql.RepositoryService--repository","version":"11.1-SNAPSHOT","label":"repository (org.nuxeo.ecm.core.storage.sql.RepositoryService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.sql/org.nuxeo.ecm.core.storage.sql.RepositoryService/ExtensionPoints/org.nuxeo.ecm.core.storage.sql.RepositoryService--repository","documentationHtml":"<p/>\nExtension points to register VCS repositories.\nSee http://doc.nuxeo.com/x/hwQz for documentation.\n<p/>","componentId":"org.nuxeo.ecm.core.storage.sql.RepositoryService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.storage.sql.coremodel.SQLRepositoryService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.sql/org.nuxeo.ecm.core.storage.sql.RepositoryService/Services/org.nuxeo.ecm.core.storage.sql.coremodel.SQLRepositoryService","componentId":"org.nuxeo.ecm.core.storage.sql.RepositoryService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.storage.sql.coremodel.SQLRepositoryService","documentation":"\n    Manages VCS repositories.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.sql/org.nuxeo.ecm.core.storage.sql.RepositoryService","documentationHtml":"<p/>\nManages VCS repositories.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/target/classes/OSGI-INF/repository-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.storage.sql.RepositoryService\" version=\"1.0.0\">\n\n  <require>org.nuxeo.ecm.core.repository.RepositoryServiceComponent</require>\n  <require>org.nuxeo.ecm.core.api.repository.RepositoryManager</require>\n  <require>org.nuxeo.ecm.core.storage.lock.LockManagerService</require>\n\n  <documentation>\n    Manages VCS repositories.\n  </documentation>\n\n  <implementation\n    class=\"org.nuxeo.ecm.core.storage.sql.coremodel.SQLRepositoryService\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.storage.sql.coremodel.SQLRepositoryService\" />\n  </service>\n\n  <extension-point name=\"repository\">\n    <documentation>\n      Extension points to register VCS repositories.\n      See http://doc.nuxeo.com/x/hwQz for documentation.\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.storage.sql.RepositoryDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.storage.sql.softdelete","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.storage.sql.softdelete--schedule","extensionPoint":"org.nuxeo.ecm.core.scheduler.SchedulerService--schedule","documentation":null,"xml":"<extension point=\"schedule\" target=\"org.nuxeo.ecm.core.scheduler.SchedulerService\">\n    <schedule id=\"softDeleteCleanup\">\n      <event>softDeleteCleanup</event>\n      <!-- cleanup every 15 minutes -->\n      <cronExpression>0 0/15 * * * ?</cronExpression>\n    </schedule>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.scheduler.SchedulerService","rawName":"service:org.nuxeo.ecm.core.scheduler.SchedulerService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.sql/org.nuxeo.ecm.core.storage.sql.softdelete/Contributions/org.nuxeo.ecm.core.storage.sql.softdelete--schedule","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;schedule id=&quot;softDeleteCleanup&quot;&gt;\n      &lt;event&gt;softDeleteCleanup&lt;/event&gt;\n      &lt;!-- cleanup every 15 minutes --&gt;\n      &lt;cronExpression&gt;0 0/15 * * * ?&lt;/cronExpression&gt;\n    &lt;/schedule&gt;","id":"softDeleteCleanup","label":"schedule softDeleteCleanup","rawXml":"<schedule id=\"softDeleteCleanup\">\n      <event>softDeleteCleanup</event>\n      <!-- cleanup every 15 minutes -->\n      <cronExpression>0 0/15 * * * ?</cronExpression>\n    </schedule>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.storage.sql.softdelete--listener","extensionPoint":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentation":null,"xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n    <listener async=\"false\" class=\"org.nuxeo.ecm.core.storage.sql.SoftDeleteCleanupListener\" name=\"softDeleteCleanup\">\n      <event>softDeleteCleanup</event>\n    </listener>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.event.EventServiceComponent","rawName":"service:org.nuxeo.ecm.core.event.EventServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.sql/org.nuxeo.ecm.core.storage.sql.softdelete/Contributions/org.nuxeo.ecm.core.storage.sql.softdelete--listener","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;listener async=&quot;false&quot; class=&quot;org.nuxeo.ecm.core.storage.sql.SoftDeleteCleanupListener&quot; name=&quot;softDeleteCleanup&quot;&gt;\n      &lt;event&gt;softDeleteCleanup&lt;/event&gt;\n    &lt;/listener&gt;","id":"softDeleteCleanup","label":"listener softDeleteCleanup","rawXml":"<listener async=\"false\" class=\"org.nuxeo.ecm.core.storage.sql.SoftDeleteCleanupListener\" name=\"softDeleteCleanup\">\n      <event>softDeleteCleanup</event>\n    </listener>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.sql/org.nuxeo.ecm.core.storage.sql.softdelete","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/target/classes/OSGI-INF/repo-softdelete-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.storage.sql.softdelete\">\n\n  <extension target=\"org.nuxeo.ecm.core.scheduler.SchedulerService\"\n    point=\"schedule\">\n    <schedule id=\"softDeleteCleanup\">\n      <event>softDeleteCleanup</event>\n      <!-- cleanup every 15 minutes -->\n      <cronExpression>0 0/15 * * * ?</cronExpression>\n    </schedule>\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.event.EventServiceComponent\"\n    point=\"listener\">\n    <listener name=\"softDeleteCleanup\" async=\"false\"\n      class=\"org.nuxeo.ecm.core.storage.sql.SoftDeleteCleanupListener\">\n      <event>softDeleteCleanup</event>\n    </listener>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService","extensionPoints":[{"@type":"NXExtensionPoint","name":"queryMaker","descriptors":["org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerDescriptor"],"documentation":null,"id":"org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService--queryMaker","version":"11.1-SNAPSHOT","label":"queryMaker (org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.sql/org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService/ExtensionPoints/org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService--queryMaker","documentationHtml":"","componentId":"org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.sql/org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService/Services/org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService","componentId":"org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerServiceImpl","documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.sql/org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService","documentationHtml":"","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/target/classes/OSGI-INF/querymaker-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService\"\n  version=\"1.0.0\">\n\n  <implementation\n    class=\"org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerServiceImpl\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerService\" />\n  </service>\n\n  <extension-point name=\"queryMaker\">\n    <object class=\"org.nuxeo.ecm.core.storage.sql.jdbc.QueryMakerDescriptor\" />\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.platform.usermanager.api","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.platform.usermanager.exceptions;api=split;mandatory=api,\n org.nuxeo.ecm.platform.usermanager;api=split;mandatory=api\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Localization: plugin\nBundle-Name: Nuxeo User Manager Module API\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Vendor: Nuxeo\nEclipse-LazyStart: false\nBundle-Version: 0.0.0.SNAPSHOT\nBundle-ManifestVersion: 2\nImport-Package: org.apache.commons.logging,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.impl,\n org.nuxeo.ecm.core.api.model,\n org.nuxeo.ecm.core.api.security,\n org.nuxeo.ecm.directory;api=split,\n org.nuxeo.runtime.api\nBundle-SymbolicName: org.nuxeo.ecm.platform.usermanager.api\nNuxeo-Component: OSGI-INF/pageproviders-contrib.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-platform-usermanager-api","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.usermanager","name":"org.nuxeo.ecm.platform.usermanager","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.usermanager","org.nuxeo.ecm.platform.usermanager.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-usermanager-api/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.usermanager.pageproviders","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.usermanager.pageproviders--providers","extensionPoint":"org.nuxeo.ecm.platform.query.api.PageProviderService--providers","documentation":null,"xml":"<extension point=\"providers\" target=\"org.nuxeo.ecm.platform.query.api.PageProviderService\">\n\n    <genericPageProvider class=\"org.nuxeo.ecm.platform.usermanager.providers.UsersPageProvider\" name=\"users_listing\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>\n\n    <genericPageProvider class=\"org.nuxeo.ecm.platform.usermanager.providers.NuxeoPrincipalsPageProvider\" name=\"nuxeo_principals_listing\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>\n\n    <genericPageProvider class=\"org.nuxeo.ecm.platform.usermanager.providers.GroupsPageProvider\" name=\"groups_listing\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>\n\n    <genericPageProvider class=\"org.nuxeo.ecm.platform.usermanager.providers.NuxeoGroupsPageProvider\" name=\"nuxeo_groups_listing\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>\n\n    <genericPageProvider class=\"org.nuxeo.ecm.platform.usermanager.providers.GroupMemberUsersPageProvider\" name=\"nuxeo_group_member_users_listing\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>\n    <genericPageProvider class=\"org.nuxeo.ecm.platform.usermanager.providers.GroupMemberGroupsPageProvider\" name=\"nuxeo_group_member_groups_listing\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.query.api.PageProviderService","rawName":"service:org.nuxeo.ecm.platform.query.api.PageProviderService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.api/org.nuxeo.ecm.platform.usermanager.pageproviders/Contributions/org.nuxeo.ecm.platform.usermanager.pageproviders--providers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;genericPageProvider class=&quot;org.nuxeo.ecm.platform.usermanager.providers.UsersPageProvider&quot; name=&quot;users_listing&quot;&gt;\n      &lt;pageSize&gt;20&lt;/pageSize&gt;\n    &lt;/genericPageProvider&gt;","id":"users_listing","label":"genericPageProvider users_listing","rawXml":"<genericPageProvider class=\"org.nuxeo.ecm.platform.usermanager.providers.UsersPageProvider\" name=\"users_listing\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>"},{"documentation":"","xml":"&lt;genericPageProvider class=&quot;org.nuxeo.ecm.platform.usermanager.providers.NuxeoPrincipalsPageProvider&quot; name=&quot;nuxeo_principals_listing&quot;&gt;\n      &lt;pageSize&gt;20&lt;/pageSize&gt;\n    &lt;/genericPageProvider&gt;","id":"nuxeo_principals_listing","label":"genericPageProvider nuxeo_principals_listing","rawXml":"<genericPageProvider class=\"org.nuxeo.ecm.platform.usermanager.providers.NuxeoPrincipalsPageProvider\" name=\"nuxeo_principals_listing\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>"},{"documentation":"","xml":"&lt;genericPageProvider class=&quot;org.nuxeo.ecm.platform.usermanager.providers.GroupsPageProvider&quot; name=&quot;groups_listing&quot;&gt;\n      &lt;pageSize&gt;20&lt;/pageSize&gt;\n    &lt;/genericPageProvider&gt;","id":"groups_listing","label":"genericPageProvider groups_listing","rawXml":"<genericPageProvider class=\"org.nuxeo.ecm.platform.usermanager.providers.GroupsPageProvider\" name=\"groups_listing\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>"},{"documentation":"","xml":"&lt;genericPageProvider class=&quot;org.nuxeo.ecm.platform.usermanager.providers.NuxeoGroupsPageProvider&quot; name=&quot;nuxeo_groups_listing&quot;&gt;\n      &lt;pageSize&gt;20&lt;/pageSize&gt;\n    &lt;/genericPageProvider&gt;","id":"nuxeo_groups_listing","label":"genericPageProvider nuxeo_groups_listing","rawXml":"<genericPageProvider class=\"org.nuxeo.ecm.platform.usermanager.providers.NuxeoGroupsPageProvider\" name=\"nuxeo_groups_listing\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>"},{"documentation":"","xml":"&lt;genericPageProvider class=&quot;org.nuxeo.ecm.platform.usermanager.providers.GroupMemberUsersPageProvider&quot; name=&quot;nuxeo_group_member_users_listing&quot;&gt;\n      &lt;pageSize&gt;20&lt;/pageSize&gt;\n    &lt;/genericPageProvider&gt;","id":"nuxeo_group_member_users_listing","label":"genericPageProvider nuxeo_group_member_users_listing","rawXml":"<genericPageProvider class=\"org.nuxeo.ecm.platform.usermanager.providers.GroupMemberUsersPageProvider\" name=\"nuxeo_group_member_users_listing\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>"},{"documentation":"","xml":"&lt;genericPageProvider class=&quot;org.nuxeo.ecm.platform.usermanager.providers.GroupMemberGroupsPageProvider&quot; name=&quot;nuxeo_group_member_groups_listing&quot;&gt;\n      &lt;pageSize&gt;20&lt;/pageSize&gt;\n    &lt;/genericPageProvider&gt;","id":"nuxeo_group_member_groups_listing","label":"genericPageProvider nuxeo_group_member_groups_listing","rawXml":"<genericPageProvider class=\"org.nuxeo.ecm.platform.usermanager.providers.GroupMemberGroupsPageProvider\" name=\"nuxeo_group_member_groups_listing\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.api/org.nuxeo.ecm.platform.usermanager.pageproviders","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-usermanager-api/bin/main/OSGI-INF/pageproviders-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.usermanager.pageproviders\">\n\n  <extension target=\"org.nuxeo.ecm.platform.query.api.PageProviderService\"\n    point=\"providers\">\n\n    <genericPageProvider name=\"users_listing\"\n      class=\"org.nuxeo.ecm.platform.usermanager.providers.UsersPageProvider\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>\n\n    <genericPageProvider name=\"nuxeo_principals_listing\"\n      class=\"org.nuxeo.ecm.platform.usermanager.providers.NuxeoPrincipalsPageProvider\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>\n\n    <genericPageProvider name=\"groups_listing\"\n      class=\"org.nuxeo.ecm.platform.usermanager.providers.GroupsPageProvider\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>\n\n    <genericPageProvider name=\"nuxeo_groups_listing\"\n      class=\"org.nuxeo.ecm.platform.usermanager.providers.NuxeoGroupsPageProvider\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>\n\n    <genericPageProvider name=\"nuxeo_group_member_users_listing\"\n      class=\"org.nuxeo.ecm.platform.usermanager.providers.GroupMemberUsersPageProvider\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>\n    <genericPageProvider name=\"nuxeo_group_member_groups_listing\"\n      class=\"org.nuxeo.ecm.platform.usermanager.providers.GroupMemberGroupsPageProvider\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>\n\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.directory.api","fileName":"classes","manifest":"Export-Package: org.nuxeo.ecm.directory;mandatory:=api;api=split,\n org.nuxeo.ecm.directory.impl;mandatory:=api;api=split,\n org.nuxeo.ecm.directory.api;mandatory=api;api=split\nIgnore-Package: org.nuxeo.ecm.core.api\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Localization: bundle\nBundle-Name: Nuxeo Directory API\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nRequire-Bundle: org.nuxeo.ecm.core\nBundle-Vendor: Nuxeo\nEclipse-LazyStart: true\nBundle-Version: 0.0.0.SNAPSHOT\nBundle-ManifestVersion: 2\nImport-Package: org.apache.commons.logging,\n org.nuxeo.common.collections,\n org.nuxeo.common.utils,\n org.nuxeo.ecm.core.api.impl,\n org.nuxeo.ecm.core.api.model,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model\nBundle-SymbolicName: org.nuxeo.ecm.directory.api;singleton:=true\nNuxeo-Component: OSGI-INF/pageproviders-contrib.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-platform-directory-api","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.directory","name":"org.nuxeo.ecm.directory","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.directory","org.nuxeo.ecm.directory.api","org.nuxeo.ecm.directory.sql","org.nuxeo.ecm.directory.types.contrib"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-directory/nuxeo-platform-directory-api/target/classes","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.directory.pageproviders","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.directory.pageproviders--providers","extensionPoint":"org.nuxeo.ecm.platform.query.api.PageProviderService--providers","documentation":null,"xml":"<extension point=\"providers\" target=\"org.nuxeo.ecm.platform.query.api.PageProviderService\">\n\n    <genericPageProvider class=\"org.nuxeo.ecm.directory.providers.DirectoryEntryPageProvider\" name=\"nuxeo_directory_entry_listing\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.query.api.PageProviderService","rawName":"service:org.nuxeo.ecm.platform.query.api.PageProviderService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.api/org.nuxeo.ecm.platform.directory.pageproviders/Contributions/org.nuxeo.ecm.platform.directory.pageproviders--providers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;genericPageProvider class=&quot;org.nuxeo.ecm.directory.providers.DirectoryEntryPageProvider&quot; name=&quot;nuxeo_directory_entry_listing&quot;&gt;\n      &lt;pageSize&gt;20&lt;/pageSize&gt;\n    &lt;/genericPageProvider&gt;","id":"nuxeo_directory_entry_listing","label":"genericPageProvider nuxeo_directory_entry_listing","rawXml":"<genericPageProvider class=\"org.nuxeo.ecm.directory.providers.DirectoryEntryPageProvider\" name=\"nuxeo_directory_entry_listing\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.directory/org.nuxeo.ecm.directory.api/org.nuxeo.ecm.platform.directory.pageproviders","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-directory/nuxeo-platform-directory-api/target/classes/OSGI-INF/pageproviders-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.directory.pageproviders\">\n\n  <extension target=\"org.nuxeo.ecm.platform.query.api.PageProviderService\"\n             point=\"providers\">\n\n    <genericPageProvider name=\"nuxeo_directory_entry_listing\"\n                         class=\"org.nuxeo.ecm.directory.providers.DirectoryEntryPageProvider\">\n      <pageSize>20</pageSize>\n    </genericPageProvider>\n\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.api","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.core;api=split;mandatory:=api,\n org.nuxeo.ecm.core.api;api=split;mandatory:=api,\n org.nuxeo.ecm.core.api.adapter,\n org.nuxeo.ecm.core.api.blobholder,\n org.nuxeo.ecm.core.api.event,\n org.nuxeo.ecm.core.api.event.impl,\n org.nuxeo.ecm.core.api.externalblob,\n org.nuxeo.ecm.core.api.facet,\n org.nuxeo.ecm.core.api.impl,\n org.nuxeo.ecm.core.api.impl.blob,\n org.nuxeo.ecm.core.api.impl.converter,\n org.nuxeo.ecm.core.api.local,\n org.nuxeo.ecm.core.api.model,\n org.nuxeo.ecm.core.api.model.impl,\n org.nuxeo.ecm.core.api.model.impl.osm,\n org.nuxeo.ecm.core.api.model.impl.osm.util,\n org.nuxeo.ecm.core.api.model.impl.primitives,\n org.nuxeo.ecm.core.api.operation,\n org.nuxeo.ecm.core.api.pathsegment,\n org.nuxeo.ecm.core.api.repository,\n org.nuxeo.ecm.core.api.repository.cache,\n org.nuxeo.ecm.core.api.security,\n org.nuxeo.ecm.core.api.security.impl,\n org.nuxeo.ecm.core.api.tree,\n org.nuxeo.ecm.core.url,\n org.nuxeo.ecm.core.url.nxdoc,\n org.nuxeo.ecm.core.url.nxobj,\n org.nuxeo.ecm.core.utils\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Name: org.nuxeo.ecm.core.api\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Version: 5.4.2.qualifier\nBundle-ManifestVersion: 2\nNuxeo-Component: OSGI-INF/DocumentAdapterService.xml,\n  OSGI-INF/RepositoryManager.xml,\n  OSGI-INF/DocumentValidationService.xml,\n  OSGI-INF/DocumentValidationService-activation.xml,\n  OSGI-INF/blobmanager-service.xml,\n  OSGI-INF/blob-holder-service-framework.xml,\n  OSGI-INF/blob-holder-adapters-contrib.xml,\n  OSGI-INF/pathsegment-service.xml,\n  OSGI-INF/local-configuration-service.xml,\n  OSGI-INF/propertiesmapping-service.xml,\n  OSGI-INF/thumbnail-adapter-contrib.xml,\n  OSGI-INF/thumbnail-service.xml,\n  OSGI-INF/core-api-properties.xml,\n  OSGI-INF/legacy-acp-behavior.xml\nImport-Package: javax.security.auth,\n javax.security.auth.callback,\n javax.security.auth.login,\n javax.security.auth.spi,\n org.apache.commons.collections.bidimap,\n org.apache.commons.collections.map,\n org.apache.commons.logging,\n org.nuxeo.common,\n org.nuxeo.common.collections,\n org.nuxeo.common.utils,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core.schema,\n org.nuxeo.ecm.core.schema.types,\n org.nuxeo.ecm.core.schema.types.primitives,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.api.login,\n org.nuxeo.runtime.model,\n org.nuxeo.runtime.services.streaming\nBundle-SymbolicName: org.nuxeo.ecm.core.api;singleton:=true\nEclipse-RegisterBuddy: org.nuxeo.runtime\nEclipse-ExtensibleAPI: true\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-api","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-api/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.api.thumbnail.ThumbnailService","extensionPoints":[{"@type":"NXExtensionPoint","name":"thumbnailFactory","descriptors":["org.nuxeo.ecm.core.api.thumbnail.ThumbnailFactoryDescriptor"],"documentation":"\n      @author Vladimir Pasquier (vpasquier@nuxeo.com)\n      This extension\n      provides thumbnail factories according to the type, facet and\n      default one.\n      <code>\n    <thumbnailFactory facet=\"Folderish\"\n        factoryClass=\"org.nuxeo.ecm.platform.thumbnail.factories.ThumbnailFolderishFactory\" name=\"thumbnailFolderishFactory\"/>\n    <thumbnailFactory\n        factoryClass=\"org.nuxeo.ecm.platform.thumbnail.factories.ThumbnailDocumentFactory\" name=\"thumbnailDocumentFactory\"/>\n</code>\n","id":"org.nuxeo.ecm.core.api.thumbnail.ThumbnailService--thumbnailFactory","version":"11.1-SNAPSHOT","label":"thumbnailFactory (org.nuxeo.ecm.core.api.thumbnail.ThumbnailService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.thumbnail.ThumbnailService/ExtensionPoints/org.nuxeo.ecm.core.api.thumbnail.ThumbnailService--thumbnailFactory","documentationHtml":"<p/>\nThis extension\nprovides thumbnail factories according to the type, facet and\ndefault one.\n<p/><pre><code>    &lt;thumbnailFactory facet=\"Folderish\"\n        factoryClass=\"org.nuxeo.ecm.platform.thumbnail.factories.ThumbnailFolderishFactory\" name=\"thumbnailFolderishFactory\"/>\n    &lt;thumbnailFactory\n        factoryClass=\"org.nuxeo.ecm.platform.thumbnail.factories.ThumbnailDocumentFactory\" name=\"thumbnailDocumentFactory\"/>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.core.api.thumbnail.ThumbnailService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.api.thumbnail.ThumbnailService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.thumbnail.ThumbnailService/Services/org.nuxeo.ecm.core.api.thumbnail.ThumbnailService","componentId":"org.nuxeo.ecm.core.api.thumbnail.ThumbnailService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.api.thumbnail.ThumbnailServiceImpl","documentation":"","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.thumbnail.ThumbnailService","documentationHtml":"<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-api/bin/main/OSGI-INF/thumbnail-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.api.thumbnail.ThumbnailService\">\n\n  <implementation\n    class=\"org.nuxeo.ecm.core.api.thumbnail.ThumbnailServiceImpl\" />\n  <documentation>\n  </documentation>\n\n  <service>\n    <provide\n      interface=\"org.nuxeo.ecm.core.api.thumbnail.ThumbnailService\" />\n  </service>\n\n  <extension-point name=\"thumbnailFactory\">\n    <documentation>\n      @author Vladimir Pasquier (vpasquier@nuxeo.com)\n      This extension\n      provides thumbnail factories according to the type, facet and\n      default one.\n      <code>\n        <thumbnailFactory name=\"thumbnailFolderishFactory\"\n          facet=\"Folderish\"\n          factoryClass=\"org.nuxeo.ecm.platform.thumbnail.factories.ThumbnailFolderishFactory\" />\n        <thumbnailFactory name=\"thumbnailDocumentFactory\"\n          factoryClass=\"org.nuxeo.ecm.platform.thumbnail.factories.ThumbnailDocumentFactory\" />\n      </code>\n\n    </documentation>\n\n    <object\n      class=\"org.nuxeo.ecm.core.api.thumbnail.ThumbnailFactoryDescriptor\" />\n\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.api.propertiesmapping.PropertiesMappingComponent","extensionPoints":[{"@type":"NXExtensionPoint","name":"mapping","descriptors":["org.nuxeo.ecm.core.api.propertiesmapping.PropertiesMappingDescriptor"],"documentation":"\n      This extension point can be used to register Mappings.\n      Mapping is in the form : target DocumentModel property path : source DocumentModel property path\n      <code>\n    <mapping name=\"mappingName\">\n        <property path=\"somePropOnTargetDoc\">somePropOnSourceDoc</property>\n    </mapping>\n</code>\n","id":"org.nuxeo.ecm.core.api.propertiesmapping.PropertiesMappingComponent--mapping","version":"11.1-SNAPSHOT","label":"mapping (org.nuxeo.ecm.core.api.propertiesmapping.PropertiesMappingComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.propertiesmapping.PropertiesMappingComponent/ExtensionPoints/org.nuxeo.ecm.core.api.propertiesmapping.PropertiesMappingComponent--mapping","documentationHtml":"<p/>\nThis extension point can be used to register Mappings.\nMapping is in the form : target DocumentModel property path : source DocumentModel property path\n<p/><pre><code>    &lt;mapping name=\"mappingName\">\n        &lt;property path=\"somePropOnTargetDoc\">somePropOnSourceDoc&lt;/property>\n    &lt;/mapping>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.core.api.propertiesmapping.PropertiesMappingComponent"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.api.propertiesmapping.PropertiesMappingService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.propertiesmapping.PropertiesMappingComponent/Services/org.nuxeo.ecm.core.api.propertiesmapping.PropertiesMappingService","componentId":"org.nuxeo.ecm.core.api.propertiesmapping.PropertiesMappingComponent"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.api.propertiesmapping.impl.PropertiesMappingComponent","documentation":"","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.propertiesmapping.PropertiesMappingComponent","documentationHtml":"<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-api/bin/main/OSGI-INF/propertiesmapping-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.api.propertiesmapping.PropertiesMappingComponent\">\n\n  <implementation class=\"org.nuxeo.ecm.core.api.propertiesmapping.impl.PropertiesMappingComponent\" version=\"1.0.0\"/>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.api.propertiesmapping.PropertiesMappingService\" />\n  </service>\n\n  <documentation>\n  </documentation>\n\n  <extension-point name=\"mapping\">\n    <documentation>\n      This extension point can be used to register Mappings.\n      Mapping is in the form : target DocumentModel property path : source DocumentModel property path\n      <code>\n        <mapping name=\"mappingName\">\n          <property path=\"somePropOnTargetDoc\">somePropOnSourceDoc</property>\n        </mapping>\n      </code>\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.api.propertiesmapping.PropertiesMappingDescriptor\"/>\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.api.blohodlers.adapters","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.api.blohodlers.adapters--adapters","extensionPoint":"org.nuxeo.ecm.core.api.DocumentAdapterService--adapters","documentation":null,"xml":"<extension point=\"adapters\" target=\"org.nuxeo.ecm.core.api.DocumentAdapterService\">\n    <adapter class=\"org.nuxeo.ecm.core.api.blobholder.BlobHolder\" factory=\"org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterFactory\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.api.DocumentAdapterService","rawName":"service:org.nuxeo.ecm.core.api.DocumentAdapterService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.blohodlers.adapters/Contributions/org.nuxeo.ecm.core.api.blohodlers.adapters--adapters","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.ecm.core.api.blobholder.BlobHolder&quot; factory=&quot;org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterFactory&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.ecm.core.api.blobholder.BlobHolder\" factory=\"org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterFactory\"/>"}]}],"componentClass":null,"documentation":"Adapters BlobHolders\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.blohodlers.adapters","documentationHtml":"<p/>\nAdapters BlobHolders","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-api/bin/main/OSGI-INF/blob-holder-adapters-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.core.api.blohodlers.adapters\">\n  <documentation>Adapters BlobHolders</documentation>\n\n  <extension target=\"org.nuxeo.ecm.core.api.DocumentAdapterService\"\n    point=\"adapters\">\n    <adapter class=\"org.nuxeo.ecm.core.api.blobholder.BlobHolder\"\n      factory=\"org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterFactory\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.api.repository.RepositoryManager","extensionPoints":[{"@type":"NXExtensionPoint","name":"repositories","descriptors":["org.nuxeo.ecm.core.api.repository.Repository"],"documentation":"\n      Obsolete repositories definition.\n      Use org.nuxeo.ecm.core.storage.sql.RepositoryService instead.\n    \n","id":"org.nuxeo.ecm.core.api.repository.RepositoryManager--repositories","version":"11.1-SNAPSHOT","label":"repositories (org.nuxeo.ecm.core.api.repository.RepositoryManager)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.repository.RepositoryManager/ExtensionPoints/org.nuxeo.ecm.core.api.repository.RepositoryManager--repositories","documentationHtml":"<p/>\nObsolete repositories definition.\nUse org.nuxeo.ecm.core.storage.sql.RepositoryService instead.\n<p/>","componentId":"org.nuxeo.ecm.core.api.repository.RepositoryManager"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.api.repository.RepositoryManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.repository.RepositoryManager/Services/org.nuxeo.ecm.core.api.repository.RepositoryManager","componentId":"org.nuxeo.ecm.core.api.repository.RepositoryManager"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.api.repository.RepositoryManagerImpl","documentation":"\n    Manages repositories.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.repository.RepositoryManager","documentationHtml":"<p/>\nManages repositories.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-api/bin/main/OSGI-INF/RepositoryManager.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.core.api.repository.RepositoryManager\" version=\"1.0.0\">\n  <documentation>\n    Manages repositories.\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.api.repository.RepositoryManagerImpl\"/>\n\n  <service>\n    <provide\n      interface=\"org.nuxeo.ecm.core.api.repository.RepositoryManager\"/>\n  </service>\n\n  <extension-point name=\"repositories\">\n    <documentation>\n      Obsolete repositories definition.\n      Use org.nuxeo.ecm.core.storage.sql.RepositoryService instead.\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.api.repository.Repository\"/>\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.blob.BlobManager","extensionPoints":[{"@type":"NXExtensionPoint","name":"configuration","descriptors":["org.nuxeo.ecm.core.blob.BlobProviderDescriptor"],"documentation":"\n      Extension points to register the blob providers.\n    \n","id":"org.nuxeo.ecm.core.blob.BlobManager--configuration","version":"11.1-SNAPSHOT","label":"configuration (org.nuxeo.ecm.core.blob.BlobManager)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.blob.BlobManager/ExtensionPoints/org.nuxeo.ecm.core.blob.BlobManager--configuration","documentationHtml":"<p/>\nExtension points to register the blob providers.\n<p/>","componentId":"org.nuxeo.ecm.core.blob.BlobManager"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.blob.BlobManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.blob.BlobManager/Services/org.nuxeo.ecm.core.blob.BlobManager","componentId":"org.nuxeo.ecm.core.blob.BlobManager"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.blob.BlobManagerComponent","documentation":"\n    Blob Manager, delegating logic to the appropriate Blob Provider.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.blob.BlobManager","documentationHtml":"<p/>\nBlob Manager, delegating logic to the appropriate Blob Provider.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-api/bin/main/OSGI-INF/blobmanager-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.blob.BlobManager\" version=\"1.0.0\">\n\n  <documentation>\n    Blob Manager, delegating logic to the appropriate Blob Provider.\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.blob.BlobManagerComponent\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.blob.BlobManager\" />\n  </service>\n\n  <extension-point name=\"configuration\">\n    <documentation>\n      Extension points to register the blob providers.\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.blob.BlobProviderDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.api.thumbnail.adapter","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.api.thumbnail.adapter--adapters","extensionPoint":"org.nuxeo.ecm.core.api.DocumentAdapterService--adapters","documentation":null,"xml":"<extension point=\"adapters\" target=\"org.nuxeo.ecm.core.api.DocumentAdapterService\">\n    <adapter class=\"org.nuxeo.ecm.core.api.thumbnail.ThumbnailAdapter\" factory=\"org.nuxeo.ecm.core.api.thumbnail.ThumbnailAdapterFactory\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.api.DocumentAdapterService","rawName":"service:org.nuxeo.ecm.core.api.DocumentAdapterService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.thumbnail.adapter/Contributions/org.nuxeo.ecm.core.api.thumbnail.adapter--adapters","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.ecm.core.api.thumbnail.ThumbnailAdapter&quot; factory=&quot;org.nuxeo.ecm.core.api.thumbnail.ThumbnailAdapterFactory&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.ecm.core.api.thumbnail.ThumbnailAdapter\" factory=\"org.nuxeo.ecm.core.api.thumbnail.ThumbnailAdapterFactory\"/>"}]}],"componentClass":null,"documentation":"\n    Adapters contribution for thumbnail\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.thumbnail.adapter","documentationHtml":"<p/>\nAdapters contribution for thumbnail\n<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-api/bin/main/OSGI-INF/thumbnail-adapter-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.core.api.thumbnail.adapter\">\n  <documentation>\n    Adapters contribution for thumbnail\n  </documentation>\n\n  <extension target=\"org.nuxeo.ecm.core.api.DocumentAdapterService\"\n    point=\"adapters\">\n    <adapter\n      class=\"org.nuxeo.ecm.core.api.thumbnail.ThumbnailAdapter\"\n      factory=\"org.nuxeo.ecm.core.api.thumbnail.ThumbnailAdapterFactory\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.api.DocumentValidationService","extensionPoints":[{"@type":"NXExtensionPoint","name":"activations","descriptors":["org.nuxeo.ecm.core.api.validation.DocumentValidationDescriptor"],"documentation":"\n\n      Extension Point to enable/disable validation in any context.\n      <validation\n    activated=\"true\" context=\"CoreSession.saveDocument\"/>\n","id":"org.nuxeo.ecm.core.api.DocumentValidationService--activations","version":"11.1-SNAPSHOT","label":"activations (org.nuxeo.ecm.core.api.DocumentValidationService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.DocumentValidationService/ExtensionPoints/org.nuxeo.ecm.core.api.DocumentValidationService--activations","documentationHtml":"<p/>\nExtension Point to enable/disable validation in any context.\n<validation\nactivated=\"true\" context=\"CoreSession.saveDocument\"/>","componentId":"org.nuxeo.ecm.core.api.DocumentValidationService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.api.validation.DocumentValidationService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.DocumentValidationService/Services/org.nuxeo.ecm.core.api.validation.DocumentValidationService","componentId":"org.nuxeo.ecm.core.api.DocumentValidationService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.api.validation.DocumentValidationServiceImpl","documentation":"\n    Service providing a way to validates document according to constraints described in schemas.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.DocumentValidationService","documentationHtml":"<p/>\nService providing a way to validates document according to constraints described in schemas.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-api/bin/main/OSGI-INF/DocumentValidationService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.core.api.DocumentValidationService\" version=\"1.0.0\">\n  <documentation>\n    Service providing a way to validates document according to constraints described in schemas.\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.api.validation.DocumentValidationServiceImpl\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.api.validation.DocumentValidationService\" />\n  </service>\n\n  <extension-point name=\"activations\">\n\n    <documentation>\n      Extension Point to enable/disable validation in any context.\n      <validation context=\"CoreSession.saveDocument\" activated=\"true\" />\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.api.validation.DocumentValidationDescriptor\" />\n\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.api.properties","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.api.properties--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n      Property that defines the max length of the document name,\n      which is mainly used to build the document path.\n    \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <documentation>\n      Property that defines the max length of the document name,\n      which is mainly used to build the document path.\n    </documentation>\n    <property name=\"nuxeo.path.segment.maxsize\">24</property>\n\n    <documentation>\n      Property that defines if a transient username should be unique no matter what base username is provided,\n      or if a transient username should be always the same for a given base username.\n\n      @since 10.3\n    </documentation>\n    <property name=\"nuxeo.transient.username.unique\">false</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.properties/Contributions/org.nuxeo.ecm.core.api.properties--configuration","documentationHtml":"<p/>\nProperty that defines the max length of the document name,\nwhich is mainly used to build the document path.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;nuxeo.path.segment.maxsize&quot;&gt;24&lt;/property&gt;","id":"nuxeo.path.segment.maxsize","label":"property nuxeo.path.segment.maxsize","rawXml":"<property name=\"nuxeo.path.segment.maxsize\">24</property>"},{"documentation":"","xml":"&lt;property name=&quot;nuxeo.transient.username.unique&quot;&gt;false&lt;/property&gt;","id":"nuxeo.transient.username.unique","label":"property nuxeo.transient.username.unique","rawXml":"<property name=\"nuxeo.transient.username.unique\">false</property>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.properties","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-api/bin/main/OSGI-INF/core-api-properties.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.core.api.properties\">\n\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n    <documentation>\n      Property that defines the max length of the document name,\n      which is mainly used to build the document path.\n    </documentation>\n    <property name=\"nuxeo.path.segment.maxsize\">24</property>\n\n    <documentation>\n      Property that defines if a transient username should be unique no matter what base username is provided,\n      or if a transient username should be always the same for a given base username.\n\n      @since 10.3\n    </documentation>\n    <property name=\"nuxeo.transient.username.unique\">false</property>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.api.pathsegment.PathSegmentService","extensionPoints":[{"@type":"NXExtensionPoint","name":"pathSegmentService","descriptors":["org.nuxeo.ecm.core.api.pathsegment.PathSegmentServiceDescriptor"],"documentation":"\n      Extension point defining the implementation for the computation of\n      the path segment for new a DocumentModel. Example:\n\n      <code>\n    <service class=\"some-class\"/>\n</code>\n\n\n      The provided class must implement org.nuxeo.ecm.core.api.pathsegment.PathSegmentService\n\n      The default implementation is org.nuxeo.ecm.core.api.pathsegment.PathSegmentServiceDefault\n      You can contribute org.nuxeo.ecm.core.api.pathsegment.PathSegmentServiceCompat\n      to get pre-Nuxeo 5.4 behavior.\n    \n","id":"org.nuxeo.ecm.core.api.pathsegment.PathSegmentService--pathSegmentService","version":"11.1-SNAPSHOT","label":"pathSegmentService (org.nuxeo.ecm.core.api.pathsegment.PathSegmentService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.pathsegment.PathSegmentService/ExtensionPoints/org.nuxeo.ecm.core.api.pathsegment.PathSegmentService--pathSegmentService","documentationHtml":"<p/>\nExtension point defining the implementation for the computation of\nthe path segment for new a DocumentModel. Example:\n<p/>\n<pre><code>    &lt;service class=\"some-class\"/>\n</code></pre><p/>\nThe provided class must implement org.nuxeo.ecm.core.api.pathsegment.PathSegmentService\n<p/>\nThe default implementation is org.nuxeo.ecm.core.api.pathsegment.PathSegmentServiceDefault\nYou can contribute org.nuxeo.ecm.core.api.pathsegment.PathSegmentServiceCompat\nto get pre-Nuxeo 5.4 behavior.\n<p/>","componentId":"org.nuxeo.ecm.core.api.pathsegment.PathSegmentService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.api.pathsegment.PathSegmentService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.pathsegment.PathSegmentService/Services/org.nuxeo.ecm.core.api.pathsegment.PathSegmentService","componentId":"org.nuxeo.ecm.core.api.pathsegment.PathSegmentService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.api.pathsegment.PathSegmentComponent","documentation":"\n    Component defining the implementation to use to compute the path\n    segment for a new DocumentModel.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.pathsegment.PathSegmentService","documentationHtml":"<p/>\nComponent defining the implementation to use to compute the path\nsegment for a new DocumentModel.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-api/bin/main/OSGI-INF/pathsegment-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.api.pathsegment.PathSegmentService\">\n\n  <implementation\n    class=\"org.nuxeo.ecm.core.api.pathsegment.PathSegmentComponent\" />\n  <documentation>\n    Component defining the implementation to use to compute the path\n    segment for a new DocumentModel.\n  </documentation>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.api.pathsegment.PathSegmentService\" />\n  </service>\n\n  <extension-point name=\"pathSegmentService\">\n    <documentation>\n      Extension point defining the implementation for the computation of\n      the path segment for new a DocumentModel. Example:\n\n      <code>\n        <service class=\"some-class\" />\n      </code>\n\n      The provided class must implement org.nuxeo.ecm.core.api.pathsegment.PathSegmentService\n\n      The default implementation is org.nuxeo.ecm.core.api.pathsegment.PathSegmentServiceDefault\n      You can contribute org.nuxeo.ecm.core.api.pathsegment.PathSegmentServiceCompat\n      to get pre-Nuxeo 5.4 behavior.\n    </documentation>\n\n    <object\n      class=\"org.nuxeo.ecm.core.api.pathsegment.PathSegmentServiceDescriptor\" />\n\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent","extensionPoints":[{"@type":"NXExtensionPoint","name":"BlobHolderFactory","descriptors":["org.nuxeo.ecm.core.api.blobholder.BlobHolderFactoryDescriptor"],"documentation":"\n      @author Thierry Delprat (td@nuxeo.com)\n\n      This extension point let you contribute custom factories for BlobHolder\n      according to DocumentType\n    \n","id":"org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent--BlobHolderFactory","version":"11.1-SNAPSHOT","label":"BlobHolderFactory (org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent/ExtensionPoints/org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent--BlobHolderFactory","documentationHtml":"<p/>\nThis extension point let you contribute custom factories for BlobHolder\naccording to DocumentType\n<p/>","componentId":"org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent"},{"@type":"NXExtensionPoint","name":"ExternalBlobAdapter","descriptors":["org.nuxeo.ecm.core.api.externalblob.ExternalBlobAdapterDescriptor"],"documentation":"\n      @author Anahide Tchertchian (at@nuxeo.com)\n\n      Contribute external blob adapters. Contributed classes have to follow the\n      ExternalBlobAdapter interface.\n\n      Example of contribution using the default file system adapter:\n\n      <code>\n    <adapter\n        class=\"org.nuxeo.ecm.core.api.externalblob.FileSystemExternalBlobAdapter\" prefix=\"fs\">\n        <property name=\"container\">/tmp/</property>\n    </adapter>\n</code>\n","id":"org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent--ExternalBlobAdapter","version":"11.1-SNAPSHOT","label":"ExternalBlobAdapter (org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent/ExtensionPoints/org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent--ExternalBlobAdapter","documentationHtml":"<p/>\nContribute external blob adapters. Contributed classes have to follow the\nExternalBlobAdapter interface.\n<p/>\nExample of contribution using the default file system adapter:\n<p/>\n<pre><code>    &lt;adapter\n        class=\"org.nuxeo.ecm.core.api.externalblob.FileSystemExternalBlobAdapter\" prefix=\"fs\">\n        &lt;property name=\"container\">/tmp/&lt;/property>\n    &lt;/adapter>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent/Services/org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterService","componentId":"org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent","documentation":"\n    The BlobHolderAdapter provides the BlobHolderAdapterService wich give the needed BlobHolder.\n    A BlobHolder is an adapter that provides methods to get binaries and related metadatas.\n    @author Thierry Delprat (td@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent","documentationHtml":"<p/>\nThe BlobHolderAdapter provides the BlobHolderAdapterService wich give the needed BlobHolder.\nA BlobHolder is an adapter that provides methods to get binaries and related metadatas.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-api/bin/main/OSGI-INF/blob-holder-service-framework.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component\n  name=\"org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent\">\n\n  <implementation\n    class=\"org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterComponent\" />\n  <documentation>\n    The BlobHolderAdapter provides the BlobHolderAdapterService wich give the needed BlobHolder.\n    A BlobHolder is an adapter that provides methods to get binaries and related metadatas.\n    @author Thierry Delprat (td@nuxeo.com)\n  </documentation>\n\n  <service>\n    <provide\n      interface=\"org.nuxeo.ecm.core.api.blobholder.BlobHolderAdapterService\" />\n  </service>\n\n  <extension-point name=\"BlobHolderFactory\">\n    <documentation>\n      @author Thierry Delprat (td@nuxeo.com)\n\n      This extension point let you contribute custom factories for BlobHolder\n      according to DocumentType\n    </documentation>\n\n    <object\n      class=\"org.nuxeo.ecm.core.api.blobholder.BlobHolderFactoryDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"ExternalBlobAdapter\">\n    <documentation>\n      @author Anahide Tchertchian (at@nuxeo.com)\n\n      Contribute external blob adapters. Contributed classes have to follow the\n      ExternalBlobAdapter interface.\n\n      Example of contribution using the default file system adapter:\n\n      <code>\n        <adapter prefix=\"fs\"\n          class=\"org.nuxeo.ecm.core.api.externalblob.FileSystemExternalBlobAdapter\">\n          <property name=\"container\">/tmp/</property>\n        </adapter>\n      </code>\n\n    </documentation>\n\n    <object\n      class=\"org.nuxeo.ecm.core.api.externalblob.ExternalBlobAdapterDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.core.LocalConfigurationService","extensionPoints":[],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.api.localconfiguration.LocalConfigurationService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.core.LocalConfigurationService/Services/org.nuxeo.ecm.core.api.localconfiguration.LocalConfigurationService","componentId":"org.nuxeo.core.LocalConfigurationService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.api.localconfiguration.LocalConfigurationServiceImpl","documentation":"\n    The LocalConfiguration service manages LocalConfiguration classes.\n    It provides a method to retrieve LocalConfiguration from a current document\n    and a given facet.\n\n    @author Thomas Roger (troger@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.core.LocalConfigurationService","documentationHtml":"<p/>\nThe LocalConfiguration service manages LocalConfiguration classes.\nIt provides a method to retrieve LocalConfiguration from a current document\nand a given facet.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-api/bin/main/OSGI-INF/local-configuration-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.core.LocalConfigurationService\">\n\n  <documentation>\n    The LocalConfiguration service manages LocalConfiguration classes.\n    It provides a method to retrieve LocalConfiguration from a current document\n    and a given facet.\n\n    @author Thomas Roger (troger@nuxeo.com)\n  </documentation>\n\n  <implementation\n    class=\"org.nuxeo.ecm.core.api.localconfiguration.LocalConfigurationServiceImpl\"/>\n\n  <service>\n    <provide\n      interface=\"org.nuxeo.ecm.core.api.localconfiguration.LocalConfigurationService\"/>\n  </service>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.security.acl.properties","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.security.acl.properties--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n            Enable Legacy behavior (Nuxeo 6.x) on ACL order of execution. On Nuxeo 6.x and below, the ACL execution order\n            used to be Inherited -&gt; Local -&gt; LocalGroup (custom), on &gt;7.x it's Inherited -&gt; LocalGroup (custom) -&gt; Local.\n            This flag enables Legacy ACL mode on newer Nuxeo versions 7.x and above.\n        \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n        <documentation>\n            Enable Legacy behavior (Nuxeo 6.x) on ACL order of execution. On Nuxeo 6.x and below, the ACL execution order\n            used to be Inherited -&gt; Local -&gt; LocalGroup (custom), on &gt;7.x it's Inherited -&gt; LocalGroup (custom) -&gt; Local.\n            This flag enables Legacy ACL mode on newer Nuxeo versions 7.x and above.\n        </documentation>\n        <property name=\"nuxeo.security.acl.legacyBehavior\">false</property>\n    </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.security.acl.properties/Contributions/org.nuxeo.ecm.core.security.acl.properties--configuration","documentationHtml":"<p/>\nEnable Legacy behavior (Nuxeo 6.x) on ACL order of execution. On Nuxeo 6.x and below, the ACL execution order\nused to be Inherited -&gt; Local -&gt; LocalGroup (custom), on &gt;7.x it's Inherited -&gt; LocalGroup (custom) -&gt; Local.\nThis flag enables Legacy ACL mode on newer Nuxeo versions 7.x and above.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;nuxeo.security.acl.legacyBehavior&quot;&gt;false&lt;/property&gt;","id":"nuxeo.security.acl.legacyBehavior","label":"property nuxeo.security.acl.legacyBehavior","rawXml":"<property name=\"nuxeo.security.acl.legacyBehavior\">false</property>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.security.acl.properties","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-api/bin/main/OSGI-INF/legacy-acp-behavior.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.security.acl.properties\">\n    <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n        <documentation>\n            Enable Legacy behavior (Nuxeo 6.x) on ACL order of execution. On Nuxeo 6.x and below, the ACL execution order\n            used to be Inherited -> Local -> LocalGroup (custom), on >7.x it's Inherited -> LocalGroup (custom) -> Local.\n            This flag enables Legacy ACL mode on newer Nuxeo versions 7.x and above.\n        </documentation>\n        <property name=\"nuxeo.security.acl.legacyBehavior\">false</property>\n    </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.api.DocumentAdapterService","extensionPoints":[{"@type":"NXExtensionPoint","name":"adapters","descriptors":["org.nuxeo.ecm.core.api.adapter.DocumentAdapterDescriptor"],"documentation":"\n\n      Extension Point for registering new document adapters\n      XML extensions may contain any number of 'adapter' elements of the form:\n      <adapter\n    class=\"org.nuxeo.ecm.sample.adapter.Versionable\" facet=\"Versionable\" factory=\"org.nuxeo.ecm.sample.adapter.VersionableFactory\"/>\n\n      This means any document having the facet 'facet' can be adapted to a 'class' object using the factory 'factory'\n      <p/>\n\n      The facet attribute is optional and serve to restrict the applicability of the adapter.\n      If no facet is specified the adapter will be applicable on any document.\n    \n","id":"org.nuxeo.ecm.core.api.DocumentAdapterService--adapters","version":"11.1-SNAPSHOT","label":"adapters (org.nuxeo.ecm.core.api.DocumentAdapterService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.DocumentAdapterService/ExtensionPoints/org.nuxeo.ecm.core.api.DocumentAdapterService--adapters","documentationHtml":"<p/>\nExtension Point for registering new document adapters\nXML extensions may contain any number of 'adapter' elements of the form:\n<adapter\nclass=\"org.nuxeo.ecm.sample.adapter.Versionable\" facet=\"Versionable\" factory=\"org.nuxeo.ecm.sample.adapter.VersionableFactory\"/>\n<p/>\nThis means any document having the facet 'facet' can be adapted to a 'class' object using the factory 'factory'\n<p/>\nThe facet attribute is optional and serve to restrict the applicability of the adapter.\nIf no facet is specified the adapter will be applicable on any document.\n<p/>","componentId":"org.nuxeo.ecm.core.api.DocumentAdapterService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.api.adapter.DocumentAdapterService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.DocumentAdapterService/Services/org.nuxeo.ecm.core.api.adapter.DocumentAdapterService","componentId":"org.nuxeo.ecm.core.api.DocumentAdapterService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.api.adapter.DocumentAdapterService","documentation":"\n    Service providing a dynamic adapter mechanism to adapt documents to random interfaces.\n    @author Bogdan Stefanescu (bs@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.DocumentAdapterService","documentationHtml":"<p/>\nService providing a dynamic adapter mechanism to adapt documents to random interfaces.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-api/bin/main/OSGI-INF/DocumentAdapterService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.core.api.DocumentAdapterService\" version=\"1.0.0\">\n  <documentation>\n    Service providing a dynamic adapter mechanism to adapt documents to random interfaces.\n    @author Bogdan Stefanescu (bs@nuxeo.com)\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.api.adapter.DocumentAdapterService\"/>\n\n  <service>\n    <provide\n      interface=\"org.nuxeo.ecm.core.api.adapter.DocumentAdapterService\"/>\n  </service>\n\n  <extension-point name=\"adapters\">\n\n    <documentation>\n      Extension Point for registering new document adapters\n      XML extensions may contain any number of 'adapter' elements of the form:\n      <adapter facet=\"Versionable\"\n        class=\"org.nuxeo.ecm.sample.adapter.Versionable\"\n        factory=\"org.nuxeo.ecm.sample.adapter.VersionableFactory\"/>\n      This means any document having the facet 'facet' can be adapted to a 'class' object using the factory 'factory'\n      <p/>\n      The facet attribute is optional and serve to restrict the applicability of the adapter.\n      If no facet is specified the adapter will be applicable on any document.\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.api.adapter.DocumentAdapterDescriptor\"/>\n\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.api.DocumentValidationService.activations","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.api.DocumentValidationService.activations--activations","extensionPoint":"org.nuxeo.ecm.core.api.DocumentValidationService--activations","documentation":null,"xml":"<extension point=\"activations\" target=\"org.nuxeo.ecm.core.api.DocumentValidationService\">\n    <validation activated=\"true\" context=\"createDocument\"/>\n    <validation activated=\"true\" context=\"saveDocument\"/>\n    <validation activated=\"true\" context=\"importDocument\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.api.DocumentValidationService","rawName":"service:org.nuxeo.ecm.core.api.DocumentValidationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.DocumentValidationService.activations/Contributions/org.nuxeo.ecm.core.api.DocumentValidationService.activations--activations","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;validation activated=&quot;true&quot; context=&quot;createDocument&quot;/&gt;","id":null,"label":"validation","rawXml":"<validation activated=\"true\" context=\"createDocument\"/>"},{"documentation":"","xml":"&lt;validation activated=&quot;true&quot; context=&quot;saveDocument&quot;/&gt;","id":null,"label":"validation","rawXml":"<validation activated=\"true\" context=\"saveDocument\"/>"},{"documentation":"","xml":"&lt;validation activated=&quot;true&quot; context=&quot;importDocument&quot;/&gt;","id":null,"label":"validation","rawXml":"<validation activated=\"true\" context=\"importDocument\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.api/org.nuxeo.ecm.core.api.DocumentValidationService.activations","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-api/bin/main/OSGI-INF/DocumentValidationService-activation.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.api.DocumentValidationService.activations\">\n\n  <require>org.nuxeo.ecm.core.api.DocumentValidationService</require>\n\n  <extension target=\"org.nuxeo.ecm.core.api.DocumentValidationService\" point=\"activations\">\n    <validation context=\"createDocument\" activated=\"true\" />\n    <validation context=\"saveDocument\" activated=\"true\" />\n    <validation context=\"importDocument\" activated=\"true\" />\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.platform.login","fileName":"classes","manifest":"Export-Package: org.nuxeo.ecm.platform.login\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Category: runtime\nBundle-Localization: plugin\nBundle-Name: Nuxeo Login Module\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Vendor: Nuxeo\nBundle-Version: 0.0.0.SNAPSHOT\nBundle-ManifestVersion: 2\nImport-Package: javax.annotation;version=\"1.0\",\n javax.security.auth,\n javax.security.auth.callback,\n javax.security.auth.login,\n javax.security.auth.spi,\n org.apache.commons.logging,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.security,\n org.nuxeo.ecm.directory;api=split,\n org.nuxeo.ecm.platform.api.login,\n org.nuxeo.ecm.platform.usermanager,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.api.login,\n org.nuxeo.runtime.model\nBundle-SymbolicName: org.nuxeo.ecm.platform.login\nEclipse-RegisterBuddy: org.nuxeo.runtime\nEclipse-BuddyPolicy: registered\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-platform-login","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform","name":"org.nuxeo.ecm.platform","liveDoc":{},"subGroups":[{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.directory","name":"org.nuxeo.ecm.directory","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.directory","org.nuxeo.ecm.directory.api","org.nuxeo.ecm.directory.sql","org.nuxeo.ecm.directory.types.contrib"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.query","name":"org.nuxeo.ecm.platform.query","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.query.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.usermanager","name":"org.nuxeo.ecm.platform.usermanager","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.usermanager","org.nuxeo.ecm.platform.usermanager.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]}],"bundleIds":["org.nuxeo.apidoc.core","org.nuxeo.apidoc.repo","org.nuxeo.directory.mongodb","org.nuxeo.ecm.actions","org.nuxeo.ecm.platform.api","org.nuxeo.ecm.platform.commandline.executor","org.nuxeo.ecm.platform.content.template","org.nuxeo.ecm.platform.dublincore","org.nuxeo.ecm.platform.forms.layout.export","org.nuxeo.ecm.platform.login","org.nuxeo.ecm.platform.web.common","org.nuxeo.osgi.app"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/login/nuxeo-platform-login/target/classes","components":[]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.convert","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.core.convert.cache,\n org.nuxeo.ecm.core.convert.extension,\n org.nuxeo.ecm.core.convert.service\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Category: core\nBundle-Name: org.nuxeo.ecm.core.convert\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Version: 5.4.2.qualifier\nEclipse-BuddyPolicy: dependent\nNuxeo-Component: OSGI-INF/convert-service-framework.xml,\n OSGI-INF/properties-contrib.xml\nBundle-ManifestVersion: 2\nImport-Package: org.apache.commons.logging,\n org.nuxeo.common.utils,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.blobholder,\n org.nuxeo.ecm.core.api.impl.blob,\n org.nuxeo.ecm.core.convert.api,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model,\n org.osgi.framework\nBundle-SymbolicName: org.nuxeo.ecm.core.convert\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-convert","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-convert/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.convert.configuration","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.convert.configuration--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n      Property that enforces the source mime type check when calling a converter. Defaults to true.\n\n      @since 10.3\n    \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <documentation>\n      Property that enforces the source mime type check when calling a converter. Defaults to true.\n\n      @since 10.3\n    </documentation>\n    <property name=\"nuxeo.convert.enforceSourceMimeTypeCheck\">true</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.convert/org.nuxeo.ecm.core.convert.configuration/Contributions/org.nuxeo.ecm.core.convert.configuration--configuration","documentationHtml":"<p/>\nProperty that enforces the source mime type check when calling a converter. Defaults to true.\n<p/>\n@since 10.3\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;nuxeo.convert.enforceSourceMimeTypeCheck&quot;&gt;true&lt;/property&gt;","id":"nuxeo.convert.enforceSourceMimeTypeCheck","label":"property nuxeo.convert.enforceSourceMimeTypeCheck","rawXml":"<property name=\"nuxeo.convert.enforceSourceMimeTypeCheck\">true</property>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.convert/org.nuxeo.ecm.core.convert.configuration","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-convert/bin/main/OSGI-INF/properties-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.convert.configuration\">\n\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n    <documentation>\n      Property that enforces the source mime type check when calling a converter. Defaults to true.\n\n      @since 10.3\n    </documentation>\n    <property name=\"nuxeo.convert.enforceSourceMimeTypeCheck\">true</property>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.convert.service.ConversionServiceImpl","extensionPoints":[{"@type":"NXExtensionPoint","name":"converter","descriptors":["org.nuxeo.ecm.core.convert.extension.ConverterDescriptor"],"documentation":"\n      This extension can be used to register new converters\n    \n","id":"org.nuxeo.ecm.core.convert.service.ConversionServiceImpl--converter","version":"11.1-SNAPSHOT","label":"converter (org.nuxeo.ecm.core.convert.service.ConversionServiceImpl)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.convert/org.nuxeo.ecm.core.convert.service.ConversionServiceImpl/ExtensionPoints/org.nuxeo.ecm.core.convert.service.ConversionServiceImpl--converter","documentationHtml":"<p/>\nThis extension can be used to register new converters\n<p/>","componentId":"org.nuxeo.ecm.core.convert.service.ConversionServiceImpl"},{"@type":"NXExtensionPoint","name":"configuration","descriptors":["org.nuxeo.ecm.core.convert.extension.GlobalConfigDescriptor"],"documentation":"\n      This extension can be used to configure conversion service\n    \n","id":"org.nuxeo.ecm.core.convert.service.ConversionServiceImpl--configuration","version":"11.1-SNAPSHOT","label":"configuration (org.nuxeo.ecm.core.convert.service.ConversionServiceImpl)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.convert/org.nuxeo.ecm.core.convert.service.ConversionServiceImpl/ExtensionPoints/org.nuxeo.ecm.core.convert.service.ConversionServiceImpl--configuration","documentationHtml":"<p/>\nThis extension can be used to configure conversion service\n<p/>","componentId":"org.nuxeo.ecm.core.convert.service.ConversionServiceImpl"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.convert.api.ConversionService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.convert/org.nuxeo.ecm.core.convert.service.ConversionServiceImpl/Services/org.nuxeo.ecm.core.convert.api.ConversionService","componentId":"org.nuxeo.ecm.core.convert.service.ConversionServiceImpl"},{"@type":"NXService","id":"org.nuxeo.ecm.core.convert.service.MimeTypeTranslationHelper","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.convert/org.nuxeo.ecm.core.convert.service.ConversionServiceImpl/Services/org.nuxeo.ecm.core.convert.service.MimeTypeTranslationHelper","componentId":"org.nuxeo.ecm.core.convert.service.ConversionServiceImpl"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.convert.service.ConversionServiceImpl","documentation":"\n    Service to handle conversions\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.convert/org.nuxeo.ecm.core.convert.service.ConversionServiceImpl","documentationHtml":"<p/>\nService to handle conversions\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-convert/bin/main/OSGI-INF/convert-service-framework.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.convert.service.ConversionServiceImpl\">\n  <documentation>\n    Service to handle conversions\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.convert.service.ConversionServiceImpl\"/>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.convert.api.ConversionService\"/>\n    <provide interface=\"org.nuxeo.ecm.core.convert.service.MimeTypeTranslationHelper\"/>\n  </service>\n\n  <extension-point name=\"converter\">\n    <documentation>\n      This extension can be used to register new converters\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.convert.extension.ConverterDescriptor\"/>\n  </extension-point>\n\n  <extension-point name=\"configuration\">\n    <documentation>\n      This extension can be used to configure conversion service\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.convert.extension.GlobalConfigDescriptor\"/>\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.platform.el","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.platform.el\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Localization: plugin\nBundle-Name: Nuxeo Platform Expression Language\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Vendor: Nuxeo\nBundle-Version: 0.0.0.SNAPSHOT\nBundle-ManifestVersion: 2\nImport-Package: javax.annotation;version=\"1.0\",\n javax.ejb,\n javax.el,\n org.apache.commons.logging,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.model,\n org.nuxeo.ecm.core.api.model.impl,\n org.nuxeo.ecm.directory;api=split\nNuxeo-Component: OSGI-INF/el-service.xml\nBundle-SymbolicName: org.nuxeo.ecm.platform.el;singleton:=true\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-el","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-el/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.el.service","extensionPoints":[{"@type":"NXExtensionPoint","name":"elContextFactory","descriptors":["org.nuxeo.ecm.platform.el.ELContextFactoryDescriptor"],"documentation":"\n      The class defining the ELContext factory. This is used by high-level UI components\n      like Seam/JSF that need to provided extended EL context when evaluating certain\n      expressions.\n\n      Example:\n\n      <code>\n    <factory class=\"com.example.ELContextFactoryImpl\"/>\n</code>\n","id":"org.nuxeo.ecm.platform.el.service--elContextFactory","version":"11.1-SNAPSHOT","label":"elContextFactory (org.nuxeo.ecm.platform.el.service)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.platform.el/org.nuxeo.ecm.platform.el.service/ExtensionPoints/org.nuxeo.ecm.platform.el.service--elContextFactory","documentationHtml":"<p/>\nThe class defining the ELContext factory. This is used by high-level UI components\nlike Seam/JSF that need to provided extended EL context when evaluating certain\nexpressions.\n<p/>\nExample:\n<p/>\n<pre><code>    &lt;factory class=\"com.example.ELContextFactoryImpl\"/>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.platform.el.service"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.platform.el.ELService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.platform.el/org.nuxeo.ecm.platform.el.service/Services/org.nuxeo.ecm.platform.el.ELService","componentId":"org.nuxeo.ecm.platform.el.service"}],"extensions":[],"componentClass":"org.nuxeo.ecm.platform.el.ELServiceComponent","documentation":"\n    The action service provides extension points related to EL.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.platform.el/org.nuxeo.ecm.platform.el.service","documentationHtml":"<p/>\nThe action service provides extension points related to EL.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-el/bin/main/OSGI-INF/el-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.el.service\">\n  <documentation>\n    The action service provides extension points related to EL.\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.platform.el.ELServiceComponent\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.platform.el.ELService\" />\n  </service>\n\n  <extension-point name=\"elContextFactory\">\n    <documentation>\n      The class defining the ELContext factory. This is used by high-level UI components\n      like Seam/JSF that need to provided extended EL context when evaluating certain\n      expressions.\n\n      Example:\n\n      <code>\n        <factory class=\"com.example.ELContextFactoryImpl\" />\n      </code>\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.platform.el.ELContextFactoryDescriptor\" />\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.platform.forms.layout.export","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 1\nBundle-Name: Nuxeo ECM Layout Export Fragment\nBundle-SymbolicName: org.nuxeo.ecm.platform.forms.layout.export;singleton:=true\nBundle-Vendor: Nuxeo\nBundle-Category: stateless\nRequire-Bundle: org.nuxeo.ecm.platform.forms.layout.api,\n org.nuxeo.ecm.platform.forms.layout.client\nNuxeo-Component: OSGI-INF/marshallers-contrib.xml\nNuxeo-WebModule: org.nuxeo.ecm.platform.forms.layout.export.WebLayoutApplication\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-platform-forms-layout-export","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform","name":"org.nuxeo.ecm.platform","liveDoc":{},"subGroups":[{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.directory","name":"org.nuxeo.ecm.directory","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.directory","org.nuxeo.ecm.directory.api","org.nuxeo.ecm.directory.sql","org.nuxeo.ecm.directory.types.contrib"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.query","name":"org.nuxeo.ecm.platform.query","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.query.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.usermanager","name":"org.nuxeo.ecm.platform.usermanager","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.usermanager","org.nuxeo.ecm.platform.usermanager.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]}],"bundleIds":["org.nuxeo.apidoc.core","org.nuxeo.apidoc.repo","org.nuxeo.directory.mongodb","org.nuxeo.ecm.actions","org.nuxeo.ecm.platform.api","org.nuxeo.ecm.platform.commandline.executor","org.nuxeo.ecm.platform.content.template","org.nuxeo.ecm.platform.dublincore","org.nuxeo.ecm.platform.forms.layout.export","org.nuxeo.ecm.platform.login","org.nuxeo.ecm.platform.web.common","org.nuxeo.osgi.app"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-forms-layout-export/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.contentview.json.marshallers","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.contentview.json.marshallers--marshallers","extensionPoint":"org.nuxeo.ecm.core.io.MarshallerRegistry--marshallers","documentation":null,"xml":"<extension point=\"marshallers\" target=\"org.nuxeo.ecm.core.io.MarshallerRegistry\">\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.FieldDefinitionJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutDefinitionJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutDefinitionsJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutTypeConfigurationJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutTypeDefinitionJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutTypeDefinitionsJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.RenderingInfoJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetDefinitionJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetReferenceJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetSelectOptionJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetTypeConfigurationJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetTypeDefinitionJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetTypeDefinitionsJsonWriter\" enable=\"true\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.io.MarshallerRegistry","rawName":"service:org.nuxeo.ecm.core.io.MarshallerRegistry"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.forms.layout.export/org.nuxeo.ecm.platform.contentview.json.marshallers/Contributions/org.nuxeo.ecm.platform.contentview.json.marshallers--marshallers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.forms.layout.export.FieldDefinitionJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.forms.layout.export.FieldDefinitionJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.forms.layout.export.LayoutDefinitionJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutDefinitionJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.forms.layout.export.LayoutDefinitionsJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutDefinitionsJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.forms.layout.export.LayoutJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.forms.layout.export.LayoutTypeConfigurationJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutTypeConfigurationJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.forms.layout.export.LayoutTypeDefinitionJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutTypeDefinitionJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.forms.layout.export.LayoutTypeDefinitionsJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutTypeDefinitionsJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.forms.layout.export.RenderingInfoJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.forms.layout.export.RenderingInfoJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.forms.layout.export.WidgetDefinitionJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetDefinitionJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.forms.layout.export.WidgetReferenceJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetReferenceJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.forms.layout.export.WidgetSelectOptionJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetSelectOptionJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.forms.layout.export.WidgetTypeConfigurationJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetTypeConfigurationJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.forms.layout.export.WidgetTypeDefinitionJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetTypeDefinitionJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.forms.layout.export.WidgetTypeDefinitionsJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetTypeDefinitionsJsonWriter\" enable=\"true\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.forms.layout.export/org.nuxeo.ecm.platform.contentview.json.marshallers","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-forms-layout-export/bin/main/OSGI-INF/marshallers-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.contentview.json.marshallers\" version=\"1.0.0\">\n\n  <extension target=\"org.nuxeo.ecm.core.io.MarshallerRegistry\" point=\"marshallers\">\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.FieldDefinitionJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutDefinitionJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutDefinitionsJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutTypeConfigurationJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutTypeDefinitionJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.LayoutTypeDefinitionsJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.RenderingInfoJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetDefinitionJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetReferenceJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetSelectOptionJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetTypeConfigurationJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetTypeDefinitionJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.forms.layout.export.WidgetTypeDefinitionsJsonWriter\" enable=\"true\" />\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.platform.query.api","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-Name: Nuxeo Platform Query API Fragment\nBundle-SymbolicName: org.nuxeo.ecm.platform.query.api;singleton:=true\nNuxeo-Component: OSGI-INF/pageprovider-framework.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-platform-query-api","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.query","name":"org.nuxeo.ecm.platform.query","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.query.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-query-api/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.query.api.PageProviderService","extensionPoints":[{"@type":"NXExtensionPoint","name":"providers","descriptors":["org.nuxeo.ecm.platform.query.core.CoreQueryPageProviderDescriptor","org.nuxeo.ecm.platform.query.core.GenericPageProviderDescriptor"],"documentation":null,"id":"org.nuxeo.ecm.platform.query.api.PageProviderService--providers","version":"11.1-SNAPSHOT","label":"providers (org.nuxeo.ecm.platform.query.api.PageProviderService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.query/org.nuxeo.ecm.platform.query.api/org.nuxeo.ecm.platform.query.api.PageProviderService/ExtensionPoints/org.nuxeo.ecm.platform.query.api.PageProviderService--providers","documentationHtml":"","componentId":"org.nuxeo.ecm.platform.query.api.PageProviderService"},{"@type":"NXExtensionPoint","name":"replacers","descriptors":["org.nuxeo.ecm.platform.query.core.PageProviderClassReplacerDescriptor"],"documentation":null,"id":"org.nuxeo.ecm.platform.query.api.PageProviderService--replacers","version":"11.1-SNAPSHOT","label":"replacers (org.nuxeo.ecm.platform.query.api.PageProviderService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.query/org.nuxeo.ecm.platform.query.api/org.nuxeo.ecm.platform.query.api.PageProviderService/ExtensionPoints/org.nuxeo.ecm.platform.query.api.PageProviderService--replacers","documentationHtml":"","componentId":"org.nuxeo.ecm.platform.query.api.PageProviderService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.platform.query.api.PageProviderService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.query/org.nuxeo.ecm.platform.query.api/org.nuxeo.ecm.platform.query.api.PageProviderService/Services/org.nuxeo.ecm.platform.query.api.PageProviderService","componentId":"org.nuxeo.ecm.platform.query.api.PageProviderService"}],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.query.api.PageProviderService--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n      Properties for core queries behaviors:\n      <ul>\n    <li>org.nuxeo.query.builder.ignored.chars: defines what characters that\n          are escaped in core queries.</li>\n\n    <li>\n          org.nuxeo.ecm.platform.query.nxql.defaultNavigationResults:\n          <a\n            href=\"https://doc.nuxeo.com/x/FQ4z#ContentViews-maxresults\" target=\"_blank\">\n            Maximum number of results for page providers.\n          </a>\n    </li>\n</ul>\n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <documentation>\n      Properties for core queries behaviors:\n      <ul>\n        <li>org.nuxeo.query.builder.ignored.chars: defines what characters that\n          are escaped in core queries.</li>\n        <li>\n          org.nuxeo.ecm.platform.query.nxql.defaultNavigationResults:\n          <a href=\"https://doc.nuxeo.com/x/FQ4z#ContentViews-maxresults\" target=\"_blank\">\n            Maximum number of results for page providers.\n          </a>\n        </li>\n      </ul>\n    </documentation>\n    <property name=\"org.nuxeo.query.builder.ignored.chars\">!#$%&amp;'()+,./\\\\\\\\:-@{|}`^~</property>\n    <property name=\"org.nuxeo.ecm.platform.query.nxql.defaultNavigationResults\">200</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.query/org.nuxeo.ecm.platform.query.api/org.nuxeo.ecm.platform.query.api.PageProviderService/Contributions/org.nuxeo.ecm.platform.query.api.PageProviderService--configuration","documentationHtml":"<p/>\nProperties for core queries behaviors:\n<ul>\n<li>org.nuxeo.query.builder.ignored.chars: defines what characters that\nare escaped in core queries.</li>\n<p/>\n<li>\norg.nuxeo.ecm.platform.query.nxql.defaultNavigationResults:\n<a\nhref=\"https://doc.nuxeo.com/x/FQ4z#ContentViews-maxresults\" target=\"_blank\">\nMaximum number of results for page providers.\n</a>\n</li>\n</ul>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;org.nuxeo.query.builder.ignored.chars&quot;&gt;!#$%&amp;amp;'()+,./\\\\\\\\:-@{|}`^~&lt;/property&gt;","id":"org.nuxeo.query.builder.ignored.chars","label":"property org.nuxeo.query.builder.ignored.chars","rawXml":"<property name=\"org.nuxeo.query.builder.ignored.chars\">!#$%&amp;'()+,./\\\\\\\\:-@{|}`^~</property>"},{"documentation":"","xml":"&lt;property name=&quot;org.nuxeo.ecm.platform.query.nxql.defaultNavigationResults&quot;&gt;200&lt;/property&gt;","id":"org.nuxeo.ecm.platform.query.nxql.defaultNavigationResults","label":"property org.nuxeo.ecm.platform.query.nxql.defaultNavigationResults","rawXml":"<property name=\"org.nuxeo.ecm.platform.query.nxql.defaultNavigationResults\">200</property>"}]}],"componentClass":"org.nuxeo.ecm.platform.query.core.PageProviderServiceImpl","documentation":"\n    The Page Provider service provides extension points for page providers\n    registration.\n\n    @author Anahide Tchertchian (at@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.query/org.nuxeo.ecm.platform.query.api/org.nuxeo.ecm.platform.query.api.PageProviderService","documentationHtml":"<p/>\nThe Page Provider service provides extension points for page providers\nregistration.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-query-api/bin/main/OSGI-INF/pageprovider-framework.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.platform.query.api.PageProviderService\">\n\n  <documentation>\n    The Page Provider service provides extension points for page providers\n    registration.\n\n    @author Anahide Tchertchian (at@nuxeo.com)\n  </documentation>\n\n  <implementation\n    class=\"org.nuxeo.ecm.platform.query.core.PageProviderServiceImpl\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.platform.query.api.PageProviderService\" />\n  </service>\n\n  <extension-point name=\"providers\">\n    <object\n      class=\"org.nuxeo.ecm.platform.query.core.CoreQueryPageProviderDescriptor\" />\n    <object\n      class=\"org.nuxeo.ecm.platform.query.core.GenericPageProviderDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"replacers\">\n    <object\n      class=\"org.nuxeo.ecm.platform.query.core.PageProviderClassReplacerDescriptor\" />\n  </extension-point>\n\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n    <documentation>\n      Properties for core queries behaviors:\n      <ul>\n        <li>org.nuxeo.query.builder.ignored.chars: defines what characters that\n          are escaped in core queries.</li>\n        <li>\n          org.nuxeo.ecm.platform.query.nxql.defaultNavigationResults:\n          <a href=\"https://doc.nuxeo.com/x/FQ4z#ContentViews-maxresults\"\n            target=\"_blank\">\n            Maximum number of results for page providers.\n          </a>\n        </li>\n      </ul>\n    </documentation>\n    <property name=\"org.nuxeo.query.builder.ignored.chars\">!#$%&amp;'()+,./\\\\\\\\:-@{|}`^~</property>\n    <property name=\"org.nuxeo.ecm.platform.query.nxql.defaultNavigationResults\">200</property>\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.runtime.reload","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 2\nBundle-Name: Nuxeo Runtime Reload\nBundle-SymbolicName: org.nuxeo.runtime.reload;singleton:=true\nBundle-Vendor: Nuxeo\nBundle-Localization: bundle\nBundle-Category: runtime\nExport-Package: org.nuxeo.runtime.reload,\nBundle-ClassPath: .\nRequire-Bundle: org.nuxeo.runtime\nEclipse-LazyStart: true\nNuxeo-Component: OSGI-INF/reload-service.xml\n","requirements":null,"groupId":"org.nuxeo.runtime","artifactId":"nuxeo-runtime-reload","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.runtime","name":"org.nuxeo.runtime","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.runtime","org.nuxeo.runtime.cluster","org.nuxeo.runtime.datasource","org.nuxeo.runtime.jtajca","org.nuxeo.runtime.kv","org.nuxeo.runtime.management","org.nuxeo.runtime.metrics","org.nuxeo.runtime.migration","org.nuxeo.runtime.mongodb","org.nuxeo.runtime.pubsub","org.nuxeo.runtime.reload","org.nuxeo.runtime.stream","org.nuxeo.runtime.stream.test"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-reload/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.runtime.reload","extensionPoints":[],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.reload.ReloadService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.reload/org.nuxeo.runtime.reload/Services/org.nuxeo.runtime.reload.ReloadService","componentId":"org.nuxeo.runtime.reload"}],"extensions":[],"componentClass":"org.nuxeo.runtime.reload.ReloadComponent","documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.reload/org.nuxeo.runtime.reload","documentationHtml":"","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-reload/bin/main/OSGI-INF/reload-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.reload\">\n\n  <implementation class=\"org.nuxeo.runtime.reload.ReloadComponent\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.reload.ReloadService\" />\n  </service>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.elasticsearch.core","fileName":"classes","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 1\nBundle-Name: ElasticSearch core service integration\nBundle-SymbolicName: org.nuxeo.elasticsearch.core;singleton:=true\nBundle-Version: 1.0.0\nNuxeo-Component: OSGI-INF/elasticsearch-service.xml,\n OSGI-INF/listener-contrib.xml,\n OSGI-INF/workmanager-contrib.xml,\n OSGI-INF/elasticsearch-service-contrib.xml,\n OSGI-INF/marshallers-contrib.xml,\n OSGI-INF/elasticsearch-managment-contrib.xml,\n OSGI-INF/bulk-contrib.xml,\n OSGI-INF/elasticsearch-hints-contrib.xml,\n OSGI-INF/scroll-contrib.xml\n","requirements":null,"groupId":"org.nuxeo.elasticsearch","artifactId":"nuxeo-elasticsearch-core","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.elasticsearch","name":"org.nuxeo.elasticsearch","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.elasticsearch.core"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/target/classes","components":[{"@type":"NXComponent","name":"org.nuxeo.elasticsearch.ElasticSearchComponent","extensionPoints":[{"@type":"NXExtensionPoint","name":"elasticSearchHints","descriptors":["org.nuxeo.elasticsearch.config.ESHintQueryBuilderDescriptor"],"documentation":"\n      Extension point used to define the NXQL hints which enables the use of Elasticsearch operators.\n      Must implement the ESHintQueryBuilder interface.\n\n      @see https://doc.nuxeo.com/nxdoc/nxql/#elasticsearch-nxql-hints to have the available ES hints.\n\n    \n","id":"org.nuxeo.elasticsearch.ElasticSearchComponent--elasticSearchHints","version":"11.1-SNAPSHOT","label":"elasticSearchHints (org.nuxeo.elasticsearch.ElasticSearchComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.ElasticSearchComponent/ExtensionPoints/org.nuxeo.elasticsearch.ElasticSearchComponent--elasticSearchHints","documentationHtml":"<p/>\nExtension point used to define the NXQL hints which enables the use of Elasticsearch operators.\nMust implement the ESHintQueryBuilder interface.\n<p/>\n@see https://doc.nuxeo.com/nxdoc/nxql/#elasticsearch-nxql-hints to have the available ES hints.\n<p/>","componentId":"org.nuxeo.elasticsearch.ElasticSearchComponent"},{"@type":"NXExtensionPoint","name":"elasticSearchClient","descriptors":["org.nuxeo.elasticsearch.config.ElasticSearchClientConfig"],"documentation":"\n      Extension point to define how to access the Elasticsearch cluster.\n\n      For the TransportClient protocol:\n      <code>\n    <elasticSeachClient class=\"org.nuxeo.elasticsearch.client.ESTransportClientFactory\">\n        <option name=\"addressList\">localhost:9300</option>\n        <option name=\"clusterName\">elasticsearch</option>\n        <option name=\"clientTransportSniff\">false</option>\n        <option name=\"clientTransportIgnoreClusterName\">false</option>\n        <option name=\"clientTransportPingTimeout\">5s</option>\n        <option name=\"clientTransportNodesSamplerInterval\">5s</option>\n    </elasticSeachClient>\n</code>\n\n\n      For a Rest client:\n      <code>\n    <elasticSeachClient class=\"org.nuxeo.elasticsearch.client.ESRestClientFactory\">\n        <option name=\"addressList\">localhost:9200</option>\n    </elasticSeachClient>\n</code>\n","id":"org.nuxeo.elasticsearch.ElasticSearchComponent--elasticSearchClient","version":"11.1-SNAPSHOT","label":"elasticSearchClient (org.nuxeo.elasticsearch.ElasticSearchComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.ElasticSearchComponent/ExtensionPoints/org.nuxeo.elasticsearch.ElasticSearchComponent--elasticSearchClient","documentationHtml":"<p/>\nExtension point to define how to access the Elasticsearch cluster.\n<p/>\nFor the TransportClient protocol:\n<p/><pre><code>    &lt;elasticSeachClient class=\"org.nuxeo.elasticsearch.client.ESTransportClientFactory\">\n        &lt;option name=\"addressList\">localhost:9300&lt;/option>\n        &lt;option name=\"clusterName\">elasticsearch&lt;/option>\n        &lt;option name=\"clientTransportSniff\">false&lt;/option>\n        &lt;option name=\"clientTransportIgnoreClusterName\">false&lt;/option>\n        &lt;option name=\"clientTransportPingTimeout\">5s&lt;/option>\n        &lt;option name=\"clientTransportNodesSamplerInterval\">5s&lt;/option>\n    &lt;/elasticSeachClient>\n</code></pre><p/>\nFor a Rest client:\n<p/><pre><code>    &lt;elasticSeachClient class=\"org.nuxeo.elasticsearch.client.ESRestClientFactory\">\n        &lt;option name=\"addressList\">localhost:9200&lt;/option>\n    &lt;/elasticSeachClient>\n</code></pre><p/>","componentId":"org.nuxeo.elasticsearch.ElasticSearchComponent"},{"@type":"NXExtensionPoint","name":"elasticSearchEmbeddedServer","descriptors":["org.nuxeo.elasticsearch.config.ElasticSearchEmbeddedServerConfig"],"documentation":"\n      Extension point to setup an embedded Elasticsearch instance.\n\n      It creates a local node using the same JVM as Nuxeo.\n\n      This is a test configuration and must NOT be used in production,\n      it is limited to one shard and no replica.\n\n      <code>\n    <elasticSearchLocal clusterName=\"MyCluster\" httpEnabled=\"true\"\n        indexStoreType=\"mmapfs\" nodeName=\"MyNuxeo\" pathData=\"/var/lib/nuxeo/elasticsearch/\"/>\n</code>\n\n\n      Please refer to the Elasticsearch node configuration\n\n      clusterName is the cluster.name\n\n      nodeName is the node.name, default to nuxeoNode\n\n      pathData is the path.data\n\n      indexStoreType is the index.store_type\n\n      httpEnabled is the node.enable_http\n\n    \n","id":"org.nuxeo.elasticsearch.ElasticSearchComponent--elasticSearchEmbeddedServer","version":"11.1-SNAPSHOT","label":"elasticSearchEmbeddedServer (org.nuxeo.elasticsearch.ElasticSearchComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.ElasticSearchComponent/ExtensionPoints/org.nuxeo.elasticsearch.ElasticSearchComponent--elasticSearchEmbeddedServer","documentationHtml":"<p/>\nExtension point to setup an embedded Elasticsearch instance.\n<p/>\nIt creates a local node using the same JVM as Nuxeo.\n<p/>\nThis is a test configuration and must NOT be used in production,\nit is limited to one shard and no replica.\n<p/>\n<pre><code>    &lt;elasticSearchLocal clusterName=\"MyCluster\" httpEnabled=\"true\"\n        indexStoreType=\"mmapfs\" nodeName=\"MyNuxeo\" pathData=\"/var/lib/nuxeo/elasticsearch/\"/>\n</code></pre><p/>\nPlease refer to the Elasticsearch node configuration\n<p/>\nclusterName is the cluster.name\n<p/>\nnodeName is the node.name, default to nuxeoNode\n<p/>\npathData is the path.data\n<p/>\nindexStoreType is the index.store_type\n<p/>\nhttpEnabled is the node.enable_http\n<p/>","componentId":"org.nuxeo.elasticsearch.ElasticSearchComponent"},{"@type":"NXExtensionPoint","name":"elasticSearchDocWriter","descriptors":["org.nuxeo.elasticsearch.config.ElasticSearchDocWriterDescriptor"],"documentation":"\n      Extension point used to setup the writer used when a document is indexed.\n      Must extend the JsonESDocumentWriter class.\n\n      <code>\n    <writer class=\"org.nuxeo.elasticsearch.io.JsonESDocumentWriter\"/>\n</code>\n","id":"org.nuxeo.elasticsearch.ElasticSearchComponent--elasticSearchDocWriter","version":"11.1-SNAPSHOT","label":"elasticSearchDocWriter (org.nuxeo.elasticsearch.ElasticSearchComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.ElasticSearchComponent/ExtensionPoints/org.nuxeo.elasticsearch.ElasticSearchComponent--elasticSearchDocWriter","documentationHtml":"<p/>\nExtension point used to setup the writer used when a document is indexed.\nMust extend the JsonESDocumentWriter class.\n<p/>\n<pre><code>    &lt;writer class=\"org.nuxeo.elasticsearch.io.JsonESDocumentWriter\"/>\n</code></pre><p/>","componentId":"org.nuxeo.elasticsearch.ElasticSearchComponent"},{"@type":"NXExtensionPoint","name":"elasticSearchIndex","descriptors":["org.nuxeo.elasticsearch.config.ElasticSearchIndexConfig"],"documentation":"\n      Extension point used to setup an Elasticsearch index.\n\n      The one used to index Nuxeo documents must be of type \"doc\".\n\n      <code>\n    <elasticSearchIndex create=\"true\" name=\"nuxeo\" type=\"doc\">\n        <settings/>\n        <mapping/>\n        <fetchFromSources>\n            <include>ecm:*</include>\n            <include>dc:*</include>\n            <exclude>ecm:binaryFulltext</exclude>\n        </fetchFromSources>\n    </elasticSearchIndex>\n</code>\n\n\n      @Since 5.9.3\n      name is the Elasticsearch index name.\n\n      type is the Elasticsearch type that hold a mapping, \"doc\" is the mapping\n      for Nuxeo documents\n\n      create can be set to false if you don't want Nuxeo to initialize the index\n      and mapping.\n\n      settings the Elasticsearch settings\n      @see http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/index-modules.html\n\n      mapping the Elasticsearch mapping for the type\n      @see http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/mapping.html\n\n      @Since 5.9.5\n      fetchFromSources, include a list of field name pattern that will be included\n      when fetching document from Elasticsearch (@see NxQueryBuilder.fetchFromElasticsearch)\n      use the exclude list to prevent returning fulltext or long fields.\n\n    \n","id":"org.nuxeo.elasticsearch.ElasticSearchComponent--elasticSearchIndex","version":"11.1-SNAPSHOT","label":"elasticSearchIndex (org.nuxeo.elasticsearch.ElasticSearchComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.ElasticSearchComponent/ExtensionPoints/org.nuxeo.elasticsearch.ElasticSearchComponent--elasticSearchIndex","documentationHtml":"<p/>\nExtension point used to setup an Elasticsearch index.\n<p/>\nThe one used to index Nuxeo documents must be of type \"doc\".\n<p/>\n<pre><code>    &lt;elasticSearchIndex create=\"true\" name=\"nuxeo\" type=\"doc\">\n        &lt;settings/>\n        &lt;mapping/>\n        &lt;fetchFromSources>\n            &lt;include>ecm:*&lt;/include>\n            &lt;include>dc:*&lt;/include>\n            &lt;exclude>ecm:binaryFulltext&lt;/exclude>\n        &lt;/fetchFromSources>\n    &lt;/elasticSearchIndex>\n</code></pre><p/>\n@Since 5.9.3\nname is the Elasticsearch index name.\n<p/>\ntype is the Elasticsearch type that hold a mapping, \"doc\" is the mapping\nfor Nuxeo documents\n<p/>\ncreate can be set to false if you don't want Nuxeo to initialize the index\nand mapping.\n<p/>\nsettings the Elasticsearch settings\n@see http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/index-modules.html\n<p/>\nmapping the Elasticsearch mapping for the type\n@see http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/mapping.html\n<p/>\n@Since 5.9.5\nfetchFromSources, include a list of field name pattern that will be included\nwhen fetching document from Elasticsearch (@see NxQueryBuilder.fetchFromElasticsearch)\nuse the exclude list to prevent returning fulltext or long fields.\n<p/>","componentId":"org.nuxeo.elasticsearch.ElasticSearchComponent"}],"services":[{"@type":"NXService","id":"org.nuxeo.elasticsearch.api.ElasticSearchService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.ElasticSearchComponent/Services/org.nuxeo.elasticsearch.api.ElasticSearchService","componentId":"org.nuxeo.elasticsearch.ElasticSearchComponent"},{"@type":"NXService","id":"org.nuxeo.elasticsearch.api.ElasticSearchIndexing","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.ElasticSearchComponent/Services/org.nuxeo.elasticsearch.api.ElasticSearchIndexing","componentId":"org.nuxeo.elasticsearch.ElasticSearchComponent"},{"@type":"NXService","id":"org.nuxeo.elasticsearch.api.ElasticSearchAdmin","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.ElasticSearchComponent/Services/org.nuxeo.elasticsearch.api.ElasticSearchAdmin","componentId":"org.nuxeo.elasticsearch.ElasticSearchComponent"}],"extensions":[],"componentClass":"org.nuxeo.elasticsearch.ElasticSearchComponent","documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.ElasticSearchComponent","documentationHtml":"","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/target/classes/OSGI-INF/elasticsearch-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.elasticsearch.ElasticSearchComponent\" version=\"1.0\">\n  <require>org.nuxeo.ecm.core.repository.RepositoryServiceComponent</require>\n  <implementation class=\"org.nuxeo.elasticsearch.ElasticSearchComponent\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.elasticsearch.api.ElasticSearchService\" />\n    <provide interface=\"org.nuxeo.elasticsearch.api.ElasticSearchIndexing\" />\n    <provide interface=\"org.nuxeo.elasticsearch.api.ElasticSearchAdmin\" />\n  </service>\n\n  <extension-point name=\"elasticSearchEmbeddedServer\">\n    <documentation>\n      Extension point to setup an embedded Elasticsearch instance.\n\n      It creates a local node using the same JVM as Nuxeo.\n\n      This is a test configuration and must NOT be used in production,\n      it is limited to one shard and no replica.\n\n      <code>\n        <elasticSearchLocal clusterName=\"MyCluster\" httpEnabled=\"true\" indexStoreType=\"mmapfs\" nodeName=\"MyNuxeo\"\n                            pathData=\"/var/lib/nuxeo/elasticsearch/\" />\n      </code>\n\n      Please refer to the Elasticsearch node configuration\n\n      clusterName is the cluster.name\n\n      nodeName is the node.name, default to nuxeoNode\n\n      pathData is the path.data\n\n      indexStoreType is the index.store_type\n\n      httpEnabled is the node.enable_http\n\n    </documentation>\n\n    <object class=\"org.nuxeo.elasticsearch.config.ElasticSearchEmbeddedServerConfig\" />\n  </extension-point>\n\n\n  <extension-point name=\"elasticSearchClient\">\n    <documentation>\n      Extension point to define how to access the Elasticsearch cluster.\n\n      For the TransportClient protocol:\n      <code>\n        <elasticSeachClient class=\"org.nuxeo.elasticsearch.client.ESTransportClientFactory\">\n          <option name=\"addressList\">localhost:9300</option>\n          <option name=\"clusterName\">elasticsearch</option>\n          <option name=\"clientTransportSniff\">false</option>\n          <option name=\"clientTransportIgnoreClusterName\">false</option>\n          <option name=\"clientTransportPingTimeout\">5s</option>\n          <option name=\"clientTransportNodesSamplerInterval\">5s</option>\n        </elasticSeachClient>\n      </code>\n\n      For a Rest client:\n      <code>\n        <elasticSeachClient class=\"org.nuxeo.elasticsearch.client.ESRestClientFactory\">\n          <option name=\"addressList\">localhost:9200</option>\n        </elasticSeachClient>\n      </code>\n\n    </documentation>\n    <object class=\"org.nuxeo.elasticsearch.config.ElasticSearchClientConfig\" />\n  </extension-point>\n\n  <extension-point name=\"elasticSearchIndex\">\n    <documentation>\n      Extension point used to setup an Elasticsearch index.\n\n      The one used to index Nuxeo documents must be of type \"doc\".\n\n      <code>\n        <elasticSearchIndex name=\"nuxeo\" create=\"true\" type=\"doc\">\n          <settings></settings>\n          <mapping></mapping>\n          <fetchFromSources>\n            <include>ecm:*</include>\n            <include>dc:*</include>\n            <exclude>ecm:binaryFulltext</exclude>\n          </fetchFromSources>\n        </elasticSearchIndex>\n      </code>\n\n      @Since 5.9.3\n      name is the Elasticsearch index name.\n\n      type is the Elasticsearch type that hold a mapping, \"doc\" is the mapping\n      for Nuxeo documents\n\n      create can be set to false if you don't want Nuxeo to initialize the index\n      and mapping.\n\n      settings the Elasticsearch settings\n      @see http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/index-modules.html\n\n      mapping the Elasticsearch mapping for the type\n      @see http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/mapping.html\n\n      @Since 5.9.5\n      fetchFromSources, include a list of field name pattern that will be included\n      when fetching document from Elasticsearch (@see NxQueryBuilder.fetchFromElasticsearch)\n      use the exclude list to prevent returning fulltext or long fields.\n\n    </documentation>\n\n    <object class=\"org.nuxeo.elasticsearch.config.ElasticSearchIndexConfig\" />\n  </extension-point>\n\n  <extension-point name=\"elasticSearchDocWriter\">\n    <documentation>\n      Extension point used to setup the writer used when a document is indexed.\n      Must extend the JsonESDocumentWriter class.\n\n      <code>\n        <writer class=\"org.nuxeo.elasticsearch.io.JsonESDocumentWriter\" />\n      </code>\n\n    </documentation>\n    <object class=\"org.nuxeo.elasticsearch.config.ElasticSearchDocWriterDescriptor\" />\n  </extension-point>\n\n\n  <extension-point name=\"elasticSearchHints\">\n    <documentation>\n      Extension point used to define the NXQL hints which enables the use of Elasticsearch operators.\n      Must implement the ESHintQueryBuilder interface.\n\n      @see https://doc.nuxeo.com/nxdoc/nxql/#elasticsearch-nxql-hints to have the available ES hints.\n\n    </documentation>\n    <object class=\"org.nuxeo.elasticsearch.config.ESHintQueryBuilderDescriptor\" />\n  </extension-point>\n\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.elasticsearch.marshallers","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.elasticsearch.marshallers--marshallers","extensionPoint":"org.nuxeo.ecm.core.io.MarshallerRegistry--marshallers","documentation":null,"xml":"<extension point=\"marshallers\" target=\"org.nuxeo.ecm.core.io.MarshallerRegistry\">\n    <register class=\"org.nuxeo.elasticsearch.io.marshallers.json.AggregateJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.elasticsearch.io.HighlightJsonEnricher\" enable=\"true\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.io.MarshallerRegistry","rawName":"service:org.nuxeo.ecm.core.io.MarshallerRegistry"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.marshallers/Contributions/org.nuxeo.elasticsearch.marshallers--marshallers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.elasticsearch.io.marshallers.json.AggregateJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.elasticsearch.io.marshallers.json.AggregateJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.elasticsearch.io.HighlightJsonEnricher&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.elasticsearch.io.HighlightJsonEnricher\" enable=\"true\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.marshallers","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/target/classes/OSGI-INF/marshallers-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.elasticsearch.marshallers\" version=\"1.0.0\">\n  <extension point=\"marshallers\" target=\"org.nuxeo.ecm.core.io.MarshallerRegistry\">\n    <register class=\"org.nuxeo.elasticsearch.io.marshallers.json.AggregateJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.elasticsearch.io.HighlightJsonEnricher\" enable=\"true\" />\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.elasticsearch.work.config","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.elasticsearch.work.config--queues","extensionPoint":"org.nuxeo.ecm.core.work.service--queues","documentation":null,"xml":"<extension point=\"queues\" target=\"org.nuxeo.ecm.core.work.service\">\n    <queue id=\"elasticSearchIndexing\">\n      <name>ElasticSearch Indexing</name>\n      <maxThreads>4</maxThreads>\n      <!-- <usePriority>true</usePriority> -->\n      <category>elasticSearchIndexing</category>\n      <clearCompletedAfterSeconds>90</clearCompletedAfterSeconds>\n    </queue>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.work.service","rawName":"service:org.nuxeo.ecm.core.work.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.work.config/Contributions/org.nuxeo.elasticsearch.work.config--queues","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;queue id=&quot;elasticSearchIndexing&quot;&gt;\n      &lt;name&gt;ElasticSearch Indexing&lt;/name&gt;\n      &lt;maxThreads&gt;4&lt;/maxThreads&gt;\n      &lt;!-- &lt;usePriority&gt;true&lt;/usePriority&gt; --&gt;\n      &lt;category&gt;elasticSearchIndexing&lt;/category&gt;\n      &lt;clearCompletedAfterSeconds&gt;90&lt;/clearCompletedAfterSeconds&gt;\n    &lt;/queue&gt;","id":"elasticSearchIndexing","label":"queue elasticSearchIndexing","rawXml":"<queue id=\"elasticSearchIndexing\">\n      <name>ElasticSearch Indexing</name>\n      <maxThreads>4</maxThreads>\n      <!-- <usePriority>true</usePriority> -->\n      <category>elasticSearchIndexing</category>\n      <clearCompletedAfterSeconds>90</clearCompletedAfterSeconds>\n    </queue>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.work.config","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/target/classes/OSGI-INF/workmanager-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.elasticsearch.work.config\" version=\"1.0\">\n\n  <extension point=\"queues\" target=\"org.nuxeo.ecm.core.work.service\">\n    <queue id=\"elasticSearchIndexing\">\n      <name>ElasticSearch Indexing</name>\n      <maxThreads>${elasticsearch.indexing.maxThreads:=4}</maxThreads>\n      <!-- <usePriority>true</usePriority> -->\n      <category>elasticSearchIndexing</category>\n      <clearCompletedAfterSeconds>${elasticsearch.indexing.clearCompletedAfterSeconds:=90}</clearCompletedAfterSeconds>\n    </queue>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.elasticsearch.core.listener","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.elasticsearch.core.listener--listener","extensionPoint":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentation":null,"xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n\n    <listener async=\"false\" class=\"org.nuxeo.elasticsearch.listener.ElasticSearchInlineListener\" enabled=\"true\" name=\"elasticSearchInlineListener\" postCommit=\"false\" priority=\"500\">\n      <event>beforeDocumentModification</event>\n      <event>documentCreated</event>\n      <event>documentImported</event>\n      <event>documentCreatedByCopy</event>\n      <event>documentMoved</event>\n      <event>lifecycle_transition_event</event>\n      <event>documentRestored</event>\n      <event>documentSecurityUpdated</event>\n      <event>documentRemoved</event>\n      <event>sessionSaved</event>\n      <event>aboutToCheckIn</event>\n      <event>documentCheckedOut</event>\n      <event>documentCheckedIn</event>\n      <event>binaryTextUpdated</event>\n      <event>documentTagUpdated</event>\n      <event>documentProxyUpdated</event>\n      <event>childrenOrderChanged</event>\n      <event>documentTrashed</event>\n      <event>documentUntrashed</event>\n      <event>afterMakeRecord</event>\n      <event>afterSetRetention</event>\n      <event>afterExtendRetention</event>\n      <event>afterSetLegalHold</event>\n      <event>afterRemoveLegalHold</event>\n    </listener>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.event.EventServiceComponent","rawName":"service:org.nuxeo.ecm.core.event.EventServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.core.listener/Contributions/org.nuxeo.elasticsearch.core.listener--listener","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;listener async=&quot;false&quot; class=&quot;org.nuxeo.elasticsearch.listener.ElasticSearchInlineListener&quot; enabled=&quot;true&quot; name=&quot;elasticSearchInlineListener&quot; postCommit=&quot;false&quot; priority=&quot;500&quot;&gt;\n      &lt;event&gt;beforeDocumentModification&lt;/event&gt;\n      &lt;event&gt;documentCreated&lt;/event&gt;\n      &lt;event&gt;documentImported&lt;/event&gt;\n      &lt;event&gt;documentCreatedByCopy&lt;/event&gt;\n      &lt;event&gt;documentMoved&lt;/event&gt;\n      &lt;event&gt;lifecycle_transition_event&lt;/event&gt;\n      &lt;event&gt;documentRestored&lt;/event&gt;\n      &lt;event&gt;documentSecurityUpdated&lt;/event&gt;\n      &lt;event&gt;documentRemoved&lt;/event&gt;\n      &lt;event&gt;sessionSaved&lt;/event&gt;\n      &lt;event&gt;aboutToCheckIn&lt;/event&gt;\n      &lt;event&gt;documentCheckedOut&lt;/event&gt;\n      &lt;event&gt;documentCheckedIn&lt;/event&gt;\n      &lt;event&gt;binaryTextUpdated&lt;/event&gt;\n      &lt;event&gt;documentTagUpdated&lt;/event&gt;\n      &lt;event&gt;documentProxyUpdated&lt;/event&gt;\n      &lt;event&gt;childrenOrderChanged&lt;/event&gt;\n      &lt;event&gt;documentTrashed&lt;/event&gt;\n      &lt;event&gt;documentUntrashed&lt;/event&gt;\n      &lt;event&gt;afterMakeRecord&lt;/event&gt;\n      &lt;event&gt;afterSetRetention&lt;/event&gt;\n      &lt;event&gt;afterExtendRetention&lt;/event&gt;\n      &lt;event&gt;afterSetLegalHold&lt;/event&gt;\n      &lt;event&gt;afterRemoveLegalHold&lt;/event&gt;\n    &lt;/listener&gt;","id":"elasticSearchInlineListener","label":"listener elasticSearchInlineListener","rawXml":"<listener async=\"false\" class=\"org.nuxeo.elasticsearch.listener.ElasticSearchInlineListener\" enabled=\"true\" name=\"elasticSearchInlineListener\" postCommit=\"false\" priority=\"500\">\n      <event>beforeDocumentModification</event>\n      <event>documentCreated</event>\n      <event>documentImported</event>\n      <event>documentCreatedByCopy</event>\n      <event>documentMoved</event>\n      <event>lifecycle_transition_event</event>\n      <event>documentRestored</event>\n      <event>documentSecurityUpdated</event>\n      <event>documentRemoved</event>\n      <event>sessionSaved</event>\n      <event>aboutToCheckIn</event>\n      <event>documentCheckedOut</event>\n      <event>documentCheckedIn</event>\n      <event>binaryTextUpdated</event>\n      <event>documentTagUpdated</event>\n      <event>documentProxyUpdated</event>\n      <event>childrenOrderChanged</event>\n      <event>documentTrashed</event>\n      <event>documentUntrashed</event>\n      <event>afterMakeRecord</event>\n      <event>afterSetRetention</event>\n      <event>afterExtendRetention</event>\n      <event>afterSetLegalHold</event>\n      <event>afterRemoveLegalHold</event>\n    </listener>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.core.listener","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/target/classes/OSGI-INF/listener-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.elasticsearch.core.listener\">\n\n  <extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n\n    <listener name=\"elasticSearchInlineListener\" async=\"false\"\n      class=\"org.nuxeo.elasticsearch.listener.ElasticSearchInlineListener\" enabled=\"${elasticsearch.enabled:=true}\"\n      postCommit=\"false\" priority=\"500\">\n      <event>beforeDocumentModification</event>\n      <event>documentCreated</event>\n      <event>documentImported</event>\n      <event>documentCreatedByCopy</event>\n      <event>documentMoved</event>\n      <event>lifecycle_transition_event</event>\n      <event>documentRestored</event>\n      <event>documentSecurityUpdated</event>\n      <event>documentRemoved</event>\n      <event>sessionSaved</event>\n      <event>aboutToCheckIn</event>\n      <event>documentCheckedOut</event>\n      <event>documentCheckedIn</event>\n      <event>binaryTextUpdated</event>\n      <event>documentTagUpdated</event>\n      <event>documentProxyUpdated</event>\n      <event>childrenOrderChanged</event>\n      <event>documentTrashed</event>\n      <event>documentUntrashed</event>\n      <event>afterMakeRecord</event>\n      <event>afterSetRetention</event>\n      <event>afterExtendRetention</event>\n      <event>afterSetLegalHold</event>\n      <event>afterRemoveLegalHold</event>\n    </listener>\n\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.elasticsearch.ElasticSearchComponent.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.elasticsearch.ElasticSearchComponent.contrib--elasticSearchDocWriter","extensionPoint":"org.nuxeo.elasticsearch.ElasticSearchComponent--elasticSearchDocWriter","documentation":null,"xml":"<extension point=\"elasticSearchDocWriter\" target=\"org.nuxeo.elasticsearch.ElasticSearchComponent\">\n    <writer class=\"org.nuxeo.elasticsearch.io.JsonESDocumentWriter\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.elasticsearch.ElasticSearchComponent","rawName":"service:org.nuxeo.elasticsearch.ElasticSearchComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.ElasticSearchComponent.contrib/Contributions/org.nuxeo.elasticsearch.ElasticSearchComponent.contrib--elasticSearchDocWriter","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;writer class=&quot;org.nuxeo.elasticsearch.io.JsonESDocumentWriter&quot;/&gt;","id":null,"label":"writer","rawXml":"<writer class=\"org.nuxeo.elasticsearch.io.JsonESDocumentWriter\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.ElasticSearchComponent.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/target/classes/OSGI-INF/elasticsearch-service-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.elasticsearch.ElasticSearchComponent.contrib\" version=\"1.0\">\n\n  <extension point=\"elasticSearchDocWriter\" target=\"org.nuxeo.elasticsearch.ElasticSearchComponent\">\n    <writer class=\"org.nuxeo.elasticsearch.io.JsonESDocumentWriter\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.elasticsearch.test.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.elasticsearch.test.contrib--elasticSearchEmbeddedServer","extensionPoint":"org.nuxeo.elasticsearch.ElasticSearchComponent--elasticSearchEmbeddedServer","documentation":null,"xml":"<extension point=\"elasticSearchEmbeddedServer\" target=\"org.nuxeo.elasticsearch.ElasticSearchComponent\">\n    <elasticSearchEmbeddedServer clusterName=\"nuxeoTestClusterLocal\" httpEnabled=\"true\" indexStoreType=\"mmapfs\" nodeName=\"nuxeoTestNode\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.elasticsearch.ElasticSearchComponent","rawName":"service:org.nuxeo.elasticsearch.ElasticSearchComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.test.contrib/Contributions/org.nuxeo.elasticsearch.test.contrib--elasticSearchEmbeddedServer","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;elasticSearchEmbeddedServer clusterName=&quot;nuxeoTestClusterLocal&quot; httpEnabled=&quot;true&quot; indexStoreType=&quot;mmapfs&quot; nodeName=&quot;nuxeoTestNode&quot;/&gt;","id":null,"label":"elasticSearchEmbeddedServer","rawXml":"<elasticSearchEmbeddedServer clusterName=\"nuxeoTestClusterLocal\" httpEnabled=\"true\" indexStoreType=\"mmapfs\" nodeName=\"nuxeoTestNode\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.elasticsearch.test.contrib--elasticSearchClient","extensionPoint":"org.nuxeo.elasticsearch.ElasticSearchComponent--elasticSearchClient","documentation":null,"xml":"<extension point=\"elasticSearchClient\" target=\"org.nuxeo.elasticsearch.ElasticSearchComponent\">\n\n    <!--This client choose between rest and transport client depending environment variable -->\n    <elasticSearchClient class=\"org.nuxeo.elasticsearch.test.ESTestClientFactory\"/>\n\n    <!--<elasticSearchClient class=\"org.nuxeo.elasticsearch.client.ESTransportClientFactory\">-->\n    <!--<option name=\"addressList\">localhost:9300</option>-->\n    <!--<option name=\"clusterName\">elasticsearch</option>-->\n    <!--<option name=\"clientTransportSniff\">false</option>-->\n    <!--<option name=\"clientTransportIgnoreClusterName\">false</option>-->\n    <!--<option name=\"clientTransportPingTimeout\">5s</option>-->\n    <!--<option name=\"clientTransportNodesSamplerInterval\">5s</option>-->\n    <!--</elasticSearchClient>-->\n\n    <!--<elasticSearchClient class=\"org.nuxeo.elasticsearch.client.ESRestClientFactory\">-->\n    <!--<option name=\"addressList\">localhost:9200</option>-->\n    <!--</elasticSearchClient>-->\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.elasticsearch.ElasticSearchComponent","rawName":"service:org.nuxeo.elasticsearch.ElasticSearchComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.test.contrib/Contributions/org.nuxeo.elasticsearch.test.contrib--elasticSearchClient","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;elasticSearchClient class=&quot;org.nuxeo.elasticsearch.test.ESTestClientFactory&quot;/&gt;","id":null,"label":"elasticSearchClient","rawXml":"<elasticSearchClient class=\"org.nuxeo.elasticsearch.test.ESTestClientFactory\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.elasticsearch.test.contrib--elasticSearchIndex","extensionPoint":"org.nuxeo.elasticsearch.ElasticSearchComponent--elasticSearchIndex","documentation":null,"xml":"<extension point=\"elasticSearchIndex\" target=\"org.nuxeo.elasticsearch.ElasticSearchComponent\">\n    <elasticSearchIndex name=\"nxutest\" repository=\"test\" type=\"doc\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.elasticsearch.ElasticSearchComponent","rawName":"service:org.nuxeo.elasticsearch.ElasticSearchComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.test.contrib/Contributions/org.nuxeo.elasticsearch.test.contrib--elasticSearchIndex","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;elasticSearchIndex name=&quot;nxutest&quot; repository=&quot;test&quot; type=&quot;doc&quot;/&gt;","id":"nxutest","label":"elasticSearchIndex nxutest","rawXml":"<elasticSearchIndex name=\"nxutest\" repository=\"test\" type=\"doc\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.test.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/target/test-classes/elasticsearch-test-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.elasticsearch.test.contrib\">\n\n  <extension point=\"elasticSearchEmbeddedServer\" target=\"org.nuxeo.elasticsearch.ElasticSearchComponent\">\n    <elasticSearchEmbeddedServer clusterName=\"nuxeoTestClusterLocal\" httpEnabled=\"true\" indexStoreType=\"mmapfs\"\n      nodeName=\"nuxeoTestNode\" />\n  </extension>\n\n  <extension point=\"elasticSearchClient\" target=\"org.nuxeo.elasticsearch.ElasticSearchComponent\">\n\n    <!--This client choose between rest and transport client depending environment variable -->\n    <elasticSearchClient class=\"org.nuxeo.elasticsearch.test.ESTestClientFactory\" />\n\n    <!--<elasticSearchClient class=\"org.nuxeo.elasticsearch.client.ESTransportClientFactory\">-->\n    <!--<option name=\"addressList\">localhost:9300</option>-->\n    <!--<option name=\"clusterName\">elasticsearch</option>-->\n    <!--<option name=\"clientTransportSniff\">false</option>-->\n    <!--<option name=\"clientTransportIgnoreClusterName\">false</option>-->\n    <!--<option name=\"clientTransportPingTimeout\">5s</option>-->\n    <!--<option name=\"clientTransportNodesSamplerInterval\">5s</option>-->\n    <!--</elasticSearchClient>-->\n\n    <!--<elasticSearchClient class=\"org.nuxeo.elasticsearch.client.ESRestClientFactory\">-->\n    <!--<option name=\"addressList\">localhost:9200</option>-->\n    <!--</elasticSearchClient>-->\n\n  </extension>\n\n  <extension point=\"elasticSearchIndex\" target=\"org.nuxeo.elasticsearch.ElasticSearchComponent\">\n    <elasticSearchIndex name=\"nxutest\" repository=\"test\" type=\"doc\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.elasticsearch.managment.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.elasticsearch.managment.contrib--probes","extensionPoint":"org.nuxeo.ecm.core.management.CoreManagementComponent--probes","documentation":null,"xml":"<extension point=\"probes\" target=\"org.nuxeo.ecm.core.management.CoreManagementComponent\">\n    <probe class=\"org.nuxeo.elasticsearch.status.ElasticSearchStatusProbe\" name=\"elasticSearchStatus\">\n      <label>Elastic Search probe</label>\n    </probe>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.management.CoreManagementComponent","rawName":"service:org.nuxeo.ecm.core.management.CoreManagementComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.managment.contrib/Contributions/org.nuxeo.elasticsearch.managment.contrib--probes","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;probe class=&quot;org.nuxeo.elasticsearch.status.ElasticSearchStatusProbe&quot; name=&quot;elasticSearchStatus&quot;&gt;\n      &lt;label&gt;Elastic Search probe&lt;/label&gt;\n    &lt;/probe&gt;","id":"elasticSearchStatus","label":"probe elasticSearchStatus","rawXml":"<probe class=\"org.nuxeo.elasticsearch.status.ElasticSearchStatusProbe\" name=\"elasticSearchStatus\">\n      <label>Elastic Search probe</label>\n    </probe>"}]},{"@type":"NXContribution","id":"org.nuxeo.elasticsearch.managment.contrib--healthCheck","extensionPoint":"org.nuxeo.ecm.core.management.CoreManagementComponent--healthCheck","documentation":null,"xml":"<extension point=\"healthCheck\" target=\"org.nuxeo.ecm.core.management.CoreManagementComponent\">\n    <probe enabled=\"true\" name=\"elasticSearchStatus\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.management.CoreManagementComponent","rawName":"service:org.nuxeo.ecm.core.management.CoreManagementComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.managment.contrib/Contributions/org.nuxeo.elasticsearch.managment.contrib--healthCheck","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;probe enabled=&quot;true&quot; name=&quot;elasticSearchStatus&quot;/&gt;","id":"elasticSearchStatus","label":"probe elasticSearchStatus","rawXml":"<probe enabled=\"true\" name=\"elasticSearchStatus\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.managment.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/target/classes/OSGI-INF/elasticsearch-managment-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.elasticsearch.managment.contrib\">\n  <require>org.nuxeo.elasticsearch.ElasticSearchComponent</require>\n\n  <extension point=\"probes\" target=\"org.nuxeo.ecm.core.management.CoreManagementComponent\">\n    <probe name=\"elasticSearchStatus\" class=\"org.nuxeo.elasticsearch.status.ElasticSearchStatusProbe\">\n      <label>Elastic Search probe</label>\n    </probe>\n  </extension>\n\n  <extension point=\"healthCheck\" target=\"org.nuxeo.ecm.core.management.CoreManagementComponent\">\n    <probe name=\"elasticSearchStatus\" enabled=\"${elasticsearch.enabled:=true}\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.elasticsearch.core.bulk.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.elasticsearch.core.bulk.contrib--actions","extensionPoint":"org.nuxeo.ecm.core.bulk--actions","documentation":null,"xml":"<extension point=\"actions\" target=\"org.nuxeo.ecm.core.bulk\">\n    <action batchSize=\"25\" bucketSize=\"1000\" enabled=\"true\" name=\"index\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.bulk","rawName":"service:org.nuxeo.ecm.core.bulk"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.core.bulk.contrib/Contributions/org.nuxeo.elasticsearch.core.bulk.contrib--actions","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;action batchSize=&quot;25&quot; bucketSize=&quot;1000&quot; enabled=&quot;true&quot; name=&quot;index&quot;/&gt;","id":"index","label":"action index","rawXml":"<action batchSize=\"25\" bucketSize=\"1000\" enabled=\"true\" name=\"index\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.elasticsearch.core.bulk.contrib--streamProcessor","extensionPoint":"org.nuxeo.runtime.stream.service--streamProcessor","documentation":null,"xml":"<extension point=\"streamProcessor\" target=\"org.nuxeo.runtime.stream.service\">\n    <streamProcessor class=\"org.nuxeo.elasticsearch.bulk.IndexAction\" defaultConcurrency=\"2\" defaultPartitions=\"4\" enabled=\"true\" logConfig=\"bulk\" name=\"reindex\">\n      <policy continueOnFailure=\"false\" delay=\"1s\" maxDelay=\"60s\" maxRetries=\"20\" name=\"default\"/>\n      <!-- concurrency to build indexing requests -->\n      <computation concurrency=\"2\" name=\"index\"/>\n      <!-- concurrency to execute indexing requests -->\n      <computation concurrency=\"2\" name=\"bulkIndex\"/>\n      <computation concurrency=\"1\" name=\"indexCompletion\"/>\n      <!-- optimal size of the elasticsearch bulk request -->\n      <option name=\"esBulkSizeBytes\">5242880</option>\n      <!-- max number of actions in the elasticsearch bulk request -->\n      <option name=\"esBulkActions\">1000</option>\n      <!-- flush elasticsearch bulk request interval -->\n      <option name=\"flushIntervalSeconds\">5</option>\n    </streamProcessor>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.stream.service","rawName":"service:org.nuxeo.runtime.stream.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.core.bulk.contrib/Contributions/org.nuxeo.elasticsearch.core.bulk.contrib--streamProcessor","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;streamProcessor class=&quot;org.nuxeo.elasticsearch.bulk.IndexAction&quot; defaultConcurrency=&quot;2&quot; defaultPartitions=&quot;4&quot; enabled=&quot;true&quot; logConfig=&quot;bulk&quot; name=&quot;reindex&quot;&gt;\n      &lt;policy continueOnFailure=&quot;false&quot; delay=&quot;1s&quot; maxDelay=&quot;60s&quot; maxRetries=&quot;20&quot; name=&quot;default&quot;/&gt;\n      &lt;!-- concurrency to build indexing requests --&gt;\n      &lt;computation concurrency=&quot;2&quot; name=&quot;index&quot;/&gt;\n      &lt;!-- concurrency to execute indexing requests --&gt;\n      &lt;computation concurrency=&quot;2&quot; name=&quot;bulkIndex&quot;/&gt;\n      &lt;computation concurrency=&quot;1&quot; name=&quot;indexCompletion&quot;/&gt;\n      &lt;!-- optimal size of the elasticsearch bulk request --&gt;\n      &lt;option name=&quot;esBulkSizeBytes&quot;&gt;5242880&lt;/option&gt;\n      &lt;!-- max number of actions in the elasticsearch bulk request --&gt;\n      &lt;option name=&quot;esBulkActions&quot;&gt;1000&lt;/option&gt;\n      &lt;!-- flush elasticsearch bulk request interval --&gt;\n      &lt;option name=&quot;flushIntervalSeconds&quot;&gt;5&lt;/option&gt;\n    &lt;/streamProcessor&gt;","id":"reindex","label":"streamProcessor reindex","rawXml":"<streamProcessor class=\"org.nuxeo.elasticsearch.bulk.IndexAction\" defaultConcurrency=\"2\" defaultPartitions=\"4\" enabled=\"true\" logConfig=\"bulk\" name=\"reindex\">\n      <policy continueOnFailure=\"false\" delay=\"1s\" maxDelay=\"60s\" maxRetries=\"20\" name=\"default\"/>\n      <!-- concurrency to build indexing requests -->\n      <computation concurrency=\"2\" name=\"index\"/>\n      <!-- concurrency to execute indexing requests -->\n      <computation concurrency=\"2\" name=\"bulkIndex\"/>\n      <computation concurrency=\"1\" name=\"indexCompletion\"/>\n      <!-- optimal size of the elasticsearch bulk request -->\n      <option name=\"esBulkSizeBytes\">5242880</option>\n      <!-- max number of actions in the elasticsearch bulk request -->\n      <option name=\"esBulkActions\">1000</option>\n      <!-- flush elasticsearch bulk request interval -->\n      <option name=\"flushIntervalSeconds\">5</option>\n    </streamProcessor>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.core.bulk.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/target/classes/OSGI-INF/bulk-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.elasticsearch.core.bulk.contrib\" version=\"1.0.0\">\n\n  <require>org.nuxeo.ecm.core.bulk.config</require>\n\n  <extension target=\"org.nuxeo.ecm.core.bulk\" point=\"actions\">\n    <action name=\"index\" bucketSize=\"1000\" batchSize=\"25\" enabled=\"${elasticsearch.enabled:=true}\" />\n  </extension>\n\n  <extension target=\"org.nuxeo.runtime.stream.service\" point=\"streamProcessor\">\n    <streamProcessor name=\"reindex\" class=\"org.nuxeo.elasticsearch.bulk.IndexAction\" logConfig=\"bulk\"\n      defaultConcurrency=\"2\" defaultPartitions=\"4\" enabled=\"${elasticsearch.enabled:=true}\">\n      <policy name=\"default\" maxRetries=\"20\" delay=\"1s\" maxDelay=\"60s\" continueOnFailure=\"false\" />\n      <!-- concurrency to build indexing requests -->\n      <computation name=\"index\" concurrency=\"2\" />\n      <!-- concurrency to execute indexing requests -->\n      <computation name=\"bulkIndex\" concurrency=\"2\" />\n      <computation name=\"indexCompletion\" concurrency=\"1\" />\n      <!-- optimal size of the elasticsearch bulk request -->\n      <option name=\"esBulkSizeBytes\">5242880</option>\n      <!-- max number of actions in the elasticsearch bulk request -->\n      <option name=\"esBulkActions\">1000</option>\n      <!-- flush elasticsearch bulk request interval -->\n      <option name=\"flushIntervalSeconds\">5</option>\n    </streamProcessor>\n\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.elasticsearch.hint.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.elasticsearch.hint.contrib--elasticSearchHints","extensionPoint":"org.nuxeo.elasticsearch.ElasticSearchComponent--elasticSearchHints","documentation":null,"xml":"<extension point=\"elasticSearchHints\" target=\"org.nuxeo.elasticsearch.ElasticSearchComponent\">\n    <hint class=\"org.nuxeo.elasticsearch.hint.MatchESHintQueryBuilder\" name=\"match\"/>\n    <hint class=\"org.nuxeo.elasticsearch.hint.MatchPhraseESHintQueryBuilder\" name=\"match_phrase\"/>\n    <hint class=\"org.nuxeo.elasticsearch.hint.MatchPhrasePrefixESHintQueryBuilder\" name=\"match_phrase_prefix\"/>\n    <hint class=\"org.nuxeo.elasticsearch.hint.MultiMatchESHintQueryBuilder\" name=\"multi_match\"/>\n    <hint class=\"org.nuxeo.elasticsearch.hint.RegexESHintQueryBuilder\" name=\"regex\"/>\n    <hint class=\"org.nuxeo.elasticsearch.hint.FuzzyESHintQueryBuilder\" name=\"fuzzy\"/>\n    <hint class=\"org.nuxeo.elasticsearch.hint.WildcardESHintQueryBuilder\" name=\"wildcard\"/>\n    <hint class=\"org.nuxeo.elasticsearch.hint.CommonESHintQueryBuilder\" name=\"common\"/>\n    <hint class=\"org.nuxeo.elasticsearch.hint.QueryStringESHintQueryBuilder\" name=\"query_string\"/>\n    <hint class=\"org.nuxeo.elasticsearch.hint.SimpleQueryStringESHintQueryBuilder\" name=\"simple_query_string\"/>\n    <hint class=\"org.nuxeo.elasticsearch.hint.MoreLikeThisESHintQueryBuilder\" name=\"more_like_this\"/>\n    <hint class=\"org.nuxeo.elasticsearch.hint.GeoBoundingBoxESHintQueryBuilder\" name=\"geo_bounding_box\"/>\n    <hint class=\"org.nuxeo.elasticsearch.hint.GeoDistanceESHintQueryBuilder\" name=\"geo_distance\"/>\n    <hint class=\"org.nuxeo.elasticsearch.hint.GeoShapeESHintQueryBuilder\" name=\"geo_shape\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.elasticsearch.ElasticSearchComponent","rawName":"service:org.nuxeo.elasticsearch.ElasticSearchComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.hint.contrib/Contributions/org.nuxeo.elasticsearch.hint.contrib--elasticSearchHints","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;hint class=&quot;org.nuxeo.elasticsearch.hint.MatchESHintQueryBuilder&quot; name=&quot;match&quot;/&gt;","id":"match","label":"hint match","rawXml":"<hint class=\"org.nuxeo.elasticsearch.hint.MatchESHintQueryBuilder\" name=\"match\"/>"},{"documentation":"","xml":"&lt;hint class=&quot;org.nuxeo.elasticsearch.hint.MatchPhraseESHintQueryBuilder&quot; name=&quot;match_phrase&quot;/&gt;","id":"match_phrase","label":"hint match_phrase","rawXml":"<hint class=\"org.nuxeo.elasticsearch.hint.MatchPhraseESHintQueryBuilder\" name=\"match_phrase\"/>"},{"documentation":"","xml":"&lt;hint class=&quot;org.nuxeo.elasticsearch.hint.MatchPhrasePrefixESHintQueryBuilder&quot; name=&quot;match_phrase_prefix&quot;/&gt;","id":"match_phrase_prefix","label":"hint match_phrase_prefix","rawXml":"<hint class=\"org.nuxeo.elasticsearch.hint.MatchPhrasePrefixESHintQueryBuilder\" name=\"match_phrase_prefix\"/>"},{"documentation":"","xml":"&lt;hint class=&quot;org.nuxeo.elasticsearch.hint.MultiMatchESHintQueryBuilder&quot; name=&quot;multi_match&quot;/&gt;","id":"multi_match","label":"hint multi_match","rawXml":"<hint class=\"org.nuxeo.elasticsearch.hint.MultiMatchESHintQueryBuilder\" name=\"multi_match\"/>"},{"documentation":"","xml":"&lt;hint class=&quot;org.nuxeo.elasticsearch.hint.RegexESHintQueryBuilder&quot; name=&quot;regex&quot;/&gt;","id":"regex","label":"hint regex","rawXml":"<hint class=\"org.nuxeo.elasticsearch.hint.RegexESHintQueryBuilder\" name=\"regex\"/>"},{"documentation":"","xml":"&lt;hint class=&quot;org.nuxeo.elasticsearch.hint.FuzzyESHintQueryBuilder&quot; name=&quot;fuzzy&quot;/&gt;","id":"fuzzy","label":"hint fuzzy","rawXml":"<hint class=\"org.nuxeo.elasticsearch.hint.FuzzyESHintQueryBuilder\" name=\"fuzzy\"/>"},{"documentation":"","xml":"&lt;hint class=&quot;org.nuxeo.elasticsearch.hint.WildcardESHintQueryBuilder&quot; name=&quot;wildcard&quot;/&gt;","id":"wildcard","label":"hint wildcard","rawXml":"<hint class=\"org.nuxeo.elasticsearch.hint.WildcardESHintQueryBuilder\" name=\"wildcard\"/>"},{"documentation":"","xml":"&lt;hint class=&quot;org.nuxeo.elasticsearch.hint.CommonESHintQueryBuilder&quot; name=&quot;common&quot;/&gt;","id":"common","label":"hint common","rawXml":"<hint class=\"org.nuxeo.elasticsearch.hint.CommonESHintQueryBuilder\" name=\"common\"/>"},{"documentation":"","xml":"&lt;hint class=&quot;org.nuxeo.elasticsearch.hint.QueryStringESHintQueryBuilder&quot; name=&quot;query_string&quot;/&gt;","id":"query_string","label":"hint query_string","rawXml":"<hint class=\"org.nuxeo.elasticsearch.hint.QueryStringESHintQueryBuilder\" name=\"query_string\"/>"},{"documentation":"","xml":"&lt;hint class=&quot;org.nuxeo.elasticsearch.hint.SimpleQueryStringESHintQueryBuilder&quot; name=&quot;simple_query_string&quot;/&gt;","id":"simple_query_string","label":"hint simple_query_string","rawXml":"<hint class=\"org.nuxeo.elasticsearch.hint.SimpleQueryStringESHintQueryBuilder\" name=\"simple_query_string\"/>"},{"documentation":"","xml":"&lt;hint class=&quot;org.nuxeo.elasticsearch.hint.MoreLikeThisESHintQueryBuilder&quot; name=&quot;more_like_this&quot;/&gt;","id":"more_like_this","label":"hint more_like_this","rawXml":"<hint class=\"org.nuxeo.elasticsearch.hint.MoreLikeThisESHintQueryBuilder\" name=\"more_like_this\"/>"},{"documentation":"","xml":"&lt;hint class=&quot;org.nuxeo.elasticsearch.hint.GeoBoundingBoxESHintQueryBuilder&quot; name=&quot;geo_bounding_box&quot;/&gt;","id":"geo_bounding_box","label":"hint geo_bounding_box","rawXml":"<hint class=\"org.nuxeo.elasticsearch.hint.GeoBoundingBoxESHintQueryBuilder\" name=\"geo_bounding_box\"/>"},{"documentation":"","xml":"&lt;hint class=&quot;org.nuxeo.elasticsearch.hint.GeoDistanceESHintQueryBuilder&quot; name=&quot;geo_distance&quot;/&gt;","id":"geo_distance","label":"hint geo_distance","rawXml":"<hint class=\"org.nuxeo.elasticsearch.hint.GeoDistanceESHintQueryBuilder\" name=\"geo_distance\"/>"},{"documentation":"","xml":"&lt;hint class=&quot;org.nuxeo.elasticsearch.hint.GeoShapeESHintQueryBuilder&quot; name=&quot;geo_shape&quot;/&gt;","id":"geo_shape","label":"hint geo_shape","rawXml":"<hint class=\"org.nuxeo.elasticsearch.hint.GeoShapeESHintQueryBuilder\" name=\"geo_shape\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.hint.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/target/classes/OSGI-INF/elasticsearch-hints-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.elasticsearch.hint.contrib\">\n  <require>org.nuxeo.elasticsearch.ElasticSearchComponent</require>\n\n  <extension point=\"elasticSearchHints\" target=\"org.nuxeo.elasticsearch.ElasticSearchComponent\">\n    <hint name=\"match\" class=\"org.nuxeo.elasticsearch.hint.MatchESHintQueryBuilder\" />\n    <hint name=\"match_phrase\" class=\"org.nuxeo.elasticsearch.hint.MatchPhraseESHintQueryBuilder\" />\n    <hint name=\"match_phrase_prefix\" class=\"org.nuxeo.elasticsearch.hint.MatchPhrasePrefixESHintQueryBuilder\" />\n    <hint name=\"multi_match\" class=\"org.nuxeo.elasticsearch.hint.MultiMatchESHintQueryBuilder\" />\n    <hint name=\"regex\" class=\"org.nuxeo.elasticsearch.hint.RegexESHintQueryBuilder\" />\n    <hint name=\"fuzzy\" class=\"org.nuxeo.elasticsearch.hint.FuzzyESHintQueryBuilder\" />\n    <hint name=\"wildcard\" class=\"org.nuxeo.elasticsearch.hint.WildcardESHintQueryBuilder\" />\n    <hint name=\"common\" class=\"org.nuxeo.elasticsearch.hint.CommonESHintQueryBuilder\" />\n    <hint name=\"query_string\" class=\"org.nuxeo.elasticsearch.hint.QueryStringESHintQueryBuilder\" />\n    <hint name=\"simple_query_string\" class=\"org.nuxeo.elasticsearch.hint.SimpleQueryStringESHintQueryBuilder\" />\n    <hint name=\"more_like_this\" class=\"org.nuxeo.elasticsearch.hint.MoreLikeThisESHintQueryBuilder\" />\n    <hint name=\"geo_bounding_box\" class=\"org.nuxeo.elasticsearch.hint.GeoBoundingBoxESHintQueryBuilder\" />\n    <hint name=\"geo_distance\" class=\"org.nuxeo.elasticsearch.hint.GeoDistanceESHintQueryBuilder\" />\n    <hint name=\"geo_shape\" class=\"org.nuxeo.elasticsearch.hint.GeoShapeESHintQueryBuilder\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.elasticsearch.scroll.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.elasticsearch.scroll.contrib--scroll","extensionPoint":"org.nuxeo.ecm.core.scroll.service--scroll","documentation":null,"xml":"<extension point=\"scroll\" target=\"org.nuxeo.ecm.core.scroll.service\">\n    <scroll class=\"org.nuxeo.elasticsearch.scroll.ElasticSearchScroll\" name=\"elastic\" type=\"document\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.scroll.service","rawName":"service:org.nuxeo.ecm.core.scroll.service"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.scroll.contrib/Contributions/org.nuxeo.elasticsearch.scroll.contrib--scroll","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;scroll class=&quot;org.nuxeo.elasticsearch.scroll.ElasticSearchScroll&quot; name=&quot;elastic&quot; type=&quot;document&quot;/&gt;","id":"elastic","label":"scroll elastic","rawXml":"<scroll class=\"org.nuxeo.elasticsearch.scroll.ElasticSearchScroll\" name=\"elastic\" type=\"document\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.elasticsearch/org.nuxeo.elasticsearch.core/org.nuxeo.elasticsearch.scroll.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/target/classes/OSGI-INF/scroll-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.elasticsearch.scroll.contrib\" version=\"1.0\">\n  <require>org.nuxeo.ecm.core.scroll.service</require>\n  <extension point=\"scroll\" target=\"org.nuxeo.ecm.core.scroll.service\">\n    <scroll type=\"document\" name=\"elastic\" class=\"org.nuxeo.elasticsearch.scroll.ElasticSearchScroll\" />\n  </extension>\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.platform.dublincore","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.platform.dublincore,\n org.nuxeo.ecm.platform.dublincore.listener,\n org.nuxeo.ecm.platform.dublincore.service\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Name: NXDublinCore\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Vendor: Nuxeo\nBundle-Version: 5.4.2.qualifier\nNuxeo-Component: OSGI-INF/nxdublincore-service.xml\nBundle-ManifestVersion: 2\nImport-Package: org.apache.commons.logging,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.event,\n org.nuxeo.ecm.core.api.impl,\n org.nuxeo.ecm.core.api.security,\n org.nuxeo.ecm.core.event,\n org.nuxeo.ecm.core.event.impl,\n org.nuxeo.ecm.core.schema,\n org.nuxeo.ecm.core.schema.types,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model\nBundle-SymbolicName: org.nuxeo.ecm.platform.dublincore\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-platform-dublincore","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform","name":"org.nuxeo.ecm.platform","liveDoc":{},"subGroups":[{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.directory","name":"org.nuxeo.ecm.directory","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.directory","org.nuxeo.ecm.directory.api","org.nuxeo.ecm.directory.sql","org.nuxeo.ecm.directory.types.contrib"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.query","name":"org.nuxeo.ecm.platform.query","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.query.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.usermanager","name":"org.nuxeo.ecm.platform.usermanager","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.usermanager","org.nuxeo.ecm.platform.usermanager.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]}],"bundleIds":["org.nuxeo.apidoc.core","org.nuxeo.apidoc.repo","org.nuxeo.directory.mongodb","org.nuxeo.ecm.actions","org.nuxeo.ecm.platform.api","org.nuxeo.ecm.platform.commandline.executor","org.nuxeo.ecm.platform.content.template","org.nuxeo.ecm.platform.dublincore","org.nuxeo.ecm.platform.forms.layout.export","org.nuxeo.ecm.platform.login","org.nuxeo.ecm.platform.web.common","org.nuxeo.osgi.app"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-dublincore/bin/main","components":[{"@type":"NXComponent","name":"DublinCoreStorageService","extensionPoints":[],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.platform.dublincore.service.DublinCoreStorageService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.dublincore/DublinCoreStorageService/Services/org.nuxeo.ecm.platform.dublincore.service.DublinCoreStorageService","componentId":"DublinCoreStorageService"}],"extensions":[{"@type":"NXContribution","id":"DublinCoreStorageService--listener","extensionPoint":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentation":"\n      Listen for Core event DOCUMENT_UPDATED and DOCUMENT_CREATED and call the\n      DublinCoreStorageService.\n\n      @author Thierry Delprat (td@nuxeo.com)\n    \n","xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n    <documentation>\n      Listen for Core event DOCUMENT_UPDATED and DOCUMENT_CREATED and call the\n      DublinCoreStorageService.\n\n      @author Thierry Delprat (td@nuxeo.com)\n    </documentation>\n\n    <listener async=\"false\" class=\"org.nuxeo.ecm.platform.dublincore.listener.DublinCoreListener\" name=\"dclistener\" postCommit=\"false\" priority=\"120\">\n      <event>aboutToCreate</event>\n      <event>beforeDocumentModification</event>\n      <event>documentPublished</event>\n      <event>lifecycle_transition_event</event>\n      <event>documentCreatedByCopy</event>\n    </listener>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.event.EventServiceComponent","rawName":"service:org.nuxeo.ecm.core.event.EventServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.dublincore/DublinCoreStorageService/Contributions/DublinCoreStorageService--listener","documentationHtml":"<p/>\nListen for Core event DOCUMENT_UPDATED and DOCUMENT_CREATED and call the\nDublinCoreStorageService.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;listener async=&quot;false&quot; class=&quot;org.nuxeo.ecm.platform.dublincore.listener.DublinCoreListener&quot; name=&quot;dclistener&quot; postCommit=&quot;false&quot; priority=&quot;120&quot;&gt;\n      &lt;event&gt;aboutToCreate&lt;/event&gt;\n      &lt;event&gt;beforeDocumentModification&lt;/event&gt;\n      &lt;event&gt;documentPublished&lt;/event&gt;\n      &lt;event&gt;lifecycle_transition_event&lt;/event&gt;\n      &lt;event&gt;documentCreatedByCopy&lt;/event&gt;\n    &lt;/listener&gt;","id":"dclistener","label":"listener dclistener","rawXml":"<listener async=\"false\" class=\"org.nuxeo.ecm.platform.dublincore.listener.DublinCoreListener\" name=\"dclistener\" postCommit=\"false\" priority=\"120\">\n      <event>aboutToCreate</event>\n      <event>beforeDocumentModification</event>\n      <event>documentPublished</event>\n      <event>lifecycle_transition_event</event>\n      <event>documentCreatedByCopy</event>\n    </listener>"}]},{"@type":"NXContribution","id":"DublinCoreStorageService--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n      Property that enables resetting creator, creation date and last modification date on document copy.\n    \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <documentation>\n      Property that enables resetting creator, creation date and last modification date on document copy.\n    </documentation>\n    <property name=\"nuxeo.dclistener.reset-creator-on-copy\">false</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.dublincore/DublinCoreStorageService/Contributions/DublinCoreStorageService--configuration","documentationHtml":"<p/>\nProperty that enables resetting creator, creation date and last modification date on document copy.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;nuxeo.dclistener.reset-creator-on-copy&quot;&gt;false&lt;/property&gt;","id":"nuxeo.dclistener.reset-creator-on-copy","label":"property nuxeo.dclistener.reset-creator-on-copy","rawXml":"<property name=\"nuxeo.dclistener.reset-creator-on-copy\">false</property>"}]}],"componentClass":"org.nuxeo.ecm.platform.dublincore.service.DublinCoreStorageServiceImpl","documentation":"\n    The DublinCoreStorageService listen to Core event DOCUMENT_UPDATED and\n    DOCUMENT_CREATED. If the target document has the dublincore schema, this\n    service will then update some meta-data. The fields calculated by this event\n    listener are: - the creation date - the modification date - the\n    contributors list\n\n    The DublinCoreStorageService exposes an simple api for updating meta-data.\n\n    @author Thierry Delprat (td@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.dublincore/DublinCoreStorageService","documentationHtml":"<p/>\nThe DublinCoreStorageService listen to Core event DOCUMENT_UPDATED and\nDOCUMENT_CREATED. If the target document has the dublincore schema, this\nservice will then update some meta-data. The fields calculated by this event\nlistener are: - the creation date - the modification date - the\ncontributors list\n<p/>\nThe DublinCoreStorageService exposes an simple api for updating meta-data.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-dublincore/bin/main/OSGI-INF/nxdublincore-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"DublinCoreStorageService\" version=\"1.0.0\">\n\n\n  <implementation class=\"org.nuxeo.ecm.platform.dublincore.service.DublinCoreStorageServiceImpl\"/>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.platform.dublincore.service.DublinCoreStorageService\"/>\n  </service>\n\n  <documentation>\n    The DublinCoreStorageService listen to Core event DOCUMENT_UPDATED and\n    DOCUMENT_CREATED. If the target document has the dublincore schema, this\n    service will then update some meta-data. The fields calculated by this event\n    listener are: - the creation date - the modification date - the\n    contributors list\n\n    The DublinCoreStorageService exposes an simple api for updating meta-data.\n\n    @author Thierry Delprat (td@nuxeo.com)\n  </documentation>\n\n  <extension target=\"org.nuxeo.ecm.core.event.EventServiceComponent\" point=\"listener\">\n    <documentation>\n      Listen for Core event DOCUMENT_UPDATED and DOCUMENT_CREATED and call the\n      DublinCoreStorageService.\n\n      @author Thierry Delprat (td@nuxeo.com)\n    </documentation>\n\n    <listener name=\"dclistener\" async=\"false\" postCommit=\"false\"\n              class=\"org.nuxeo.ecm.platform.dublincore.listener.DublinCoreListener\" priority=\"120\">\n      <event>aboutToCreate</event>\n      <event>beforeDocumentModification</event>\n      <event>documentPublished</event>\n      <event>lifecycle_transition_event</event>\n      <event>documentCreatedByCopy</event>\n    </listener>\n\n  </extension>\n\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n    <documentation>\n      Property that enables resetting creator, creation date and last modification date on document copy.\n    </documentation>\n    <property name=\"nuxeo.dclistener.reset-creator-on-copy\">false</property>\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.runtime.management","fileName":"main","manifest":"Export-Package: org.nuxeo.runtime.management,\n org.nuxeo.runtime.management.inspector\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Category: runtime\nBundle-Name: org.nuxeo.runtime.management\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Version: 5.4.2.qualifier\nBundle-ManifestVersion: 2\nNuxeo-Component: OSGI-INF/management-resource-publisher-service.xml,\n OSGI-INF/management-server-locator-service.xml,\n OSGI-INF/runtime-management-metrics-component.xml,\n OSGI-INF/runtime-management-counters-component.xml\nImport-Package: javax.management,\n javax.management.modelmbean,\n javax.management.remote,\n javax.management.remote.rmi,\n org.apache.commons.lang,\n org.apache.commons.logging,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model,\n org.osgi.framework;version=\"1.4\"\nBundle-SymbolicName: org.nuxeo.runtime.management;singleton:=true\nEclipse-BuddyPolicy: dependent\n","requirements":null,"groupId":"org.nuxeo.runtime","artifactId":"nuxeo-runtime-management","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.runtime","name":"org.nuxeo.runtime","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.runtime","org.nuxeo.runtime.cluster","org.nuxeo.runtime.datasource","org.nuxeo.runtime.jtajca","org.nuxeo.runtime.kv","org.nuxeo.runtime.management","org.nuxeo.runtime.metrics","org.nuxeo.runtime.migration","org.nuxeo.runtime.mongodb","org.nuxeo.runtime.pubsub","org.nuxeo.runtime.reload","org.nuxeo.runtime.stream","org.nuxeo.runtime.stream.test"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-management/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.runtime.management.ResourcePublisher","extensionPoints":[{"@type":"NXExtensionPoint","name":"factories","descriptors":["org.nuxeo.runtime.management.ResourceFactoryDescriptor"],"documentation":"<p>Publish a class that will be call backed at initialization time for\n        registering resources.</p>\n<p>The following information have to be provided : the fully qualified factory <emph>class</emph> name.\n\tThe referenced class should implement <emph>ResourceFactory</emph> class.</p>\n<p>The following line figures out how to publish a factory.<br/>\n\t&lt;factory class=\"my.FactoryClass\"&gt;\n\t</p>\n","id":"org.nuxeo.runtime.management.ResourcePublisher--factories","version":"11.1-SNAPSHOT","label":"factories (org.nuxeo.runtime.management.ResourcePublisher)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.management/org.nuxeo.runtime.management.ResourcePublisher/ExtensionPoints/org.nuxeo.runtime.management.ResourcePublisher--factories","documentationHtml":"<p/>\n<p>Publish a class that will be call backed at initialization time for\nregistering resources.</p>\n<p>The following information have to be provided : the fully qualified factory <emph>class</emph> name.\nThe referenced class should implement <emph>ResourceFactory</emph> class.</p>\n<p>The following line figures out how to publish a factory.<br/>\n&lt;factory class=\"my.FactoryClass\"&gt;\n</p>","componentId":"org.nuxeo.runtime.management.ResourcePublisher"},{"@type":"NXExtensionPoint","name":"services","descriptors":["org.nuxeo.runtime.management.ServiceDescriptor"],"documentation":"<p>Publish a nuxeo service as a management resource.</p>\n<p>Here is the parameters description :\n        the <emph>name</emph> is used as a shortcut name,\n        the <emph>ifaceClass</emph> is used to locate the service,\n        the <emph>class</emph> is instrumented for publishing management information.</p>\n<p>The following line figures out how we have published the runtime management service itself.\n        <br/>&lt;service name=\"managementResourcePublisher\" class=\"org.nuxeo.runtime.management.ResourcePublisher\" ifaceClass=\"prg.nuxeo.runtime.management.ResourcePublisherService\"&gt;\n        </p>\n","id":"org.nuxeo.runtime.management.ResourcePublisher--services","version":"11.1-SNAPSHOT","label":"services (org.nuxeo.runtime.management.ResourcePublisher)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.management/org.nuxeo.runtime.management.ResourcePublisher/ExtensionPoints/org.nuxeo.runtime.management.ResourcePublisher--services","documentationHtml":"<p/>\n<p>Publish a nuxeo service as a management resource.</p>\n<p>Here is the parameters description :\nthe <emph>name</emph> is used as a shortcut name,\nthe <emph>ifaceClass</emph> is used to locate the service,\nthe <emph>class</emph> is instrumented for publishing management information.</p>\n<p>The following line figures out how we have published the runtime management service itself.\n<br/>&lt;service name=\"managementResourcePublisher\" class=\"org.nuxeo.runtime.management.ResourcePublisher\" ifaceClass=\"prg.nuxeo.runtime.management.ResourcePublisherService\"&gt;\n</p>","componentId":"org.nuxeo.runtime.management.ResourcePublisher"},{"@type":"NXExtensionPoint","name":"shortcuts","descriptors":["org.nuxeo.runtime.management.ShortcutDescriptor"],"documentation":"<p>Define a shortcuts to a published resource.</p>\n<p>Nuxeo's published resources are published by the service using that shortcut</p>\n<p>The following information have to be provided : the shortcut <emph>name</emph>, the management <emph>qualifiedName</emph> and the mbean server <emph>locator</emph> pattern.</p>\n<p>The following line figures out how using it.<br/>\n        &lt;shortcut name=\"publisher\" qualifiedName=\"org.nuxeo:name=managementResourcePublisher,type=service\" locator=\"org.nuxeo\"/&gt;\n        </p>\n","id":"org.nuxeo.runtime.management.ResourcePublisher--shortcuts","version":"11.1-SNAPSHOT","label":"shortcuts (org.nuxeo.runtime.management.ResourcePublisher)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.management/org.nuxeo.runtime.management.ResourcePublisher/ExtensionPoints/org.nuxeo.runtime.management.ResourcePublisher--shortcuts","documentationHtml":"<p/>\n<p>Define a shortcuts to a published resource.</p>\n<p>Nuxeo's published resources are published by the service using that shortcut</p>\n<p>The following information have to be provided : the shortcut <emph>name</emph>, the management <emph>qualifiedName</emph> and the mbean server <emph>locator</emph> pattern.</p>\n<p>The following line figures out how using it.<br/>\n&lt;shortcut name=\"publisher\" qualifiedName=\"org.nuxeo:name=managementResourcePublisher,type=service\" locator=\"org.nuxeo\"/&gt;\n</p>","componentId":"org.nuxeo.runtime.management.ResourcePublisher"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.management.ResourcePublisher","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.management/org.nuxeo.runtime.management.ResourcePublisher/Services/org.nuxeo.runtime.management.ResourcePublisher","componentId":"org.nuxeo.runtime.management.ResourcePublisher"}],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.runtime.management.ResourcePublisher--services","extensionPoint":"org.nuxeo.runtime.management.ResourcePublisher--services","documentation":null,"xml":"<extension point=\"services\" target=\"org.nuxeo.runtime.management.ResourcePublisher\">\n    <service class=\"org.nuxeo.runtime.management.ResourcePublisher\" ifaceClass=\"prg.nuxeo.runtime.management.ResourcePublisherService\" name=\"managementResourcePublisher\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.management.ResourcePublisher","rawName":"service:org.nuxeo.runtime.management.ResourcePublisher"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.management/org.nuxeo.runtime.management.ResourcePublisher/Contributions/org.nuxeo.runtime.management.ResourcePublisher--services","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;service class=&quot;org.nuxeo.runtime.management.ResourcePublisher&quot; ifaceClass=&quot;prg.nuxeo.runtime.management.ResourcePublisherService&quot; name=&quot;managementResourcePublisher&quot;/&gt;","id":"managementResourcePublisher","label":"service managementResourcePublisher","rawXml":"<service class=\"org.nuxeo.runtime.management.ResourcePublisher\" ifaceClass=\"prg.nuxeo.runtime.management.ResourcePublisherService\" name=\"managementResourcePublisher\"/>"}]}],"componentClass":"org.nuxeo.runtime.management.ResourcePublisherService","documentation":"\n\tManagement resource publishers, resources can be nuxeo services or factories.\n\t\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.management/org.nuxeo.runtime.management.ResourcePublisher","documentationHtml":"<p/>\nManagement resource publishers, resources can be nuxeo services or factories.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-management/bin/main/OSGI-INF/management-resource-publisher-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.management.ResourcePublisher\">\n\n\t<documentation>\n\tManagement resource publishers, resources can be nuxeo services or factories.\n\t</documentation>\n\n  <implementation class=\"org.nuxeo.runtime.management.ResourcePublisherService\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.management.ResourcePublisher\" />\n  </service>\n\n  <require>org.nuxeo.runtime.management.ServerLocator</require>\n\n  <extension-point name=\"services\">\n    <documentation>\n        <p>Publish a nuxeo service as a management resource.</p>\n        <p>Here is the parameters description :\n        the <emph>name</emph> is used as a shortcut name,\n        the <emph>ifaceClass</emph> is used to locate the service,\n        the <emph>class</emph> is instrumented for publishing management information.</p>\n        <p>The following line figures out how we have published the runtime management service itself.\n        <br/>&lt;service name=\"managementResourcePublisher\" class=\"org.nuxeo.runtime.management.ResourcePublisher\" ifaceClass=\"prg.nuxeo.runtime.management.ResourcePublisherService\"&gt;\n        </p>\n    </documentation>\n    <object class=\"org.nuxeo.runtime.management.ServiceDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"factories\">\n      <documentation>\n        <p>Publish a class that will be call backed at initialization time for\n        registering resources.</p>\n\t<p>The following information have to be provided : the fully qualified factory <emph>class</emph> name.\n\tThe referenced class should implement <emph>ResourceFactory</emph> class.</p>\n\t<p>The following line figures out how to publish a factory.<br/>\n\t&lt;factory class=\"my.FactoryClass\"&gt;\n\t</p>\n      </documentation>\n    <object class=\"org.nuxeo.runtime.management.ResourceFactoryDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"shortcuts\">\n      <documentation>\n        <p>Define a shortcuts to a published resource.</p>\n        <p>Nuxeo's published resources are published by the service using that shortcut</p>\n        <p>The following information have to be provided : the shortcut <emph>name</emph>, the management <emph>qualifiedName</emph> and the mbean server <emph>locator</emph> pattern.</p>\n        <p>The following line figures out how using it.<br/>\n        &lt;shortcut name=\"publisher\" qualifiedName=\"org.nuxeo:name=managementResourcePublisher,type=service\" locator=\"org.nuxeo\"/&gt;\n        </p>\n      </documentation>\n    <object class=\"org.nuxeo.runtime.management.ShortcutDescriptor\" />\n  </extension-point>\n\n  <extension target=\"org.nuxeo.runtime.management.ResourcePublisher\"\n    point=\"services\">\n    <service name=\"managementResourcePublisher\" class=\"org.nuxeo.runtime.management.ResourcePublisher\" ifaceClass=\"prg.nuxeo.runtime.management.ResourcePublisherService\"/>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.management.metrics","extensionPoints":[],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.management.metrics.MetricEnabler","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.management/org.nuxeo.runtime.management.metrics/Services/org.nuxeo.runtime.management.metrics.MetricEnabler","componentId":"org.nuxeo.runtime.management.metrics"},{"@type":"NXService","id":"org.nuxeo.runtime.management.metrics.MetricSerializer","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.management/org.nuxeo.runtime.management.metrics/Services/org.nuxeo.runtime.management.metrics.MetricSerializer","componentId":"org.nuxeo.runtime.management.metrics"}],"extensions":[],"componentClass":"org.nuxeo.runtime.management.metrics.MetricComponent","documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.management/org.nuxeo.runtime.management.metrics","documentationHtml":"","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-management/bin/main/OSGI-INF/runtime-management-metrics-component.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.management.metrics\">\n\n  <implementation class=\"org.nuxeo.runtime.management.metrics.MetricComponent\" />\n\n  <require>org.nuxeo.runtime.management.ResourcePublisher</require>\n  <require>org.nuxeo.runtime.management.ServerLocator</require>\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.management.metrics.MetricEnabler\" />\n    <provide interface=\"org.nuxeo.runtime.management.metrics.MetricSerializer\" />\n  </service>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.management.counters","extensionPoints":[],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.management.counters.CounterManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.management/org.nuxeo.runtime.management.counters/Services/org.nuxeo.runtime.management.counters.CounterManager","componentId":"org.nuxeo.runtime.management.counters"}],"extensions":[],"componentClass":"org.nuxeo.runtime.management.counters.CounterManagerImpl","documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.management/org.nuxeo.runtime.management.counters","documentationHtml":"","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-management/bin/main/OSGI-INF/runtime-management-counters-component.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.management.counters\">\n\n  <implementation class=\"org.nuxeo.runtime.management.counters.CounterManagerImpl\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.management.counters.CounterManager\" />\n  </service>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.runtime.management.ServerLocator","extensionPoints":[{"@type":"NXExtensionPoint","name":"locators","descriptors":["org.nuxeo.runtime.management.ServerLocatorDescriptor"],"documentation":"<p>Here is the information that have to be provided :\n      the server <emph>domain</emph> name,\n      is this mbean server the <emph>default</emph> server,\n      is this mbean server already <emph>exist</emph>,\n      the <emph>rmiPort</emph> where this mbean server is registered into.</p>\n<p>The following line figures out the use :<br/>\n      &lt;locator domain=\"org.nuxeo\" default=\"true\" exist=\"false\" rmiPort=\"2100\"/&gt;\n      </p>\n","id":"org.nuxeo.runtime.management.ServerLocator--locators","version":"11.1-SNAPSHOT","label":"locators (org.nuxeo.runtime.management.ServerLocator)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.management/org.nuxeo.runtime.management.ServerLocator/ExtensionPoints/org.nuxeo.runtime.management.ServerLocator--locators","documentationHtml":"<p/>\n<p>Here is the information that have to be provided :\nthe server <emph>domain</emph> name,\nis this mbean server the <emph>default</emph> server,\nis this mbean server already <emph>exist</emph>,\nthe <emph>rmiPort</emph> where this mbean server is registered into.</p>\n<p>The following line figures out the use :<br/>\n&lt;locator domain=\"org.nuxeo\" default=\"true\" exist=\"false\" rmiPort=\"2100\"/&gt;\n</p>","componentId":"org.nuxeo.runtime.management.ServerLocator"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.management.ServerLocator","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.management/org.nuxeo.runtime.management.ServerLocator/Services/org.nuxeo.runtime.management.ServerLocator","componentId":"org.nuxeo.runtime.management.ServerLocator"}],"extensions":[],"componentClass":"org.nuxeo.runtime.management.ServerLocatorService","documentation":"<p>Locate or define mbeans server that will be available to the resource publisher.</p>\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.management/org.nuxeo.runtime.management.ServerLocator","documentationHtml":"<p/>\n<p>Locate or define mbeans server that will be available to the resource publisher.</p>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-management/bin/main/OSGI-INF/management-server-locator-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.management.ServerLocator\">\n\n  <implementation class=\"org.nuxeo.runtime.management.ServerLocatorService\" />\n\n  <documentation>\n  <p>Locate or define mbeans server that will be available to the resource publisher.</p>\n  </documentation>\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.management.ServerLocator\" />\n  </service>\n\n  <extension-point name=\"locators\">\n\n    <documentation>\n      <p>Here is the information that have to be provided :\n      the server <emph>domain</emph> name,\n      is this mbean server the <emph>default</emph> server,\n      is this mbean server already <emph>exist</emph>,\n      the <emph>rmiPort</emph> where this mbean server is registered into.</p>\n      <p>The following line figures out the use :<br/>\n      &lt;locator domain=\"org.nuxeo\" default=\"true\" exist=\"false\" rmiPort=\"2100\"/&gt;\n      </p>\n    </documentation>\n\n    <object class=\"org.nuxeo.runtime.management.ServerLocatorDescriptor\" />\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.runtime.stream.test","fileName":"test","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 1\nBundle-Name: Nuxeo Runtime Stream Test\nBundle-SymbolicName: org.nuxeo.runtime.stream.test;singleton:=true\nBundle-Vendor: Nuxeo\n","requirements":null,"groupId":"org.nuxeo.runtime","artifactId":"nuxeo-runtime-stream","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.runtime","name":"org.nuxeo.runtime","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.runtime","org.nuxeo.runtime.cluster","org.nuxeo.runtime.datasource","org.nuxeo.runtime.jtajca","org.nuxeo.runtime.kv","org.nuxeo.runtime.management","org.nuxeo.runtime.metrics","org.nuxeo.runtime.migration","org.nuxeo.runtime.mongodb","org.nuxeo.runtime.pubsub","org.nuxeo.runtime.reload","org.nuxeo.runtime.stream","org.nuxeo.runtime.stream.test"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-stream/bin/test","components":[]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.platform.api","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.platform.api,\n org.nuxeo.ecm.platform.api.login,\n org.nuxeo.ecm.platform.util;api=split;mandatory:=split\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Localization: plugin\nBundle-Name: ECM Platform API\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Vendor: Nuxeo\nBundle-Version: 0.0.0.SNAPSHOT\nBundle-ManifestVersion: 2\nBundle-SymbolicName: org.nuxeo.ecm.platform.api\nImport-Package: javax.annotation;version=\"1.0\",\n javax.naming,\n javax.security.auth.callback,\n javax.security.auth.login,\n org.apache.commons.logging,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.repository,\n org.nuxeo.ecm.directory;api=split,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-platform-api","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform","name":"org.nuxeo.ecm.platform","liveDoc":{},"subGroups":[{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.directory","name":"org.nuxeo.ecm.directory","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.directory","org.nuxeo.ecm.directory.api","org.nuxeo.ecm.directory.sql","org.nuxeo.ecm.directory.types.contrib"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.query","name":"org.nuxeo.ecm.platform.query","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.query.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.usermanager","name":"org.nuxeo.ecm.platform.usermanager","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.usermanager","org.nuxeo.ecm.platform.usermanager.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]}],"bundleIds":["org.nuxeo.apidoc.core","org.nuxeo.apidoc.repo","org.nuxeo.directory.mongodb","org.nuxeo.ecm.actions","org.nuxeo.ecm.platform.api","org.nuxeo.ecm.platform.commandline.executor","org.nuxeo.ecm.platform.content.template","org.nuxeo.ecm.platform.dublincore","org.nuxeo.ecm.platform.forms.layout.export","org.nuxeo.ecm.platform.login","org.nuxeo.ecm.platform.web.common","org.nuxeo.osgi.app"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-api/bin/main","components":[]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.automation.server","fileName":"classes","manifest":"Manifest-Version: 1.0\nBundle-ClassPath: .\nBundle-ManifestVersion: 2\nBundle-Version: 1.0.0\nBundle-Name: Nuxeo Automation Server\nBundle-SymbolicName: org.nuxeo.ecm.automation.server\nBundle-Vendor: Nuxeo\nExport-Package: org.nuxeo.ecm.automation.server\nBundle-ActivationPolicy: lazy\nNuxeo-WebModule: org.nuxeo.ecm.automation.server.jaxrs.AutomationModule;name=automation;extends=base;package=org/nuxeo/ecm/automation/server/jaxrs\nNuxeo-Component: OSGI-INF/AutomationServer.xml,\n OSGI-INF/auth-contrib.xml,\n OSGI-INF/batchmanager-framework.xml,\n OSGI-INF/binding-contrib.xml,\n OSGI-INF/pageprovider-contrib.xml,\n OSGI-INF/batchmanager-contrib.xml\nNuxeo-AllowOverride: true\nImport-Package: javax.mail,\n javax.mail.internet,\n javax.mail.util,\n javax.servlet;resolution:=optional,\n javax.servlet.http;resolution:=optional,\n javax.ws.rs,\n javax.ws.rs.core,\n javax.ws.rs.ext,\n net.sf.json,\n org.apache.commons.logging,\n org.joda.time,\n org.joda.time.format,\n org.nuxeo.common.utils,\n org.nuxeo.common.xmap,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.automation,\n org.nuxeo.ecm.automation.core,\n org.nuxeo.ecm.automation.core.doc,\n org.nuxeo.ecm.automation.core.scripting,\n org.nuxeo.ecm.automation.core.util,\n org.nuxeo.ecm.core.api,\n org.nuxeo.ecm.core.api.impl,\n org.nuxeo.ecm.core.api.impl.blob,\n org.nuxeo.ecm.core.api.model,\n org.nuxeo.ecm.core.api.model.impl,\n org.nuxeo.ecm.core.api.model.impl.primitives,\n org.nuxeo.ecm.core.schema,\n org.nuxeo.ecm.core.schema.types,\n org.nuxeo.ecm.core.schema.utils,\n org.nuxeo.ecm.webengine.jaxrs.context,\n org.nuxeo.ecm.webengine.jaxrs.session,\n org.nuxeo.ecm.webengine.jaxrs.views,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model,\n org.osgi.framework;version=\"1.5.0\"\nRequire-Bundle: org.nuxeo.ecm.automation.core\nBundle-RequiredExecutionEnvironment: JavaSE-1.7\n","requirements":null,"groupId":"org.nuxeo.ecm.automation","artifactId":"nuxeo-automation-server","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.automation","name":"org.nuxeo.ecm.automation","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.automation.core","org.nuxeo.ecm.automation.features","org.nuxeo.ecm.automation.io","org.nuxeo.ecm.automation.scripting","org.nuxeo.ecm.automation.server"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-server/target/classes","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.automation.server.bindings","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.automation.server.bindings--bindings","extensionPoint":"org.nuxeo.ecm.automation.server.AutomationServer--bindings","documentation":null,"xml":"<extension point=\"bindings\" target=\"org.nuxeo.ecm.automation.server.AutomationServer\">\n    <!-- don't allow GET of arbitrary URLs on the server -->\n    <binding name=\"Blob.CreateFromURL\">\n      <administrator>true</administrator>\n    </binding>\n    <!-- don't allow POST of arbitrary URLs on the server -->\n    <binding name=\"Blob.Post\">\n      <administrator>true</administrator>\n    </binding>\n    <!-- don't allow write of arbitrary files on the server -->\n    <binding name=\"Blob.ExportToFS\">\n      <administrator>true</administrator>\n    </binding>\n    <!-- don't allow arbitrary email sending on the server -->\n    <binding name=\"Document.Mail\">\n      <administrator>true</administrator>\n    </binding>\n\n    <!-- protect access to directories -->\n    <binding name=\"Directory.Entries\">\n      <administrator>true</administrator>\n    </binding>\n    <!-- protect arbitrary script execution -->\n    <binding name=\"RunInputScript\">\n      <administrator>true</administrator>\n    </binding>\n    <binding name=\"RunScript\">\n      <administrator>true</administrator>\n    </binding>\n    <!-- protect counter access -->\n    <binding name=\"Counters.GET\">\n      <administrator>true</administrator>\n    </binding>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.automation.server.AutomationServer","rawName":"service:org.nuxeo.ecm.automation.server.AutomationServer"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.server/org.nuxeo.ecm.automation.server.bindings/Contributions/org.nuxeo.ecm.automation.server.bindings--bindings","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;binding name=&quot;Blob.CreateFromURL&quot;&gt;\n      &lt;administrator&gt;true&lt;/administrator&gt;\n    &lt;/binding&gt;","id":"Blob.CreateFromURL","label":"binding Blob.CreateFromURL","rawXml":"<binding name=\"Blob.CreateFromURL\">\n      <administrator>true</administrator>\n    </binding>"},{"documentation":"","xml":"&lt;binding name=&quot;Blob.Post&quot;&gt;\n      &lt;administrator&gt;true&lt;/administrator&gt;\n    &lt;/binding&gt;","id":"Blob.Post","label":"binding Blob.Post","rawXml":"<binding name=\"Blob.Post\">\n      <administrator>true</administrator>\n    </binding>"},{"documentation":"","xml":"&lt;binding name=&quot;Blob.ExportToFS&quot;&gt;\n      &lt;administrator&gt;true&lt;/administrator&gt;\n    &lt;/binding&gt;","id":"Blob.ExportToFS","label":"binding Blob.ExportToFS","rawXml":"<binding name=\"Blob.ExportToFS\">\n      <administrator>true</administrator>\n    </binding>"},{"documentation":"","xml":"&lt;binding name=&quot;Document.Mail&quot;&gt;\n      &lt;administrator&gt;true&lt;/administrator&gt;\n    &lt;/binding&gt;","id":"Document.Mail","label":"binding Document.Mail","rawXml":"<binding name=\"Document.Mail\">\n      <administrator>true</administrator>\n    </binding>"},{"documentation":"","xml":"&lt;binding name=&quot;Directory.Entries&quot;&gt;\n      &lt;administrator&gt;true&lt;/administrator&gt;\n    &lt;/binding&gt;","id":"Directory.Entries","label":"binding Directory.Entries","rawXml":"<binding name=\"Directory.Entries\">\n      <administrator>true</administrator>\n    </binding>"},{"documentation":"","xml":"&lt;binding name=&quot;RunInputScript&quot;&gt;\n      &lt;administrator&gt;true&lt;/administrator&gt;\n    &lt;/binding&gt;","id":"RunInputScript","label":"binding RunInputScript","rawXml":"<binding name=\"RunInputScript\">\n      <administrator>true</administrator>\n    </binding>"},{"documentation":"","xml":"&lt;binding name=&quot;RunScript&quot;&gt;\n      &lt;administrator&gt;true&lt;/administrator&gt;\n    &lt;/binding&gt;","id":"RunScript","label":"binding RunScript","rawXml":"<binding name=\"RunScript\">\n      <administrator>true</administrator>\n    </binding>"},{"documentation":"","xml":"&lt;binding name=&quot;Counters.GET&quot;&gt;\n      &lt;administrator&gt;true&lt;/administrator&gt;\n    &lt;/binding&gt;","id":"Counters.GET","label":"binding Counters.GET","rawXml":"<binding name=\"Counters.GET\">\n      <administrator>true</administrator>\n    </binding>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.server/org.nuxeo.ecm.automation.server.bindings","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-server/target/classes/OSGI-INF/binding-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.automation.server.bindings\"\n  version=\"1.0\">\n\n  <extension target=\"org.nuxeo.ecm.automation.server.AutomationServer\"\n    point=\"bindings\">\n    <!-- don't allow GET of arbitrary URLs on the server -->\n    <binding name=\"Blob.CreateFromURL\">\n      <administrator>true</administrator>\n    </binding>\n    <!-- don't allow POST of arbitrary URLs on the server -->\n    <binding name=\"Blob.Post\">\n      <administrator>true</administrator>\n    </binding>\n    <!-- don't allow write of arbitrary files on the server -->\n    <binding name=\"Blob.ExportToFS\">\n      <administrator>true</administrator>\n    </binding>\n    <!-- don't allow arbitrary email sending on the server -->\n    <binding name=\"Document.Mail\">\n      <administrator>true</administrator>\n    </binding>\n\n    <!-- protect access to directories -->\n    <binding name=\"Directory.Entries\">\n      <administrator>true</administrator>\n    </binding>\n    <!-- protect arbitrary script execution -->\n    <binding name=\"RunInputScript\">\n      <administrator>true</administrator>\n    </binding>\n    <binding name=\"RunScript\">\n      <administrator>true</administrator>\n    </binding>\n    <!-- protect counter access -->\n    <binding name=\"Counters.GET\">\n      <administrator>true</administrator>\n    </binding>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.automation.server.AutomationServer","extensionPoints":[{"@type":"NXExtensionPoint","name":"marshallers","descriptors":["org.nuxeo.ecm.automation.server.MarshallerDescriptor"],"documentation":"JAX-RS writer/reader declarations\n","id":"org.nuxeo.ecm.automation.server.AutomationServer--marshallers","version":"11.1-SNAPSHOT","label":"marshallers (org.nuxeo.ecm.automation.server.AutomationServer)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.server/org.nuxeo.ecm.automation.server.AutomationServer/ExtensionPoints/org.nuxeo.ecm.automation.server.AutomationServer--marshallers","documentationHtml":"<p/>\nJAX-RS writer/reader declarations","componentId":"org.nuxeo.ecm.automation.server.AutomationServer"},{"@type":"NXExtensionPoint","name":"bindings","descriptors":["org.nuxeo.ecm.automation.server.RestBinding"],"documentation":"Rest security bindings on operations\n","id":"org.nuxeo.ecm.automation.server.AutomationServer--bindings","version":"11.1-SNAPSHOT","label":"bindings (org.nuxeo.ecm.automation.server.AutomationServer)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.server/org.nuxeo.ecm.automation.server.AutomationServer/ExtensionPoints/org.nuxeo.ecm.automation.server.AutomationServer--bindings","documentationHtml":"<p/>\nRest security bindings on operations","componentId":"org.nuxeo.ecm.automation.server.AutomationServer"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.automation.server.AutomationServer","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.server/org.nuxeo.ecm.automation.server.AutomationServer/Services/org.nuxeo.ecm.automation.server.AutomationServer","componentId":"org.nuxeo.ecm.automation.server.AutomationServer"}],"extensions":[],"componentClass":"org.nuxeo.ecm.automation.server.AutomationServerComponent","documentation":"@author Bogdan Stefanescu (bs@nuxeo.com)\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.server/org.nuxeo.ecm.automation.server.AutomationServer","documentationHtml":"<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-server/target/classes/OSGI-INF/AutomationServer.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.automation.server.AutomationServer\"\n           version=\"1.0\">\n\n  <require>org.nuxeo.ecm.automation.io.services.IOComponent</require>\n\n  <documentation>@author Bogdan Stefanescu (bs@nuxeo.com)</documentation>\n\n  <implementation class=\"org.nuxeo.ecm.automation.server.AutomationServerComponent\"/>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.automation.server.AutomationServer\"/>\n  </service>\n\n  <extension-point name=\"bindings\">\n    <documentation>Rest security bindings on operations</documentation>\n    <object class=\"org.nuxeo.ecm.automation.server.RestBinding\"/>\n  </extension-point>\n\n\n  <extension-point name=\"marshallers\">\n    <documentation>JAX-RS writer/reader declarations</documentation>\n    <object class=\"org.nuxeo.ecm.automation.server.MarshallerDescriptor\"/>\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.automation.server.batch.handler.DefaultBatchHandler","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.automation.server.batch.handler.DefaultBatchHandler--handlers","extensionPoint":"org.nuxeo.ecm.automation.server.BatchManager--handlers","documentation":null,"xml":"<extension point=\"handlers\" target=\"org.nuxeo.ecm.automation.server.BatchManager\">\n    <batchHandler>\n      <name>default</name>\n      <class>org.nuxeo.ecm.automation.server.jaxrs.batch.handler.impl.DefaultBatchHandler</class>\n      <property name=\"transientStore\">BatchManagerCache</property>\n    </batchHandler>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.automation.server.BatchManager","rawName":"service:org.nuxeo.ecm.automation.server.BatchManager"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.server/org.nuxeo.ecm.automation.server.batch.handler.DefaultBatchHandler/Contributions/org.nuxeo.ecm.automation.server.batch.handler.DefaultBatchHandler--handlers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;batchHandler&gt;\n      &lt;name&gt;default&lt;/name&gt;\n      &lt;class&gt;org.nuxeo.ecm.automation.server.jaxrs.batch.handler.impl.DefaultBatchHandler&lt;/class&gt;\n      &lt;property name=&quot;transientStore&quot;&gt;BatchManagerCache&lt;/property&gt;\n    &lt;/batchHandler&gt;","id":null,"label":"batchHandler","rawXml":"<batchHandler>\n      <name>default</name>\n      <class>org.nuxeo.ecm.automation.server.jaxrs.batch.handler.impl.DefaultBatchHandler</class>\n      <property name=\"transientStore\">BatchManagerCache</property>\n    </batchHandler>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.server/org.nuxeo.ecm.automation.server.batch.handler.DefaultBatchHandler","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-server/target/classes/OSGI-INF/batchmanager-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.automation.server.batch.handler.DefaultBatchHandler\"\n           version=\"1.0\">\n\n  <requires>org.nuxeo.ecm.core.transientstore.TransientStorageComponent</requires>\n\n  <extension target=\"org.nuxeo.ecm.automation.server.BatchManager\"\n             point=\"handlers\">\n    <batchHandler>\n      <name>default</name>\n      <class>org.nuxeo.ecm.automation.server.jaxrs.batch.handler.impl.DefaultBatchHandler</class>\n      <property name=\"transientStore\">BatchManagerCache</property>\n    </batchHandler>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.automation.server.BatchManager","extensionPoints":[{"@type":"NXExtensionPoint","name":"handlers","descriptors":["org.nuxeo.ecm.automation.server.jaxrs.batch.handler.BatchHandlerDescriptor"],"documentation":null,"id":"org.nuxeo.ecm.automation.server.BatchManager--handlers","version":"11.1-SNAPSHOT","label":"handlers (org.nuxeo.ecm.automation.server.BatchManager)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.server/org.nuxeo.ecm.automation.server.BatchManager/ExtensionPoints/org.nuxeo.ecm.automation.server.BatchManager--handlers","documentationHtml":"","componentId":"org.nuxeo.ecm.automation.server.BatchManager"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.automation.server.jaxrs.batch.BatchManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.server/org.nuxeo.ecm.automation.server.BatchManager/Services/org.nuxeo.ecm.automation.server.jaxrs.batch.BatchManager","componentId":"org.nuxeo.ecm.automation.server.BatchManager"}],"extensions":[],"componentClass":"org.nuxeo.ecm.automation.server.jaxrs.batch.BatchManagerComponent","documentation":"This component provides a service to be able to upload some blobs and store them temporarly so that you can execute an Automation Operation on these Blobs.\n  @author Thierry Delprat (tdelprat@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.server/org.nuxeo.ecm.automation.server.BatchManager","documentationHtml":"<p/>\nThis component provides a service to be able to upload some blobs and store them temporarly so that you can execute an Automation Operation on these Blobs.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-server/target/classes/OSGI-INF/batchmanager-framework.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.automation.server.BatchManager\"\n  version=\"1.0\">\n\n  <documentation>This component provides a service to be able to upload some blobs and store them temporarly so that you can execute an Automation Operation on these Blobs.\n  @author Thierry Delprat (tdelprat@nuxeo.com)\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.automation.server.jaxrs.batch.BatchManagerComponent\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.automation.server.jaxrs.batch.BatchManager\" />\n  </service>\n\n  <extension-point name=\"handlers\">\n    <object class=\"org.nuxeo.ecm.automation.server.jaxrs.batch.handler.BatchHandlerDescriptor\"/>\n  </extension-point>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.automation.rest.pageprovider.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.automation.rest.pageprovider.contrib--providers","extensionPoint":"org.nuxeo.ecm.platform.query.api.PageProviderService--providers","documentation":null,"xml":"<extension point=\"providers\" target=\"org.nuxeo.ecm.platform.query.api.PageProviderService\">\n    <coreQueryPageProvider name=\"CURRENT_DOC_CHILDREN\">\n      <property name=\"maxResults\">PAGE_SIZE</property>\n      <pattern>\n        SELECT * FROM Document WHERE ecm:parentId = ? AND\n        ecm:mixinType != 'HiddenInNavigation'\n        AND ecm:isVersion = 0 AND ecm:isTrashed = 0\n      </pattern>\n      <sort ascending=\"true\" column=\"dc:title\"/>\n      <pageSize>50</pageSize>\n    </coreQueryPageProvider>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.query.api.PageProviderService","rawName":"service:org.nuxeo.ecm.platform.query.api.PageProviderService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.server/org.nuxeo.ecm.automation.rest.pageprovider.contrib/Contributions/org.nuxeo.ecm.automation.rest.pageprovider.contrib--providers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;coreQueryPageProvider name=&quot;CURRENT_DOC_CHILDREN&quot;&gt;\n      &lt;property name=&quot;maxResults&quot;&gt;PAGE_SIZE&lt;/property&gt;\n      &lt;pattern&gt;\n        SELECT * FROM Document WHERE ecm:parentId = ? AND\n        ecm:mixinType != 'HiddenInNavigation'\n        AND ecm:isVersion = 0 AND ecm:isTrashed = 0\n      &lt;/pattern&gt;\n      &lt;sort ascending=&quot;true&quot; column=&quot;dc:title&quot;/&gt;\n      &lt;pageSize&gt;50&lt;/pageSize&gt;\n    &lt;/coreQueryPageProvider&gt;","id":"CURRENT_DOC_CHILDREN","label":"coreQueryPageProvider CURRENT_DOC_CHILDREN","rawXml":"<coreQueryPageProvider name=\"CURRENT_DOC_CHILDREN\">\n      <property name=\"maxResults\">PAGE_SIZE</property>\n      <pattern>\n        SELECT * FROM Document WHERE ecm:parentId = ? AND\n        ecm:mixinType != 'HiddenInNavigation'\n        AND ecm:isVersion = 0 AND ecm:isTrashed = 0\n      </pattern>\n      <sort ascending=\"true\" column=\"dc:title\"/>\n      <pageSize>50</pageSize>\n    </coreQueryPageProvider>"}]}],"componentClass":null,"documentation":"\n\n    Default QueryModel contributions used to fetch document lists.\n\n    @author\n    <a href=\"mailto:dmetzler@nuxeo.com\">Damien Metzler</a>\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.server/org.nuxeo.ecm.automation.rest.pageprovider.contrib","documentationHtml":"<p/>\nDefault QueryModel contributions used to fetch document lists.\n<p/>\n<a href=\"mailto:dmetzler@nuxeo.com\">Damien Metzler</a>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-server/target/classes/OSGI-INF/pageprovider-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.automation.rest.pageprovider.contrib\">\n\n  <documentation>\n    Default QueryModel contributions used to fetch document lists.\n\n    @author\n    <a href=\"mailto:dmetzler@nuxeo.com\">Damien Metzler</a>\n  </documentation>\n\n  <extension\n    target=\"org.nuxeo.ecm.platform.query.api.PageProviderService\"\n    point=\"providers\">\n    <coreQueryPageProvider name=\"CURRENT_DOC_CHILDREN\">\n      <property name=\"maxResults\">PAGE_SIZE</property>\n      <pattern>\n        SELECT * FROM Document WHERE ecm:parentId = ? AND\n        ecm:mixinType != 'HiddenInNavigation'\n        AND ecm:isVersion = 0 AND ecm:isTrashed = 0\n      </pattern>\n      <sort ascending=\"true\" column=\"dc:title\"/>\n      <pageSize>50</pageSize>\n    </coreQueryPageProvider>\n  </extension>\n</component>"},{"@type":"NXComponent","name":"org.nuxeo.ecm.automation.server.auth.config","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.automation.server.auth.config--authenticators","extensionPoint":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--authenticators","documentation":null,"xml":"<extension point=\"authenticators\" target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\">\n    <authenticationPlugin class=\"org.nuxeo.ecm.platform.ui.web.auth.plugins.BasicAuthenticator\" enabled=\"true\" name=\"AUTOMATION_BASIC_AUTH\">\n      <parameters>\n        <parameter name=\"AutoPrompt\">true</parameter>\n        <parameter name=\"RealmName\">Nuxeo Automation</parameter>\n        <parameter name=\"ExcludeBAHeader_Token\">X-Authentication-Token</parameter>\n        <parameter name=\"ExcludeBAHeader_Token\">X-No-Basic-Header</parameter>\n      </parameters>\n    </authenticationPlugin>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService","rawName":"service:org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.server/org.nuxeo.ecm.automation.server.auth.config/Contributions/org.nuxeo.ecm.automation.server.auth.config--authenticators","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;authenticationPlugin class=&quot;org.nuxeo.ecm.platform.ui.web.auth.plugins.BasicAuthenticator&quot; enabled=&quot;true&quot; name=&quot;AUTOMATION_BASIC_AUTH&quot;&gt;\n      &lt;parameters&gt;\n        &lt;parameter name=&quot;AutoPrompt&quot;&gt;true&lt;/parameter&gt;\n        &lt;parameter name=&quot;RealmName&quot;&gt;Nuxeo Automation&lt;/parameter&gt;\n        &lt;parameter name=&quot;ExcludeBAHeader_Token&quot;&gt;X-Authentication-Token&lt;/parameter&gt;\n        &lt;parameter name=&quot;ExcludeBAHeader_Token&quot;&gt;X-No-Basic-Header&lt;/parameter&gt;\n      &lt;/parameters&gt;\n    &lt;/authenticationPlugin&gt;","id":"AUTOMATION_BASIC_AUTH","label":"authenticationPlugin AUTOMATION_BASIC_AUTH","rawXml":"<authenticationPlugin class=\"org.nuxeo.ecm.platform.ui.web.auth.plugins.BasicAuthenticator\" enabled=\"true\" name=\"AUTOMATION_BASIC_AUTH\">\n      <parameters>\n        <parameter name=\"AutoPrompt\">true</parameter>\n        <parameter name=\"RealmName\">Nuxeo Automation</parameter>\n        <parameter name=\"ExcludeBAHeader_Token\">X-Authentication-Token</parameter>\n        <parameter name=\"ExcludeBAHeader_Token\">X-No-Basic-Header</parameter>\n      </parameters>\n    </authenticationPlugin>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.automation.server.auth.config--specificChains","extensionPoint":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--specificChains","documentation":null,"xml":"<extension point=\"specificChains\" target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\">\n\n    <specificAuthenticationChain name=\"Automation\">\n        <urlPatterns>\n            <url>(.*)/automation.*</url>\n        </urlPatterns>\n\n        <replacementChain>\n            <plugin>AUTOMATION_BASIC_AUTH</plugin>\n        </replacementChain>\n    </specificAuthenticationChain>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService","rawName":"service:org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.server/org.nuxeo.ecm.automation.server.auth.config/Contributions/org.nuxeo.ecm.automation.server.auth.config--specificChains","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;specificAuthenticationChain name=&quot;Automation&quot;&gt;\n        &lt;urlPatterns&gt;\n            &lt;url&gt;(.*)/automation.*&lt;/url&gt;\n        &lt;/urlPatterns&gt;\n\n        &lt;replacementChain&gt;\n            &lt;plugin&gt;AUTOMATION_BASIC_AUTH&lt;/plugin&gt;\n        &lt;/replacementChain&gt;\n    &lt;/specificAuthenticationChain&gt;","id":"Automation","label":"specificAuthenticationChain Automation","rawXml":"<specificAuthenticationChain name=\"Automation\">\n        <urlPatterns>\n            <url>(.*)/automation.*</url>\n        </urlPatterns>\n\n        <replacementChain>\n            <plugin>AUTOMATION_BASIC_AUTH</plugin>\n        </replacementChain>\n    </specificAuthenticationChain>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.server/org.nuxeo.ecm.automation.server.auth.config","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-server/target/classes/OSGI-INF/auth-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.automation.server.auth.config\">\n<!--\nSetup a Basic Auth plugin for /automation paths that will always send 401 on authentication failures\n-->\n\n  <require>org.nuxeo.ecm.platform.ui.web.auth.defaultConfig</require>\n  <extension\n      target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\"\n      point=\"authenticators\">\n    <authenticationPlugin name=\"AUTOMATION_BASIC_AUTH\" enabled=\"true\"\n        class=\"org.nuxeo.ecm.platform.ui.web.auth.plugins.BasicAuthenticator\">\n      <parameters>\n        <parameter name=\"AutoPrompt\">true</parameter>\n        <parameter name=\"RealmName\">Nuxeo Automation</parameter>\n        <parameter name=\"ExcludeBAHeader_Token\">X-Authentication-Token</parameter>\n        <parameter name=\"ExcludeBAHeader_Token\">X-No-Basic-Header</parameter>\n      </parameters>\n    </authenticationPlugin>\n  </extension>\n\n  <extension\n      target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\"\n      point=\"specificChains\">\n\n    <specificAuthenticationChain name=\"Automation\">\n        <urlPatterns>\n            <url>(.*)/automation.*</url>\n        </urlPatterns>\n\n        <replacementChain>\n            <plugin>AUTOMATION_BASIC_AUTH</plugin>\n        </replacementChain>\n    </specificAuthenticationChain>\n\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.runtime.mongodb","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-Version: 1.0.0\nBundle-ManifestVersion: 1\nBundle-Name: Nuxeo Runtime MongoDB\nBundle-SymbolicName: org.nuxeo.runtime.mongodb;singleton:=true\nNuxeo-Component: OSGI-INF/mongodb-service.xml\n","requirements":null,"groupId":"org.nuxeo.runtime","artifactId":"nuxeo-runtime-mongodb","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.runtime","name":"org.nuxeo.runtime","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.runtime","org.nuxeo.runtime.cluster","org.nuxeo.runtime.datasource","org.nuxeo.runtime.jtajca","org.nuxeo.runtime.kv","org.nuxeo.runtime.management","org.nuxeo.runtime.metrics","org.nuxeo.runtime.migration","org.nuxeo.runtime.mongodb","org.nuxeo.runtime.pubsub","org.nuxeo.runtime.reload","org.nuxeo.runtime.stream","org.nuxeo.runtime.stream.test"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-mongodb/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.runtime.mongodb.MongoDBComponent","extensionPoints":[{"@type":"NXExtensionPoint","name":"connection","descriptors":["org.nuxeo.runtime.mongodb.MongoDBConnectionConfig"],"documentation":"\n      Extension point used to configure access to a MongoDB server or cluster. The service will return the 'default'\n      access if the asked one hasn't been contributed.\n\n      This sets up a MongoClient; server is mandatory.\n      <code>\n    <connection>\n        <server>mongodb://bob:pass@localhost:27017,otherhost:27018/mydb?replicaSet=test;connectTimeoutMS=300000</server>\n        <dbname>mydb</dbname>\n        <ssl>true</ssl>\n        <trustStorePath>/path/to/cacerts.jks</trustStorePath>\n        <trustStorePassword>changeit</trustStorePassword>\n        <trustStoreType>jks</trustStoreType>\n        <keyStorePath>/path/to/keystore.jks</keyStorePath>\n        <keyStorePassword>changeit</keyStorePassword>\n        <keyStoreType>jks</keyStoreType>\n    </connection>\n</code>\n\n      See http://docs.mongodb.org/manual/reference/connection-string/ for the mongodb:// URI syntax.\n    \n","id":"org.nuxeo.runtime.mongodb.MongoDBComponent--connection","version":"11.1-SNAPSHOT","label":"connection (org.nuxeo.runtime.mongodb.MongoDBComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.mongodb/org.nuxeo.runtime.mongodb.MongoDBComponent/ExtensionPoints/org.nuxeo.runtime.mongodb.MongoDBComponent--connection","documentationHtml":"<p/>\nExtension point used to configure access to a MongoDB server or cluster. The service will return the 'default'\naccess if the asked one hasn't been contributed.\n<p/>\nThis sets up a MongoClient; server is mandatory.\n<p/><pre><code>    &lt;connection>\n        &lt;server>mongodb://bob:pass@localhost:27017,otherhost:27018/mydb?replicaSet=test;connectTimeoutMS=300000&lt;/server>\n        &lt;dbname>mydb&lt;/dbname>\n        &lt;ssl>true&lt;/ssl>\n        &lt;trustStorePath>/path/to/cacerts.jks&lt;/trustStorePath>\n        &lt;trustStorePassword>changeit&lt;/trustStorePassword>\n        &lt;trustStoreType>jks&lt;/trustStoreType>\n        &lt;keyStorePath>/path/to/keystore.jks&lt;/keyStorePath>\n        &lt;keyStorePassword>changeit&lt;/keyStorePassword>\n        &lt;keyStoreType>jks&lt;/keyStoreType>\n    &lt;/connection>\n</code></pre><p/>\nSee http://docs.mongodb.org/manual/reference/connection-string/ for the mongodb:// URI syntax.\n<p/>","componentId":"org.nuxeo.runtime.mongodb.MongoDBComponent"}],"services":[{"@type":"NXService","id":"org.nuxeo.runtime.mongodb.MongoDBConnectionService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.mongodb/org.nuxeo.runtime.mongodb.MongoDBComponent/Services/org.nuxeo.runtime.mongodb.MongoDBConnectionService","componentId":"org.nuxeo.runtime.mongodb.MongoDBComponent"}],"extensions":[],"componentClass":"org.nuxeo.runtime.mongodb.MongoDBComponent","documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.runtime/org.nuxeo.runtime.mongodb/org.nuxeo.runtime.mongodb.MongoDBComponent","documentationHtml":"","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/runtime/nuxeo-runtime-mongodb/bin/main/OSGI-INF/mongodb-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.runtime.mongodb.MongoDBComponent\">\n\n  <alias>org.nuxeo.mongodb.core.MongoDBComponent</alias>\n  <alias>org.nuxeo.ecm.core.mongodb.MongoDBComponent</alias>\n\n  <implementation class=\"org.nuxeo.runtime.mongodb.MongoDBComponent\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.runtime.mongodb.MongoDBConnectionService\" />\n  </service>\n\n  <extension-point name=\"connection\">\n    <documentation>\n      Extension point used to configure access to a MongoDB server or cluster. The service will return the 'default'\n      access if the asked one hasn't been contributed.\n\n      This sets up a MongoClient; server is mandatory.\n      <code>\n        <connection>\n          <server>mongodb://bob:pass@localhost:27017,otherhost:27018/mydb?replicaSet=test;connectTimeoutMS=300000</server>\n          <dbname>mydb</dbname>\n          <ssl>true</ssl>\n          <trustStorePath>/path/to/cacerts.jks</trustStorePath>\n          <trustStorePassword>********</trustStorePassword>\n          <trustStoreType>jks</trustStoreType>\n          <keyStorePath>/path/to/keystore.jks</keyStorePath>\n          <keyStorePassword>********</keyStorePassword>\n          <keyStoreType>jks</keyStoreType>\n        </connection>\n      </code>\n      See http://docs.mongodb.org/manual/reference/connection-string/ for the mongodb:// URI syntax.\n    </documentation>\n\n    <object class=\"org.nuxeo.runtime.mongodb.MongoDBConnectionConfig\" />\n  </extension-point>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.cache","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 2\nBundle-SymbolicName: org.nuxeo.ecm.core.cache\nNuxeo-Component: OSGI-INF/CacheService.xml,\n OSGI-INF/transientstore-service.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-cache","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-cache/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.transientstore.TransientStorageComponent","extensionPoints":[{"@type":"NXExtensionPoint","name":"store","descriptors":["org.nuxeo.ecm.core.transientstore.api.TransientStoreConfig"],"documentation":"\n    Allow to declare a transient store inside Nuxeo.\n    The store is identified by a name and the descriptor has several parameters :\n\n     <code>\n    <store name=\"microStore\">\n        <!--  a store that can not store anything  -->\n        <targetMaxSizeMB>0</targetMaxSizeMB>\n        <absoluteMaxSizeMB>0</absoluteMaxSizeMB>\n    </store>\n</code>\n\n\n     The store tag supports 2 attributes:\n     <ul>\n    <li>name, that is used to identify the store</li>\n    <li>class, that should reference an implementation of the TransientStoreProvider interface (will default to SimpleTransientStore))</li>\n</ul>\n\n\n     Nested configuration elements are :\n     <ul>\n    <li>targetMaxSizeMB : target size that ideally should never be exceeded</li>\n    <li>absoluteMaxSizeMB : size that must never be exceeded</li>\n    <li>firstLevelTTL : TTL in minutes of the first level cache</li>\n    <li>secondLevelTTL : TTL in minutes of the first level cache</li>\n</ul>\n","id":"org.nuxeo.ecm.core.transientstore.TransientStorageComponent--store","version":"11.1-SNAPSHOT","label":"store (org.nuxeo.ecm.core.transientstore.TransientStorageComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.cache/org.nuxeo.ecm.core.transientstore.TransientStorageComponent/ExtensionPoints/org.nuxeo.ecm.core.transientstore.TransientStorageComponent--store","documentationHtml":"<p/>\nAllow to declare a transient store inside Nuxeo.\nThe store is identified by a name and the descriptor has several parameters :\n<p/>\n<pre><code>    &lt;store name=\"microStore\">\n        &lt;!--  a store that can not store anything  -->\n        &lt;targetMaxSizeMB>0&lt;/targetMaxSizeMB>\n        &lt;absoluteMaxSizeMB>0&lt;/absoluteMaxSizeMB>\n    &lt;/store>\n</code></pre><p/>\nThe store tag supports 2 attributes:\n<ul>\n<li>name, that is used to identify the store</li>\n<li>class, that should reference an implementation of the TransientStoreProvider interface (will default to SimpleTransientStore))</li>\n</ul>\n<p/>\nNested configuration elements are :\n<ul>\n<li>targetMaxSizeMB : target size that ideally should never be exceeded</li>\n<li>absoluteMaxSizeMB : size that must never be exceeded</li>\n<li>firstLevelTTL : TTL in minutes of the first level cache</li>\n<li>secondLevelTTL : TTL in minutes of the first level cache</li>\n</ul>","componentId":"org.nuxeo.ecm.core.transientstore.TransientStorageComponent"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.transientstore.api.TransientStoreService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.cache/org.nuxeo.ecm.core.transientstore.TransientStorageComponent/Services/org.nuxeo.ecm.core.transientstore.api.TransientStoreService","componentId":"org.nuxeo.ecm.core.transientstore.TransientStorageComponent"}],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.transientstore.TransientStorageComponent--schedule","extensionPoint":"org.nuxeo.ecm.core.scheduler.SchedulerService--schedule","documentation":null,"xml":"<extension point=\"schedule\" target=\"org.nuxeo.ecm.core.scheduler.SchedulerService\">\n    <schedule id=\"transientStoreGC\">\n      <eventId>transientStoreGCStart</eventId>\n      <eventCategory>default</eventCategory>\n      <!-- cleanup every 15 minutes -->\n      <cronExpression>0 0/15 * * * ?</cronExpression>\n    </schedule>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.scheduler.SchedulerService","rawName":"service:org.nuxeo.ecm.core.scheduler.SchedulerService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.cache/org.nuxeo.ecm.core.transientstore.TransientStorageComponent/Contributions/org.nuxeo.ecm.core.transientstore.TransientStorageComponent--schedule","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;schedule id=&quot;transientStoreGC&quot;&gt;\n      &lt;eventId&gt;transientStoreGCStart&lt;/eventId&gt;\n      &lt;eventCategory&gt;default&lt;/eventCategory&gt;\n      &lt;!-- cleanup every 15 minutes --&gt;\n      &lt;cronExpression&gt;0 0/15 * * * ?&lt;/cronExpression&gt;\n    &lt;/schedule&gt;","id":"transientStoreGC","label":"schedule transientStoreGC","rawXml":"<schedule id=\"transientStoreGC\">\n      <eventId>transientStoreGCStart</eventId>\n      <eventCategory>default</eventCategory>\n      <!-- cleanup every 15 minutes -->\n      <cronExpression>0 0/15 * * * ?</cronExpression>\n    </schedule>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.transientstore.TransientStorageComponent--listener","extensionPoint":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentation":null,"xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n    <listener async=\"false\" class=\"org.nuxeo.ecm.core.transientstore.TransientStorageGCTrigger\" name=\"transientStoreGCTrigger\" postCommit=\"false\">\n      <event>transientStoreGCStart</event>\n    </listener>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.event.EventServiceComponent","rawName":"service:org.nuxeo.ecm.core.event.EventServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.cache/org.nuxeo.ecm.core.transientstore.TransientStorageComponent/Contributions/org.nuxeo.ecm.core.transientstore.TransientStorageComponent--listener","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;listener async=&quot;false&quot; class=&quot;org.nuxeo.ecm.core.transientstore.TransientStorageGCTrigger&quot; name=&quot;transientStoreGCTrigger&quot; postCommit=&quot;false&quot;&gt;\n      &lt;event&gt;transientStoreGCStart&lt;/event&gt;\n    &lt;/listener&gt;","id":"transientStoreGCTrigger","label":"listener transientStoreGCTrigger","rawXml":"<listener async=\"false\" class=\"org.nuxeo.ecm.core.transientstore.TransientStorageGCTrigger\" name=\"transientStoreGCTrigger\" postCommit=\"false\">\n      <event>transientStoreGCStart</event>\n    </listener>"}]}],"componentClass":"org.nuxeo.ecm.core.transientstore.TransientStorageComponent","documentation":"\n    Provide a way to manage TransientStores where temporary data can be stored by key.\n   \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.cache/org.nuxeo.ecm.core.transientstore.TransientStorageComponent","documentationHtml":"<p/>\nProvide a way to manage TransientStores where temporary data can be stored by key.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-cache/bin/main/OSGI-INF/transientstore-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.transientstore.TransientStorageComponent\">\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.transientstore.api.TransientStoreService\" />\n  </service>\n\n   <documentation>\n    Provide a way to manage TransientStores where temporary data can be stored by key.\n   </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.transientstore.TransientStorageComponent\" />\n\n  <extension-point name=\"store\">\n\n    <documentation>\n    Allow to declare a transient store inside Nuxeo.\n    The store is identified by a name and the descriptor has several parameters :\n\n     <code>\n       <store name=\"microStore\">\n          <!--  a store that can not store anything  -->\n          <targetMaxSizeMB>0</targetMaxSizeMB>\n          <absoluteMaxSizeMB>0</absoluteMaxSizeMB>\n       </store>\n     </code>\n\n     The store tag supports 2 attributes:\n     <ul>\n         <li>name, that is used to identify the store</li>\n         <li>class, that should reference an implementation of the TransientStoreProvider interface (will default to SimpleTransientStore))</li>\n     </ul>\n\n     Nested configuration elements are :\n     <ul>\n         <li>targetMaxSizeMB : target size that ideally should never be exceeded</li>\n         <li>absoluteMaxSizeMB : size that must never be exceeded</li>\n         <li>firstLevelTTL : TTL in minutes of the first level cache</li>\n         <li>secondLevelTTL : TTL in minutes of the first level cache</li>\n     </ul>\n\n    </documentation>\n    <object class=\"org.nuxeo.ecm.core.transientstore.api.TransientStoreConfig\"/>\n\n  </extension-point>\n\n  <extension\n    target=\"org.nuxeo.ecm.core.scheduler.SchedulerService\"\n    point=\"schedule\">\n    <schedule id=\"transientStoreGC\">\n      <eventId>transientStoreGCStart</eventId>\n      <eventCategory>default</eventCategory>\n      <!-- cleanup every 15 minutes -->\n      <cronExpression>0 0/15 * * * ?</cronExpression>\n    </schedule>\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.core.event.EventServiceComponent\"\n    point=\"listener\">\n    <listener name=\"transientStoreGCTrigger\" async=\"false\" postCommit=\"false\"\n      class=\"org.nuxeo.ecm.core.transientstore.TransientStorageGCTrigger\">\n      <event>transientStoreGCStart</event>\n    </listener>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.cache.CacheService","extensionPoints":[{"@type":"NXExtensionPoint","name":"caches","descriptors":["org.nuxeo.ecm.core.cache.CacheDescriptor"],"documentation":"\n      Extension Point to define a new cache .\n      <cache\n    class=\"org.nuxeo.ecm.core.cache.InMemoryCacheImpl\" name=\"newCache\">\n    <ttl>20</ttl>\n    <option name=\"maxSize\">10</option>\n    <option name=\"concurrencyLevel\">10</option>\n</cache>\n\n      The class attribute may specify a class that implements the CacheManagement interface.\n      The default implementation 'org.nuxeo.ecm.core.cache.InMemoryCacheImpl'\n      is based on Google Guava.\n      <p/>\n\n      The max size set the max number of elements contained in the cache\n      <p/>\n\n      The Time To Live define in minutes the time before the cache will be\n      destroyed\n      <p/>\n\n      The concurrency level, number of thread that can access at the same time\n      the cache\n    \n","id":"org.nuxeo.ecm.core.cache.CacheService--caches","version":"11.1-SNAPSHOT","label":"caches (org.nuxeo.ecm.core.cache.CacheService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.cache/org.nuxeo.ecm.core.cache.CacheService/ExtensionPoints/org.nuxeo.ecm.core.cache.CacheService--caches","documentationHtml":"<p/>\nExtension Point to define a new cache .\n<cache\nclass=\"org.nuxeo.ecm.core.cache.InMemoryCacheImpl\" name=\"newCache\">\n<ttl>20</ttl>\n<option name=\"maxSize\">10</option>\n<option name=\"concurrencyLevel\">10</option>\n</cache>\n<p/>\nThe class attribute may specify a class that implements the CacheManagement interface.\nThe default implementation 'org.nuxeo.ecm.core.cache.InMemoryCacheImpl'\nis based on Google Guava.\n<p/>\nThe max size set the max number of elements contained in the cache\n<p/>\nThe Time To Live define in minutes the time before the cache will be\ndestroyed\n<p/>\nThe concurrency level, number of thread that can access at the same time\nthe cache\n<p/>","componentId":"org.nuxeo.ecm.core.cache.CacheService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.cache.CacheService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.cache/org.nuxeo.ecm.core.cache.CacheService/Services/org.nuxeo.ecm.core.cache.CacheService","componentId":"org.nuxeo.ecm.core.cache.CacheService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.cache.CacheServiceImpl","documentation":"\n    Service providing a unified cache management system.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.cache/org.nuxeo.ecm.core.cache.CacheService","documentationHtml":"<p/>\nService providing a unified cache management system.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-cache/bin/main/OSGI-INF/CacheService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.core.cache.CacheService\">\n\n  <documentation>\n    Service providing a unified cache management system.\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.cache.CacheServiceImpl\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.cache.CacheService\" />\n  </service>\n\n  <extension-point name=\"caches\">\n\n    <documentation>\n      Extension Point to define a new cache .\n      <cache name=\"newCache\" class=\"org.nuxeo.ecm.core.cache.InMemoryCacheImpl\">\n        <ttl>20</ttl>\n        <option name=\"maxSize\">10</option>\n        <option name=\"concurrencyLevel\">10</option>\n      </cache>\n      The class attribute may specify a class that implements the CacheManagement interface.\n      The default implementation 'org.nuxeo.ecm.core.cache.InMemoryCacheImpl'\n      is based on Google Guava.\n      <p />\n      The max size set the max number of elements contained in the cache\n      <p />\n      The Time To Live define in minutes the time before the cache will be\n      destroyed\n      <p />\n      The concurrency level, number of thread that can access at the same time\n      the cache\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.cache.CacheDescriptor\" />\n\n  </extension-point>\n\n</component>"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.io","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.core.io,\n org.nuxeo.ecm.core.io.exceptions,\n org.nuxeo.ecm.core.io.impl,\n org.nuxeo.ecm.core.io.impl.plugins\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Name: org.nuxeo.ecm.core.io\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Version: 5.4.2.qualifier\nBundle-ManifestVersion: 2\nImport-Package: javax.security.auth.login,\n org.apache.commons.logging,\n org.dom4j,\n org.dom4j.io,\n org.nuxeo.common.collections,\n org.nuxeo.common.utils,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.impl,\n org.nuxeo.ecm.core.api.impl.blob,\n org.nuxeo.ecm.core.api.repository,\n org.nuxeo.ecm.core.api.security,\n org.nuxeo.ecm.core.api.security.impl,\n org.nuxeo.ecm.core.schema,\n org.nuxeo.ecm.core.schema.types,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.services.streaming\nBundle-SymbolicName: org.nuxeo.ecm.core.io;singleton:=true\nNuxeo-Component: OSGI-INF/document-xml-exporter-service.xml,\n OSGI-INF/avro-factory-contrib.xml,\n OSGI-INF/download-service.xml,\n OSGI-INF/MarshallerRegistry.xml,\n OSGI-INF/marshallers-contrib.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-io","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-io/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.io.avro.factories","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.io.avro.factories--factory","extensionPoint":"org.nuxeo.runtime.avro--factory","documentation":null,"xml":"<extension point=\"factory\" target=\"org.nuxeo.runtime.avro\">\n    <factory class=\"org.nuxeo.ecm.core.io.avro.TypeSchemaFactory\" type=\"org.nuxeo.ecm.core.schema.types.Type\"/>\n    <factory class=\"org.nuxeo.ecm.core.io.avro.SchemaSchemaFactory\" type=\"org.nuxeo.ecm.core.schema.types.Schema\"/>\n    <factory class=\"org.nuxeo.ecm.core.io.avro.DocumentModelSchemaFactory\" type=\"org.nuxeo.ecm.core.api.DocumentModel\"/>\n    <factory class=\"org.nuxeo.ecm.core.io.avro.DocumentTypeSchemaFactory\" type=\"org.nuxeo.ecm.core.schema.DocumentType\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.avro","rawName":"service:org.nuxeo.runtime.avro"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.io/org.nuxeo.ecm.core.io.avro.factories/Contributions/org.nuxeo.ecm.core.io.avro.factories--factory","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;factory class=&quot;org.nuxeo.ecm.core.io.avro.TypeSchemaFactory&quot; type=&quot;org.nuxeo.ecm.core.schema.types.Type&quot;/&gt;","id":null,"label":"factory","rawXml":"<factory class=\"org.nuxeo.ecm.core.io.avro.TypeSchemaFactory\" type=\"org.nuxeo.ecm.core.schema.types.Type\"/>"},{"documentation":"","xml":"&lt;factory class=&quot;org.nuxeo.ecm.core.io.avro.SchemaSchemaFactory&quot; type=&quot;org.nuxeo.ecm.core.schema.types.Schema&quot;/&gt;","id":null,"label":"factory","rawXml":"<factory class=\"org.nuxeo.ecm.core.io.avro.SchemaSchemaFactory\" type=\"org.nuxeo.ecm.core.schema.types.Schema\"/>"},{"documentation":"","xml":"&lt;factory class=&quot;org.nuxeo.ecm.core.io.avro.DocumentModelSchemaFactory&quot; type=&quot;org.nuxeo.ecm.core.api.DocumentModel&quot;/&gt;","id":null,"label":"factory","rawXml":"<factory class=\"org.nuxeo.ecm.core.io.avro.DocumentModelSchemaFactory\" type=\"org.nuxeo.ecm.core.api.DocumentModel\"/>"},{"documentation":"","xml":"&lt;factory class=&quot;org.nuxeo.ecm.core.io.avro.DocumentTypeSchemaFactory&quot; type=&quot;org.nuxeo.ecm.core.schema.DocumentType&quot;/&gt;","id":null,"label":"factory","rawXml":"<factory class=\"org.nuxeo.ecm.core.io.avro.DocumentTypeSchemaFactory\" type=\"org.nuxeo.ecm.core.schema.DocumentType\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.core.io.avro.factories--mapper","extensionPoint":"org.nuxeo.runtime.avro--mapper","documentation":null,"xml":"<extension point=\"mapper\" target=\"org.nuxeo.runtime.avro\">\n    <mapper class=\"org.nuxeo.ecm.core.io.avro.PropertyMapper\" type=\"org.nuxeo.ecm.core.api.model.Property\"/>\n    <mapper class=\"org.nuxeo.ecm.core.io.avro.DocumentModelMapper\" type=\"org.nuxeo.ecm.core.api.DocumentModel\"/>\n    <mapper class=\"org.nuxeo.ecm.core.io.avro.BlobPropertyMapper\" type=\"org.nuxeo.ecm.core.api.model.impl.primitives.BlobProperty\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.avro","rawName":"service:org.nuxeo.runtime.avro"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.io/org.nuxeo.ecm.core.io.avro.factories/Contributions/org.nuxeo.ecm.core.io.avro.factories--mapper","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;mapper class=&quot;org.nuxeo.ecm.core.io.avro.PropertyMapper&quot; type=&quot;org.nuxeo.ecm.core.api.model.Property&quot;/&gt;","id":null,"label":"mapper","rawXml":"<mapper class=\"org.nuxeo.ecm.core.io.avro.PropertyMapper\" type=\"org.nuxeo.ecm.core.api.model.Property\"/>"},{"documentation":"","xml":"&lt;mapper class=&quot;org.nuxeo.ecm.core.io.avro.DocumentModelMapper&quot; type=&quot;org.nuxeo.ecm.core.api.DocumentModel&quot;/&gt;","id":null,"label":"mapper","rawXml":"<mapper class=\"org.nuxeo.ecm.core.io.avro.DocumentModelMapper\" type=\"org.nuxeo.ecm.core.api.DocumentModel\"/>"},{"documentation":"","xml":"&lt;mapper class=&quot;org.nuxeo.ecm.core.io.avro.BlobPropertyMapper&quot; type=&quot;org.nuxeo.ecm.core.api.model.impl.primitives.BlobProperty&quot;/&gt;","id":null,"label":"mapper","rawXml":"<mapper class=\"org.nuxeo.ecm.core.io.avro.BlobPropertyMapper\" type=\"org.nuxeo.ecm.core.api.model.impl.primitives.BlobProperty\"/>"}]}],"componentClass":null,"documentation":"\n    Core IO contribution to Avro for Nuxeo core model.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.io/org.nuxeo.ecm.core.io.avro.factories","documentationHtml":"<p/>\nCore IO contribution to Avro for Nuxeo core model.\n<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-io/bin/main/OSGI-INF/avro-factory-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.io.avro.factories\" version=\"1.0.0\">\n  <documentation>\n    Core IO contribution to Avro for Nuxeo core model.\n  </documentation>\n  <extension target=\"org.nuxeo.runtime.avro\" point=\"factory\">\n    <factory class=\"org.nuxeo.ecm.core.io.avro.TypeSchemaFactory\" type=\"org.nuxeo.ecm.core.schema.types.Type\" />\n    <factory class=\"org.nuxeo.ecm.core.io.avro.SchemaSchemaFactory\" type=\"org.nuxeo.ecm.core.schema.types.Schema\" />\n    <factory class=\"org.nuxeo.ecm.core.io.avro.DocumentModelSchemaFactory\" type=\"org.nuxeo.ecm.core.api.DocumentModel\" />\n    <factory class=\"org.nuxeo.ecm.core.io.avro.DocumentTypeSchemaFactory\" type=\"org.nuxeo.ecm.core.schema.DocumentType\" />\n  </extension>\n  <extension target=\"org.nuxeo.runtime.avro\" point=\"mapper\">\n    <mapper class=\"org.nuxeo.ecm.core.io.avro.PropertyMapper\" type=\"org.nuxeo.ecm.core.api.model.Property\" />\n    <mapper class=\"org.nuxeo.ecm.core.io.avro.DocumentModelMapper\" type=\"org.nuxeo.ecm.core.api.DocumentModel\" />\n    <mapper class=\"org.nuxeo.ecm.core.io.avro.BlobPropertyMapper\" type=\"org.nuxeo.ecm.core.api.model.impl.primitives.BlobProperty\" />\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.io.DocumentXMLExporter","extensionPoints":[],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.io.DocumentXMLExporter","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.io/org.nuxeo.ecm.core.io.DocumentXMLExporter/Services/org.nuxeo.ecm.core.io.DocumentXMLExporter","componentId":"org.nuxeo.ecm.core.io.DocumentXMLExporter"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.io.impl.DocumentXMLExporterImpl","documentation":"\n    This service allows to export a document to XML.\n\n    @author\n    Antoine Taillefer\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.io/org.nuxeo.ecm.core.io.DocumentXMLExporter","documentationHtml":"<p/>\nThis service allows to export a document to XML.\n<p/>\nAntoine Taillefer\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-io/bin/main/OSGI-INF/document-xml-exporter-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.io.DocumentXMLExporter\">\n\n  <documentation>\n    This service allows to export a document to XML.\n\n    @author\n    Antoine Taillefer\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.io.impl.DocumentXMLExporterImpl\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.io.DocumentXMLExporter\" />\n  </service>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.io.MarshallerRegistry.marshallers","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.io.MarshallerRegistry.marshallers--marshallers","extensionPoint":"org.nuxeo.ecm.core.io.MarshallerRegistry--marshallers","documentation":null,"xml":"<extension point=\"marshallers\" target=\"org.nuxeo.ecm.core.io.MarshallerRegistry\">\n    <!-- validation -->\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.validation.ConstraintJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.validation.ConstraintListJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.validation.DocumentValidationReportJsonWriter\" enable=\"true\"/>\n    <!-- document -->\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelJsonReader\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentPropertyJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentPropertiesJsonReader\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelListJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelListJsonReader\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.ACPJsonWriter\" enable=\"true\"/>\n    <!-- document type -->\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.DocumentTypeJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.DocumentTypeListJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.FacetJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.FacetListJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.SchemaJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.SchemaListJsonWriter\" enable=\"true\"/>\n    <!-- enrichers -->\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.FirstAccessibleAncestorJsonEnricher\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.BasePermissionsJsonEnricher\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.BreadcrumbJsonEnricher\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.ChildrenJsonEnricher\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.HasFolderishChildJsonEnricher\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.ContextualParametersJsonEnricher\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.SubtypesJsonEnricher\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.UserVisiblePermissionsJsonEnricher\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.BlobAppLinksJsonEnricher\" enable=\"true\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.io.MarshallerRegistry","rawName":"service:org.nuxeo.ecm.core.io.MarshallerRegistry"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.io/org.nuxeo.ecm.core.io.MarshallerRegistry.marshallers/Contributions/org.nuxeo.ecm.core.io.MarshallerRegistry.marshallers--marshallers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.validation.ConstraintJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.validation.ConstraintJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.validation.ConstraintListJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.validation.ConstraintListJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.validation.DocumentValidationReportJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.validation.DocumentValidationReportJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelJsonReader&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelJsonReader\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.document.DocumentPropertyJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentPropertyJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.document.DocumentPropertiesJsonReader&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentPropertiesJsonReader\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelListJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelListJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelListJsonReader&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelListJsonReader\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.document.ACPJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.ACPJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.types.DocumentTypeJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.DocumentTypeJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.types.DocumentTypeListJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.DocumentTypeListJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.types.FacetJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.FacetJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.types.FacetListJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.FacetListJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.types.SchemaJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.SchemaJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.types.SchemaListJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.SchemaListJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.enrichers.FirstAccessibleAncestorJsonEnricher&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.FirstAccessibleAncestorJsonEnricher\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.enrichers.BasePermissionsJsonEnricher&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.BasePermissionsJsonEnricher\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.enrichers.BreadcrumbJsonEnricher&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.BreadcrumbJsonEnricher\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.enrichers.ChildrenJsonEnricher&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.ChildrenJsonEnricher\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.enrichers.HasFolderishChildJsonEnricher&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.HasFolderishChildJsonEnricher\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.enrichers.ContextualParametersJsonEnricher&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.ContextualParametersJsonEnricher\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.enrichers.SubtypesJsonEnricher&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.SubtypesJsonEnricher\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.enrichers.UserVisiblePermissionsJsonEnricher&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.UserVisiblePermissionsJsonEnricher\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.core.io.marshallers.json.enrichers.BlobAppLinksJsonEnricher&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.BlobAppLinksJsonEnricher\" enable=\"true\"/>"}]}],"componentClass":null,"documentation":"\n    Core IO registered marshallers set.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.io/org.nuxeo.ecm.core.io.MarshallerRegistry.marshallers","documentationHtml":"<p/>\nCore IO registered marshallers set.\n<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-io/bin/main/OSGI-INF/marshallers-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.io.MarshallerRegistry.marshallers\" version=\"1.0.0\">\n  <documentation>\n    Core IO registered marshallers set.\n  </documentation>\n  <extension target=\"org.nuxeo.ecm.core.io.MarshallerRegistry\" point=\"marshallers\">\n    <!-- validation -->\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.validation.ConstraintJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.validation.ConstraintListJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.validation.DocumentValidationReportJsonWriter\"\n      enable=\"true\" />\n    <!-- document -->\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelJsonReader\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentPropertyJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentPropertiesJsonReader\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelListJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelListJsonReader\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.document.ACPJsonWriter\" enable=\"true\" />\n    <!-- document type -->\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.DocumentTypeJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.DocumentTypeListJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.FacetJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.FacetListJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.SchemaJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.types.SchemaListJsonWriter\" enable=\"true\" />\n    <!-- enrichers -->\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.FirstAccessibleAncestorJsonEnricher\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.BasePermissionsJsonEnricher\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.BreadcrumbJsonEnricher\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.ChildrenJsonEnricher\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.HasFolderishChildJsonEnricher\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.ContextualParametersJsonEnricher\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.SubtypesJsonEnricher\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.UserVisiblePermissionsJsonEnricher\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.core.io.marshallers.json.enrichers.BlobAppLinksJsonEnricher\" enable=\"true\" />\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.io.MarshallerRegistry","extensionPoints":[{"@type":"NXExtensionPoint","name":"marshallers","descriptors":["org.nuxeo.ecm.core.io.registry.MarshallerRegistryDescriptor"],"documentation":"\n\n      Extension Point to register or deregister a marshaller.\n      <register\n    class=\"org.company.nuxeo.io.MyDocumentWriter\" enable=\"true\"/>\n","id":"org.nuxeo.ecm.core.io.MarshallerRegistry--marshallers","version":"11.1-SNAPSHOT","label":"marshallers (org.nuxeo.ecm.core.io.MarshallerRegistry)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.io/org.nuxeo.ecm.core.io.MarshallerRegistry/ExtensionPoints/org.nuxeo.ecm.core.io.MarshallerRegistry--marshallers","documentationHtml":"<p/>\nExtension Point to register or deregister a marshaller.\n<register\nclass=\"org.company.nuxeo.io.MyDocumentWriter\" enable=\"true\"/>","componentId":"org.nuxeo.ecm.core.io.MarshallerRegistry"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.io.registry.MarshallerRegistry","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.io/org.nuxeo.ecm.core.io.MarshallerRegistry/Services/org.nuxeo.ecm.core.io.registry.MarshallerRegistry","componentId":"org.nuxeo.ecm.core.io.MarshallerRegistry"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.io.registry.MarshallerRegistryImpl","documentation":"\n    Service providing a way to register marshallers and use them.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.io/org.nuxeo.ecm.core.io.MarshallerRegistry","documentationHtml":"<p/>\nService providing a way to register marshallers and use them.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-io/bin/main/OSGI-INF/MarshallerRegistry.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.core.io.MarshallerRegistry\" version=\"1.0.0\">\n  <documentation>\n    Service providing a way to register marshallers and use them.\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.io.registry.MarshallerRegistryImpl\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.io.registry.MarshallerRegistry\" />\n  </service>\n\n  <extension-point name=\"marshallers\">\n\n    <documentation>\n      Extension Point to register or deregister a marshaller.\n      <register class=\"org.company.nuxeo.io.MyDocumentWriter\" enable=\"true\" />\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.io.registry.MarshallerRegistryDescriptor\" />\n\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.core.io.download.DownloadService","extensionPoints":[{"@type":"NXExtensionPoint","name":"permissions","descriptors":["org.nuxeo.ecm.core.io.download.DownloadPermissionDescriptor"],"documentation":"\n      Defines the permissions associated to blob download. Contributions are of the form:\n      <code>\n    <permission name=\"myperm\">\n        <script language=\"JavaScript\">\n            function run() {\n              if (CurrentUser.getName() != \"bob\") {\n                return false;\n              }\n              if (!CurrentUser.getGroups().contains(\"members\")) {\n                return false;\n              }\n              if (Document.getPropertyValue(\"dc:format\") != \"pdf\") {\n                return false;\n              }\n              if (Reason != \"rendition\") {\n                return false;\n              }\n              if (Rendition != \"myrendition\") {\n                return false;\n              }\n              if (Blob.getFilename() != \"myfile.txt\") {\n                return false;\n              }\n              if (XPath == \"file:content\" || XPath == \"blobholder:0\") {\n                return false;\n              }\n              return true;\n          </script>\n    </permission>\n</code>\n\n      The language can be any JVM scripting language, the default is \"JavaScript\".\n\n      The script must define a \"run()\" function that returns a boolean:\n      - true means that downloading the blob is not disallowed by this permission.\n      - false means that downloading the blob is forbidden.\n      The method will get called with the following global context (some values may be null):\n      Document (DocumentModel), XPath (String), Blob (Blob), CurrentUser (NuxeoPrincipal),\n      Reason (String), Rendition (String), Infos (Map).\n\n      If there are several permissions defined, a single one returning false is sufficient\n      to forbid the blob download.\n    \n","id":"org.nuxeo.ecm.core.io.download.DownloadService--permissions","version":"11.1-SNAPSHOT","label":"permissions (org.nuxeo.ecm.core.io.download.DownloadService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.io/org.nuxeo.ecm.core.io.download.DownloadService/ExtensionPoints/org.nuxeo.ecm.core.io.download.DownloadService--permissions","documentationHtml":"<p/>\nDefines the permissions associated to blob download. Contributions are of the form:\n<p/><pre><code>    &lt;permission name=\"myperm\">\n        &lt;script language=\"JavaScript\">\n            function run() {\n              if (CurrentUser.getName() != \"bob\") {\n                return false;\n              }\n              if (!CurrentUser.getGroups().contains(\"members\")) {\n                return false;\n              }\n              if (Document.getPropertyValue(\"dc:format\") != \"pdf\") {\n                return false;\n              }\n              if (Reason != \"rendition\") {\n                return false;\n              }\n              if (Rendition != \"myrendition\") {\n                return false;\n              }\n              if (Blob.getFilename() != \"myfile.txt\") {\n                return false;\n              }\n              if (XPath == \"file:content\" || XPath == \"blobholder:0\") {\n                return false;\n              }\n              return true;\n          &lt;/script>\n    &lt;/permission>\n</code></pre><p/>\nThe language can be any JVM scripting language, the default is \"JavaScript\".\n<p/>\nThe script must define a \"run()\" function that returns a boolean:\n- true means that downloading the blob is not disallowed by this permission.\n- false means that downloading the blob is forbidden.\nThe method will get called with the following global context (some values may be null):\nDocument (DocumentModel), XPath (String), Blob (Blob), CurrentUser (NuxeoPrincipal),\nReason (String), Rendition (String), Infos (Map).\n<p/>\nIf there are several permissions defined, a single one returning false is sufficient\nto forbid the blob download.\n<p/>","componentId":"org.nuxeo.ecm.core.io.download.DownloadService"},{"@type":"NXExtensionPoint","name":"redirectResolver","descriptors":["org.nuxeo.ecm.core.io.download.RedirectResolverDescriptor"],"documentation":"\n      Defines the redirect resolver associated to blob download. Contributions are of the form:\n      <code>\n    <redirectResolver class=\"org.nuxeo.ecm.core.io.download.DefaultRedirectResolver\"/>\n</code>\n\n      This allows you to redirect to a specific cache server or by default the blobManager redirect mechanism\n    \n","id":"org.nuxeo.ecm.core.io.download.DownloadService--redirectResolver","version":"11.1-SNAPSHOT","label":"redirectResolver (org.nuxeo.ecm.core.io.download.DownloadService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.io/org.nuxeo.ecm.core.io.download.DownloadService/ExtensionPoints/org.nuxeo.ecm.core.io.download.DownloadService--redirectResolver","documentationHtml":"<p/>\nDefines the redirect resolver associated to blob download. Contributions are of the form:\n<p/><pre><code>    &lt;redirectResolver class=\"org.nuxeo.ecm.core.io.download.DefaultRedirectResolver\"/>\n</code></pre><p/>\nThis allows you to redirect to a specific cache server or by default the blobManager redirect mechanism\n<p/>","componentId":"org.nuxeo.ecm.core.io.download.DownloadService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.io.download.DownloadService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.io/org.nuxeo.ecm.core.io.download.DownloadService/Services/org.nuxeo.ecm.core.io.download.DownloadService","componentId":"org.nuxeo.ecm.core.io.download.DownloadService"}],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.core.io.download.DownloadService--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n      Property that enables returning blob URLs with redirections already taken into account.\n      Only applies to code calling the DownloadService.getFullDownloadUrl API.\n    \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <documentation>\n      Property that enables returning blob URLs with redirections already taken into account.\n      Only applies to code calling the DownloadService.getFullDownloadUrl API.\n    </documentation>\n    <property name=\"org.nuxeo.download.url.follow.redirect\">false</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.io/org.nuxeo.ecm.core.io.download.DownloadService/Contributions/org.nuxeo.ecm.core.io.download.DownloadService--configuration","documentationHtml":"<p/>\nProperty that enables returning blob URLs with redirections already taken into account.\nOnly applies to code calling the DownloadService.getFullDownloadUrl API.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;org.nuxeo.download.url.follow.redirect&quot;&gt;false&lt;/property&gt;","id":"org.nuxeo.download.url.follow.redirect","label":"property org.nuxeo.download.url.follow.redirect","rawXml":"<property name=\"org.nuxeo.download.url.follow.redirect\">false</property>"}]}],"componentClass":"org.nuxeo.ecm.core.io.download.DownloadServiceImpl","documentation":"\n    Manages repositories.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.io/org.nuxeo.ecm.core.io.download.DownloadService","documentationHtml":"<p/>\nManages repositories.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-io/bin/main/OSGI-INF/download-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.io.download.DownloadService\">\n\n  <documentation>\n    Manages repositories.\n  </documentation>\n\n  <require>org.nuxeo.ecm.core.transientstore.TransientStorageComponent</require>\n\n  <implementation class=\"org.nuxeo.ecm.core.io.download.DownloadServiceImpl\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.io.download.DownloadService\" />\n  </service>\n\n  <extension-point name=\"permissions\">\n\n    <documentation>\n      Defines the permissions associated to blob download. Contributions are of the form:\n      <code>\n        <permission name=\"myperm\">\n          <script language=\"JavaScript\">\n            function run() {\n              if (CurrentUser.getName() != \"bob\") {\n                return false;\n              }\n              if (!CurrentUser.getGroups().contains(\"members\")) {\n                return false;\n              }\n              if (Document.getPropertyValue(\"dc:format\") != \"pdf\") {\n                return false;\n              }\n              if (Reason != \"rendition\") {\n                return false;\n              }\n              if (Rendition != \"myrendition\") {\n                return false;\n              }\n              if (Blob.getFilename() != \"myfile.txt\") {\n                return false;\n              }\n              if (XPath == \"file:content\" || XPath == \"blobholder:0\") {\n                return false;\n              }\n              return true;\n          </script>\n        </permission>\n      </code>\n      The language can be any JVM scripting language, the default is \"JavaScript\".\n\n      The script must define a \"run()\" function that returns a boolean:\n      - true means that downloading the blob is not disallowed by this permission.\n      - false means that downloading the blob is forbidden.\n      The method will get called with the following global context (some values may be null):\n      Document (DocumentModel), XPath (String), Blob (Blob), CurrentUser (NuxeoPrincipal),\n      Reason (String), Rendition (String), Infos (Map).\n\n      If there are several permissions defined, a single one returning false is sufficient\n      to forbid the blob download.\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.io.download.DownloadPermissionDescriptor\"/>\n\n  </extension-point>\n\n  <extension-point name=\"redirectResolver\">\n\n    <documentation>\n      Defines the redirect resolver associated to blob download. Contributions are of the form:\n      <code>\n        <redirectResolver class=\"org.nuxeo.ecm.core.io.download.DefaultRedirectResolver\"></redirectResolver>\n      </code>\n      This allows you to redirect to a specific cache server or by default the blobManager redirect mechanism\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.core.io.download.RedirectResolverDescriptor\"/>\n\n  </extension-point>\n\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n    <documentation>\n      Property that enables returning blob URLs with redirections already taken into account.\n      Only applies to code calling the DownloadService.getFullDownloadUrl API.\n    </documentation>\n    <property name=\"org.nuxeo.download.url.follow.redirect\">false</property>\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.core.storage.dbs","fileName":"main","manifest":"Manifest-Version: 1.0\nBundle-ManifestVersion: 2\nBundle-SymbolicName: org.nuxeo.ecm.core.storage.dbs\nNuxeo-Component: OSGI-INF/dbs-repository-service.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.core","artifactId":"nuxeo-core-storage-dbs","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.core","name":"org.nuxeo.ecm.core","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.core","org.nuxeo.ecm.core.api","org.nuxeo.ecm.core.bulk","org.nuxeo.ecm.core.bulk.test","org.nuxeo.ecm.core.cache","org.nuxeo.ecm.core.convert","org.nuxeo.ecm.core.convert.plugins","org.nuxeo.ecm.core.event","org.nuxeo.ecm.core.event.test","org.nuxeo.ecm.core.io","org.nuxeo.ecm.core.management","org.nuxeo.ecm.core.mimetype","org.nuxeo.ecm.core.query","org.nuxeo.ecm.core.schema","org.nuxeo.ecm.core.storage","org.nuxeo.ecm.core.storage.dbs","org.nuxeo.ecm.core.storage.mem","org.nuxeo.ecm.core.storage.mongodb","org.nuxeo.ecm.core.storage.sql","org.nuxeo.ecm.core.storage.sql.test","org.nuxeo.ecm.core.test","org.nuxeo.ecm.platform.el"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage-dbs/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.core.storage.dbs.DBSRepositoryService","extensionPoints":[],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.core.storage.dbs.DBSRepositoryService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.dbs/org.nuxeo.ecm.core.storage.dbs.DBSRepositoryService/Services/org.nuxeo.ecm.core.storage.dbs.DBSRepositoryService","componentId":"org.nuxeo.ecm.core.storage.dbs.DBSRepositoryService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.core.storage.dbs.DBSRepositoryService","documentation":"\n    Manages DBS repositories.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.core/org.nuxeo.ecm.core.storage.dbs/org.nuxeo.ecm.core.storage.dbs.DBSRepositoryService","documentationHtml":"<p/>\nManages DBS repositories.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/core/nuxeo-core-storage-dbs/bin/main/OSGI-INF/dbs-repository-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.core.storage.dbs.DBSRepositoryService\" version=\"1.0.0\">\n\n  <require>org.nuxeo.ecm.core.repository.RepositoryServiceComponent</require>\n\n  <documentation>\n    Manages DBS repositories.\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.core.storage.dbs.DBSRepositoryService\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.core.storage.dbs.DBSRepositoryService\" />\n  </service>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.config","fileName":null,"manifest":null,"requirements":null,"groupId":"grp:org.nuxeo.misc","artifactId":null,"artifactVersion":null,"bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.misc","name":"org.nuxeo.misc","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.config"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":null,"components":[]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.platform.web.common","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.platform.ui.web.auth,\n org.nuxeo.ecm.platform.ui.web.auth.interfaces,\n org.nuxeo.ecm.platform.ui.web.auth.plugins,\n org.nuxeo.ecm.platform.ui.web.auth.service,\n org.nuxeo.ecm.platform.ui.web.cache,\n org.nuxeo.ecm.platform.ui.web.download,\n org.nuxeo.ecm.platform.web.common.ajax,\n org.nuxeo.ecm.platform.web.common.ajax.service,\n org.nuxeo.ecm.platform.web.common.exceptionhandling,\n org.nuxeo.ecm.platform.web.common.exceptionhandling.descriptor,\n org.nuxeo.ecm.platform.web.common.exceptionhandling.service,\n org.nuxeo.ecm.platform.web.common.requestcontroller.filter,\n org.nuxeo.ecm.platform.web.common.requestcontroller.service,\n org.nuxeo.ecm.platform.web.common.resources,\n org.nuxeo.ecm.platform.web.common.vh\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Name: Nuxeo ECM Web Common framework\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Version: 0.0.0.SNAPSHOT\nBundle-ManifestVersion: 2\nNuxeo-Component: OSGI-INF/authentication-framework.xml,\n OSGI-INF/authentication-contrib.xml,\n OSGI-INF/web-request-controller-framework.xml,\n OSGI-INF/web-request-controller-contrib.xml,\n OSGI-INF/exception-handling-service.xml,\n OSGI-INF/exception-handling-contrib.xml,\n OSGI-INF/core-management-contrib.xml,\n OSGI-INF/locale-framework.xml,\n OSGI-INF/locale-default-contrib.xml,\n OSGI-INF/login-screen-config.xml,\n OSGI-INF/cors-configuration.xml\nBundle-SymbolicName: org.nuxeo.ecm.platform.web.common;singleton:=true\nImport-Package: javax.faces.context,\n javax.security.auth,\n javax.security.auth.callback,\n javax.security.auth.login,\n javax.servlet,\n javax.servlet.http,\n org.apache.commons.httpclient,\n org.apache.commons.httpclient.methods,\n org.apache.commons.httpclient.params,\n org.apache.commons.logging,\n org.nuxeo.common.utils,\n org.nuxeo.common.utils.i18n,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.blobholder,\n org.nuxeo.ecm.core.api.repository,\n org.nuxeo.ecm.core.event,\n org.nuxeo.ecm.core.event.impl,\n org.nuxeo.ecm.core.management.api,\n org.nuxeo.ecm.core.utils,\n org.nuxeo.ecm.platform.api.login,\n org.nuxeo.ecm.platform.login,\n org.nuxeo.ecm.platform.usermanager,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model,\n org.nuxeo.runtime.services.event,\n org.nuxeo.runtime.transaction\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-platform-web-common","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform","name":"org.nuxeo.ecm.platform","liveDoc":{},"subGroups":[{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.directory","name":"org.nuxeo.ecm.directory","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.directory","org.nuxeo.ecm.directory.api","org.nuxeo.ecm.directory.sql","org.nuxeo.ecm.directory.types.contrib"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.query","name":"org.nuxeo.ecm.platform.query","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.query.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.usermanager","name":"org.nuxeo.ecm.platform.usermanager","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.usermanager","org.nuxeo.ecm.platform.usermanager.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]}],"bundleIds":["org.nuxeo.apidoc.core","org.nuxeo.apidoc.repo","org.nuxeo.directory.mongodb","org.nuxeo.ecm.actions","org.nuxeo.ecm.platform.api","org.nuxeo.ecm.platform.commandline.executor","org.nuxeo.ecm.platform.content.template","org.nuxeo.ecm.platform.dublincore","org.nuxeo.ecm.platform.forms.layout.export","org.nuxeo.ecm.platform.login","org.nuxeo.ecm.platform.web.common","org.nuxeo.osgi.app"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-web-common/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingContrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingContrib--errorhandlers","extensionPoint":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService--errorhandlers","documentation":null,"xml":"<extension point=\"errorhandlers\" target=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService\">\n    <errorHandlers bundle=\"messages\" defaultpage=\"/nuxeo_error.jsp\" loggerName=\"nuxeo-error-log\">\n      <handlers>\n        <handler code=\"404\" error=\".*DocumentNotFoundException\" message=\"Error.Document.Not.Found\"/>\n        <handler code=\"403\" error=\".*SecurityException\" message=\"Error.Insuffisant.Rights\" page=\"/nuxeo_error_security.jsp\"/>\n        <handler code=\"500\" error=\".*\" message=\"Error.Unknown\"/>\n      </handlers>\n    </errorHandlers>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService","rawName":"service:org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingContrib/Contributions/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingContrib--errorhandlers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;errorHandlers bundle=&quot;messages&quot; defaultpage=&quot;/nuxeo_error.jsp&quot; loggerName=&quot;nuxeo-error-log&quot;&gt;\n      &lt;handlers&gt;\n        &lt;handler code=&quot;404&quot; error=&quot;.*DocumentNotFoundException&quot; message=&quot;Error.Document.Not.Found&quot;/&gt;\n        &lt;handler code=&quot;403&quot; error=&quot;.*SecurityException&quot; message=&quot;Error.Insuffisant.Rights&quot; page=&quot;/nuxeo_error_security.jsp&quot;/&gt;\n        &lt;handler code=&quot;500&quot; error=&quot;.*&quot; message=&quot;Error.Unknown&quot;/&gt;\n      &lt;/handlers&gt;\n    &lt;/errorHandlers&gt;","id":null,"label":"errorHandlers","rawXml":"<errorHandlers bundle=\"messages\" defaultpage=\"/nuxeo_error.jsp\" loggerName=\"nuxeo-error-log\">\n      <handlers>\n        <handler code=\"404\" error=\".*DocumentNotFoundException\" message=\"Error.Document.Not.Found\"/>\n        <handler code=\"403\" error=\".*SecurityException\" message=\"Error.Insuffisant.Rights\" page=\"/nuxeo_error_security.jsp\"/>\n        <handler code=\"500\" error=\".*\" message=\"Error.Unknown\"/>\n      </handlers>\n    </errorHandlers>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingContrib--requestdump","extensionPoint":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService--requestdump","documentation":null,"xml":"<extension point=\"requestdump\" target=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService\">\n    <requestdump class=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.DefaultRequestDumper\">\n      <!-- you can add names of attributes you don't want to see listed in the request dump.\n        <notListed>\n        <attribute>javax.servlet.forward.request_uri</attribute>\n        </notListed>\n      -->\n    </requestdump>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService","rawName":"service:org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingContrib/Contributions/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingContrib--requestdump","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;requestdump class=&quot;org.nuxeo.ecm.platform.web.common.exceptionhandling.service.DefaultRequestDumper&quot;&gt;\n      &lt;!-- you can add names of attributes you don't want to see listed in the request dump.\n        &lt;notListed&gt;\n        &lt;attribute&gt;javax.servlet.forward.request_uri&lt;/attribute&gt;\n        &lt;/notListed&gt;\n      --&gt;\n    &lt;/requestdump&gt;","id":null,"label":"requestdump","rawXml":"<requestdump class=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.DefaultRequestDumper\">\n      <!-- you can add names of attributes you don't want to see listed in the request dump.\n        <notListed>\n        <attribute>javax.servlet.forward.request_uri</attribute>\n        </notListed>\n      -->\n    </requestdump>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingContrib--listener","extensionPoint":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService--listener","documentation":null,"xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService\">\n    <listener class=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.NullExceptionHandlingListener\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService","rawName":"service:org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingContrib/Contributions/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingContrib--listener","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;listener class=&quot;org.nuxeo.ecm.platform.web.common.exceptionhandling.service.NullExceptionHandlingListener&quot;/&gt;","id":null,"label":"listener","rawXml":"<listener class=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.NullExceptionHandlingListener\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingContrib--exceptionhandler","extensionPoint":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService--exceptionhandler","documentation":null,"xml":"<extension point=\"exceptionhandler\" target=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService\">\n    <exceptionHandler class=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.DefaultNuxeoExceptionHandler\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService","rawName":"service:org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingContrib/Contributions/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingContrib--exceptionhandler","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;exceptionHandler class=&quot;org.nuxeo.ecm.platform.web.common.exceptionhandling.DefaultNuxeoExceptionHandler&quot;/&gt;","id":null,"label":"exceptionHandler","rawXml":"<exceptionHandler class=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.DefaultNuxeoExceptionHandler\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingContrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-web-common/bin/main/OSGI-INF/exception-handling-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component\n  name=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingContrib\">\n\n  <extension\n    target=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService\"\n    point=\"errorhandlers\">\n    <errorHandlers bundle=\"messages\" loggerName=\"nuxeo-error-log\"\n      defaultpage=\"/nuxeo_error.jsp\">\n      <handlers>\n        <handler error=\".*DocumentNotFoundException\" code=\"404\"\n          message=\"Error.Document.Not.Found\" />\n        <handler error=\".*SecurityException\" code=\"403\"\n          message=\"Error.Insuffisant.Rights\" page=\"/nuxeo_error_security.jsp\" />\n        <handler error=\".*\" code=\"500\"\n          message=\"Error.Unknown\" />\n      </handlers>\n    </errorHandlers>\n  </extension>\n\n  <extension\n    target=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService\"\n    point=\"requestdump\">\n    <requestdump\n      class=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.DefaultRequestDumper\">\n      <!-- you can add names of attributes you don't want to see listed in the request dump.\n        <notListed>\n        <attribute>javax.servlet.forward.request_uri</attribute>\n        </notListed>\n      -->\n    </requestdump>\n  </extension>\n\n  <extension\n    target=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService\"\n    point=\"listener\">\n    <listener\n      class=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.NullExceptionHandlingListener\" />\n  </extension>\n\n  <extension\n    target=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService\"\n    point=\"exceptionhandler\">\n    <exceptionHandler class=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.DefaultNuxeoExceptionHandler\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.ui.web.login","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.ui.web.login--loginScreen","extensionPoint":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--loginScreen","documentation":null,"xml":"<extension point=\"loginScreen\" target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\">\n    <loginScreenConfig>\n      <defaultLocale>en</defaultLocale>\n      <supportedLocales>\n        <locale>en_GB</locale>\n        <locale>en_US</locale>\n      </supportedLocales>\n    </loginScreenConfig>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService","rawName":"service:org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.login/Contributions/org.nuxeo.ecm.platform.ui.web.login--loginScreen","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;loginScreenConfig&gt;\n      &lt;defaultLocale&gt;en&lt;/defaultLocale&gt;\n      &lt;supportedLocales&gt;\n        &lt;locale&gt;en_GB&lt;/locale&gt;\n        &lt;locale&gt;en_US&lt;/locale&gt;\n      &lt;/supportedLocales&gt;\n    &lt;/loginScreenConfig&gt;","id":null,"label":"loginScreenConfig","rawXml":"<loginScreenConfig>\n      <defaultLocale>en</defaultLocale>\n      <supportedLocales>\n        <locale>en_GB</locale>\n        <locale>en_US</locale>\n      </supportedLocales>\n    </loginScreenConfig>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.login","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-web-common/bin/main/OSGI-INF/login-screen-config.xml","xmlFileContent":"<component name=\"org.nuxeo.ecm.platform.ui.web.login\" version=\"1.0\">\n  <extension\n    target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\"\n    point=\"loginScreen\">\n    <loginScreenConfig>\n      <defaultLocale>en</defaultLocale>\n      <supportedLocales>\n        <locale>en_GB</locale>\n        <locale>en_US</locale>\n      </supportedLocales>\n    </loginScreenConfig>\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService","extensionPoints":[{"@type":"NXExtensionPoint","name":"responseHeaders","descriptors":["org.nuxeo.ecm.platform.web.common.requestcontroller.service.NuxeoHeaderDescriptor"],"documentation":"\n      Define headers to apply to the HTTP response.\n\n      -header\n      - name: name of the header.\n      - enabled: flag to enable/disable a header (default value is true)\n\n      Example of a response header Registration:\n\n      <code>\n    <header enabled=\"true\" name=\"WWW-Authenticate\">basic</header>\n</code>\n\n      @author Thierry Martins (tm@nuxeo.com)\n      @since 6.0\n    \n","id":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService--responseHeaders","version":"11.1-SNAPSHOT","label":"responseHeaders (org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService/ExtensionPoints/org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService--responseHeaders","documentationHtml":"<p/>\nDefine headers to apply to the HTTP response.\n<p/>\n-header\n- name: name of the header.\n- enabled: flag to enable/disable a header (default value is true)\n<p/>\nExample of a response header Registration:\n<p/>\n<pre><code>    &lt;header enabled=\"true\" name=\"WWW-Authenticate\">basic&lt;/header>\n</code></pre><p/>\n@since 6.0\n<p/>","componentId":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService"},{"@type":"NXExtensionPoint","name":"filterConfig","descriptors":["org.nuxeo.ecm.platform.web.common.requestcontroller.service.FilterConfigDescriptor"],"documentation":"\n      Define a new filterConfig.\n\n      -filterConfig\n        - name: name of the Filter.\n        - transactional: use transaction.\n        - synchonize: is synchronized\n        - cached: if true, add cache-control to header\n        - cacheTime: cache duration.\n        - private: if true, cache is private, public if false.\n\n      -pattern: url pattern to match\n\n      Example of a filterConfig Registration:\n\n      <code>\n    <filterConfig cached=\"true\" cachetime=\"3600\" name=\"filterName\"\n        private=\"true\" synchonize=\"true\" transactional=\"true\">\n        <pattern>/nuxeo/urlPattern/.*</pattern>\n    </filterConfig>\n</code>\n\n    @author Thierry Delprat (td@nuxeo.com)\n  \n","id":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService--filterConfig","version":"11.1-SNAPSHOT","label":"filterConfig (org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService/ExtensionPoints/org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService--filterConfig","documentationHtml":"<p/>\nDefine a new filterConfig.\n<p/>\n-filterConfig\n- name: name of the Filter.\n- transactional: use transaction.\n- synchonize: is synchronized\n- cached: if true, add cache-control to header\n- cacheTime: cache duration.\n- private: if true, cache is private, public if false.\n<p/>\n-pattern: url pattern to match\n<p/>\nExample of a filterConfig Registration:\n<p/>\n<pre><code>    &lt;filterConfig cached=\"true\" cachetime=\"3600\" name=\"filterName\"\n        private=\"true\" synchonize=\"true\" transactional=\"true\">\n        &lt;pattern>/nuxeo/urlPattern/.*&lt;/pattern>\n    &lt;/filterConfig>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService"},{"@type":"NXExtensionPoint","name":"corsConfig","descriptors":["org.nuxeo.ecm.platform.web.common.requestcontroller.service.NuxeoCorsFilterDescriptor"],"documentation":"\n      Add a CORS compliant url's pattern\n\n      Mandatory:\n       - name: name of the config\n       - pattern: url pattern to match\n\n      Optionnal:\n       - allowGenericHttpRequests: If false, only valid and accepted CORS\n         requests that be allowed (strict CORS filtering).\n       - allowOrigin: Whitespace-separated list of origins that the CORS\n         filter must allow.\n       - allowSubdomains: If true the CORS filter will allow requests from any\n         origin which is a subdomain origin of the allowed origins.\n       - supportedMethods: List of the supported HTTP methods.\n       - supportedHeaders: The names of the supported author request headers.\n       - exposedHeaders: List of the response headers other than simple\n         response headers that the browser should expose to the author of the\n         cross-domain request through the XMLHttpRequest.getResponseHeader()\n         method.\n       - supportsCredentials: Indicates whether user credentials, such as\n         cookies, HTTP authentication or client-side certificates, are\n         supported.\n       - maxAge: Indicates how long the results of a preflight request\n         can be cached by the web browser, in seconds.\n\n      Some samples:\n       - Minimal contribution:\n      <code>\n    <corsConfig name=\"minimal\">\n        <pattern>/nuxeo/site/.*</pattern>\n    </corsConfig>\n</code>\n\n\n       - Contribution with default values:\n      <code>\n    <corsConfig allowGenericHttpRequests=\"true\" allowOrigin=\"*\"\n        allowSubdomains=\"false\" exposedHeaders=\"\" maxAge=\"-1\"\n        name=\"defaults\" supportedHeaders=\"*\"\n        supportedMethods=\"GET, POST, HEAD, OPTIONS\" supportsCredentials=\"true\">\n        <pattern>/nuxeo/site/.*</pattern>\n    </corsConfig>\n</code>\n\n\n       - Other dummy contribution:\n      <code>\n    <corsConfig allowGenericHttpRequests=\"true\"\n        allowOrigin=\"http://example.com http://example.com:8080\"\n        allowSubdomains=\"true\" exposedHeaders=\"X-Custom-1, X-Custom-2\"\n        maxAge=\"3600\" name=\"dummy\"\n        supportedHeaders=\"Content-Type, X-Requested-With\"\n        supportedMethods=\"GET\" supportsCredentials=\"false\">\n        <pattern>/nuxeo/site/.*</pattern>\n    </corsConfig>\n</code>\n\n\n      @since 5.7.2\n    \n","id":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService--corsConfig","version":"11.1-SNAPSHOT","label":"corsConfig (org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService/ExtensionPoints/org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService--corsConfig","documentationHtml":"<p/>\nAdd a CORS compliant url's pattern\n<p/>\nMandatory:\n- name: name of the config\n- pattern: url pattern to match\n<p/>\nOptionnal:\n- allowGenericHttpRequests: If false, only valid and accepted CORS\nrequests that be allowed (strict CORS filtering).\n- allowOrigin: Whitespace-separated list of origins that the CORS\nfilter must allow.\n- allowSubdomains: If true the CORS filter will allow requests from any\norigin which is a subdomain origin of the allowed origins.\n- supportedMethods: List of the supported HTTP methods.\n- supportedHeaders: The names of the supported author request headers.\n- exposedHeaders: List of the response headers other than simple\nresponse headers that the browser should expose to the author of the\ncross-domain request through the XMLHttpRequest.getResponseHeader()\nmethod.\n- supportsCredentials: Indicates whether user credentials, such as\ncookies, HTTP authentication or client-side certificates, are\nsupported.\n- maxAge: Indicates how long the results of a preflight request\ncan be cached by the web browser, in seconds.\n<p/>\nSome samples:\n- Minimal contribution:\n<p/><pre><code>    &lt;corsConfig name=\"minimal\">\n        &lt;pattern>/nuxeo/site/.*&lt;/pattern>\n    &lt;/corsConfig>\n</code></pre><p/>\n- Contribution with default values:\n<p/><pre><code>    &lt;corsConfig allowGenericHttpRequests=\"true\" allowOrigin=\"*\"\n        allowSubdomains=\"false\" exposedHeaders=\"\" maxAge=\"-1\"\n        name=\"defaults\" supportedHeaders=\"*\"\n        supportedMethods=\"GET, POST, HEAD, OPTIONS\" supportsCredentials=\"true\">\n        &lt;pattern>/nuxeo/site/.*&lt;/pattern>\n    &lt;/corsConfig>\n</code></pre><p/>\n- Other dummy contribution:\n<p/><pre><code>    &lt;corsConfig allowGenericHttpRequests=\"true\"\n        allowOrigin=\"http://example.com http://example.com:8080\"\n        allowSubdomains=\"true\" exposedHeaders=\"X-Custom-1, X-Custom-2\"\n        maxAge=\"3600\" name=\"dummy\"\n        supportedHeaders=\"Content-Type, X-Requested-With\"\n        supportedMethods=\"GET\" supportsCredentials=\"false\">\n        &lt;pattern>/nuxeo/site/.*&lt;/pattern>\n    &lt;/corsConfig>\n</code></pre><p/>\n@since 5.7.2\n<p/>","componentId":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService/Services/org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerManager","componentId":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService","documentation":"\n    The Request Controller service provides an extension point to apply specific configuration\n    to httpRequest mapping a defined URL pattern. It's possible to handle synchronization, transaction or cache\n    configuration.\n    @author Thierry Delprat (td@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService","documentationHtml":"<p/>\nThe Request Controller service provides an extension point to apply specific configuration\nto httpRequest mapping a defined URL pattern. It's possible to handle synchronization, transaction or cache\nconfiguration.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-web-common/bin/main/OSGI-INF/web-request-controller-framework.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService\">\n  <implementation\n          class=\"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService\" />\n  <documentation>\n    The Request Controller service provides an extension point to apply specific configuration\n    to httpRequest mapping a defined URL pattern. It's possible to handle synchronization, transaction or cache\n    configuration.\n    @author Thierry Delprat (td@nuxeo.com)\n  </documentation>\n\n  <service>\n    <provide\n      interface=\"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerManager\" />\n  </service>\n\n  <extension-point name=\"filterConfig\">\n  <documentation>\n      Define a new filterConfig.\n\n      -filterConfig\n        - name: name of the Filter.\n        - transactional: use transaction.\n        - synchonize: is synchronized\n        - cached: if true, add cache-control to header\n        - cacheTime: cache duration.\n        - private: if true, cache is private, public if false.\n\n      -pattern: url pattern to match\n\n      Example of a filterConfig Registration:\n\n      <code>\n\t\t    <filterConfig name=\"filterName\" transactional=\"true\" synchonize=\"true\"\n\t\t     cached=\"true\" private=\"true\" cachetime=\"3600\">\n\t\t      <pattern>/nuxeo/urlPattern/.*</pattern>\n\t\t    </filterConfig>\n      </code>\n    @author Thierry Delprat (td@nuxeo.com)\n  </documentation>\n    <object\n      class=\"org.nuxeo.ecm.platform.web.common.requestcontroller.service.FilterConfigDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"corsConfig\">\n    <documentation>\n      Add a CORS compliant url's pattern\n\n      Mandatory:\n       - name: name of the config\n       - pattern: url pattern to match\n\n      Optionnal:\n       - allowGenericHttpRequests: If false, only valid and accepted CORS\n         requests that be allowed (strict CORS filtering).\n       - allowOrigin: Whitespace-separated list of origins that the CORS\n         filter must allow.\n       - allowSubdomains: If true the CORS filter will allow requests from any\n         origin which is a subdomain origin of the allowed origins.\n       - supportedMethods: List of the supported HTTP methods.\n       - supportedHeaders: The names of the supported author request headers.\n       - exposedHeaders: List of the response headers other than simple\n         response headers that the browser should expose to the author of the\n         cross-domain request through the XMLHttpRequest.getResponseHeader()\n         method.\n       - supportsCredentials: Indicates whether user credentials, such as\n         cookies, HTTP authentication or client-side certificates, are\n         supported.\n       - maxAge: Indicates how long the results of a preflight request\n         can be cached by the web browser, in seconds.\n\n      Some samples:\n       - Minimal contribution:\n      <code>\n        <corsConfig name=\"minimal\">\n          <pattern>/nuxeo/site/.*</pattern>\n        </corsConfig>\n      </code>\n\n       - Contribution with default values:\n      <code>\n        <corsConfig name=\"defaults\" allowGenericHttpRequests=\"true\"\n          allowOrigin=\"*\" allowSubdomains=\"false\" supportedMethods=\"GET, POST, HEAD, OPTIONS\"\n          supportedHeaders=\"*\" exposedHeaders=\"\"\n          supportsCredentials=\"true\" maxAge=\"-1\">\n          <pattern>/nuxeo/site/.*</pattern>\n        </corsConfig>\n      </code>\n\n       - Other dummy contribution:\n      <code>\n        <corsConfig name=\"dummy\" allowGenericHttpRequests=\"true\"\n          allowOrigin=\"http://example.com http://example.com:8080\"\n          allowSubdomains=\"true\" supportedMethods=\"GET\"\n          supportedHeaders=\"Content-Type, X-Requested-With\"\n          exposedHeaders=\"X-Custom-1, X-Custom-2\"\n          supportsCredentials=\"false\" maxAge=\"3600\">\n          <pattern>/nuxeo/site/.*</pattern>\n        </corsConfig>\n      </code>\n\n      @since 5.7.2\n    </documentation>\n    <object\n      class=\"org.nuxeo.ecm.platform.web.common.requestcontroller.service.NuxeoCorsFilterDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"responseHeaders\">\n    <documentation>\n      Define headers to apply to the HTTP response.\n\n      -header\n      - name: name of the header.\n      - enabled: flag to enable/disable a header (default value is true)\n\n      Example of a response header Registration:\n\n      <code>\n        <header name=\"WWW-Authenticate\" enabled=\"true\">basic</header>\n      </code>\n      @author Thierry Martins (tm@nuxeo.com)\n      @since 6.0\n    </documentation>\n    <object\n      class=\"org.nuxeo.ecm.platform.web.common.requestcontroller.service.NuxeoHeaderDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.web.common.locale.default.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.web.common.locale.default.contrib--providers","extensionPoint":"org.nuxeo.ecm.platform.web.common.locale--providers","documentation":null,"xml":"<extension point=\"providers\" target=\"org.nuxeo.ecm.platform.web.common.locale\">\n    <provider class=\"org.nuxeo.ecm.platform.web.common.locale.DefaultLocaleProvider\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.web.common.locale","rawName":"service:org.nuxeo.ecm.platform.web.common.locale"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.locale.default.contrib/Contributions/org.nuxeo.ecm.platform.web.common.locale.default.contrib--providers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;provider class=&quot;org.nuxeo.ecm.platform.web.common.locale.DefaultLocaleProvider&quot;/&gt;","id":null,"label":"provider","rawXml":"<provider class=\"org.nuxeo.ecm.platform.web.common.locale.DefaultLocaleProvider\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.locale.default.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-web-common/bin/main/OSGI-INF/locale-default-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.web.common.locale.default.contrib\">\n  <extension target=\"org.nuxeo.ecm.platform.web.common.locale\" point=\"providers\">\n    <provider class=\"org.nuxeo.ecm.platform.web.common.locale.DefaultLocaleProvider\" />\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService","extensionPoints":[{"@type":"NXExtensionPoint","name":"sessionManager","descriptors":["org.nuxeo.ecm.platform.ui.web.auth.service.SessionManagerDescriptor"],"documentation":"\n      Contribute a SessionManager to handle Session and url manipulation\n\n      @author Thierry Delprat (td@nuxeo.com)\n    \n","id":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--sessionManager","version":"11.1-SNAPSHOT","label":"sessionManager (org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService/ExtensionPoints/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--sessionManager","documentationHtml":"<p/>\nContribute a SessionManager to handle Session and url manipulation\n<p/>","componentId":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"},{"@type":"NXExtensionPoint","name":"authenticators","descriptors":["org.nuxeo.ecm.platform.ui.web.auth.service.AuthenticationPluginDescriptor"],"documentation":"\n      Registry for Authentication Plugins.\n      Authentication plugins are responsible for :\n      - generating the authentication prompt (if needed)\n      - get the user identity\n      - checking the user credentials if they're not login/password based\n\n      Authentication plugin must implement the NuxeoAuthenticationPlugin interface.\n\n      Default implementation of Authentication Plugins are :\n      - Form based authentication\n      - HTTP Basic Authentication\n\n      @author Thierry Delprat (td@nuxeo.com)\n    \n","id":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--authenticators","version":"11.1-SNAPSHOT","label":"authenticators (org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService/ExtensionPoints/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--authenticators","documentationHtml":"<p/>\nRegistry for Authentication Plugins.\nAuthentication plugins are responsible for :\n- generating the authentication prompt (if needed)\n- get the user identity\n- checking the user credentials if they're not login/password based\n<p/>\nAuthentication plugin must implement the NuxeoAuthenticationPlugin interface.\n<p/>\nDefault implementation of Authentication Plugins are :\n- Form based authentication\n- HTTP Basic Authentication\n<p/>","componentId":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"},{"@type":"NXExtensionPoint","name":"specificChains","descriptors":["org.nuxeo.ecm.platform.ui.web.auth.service.SpecificAuthChainDescriptor"],"documentation":"\n      Contribute specific authentication chain for specific urls or request headers.\n      This is usefull to be able to change the authentication plugins used for a dedicated protocol (WSS, WebDav ...)\n\n      @author Thierry Delprat (td@nuxeo.com)\n    \n","id":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--specificChains","version":"11.1-SNAPSHOT","label":"specificChains (org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService/ExtensionPoints/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--specificChains","documentationHtml":"<p/>\nContribute specific authentication chain for specific urls or request headers.\nThis is usefull to be able to change the authentication plugins used for a dedicated protocol (WSS, WebDav ...)\n<p/>","componentId":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"},{"@type":"NXExtensionPoint","name":"openUrl","descriptors":["org.nuxeo.ecm.platform.ui.web.auth.service.OpenUrlDescriptor"],"documentation":"\n      Contribute pattern to define urls that can be accessed without authentication\n\n      @author Thierry Delprat (td@nuxeo.com)\n    \n","id":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--openUrl","version":"11.1-SNAPSHOT","label":"openUrl (org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService/ExtensionPoints/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--openUrl","documentationHtml":"<p/>\nContribute pattern to define urls that can be accessed without authentication\n<p/>","componentId":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"},{"@type":"NXExtensionPoint","name":"startURL","descriptors":["org.nuxeo.ecm.platform.ui.web.auth.service.StartURLPatternDescriptor"],"documentation":"\n      Defines a list of URL prefix that is considered safe to start a new session.\n      Typically, in default webapp you will have :\n      - GET url patterns\n      - nxstartup.faces\n      - RSS/ATOM get URL\n\n      @author Thierry Delprat (td@nuxeo.com)\n    \n","id":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--startURL","version":"11.1-SNAPSHOT","label":"startURL (org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService/ExtensionPoints/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--startURL","documentationHtml":"<p/>\nDefines a list of URL prefix that is considered safe to start a new session.\nTypically, in default webapp you will have :\n- GET url patterns\n- nxstartup.faces\n- RSS/ATOM get URL\n<p/>","componentId":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"},{"@type":"NXExtensionPoint","name":"loginScreen","descriptors":["org.nuxeo.ecm.platform.ui.web.auth.service.LoginScreenConfig"],"documentation":"\n      Configure the Login Screen : header, footer, styles, openid providers ...\n      <p>\n        The variable /nuxeo can be used to avoid\n        hardcoding the default application path (/nuxeo)\n      </p>\n\n\n      @author Thierry Delprat (td@nuxeo.com)\n    \n","id":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--loginScreen","version":"11.1-SNAPSHOT","label":"loginScreen (org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService/ExtensionPoints/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--loginScreen","documentationHtml":"<p/>\nConfigure the Login Screen : header, footer, styles, openid providers ...\n<p>\nThe variable /nuxeo can be used to avoid\nhardcoding the default application path (/nuxeo)\n</p>\n<p/>","componentId":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"},{"@type":"NXExtensionPoint","name":"chain","descriptors":["org.nuxeo.ecm.platform.ui.web.auth.service.AuthenticationChainDescriptor"],"documentation":"\n      Defines the chain of AuthenticationPlugin to use when trying to authenticate.\n      = The authentication Plugins are tried in the chain order.\n\n      @author Thierry Delprat (td@nuxeo.com)\n    \n","id":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--chain","version":"11.1-SNAPSHOT","label":"chain (org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService/ExtensionPoints/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--chain","documentationHtml":"<p/>\nDefines the chain of AuthenticationPlugin to use when trying to authenticate.\n= The authentication Plugins are tried in the chain order.\n<p/>","componentId":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService/Services/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService","componentId":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"}],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--implementation","extensionPoint":"org.nuxeo.runtime.LoginAsComponent--implementation","documentation":null,"xml":"<extension point=\"implementation\" target=\"org.nuxeo.runtime.LoginAsComponent\">\n    <implementation class=\"org.nuxeo.ecm.platform.ui.web.auth.service.LoginAsImpl\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.LoginAsComponent","rawName":"service:org.nuxeo.runtime.LoginAsComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService/Contributions/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--implementation","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;implementation class=&quot;org.nuxeo.ecm.platform.ui.web.auth.service.LoginAsImpl&quot;/&gt;","id":null,"label":"implementation","rawXml":"<implementation class=\"org.nuxeo.ecm.platform.ui.web.auth.service.LoginAsImpl\"/>"}]}],"componentClass":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService","documentation":"\n    The pluggable authentication service defines a plugin API for the Nuxeo Authentication Filter.\n    This service let you :\n    - define new Authentication Plugins\n    - define authentication chains\n    @author Thierry Delprat (td@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService","documentationHtml":"<p/>\nThe pluggable authentication service defines a plugin API for the Nuxeo Authentication Filter.\nThis service let you :\n- define new Authentication Plugins\n- define authentication chains\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-web-common/bin/main/OSGI-INF/authentication-framework.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\">\n  <implementation\n          class=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\" />\n  </service>\n\n  <documentation>\n    The pluggable authentication service defines a plugin API for the Nuxeo Authentication Filter.\n    This service let you :\n    - define new Authentication Plugins\n    - define authentication chains\n    @author Thierry Delprat (td@nuxeo.com)\n  </documentation>\n\n  <extension target=\"org.nuxeo.runtime.LoginAsComponent\" point=\"implementation\">\n    <implementation class=\"org.nuxeo.ecm.platform.ui.web.auth.service.LoginAsImpl\" />\n  </extension>\n\n  <extension-point name=\"authenticators\">\n    <documentation>\n      Registry for Authentication Plugins.\n      Authentication plugins are responsible for :\n      - generating the authentication prompt (if needed)\n      - get the user identity\n      - checking the user credentials if they're not login/password based\n\n      Authentication plugin must implement the NuxeoAuthenticationPlugin interface.\n\n      Default implementation of Authentication Plugins are :\n      - Form based authentication\n      - HTTP Basic Authentication\n\n      @author Thierry Delprat (td@nuxeo.com)\n    </documentation>\n\n    <object\n            class=\"org.nuxeo.ecm.platform.ui.web.auth.service.AuthenticationPluginDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"chain\">\n    <documentation>\n      Defines the chain of AuthenticationPlugin to use when trying to authenticate.\n      = The authentication Plugins are tried in the chain order.\n\n      @author Thierry Delprat (td@nuxeo.com)\n    </documentation>\n    <object\n            class=\"org.nuxeo.ecm.platform.ui.web.auth.service.AuthenticationChainDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"startURL\">\n    <documentation>\n      Defines a list of URL prefix that is considered safe to start a new session.\n      Typically, in default webapp you will have :\n      - GET url patterns\n      - nxstartup.faces\n      - RSS/ATOM get URL\n\n      @author Thierry Delprat (td@nuxeo.com)\n    </documentation>\n    <object\n            class=\"org.nuxeo.ecm.platform.ui.web.auth.service.StartURLPatternDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"sessionManager\">\n    <documentation>\n      Contribute a SessionManager to handle Session and url manipulation\n\n      @author Thierry Delprat (td@nuxeo.com)\n    </documentation>\n    <object\n            class=\"org.nuxeo.ecm.platform.ui.web.auth.service.SessionManagerDescriptor\" />\n  </extension-point>\n\n  <extension-point name=\"openUrl\">\n    <documentation>\n      Contribute pattern to define urls that can be accessed without authentication\n\n      @author Thierry Delprat (td@nuxeo.com)\n    </documentation>\n    <object\n            class=\"org.nuxeo.ecm.platform.ui.web.auth.service.OpenUrlDescriptor\" />\n  </extension-point>\n\n\n  <extension-point name=\"specificChains\">\n    <documentation>\n      Contribute specific authentication chain for specific urls or request headers.\n      This is usefull to be able to change the authentication plugins used for a dedicated protocol (WSS, WebDav ...)\n\n      @author Thierry Delprat (td@nuxeo.com)\n    </documentation>\n    <object\n            class=\"org.nuxeo.ecm.platform.ui.web.auth.service.SpecificAuthChainDescriptor\" />\n  </extension-point>\n\n\n  <extension-point name=\"loginScreen\">\n\n    <documentation>\n      Configure the Login Screen : header, footer, styles, openid providers ...\n      <p>\n        The variable ${org.nuxeo.ecm.contextPath} can be used to avoid\n        hardcoding the default application path (/nuxeo)\n      </p>\n\n      @author Thierry Delprat (td@nuxeo.com)\n    </documentation>\n    <object class=\"org.nuxeo.ecm.platform.ui.web.auth.service.LoginScreenConfig\" />\n\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService","extensionPoints":[{"@type":"NXExtensionPoint","name":"exceptionhandler","descriptors":["org.nuxeo.ecm.platform.web.common.exceptionhandling.descriptor.ExceptionHandlerDescriptor"],"documentation":"\n\t\t\tDefine an exceptionHandler that manages exceptions\n\t\t\tTo override just contribute again on the extension point,\n\t\t\tparameters will be keep. Default contributed is DefaultNuxeoExceptionHandler.\n\t\t\n","id":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService--exceptionhandler","version":"11.1-SNAPSHOT","label":"exceptionhandler (org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService/ExtensionPoints/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService--exceptionhandler","documentationHtml":"<p/>\nDefine an exceptionHandler that manages exceptions\nTo override just contribute again on the extension point,\nparameters will be keep. Default contributed is DefaultNuxeoExceptionHandler.\n<p/>","componentId":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService"},{"@type":"NXExtensionPoint","name":"errorhandlers","descriptors":["org.nuxeo.ecm.platform.web.common.exceptionhandling.descriptor.ErrorHandlersDescriptor"],"documentation":"\n\t\t\tDefine a set key/exception to be used to output error\n\t\t\tmessage\n\t\t\n","id":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService--errorhandlers","version":"11.1-SNAPSHOT","label":"errorhandlers (org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService/ExtensionPoints/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService--errorhandlers","documentationHtml":"<p/>\nDefine a set key/exception to be used to output error\nmessage\n<p/>","componentId":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService"},{"@type":"NXExtensionPoint","name":"requestdump","descriptors":["org.nuxeo.ecm.platform.web.common.exceptionhandling.descriptor.RequestDumpDescriptor"],"documentation":"\n\t\t\tDefine a class that will take a request and output a\n\t\t\tstring dumping\n\t\t\tinformations.\n\t  \n","id":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService--requestdump","version":"11.1-SNAPSHOT","label":"requestdump (org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService/ExtensionPoints/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService--requestdump","documentationHtml":"<p/>\nDefine a class that will take a request and output a\nstring dumping\ninformations.\n<p/>","componentId":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService"},{"@type":"NXExtensionPoint","name":"listener","descriptors":["org.nuxeo.ecm.platform.web.common.exceptionhandling.descriptor.ListenerDescriptor"],"documentation":"\n\t\t\tDefine a listener to exception handling.\n\t\t\n","id":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService--listener","version":"11.1-SNAPSHOT","label":"listener (org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService/ExtensionPoints/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService--listener","documentationHtml":"<p/>\nDefine a listener to exception handling.\n<p/>","componentId":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService/Services/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService","componentId":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingComponent","documentation":"\n\t\tThe pluggable exception service. All exceptions that\n\t\tbubbles up outside\n\t\tnuxeo are caught by the NuxeoExceptionFilter.\n\t\tThis\n\t\tservice customize the handler that will deal with an exception.\n\t\t@author Alexandre Russel (arussel@nuxeo.com), Benjamin JALON (bjalon@nuxeo.com)\n\t\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService","documentationHtml":"<p/>\nThe pluggable exception service. All exceptions that\nbubbles up outside\nnuxeo are caught by the NuxeoExceptionFilter.\nThis\nservice customize the handler that will deal with an exception.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-web-common/bin/main/OSGI-INF/exception-handling-service.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component\n\tname=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService\">\n\t<service>\n\t\t<provide\n\t\t\tinterface=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingService\" />\n\t</service>\n\t<implementation\n\t\tclass=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.service.ExceptionHandlingComponent\" />\n\t<documentation>\n\t\tThe pluggable exception service. All exceptions that\n\t\tbubbles up outside\n\t\tnuxeo are caught by the NuxeoExceptionFilter.\n\t\tThis\n\t\tservice customize the handler that will deal with an exception.\n\t\t@author Alexandre Russel (arussel@nuxeo.com), Benjamin JALON (bjalon@nuxeo.com)\n\t</documentation>\n\t<extension-point name=\"exceptionhandler\">\n\t\t<documentation>\n\t\t\tDefine an exceptionHandler that manages exceptions\n\t\t\tTo override just contribute again on the extension point,\n\t\t\tparameters will be keep. Default contributed is DefaultNuxeoExceptionHandler.\n\t\t</documentation>\n\t\t<object\n\t\t\tclass=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.descriptor.ExceptionHandlerDescriptor\" />\n\t</extension-point>\n\t<extension-point name=\"errorhandlers\">\n\t\t<documentation>\n\t\t\tDefine a set key/exception to be used to output error\n\t\t\tmessage\n\t\t</documentation>\n\t\t<object\n\t\t\tclass=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.descriptor.ErrorHandlersDescriptor\" />\n\t</extension-point>\n\t<extension-point name=\"requestdump\">\n\t\t<documentation>\n\t\t\tDefine a class that will take a request and output a\n\t\t\tstring dumping\n\t\t\tinformations.\n\t  </documentation>\n\t\t<object\n\t\t\tclass=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.descriptor.RequestDumpDescriptor\" />\n\t</extension-point>\n\t<extension-point name=\"listener\">\n\t\t<documentation>\n\t\t\tDefine a listener to exception handling.\n\t\t</documentation>\n\t\t<object\n\t\t\tclass=\"org.nuxeo.ecm.platform.web.common.exceptionhandling.descriptor.ListenerDescriptor\" />\n\t</extension-point>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.ui.web.auth.defaultConfig","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.ui.web.auth.defaultConfig--authenticators","extensionPoint":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--authenticators","documentation":null,"xml":"<extension point=\"authenticators\" target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\">\n\n    <authenticationPlugin class=\"org.nuxeo.ecm.platform.ui.web.auth.plugins.FormAuthenticator\" enabled=\"true\" name=\"FORM_AUTH\">\n      <needStartingURLSaving>true</needStartingURLSaving>\n      <parameters>\n        <parameter name=\"LoginPage\">login.jsp</parameter>\n        <parameter name=\"UsernameKey\">user_name</parameter>\n        <parameter name=\"PasswordKey\">user_password</parameter>\n      </parameters>\n    </authenticationPlugin>\n\n    <authenticationPlugin class=\"org.nuxeo.ecm.platform.ui.web.auth.plugins.BasicAuthenticator\" enabled=\"true\" name=\"BASIC_AUTH\">\n      <needStartingURLSaving>false</needStartingURLSaving>\n      <stateful>false</stateful>\n      <parameters>\n        <parameter name=\"RealmName\">Nuxeo 5 EP</parameter>\n        <parameter name=\"AutoPrompt\">false</parameter>\n        <parameter name=\"ForcePromptURL_RSS\">\n          getSyndicationDocument.faces\n        </parameter>\n        <parameter name=\"ForcePromptURL_RSS_SEARCH\">\n          getSyndicationSearch.faces\n        </parameter>\n        <parameter name=\"ForcePromptURL_Restlet\">restAPI/</parameter>\n        <parameter name=\"ForcePromptURL_WebEngineRest\">site/api/</parameter>\n        <parameter name=\"ForcePromptURL_WebEngineRSS\">site/sites/@rss/</parameter>\n        <parameter name=\"ForcePromptURL_WebEngineBlogsRSS\">site/blogs/@rss/</parameter>\n      </parameters>\n    </authenticationPlugin>\n\n    <authenticationPlugin class=\"org.nuxeo.ecm.platform.ui.web.auth.plugins.AnonymousAuthenticator\" enabled=\"true\" name=\"ANONYMOUS_AUTH\">\n    </authenticationPlugin>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService","rawName":"service:org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.auth.defaultConfig/Contributions/org.nuxeo.ecm.platform.ui.web.auth.defaultConfig--authenticators","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;authenticationPlugin class=&quot;org.nuxeo.ecm.platform.ui.web.auth.plugins.FormAuthenticator&quot; enabled=&quot;true&quot; name=&quot;FORM_AUTH&quot;&gt;\n      &lt;needStartingURLSaving&gt;true&lt;/needStartingURLSaving&gt;\n      &lt;parameters&gt;\n        &lt;parameter name=&quot;LoginPage&quot;&gt;login.jsp&lt;/parameter&gt;\n        &lt;parameter name=&quot;UsernameKey&quot;&gt;user_name&lt;/parameter&gt;\n        &lt;parameter name=&quot;PasswordKey&quot;&gt;user_password&lt;/parameter&gt;\n      &lt;/parameters&gt;\n    &lt;/authenticationPlugin&gt;","id":"FORM_AUTH","label":"authenticationPlugin FORM_AUTH","rawXml":"<authenticationPlugin class=\"org.nuxeo.ecm.platform.ui.web.auth.plugins.FormAuthenticator\" enabled=\"true\" name=\"FORM_AUTH\">\n      <needStartingURLSaving>true</needStartingURLSaving>\n      <parameters>\n        <parameter name=\"LoginPage\">login.jsp</parameter>\n        <parameter name=\"UsernameKey\">user_name</parameter>\n        <parameter name=\"PasswordKey\">user_password</parameter>\n      </parameters>\n    </authenticationPlugin>"},{"documentation":"","xml":"&lt;authenticationPlugin class=&quot;org.nuxeo.ecm.platform.ui.web.auth.plugins.BasicAuthenticator&quot; enabled=&quot;true&quot; name=&quot;BASIC_AUTH&quot;&gt;\n      &lt;needStartingURLSaving&gt;false&lt;/needStartingURLSaving&gt;\n      &lt;stateful&gt;false&lt;/stateful&gt;\n      &lt;parameters&gt;\n        &lt;parameter name=&quot;RealmName&quot;&gt;Nuxeo 5 EP&lt;/parameter&gt;\n        &lt;parameter name=&quot;AutoPrompt&quot;&gt;false&lt;/parameter&gt;\n        &lt;parameter name=&quot;ForcePromptURL_RSS&quot;&gt;\n          getSyndicationDocument.faces\n        &lt;/parameter&gt;\n        &lt;parameter name=&quot;ForcePromptURL_RSS_SEARCH&quot;&gt;\n          getSyndicationSearch.faces\n        &lt;/parameter&gt;\n        &lt;parameter name=&quot;ForcePromptURL_Restlet&quot;&gt;restAPI/&lt;/parameter&gt;\n        &lt;parameter name=&quot;ForcePromptURL_WebEngineRest&quot;&gt;site/api/&lt;/parameter&gt;\n        &lt;parameter name=&quot;ForcePromptURL_WebEngineRSS&quot;&gt;site/sites/@rss/&lt;/parameter&gt;\n        &lt;parameter name=&quot;ForcePromptURL_WebEngineBlogsRSS&quot;&gt;site/blogs/@rss/&lt;/parameter&gt;\n      &lt;/parameters&gt;\n    &lt;/authenticationPlugin&gt;","id":"BASIC_AUTH","label":"authenticationPlugin BASIC_AUTH","rawXml":"<authenticationPlugin class=\"org.nuxeo.ecm.platform.ui.web.auth.plugins.BasicAuthenticator\" enabled=\"true\" name=\"BASIC_AUTH\">\n      <needStartingURLSaving>false</needStartingURLSaving>\n      <stateful>false</stateful>\n      <parameters>\n        <parameter name=\"RealmName\">Nuxeo 5 EP</parameter>\n        <parameter name=\"AutoPrompt\">false</parameter>\n        <parameter name=\"ForcePromptURL_RSS\">\n          getSyndicationDocument.faces\n        </parameter>\n        <parameter name=\"ForcePromptURL_RSS_SEARCH\">\n          getSyndicationSearch.faces\n        </parameter>\n        <parameter name=\"ForcePromptURL_Restlet\">restAPI/</parameter>\n        <parameter name=\"ForcePromptURL_WebEngineRest\">site/api/</parameter>\n        <parameter name=\"ForcePromptURL_WebEngineRSS\">site/sites/@rss/</parameter>\n        <parameter name=\"ForcePromptURL_WebEngineBlogsRSS\">site/blogs/@rss/</parameter>\n      </parameters>\n    </authenticationPlugin>"},{"documentation":"","xml":"&lt;authenticationPlugin class=&quot;org.nuxeo.ecm.platform.ui.web.auth.plugins.AnonymousAuthenticator&quot; enabled=&quot;true&quot; name=&quot;ANONYMOUS_AUTH&quot;&gt;\n    &lt;/authenticationPlugin&gt;","id":"ANONYMOUS_AUTH","label":"authenticationPlugin ANONYMOUS_AUTH","rawXml":"<authenticationPlugin class=\"org.nuxeo.ecm.platform.ui.web.auth.plugins.AnonymousAuthenticator\" enabled=\"true\" name=\"ANONYMOUS_AUTH\">\n    </authenticationPlugin>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.ui.web.auth.defaultConfig--chain","extensionPoint":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--chain","documentation":null,"xml":"<extension point=\"chain\" target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\">\n\n    <authenticationChain>\n      <plugins>\n        <plugin>BASIC_AUTH</plugin>\n        <plugin>TOKEN_AUTH</plugin>\n        <plugin>OAUTH2_AUTH</plugin>\n        <plugin>JWT_AUTH</plugin>\n        <plugin>FORM_AUTH</plugin>\n        <plugin>ANONYMOUS_AUTH</plugin>\n      </plugins>\n    </authenticationChain>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService","rawName":"service:org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.auth.defaultConfig/Contributions/org.nuxeo.ecm.platform.ui.web.auth.defaultConfig--chain","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;authenticationChain&gt;\n      &lt;plugins&gt;\n        &lt;plugin&gt;BASIC_AUTH&lt;/plugin&gt;\n        &lt;plugin&gt;TOKEN_AUTH&lt;/plugin&gt;\n        &lt;plugin&gt;OAUTH2_AUTH&lt;/plugin&gt;\n        &lt;plugin&gt;JWT_AUTH&lt;/plugin&gt;\n        &lt;plugin&gt;FORM_AUTH&lt;/plugin&gt;\n        &lt;plugin&gt;ANONYMOUS_AUTH&lt;/plugin&gt;\n      &lt;/plugins&gt;\n    &lt;/authenticationChain&gt;","id":null,"label":"authenticationChain","rawXml":"<authenticationChain>\n      <plugins>\n        <plugin>BASIC_AUTH</plugin>\n        <plugin>TOKEN_AUTH</plugin>\n        <plugin>OAUTH2_AUTH</plugin>\n        <plugin>JWT_AUTH</plugin>\n        <plugin>FORM_AUTH</plugin>\n        <plugin>ANONYMOUS_AUTH</plugin>\n      </plugins>\n    </authenticationChain>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.ui.web.auth.defaultConfig--startURL","extensionPoint":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService--startURL","documentation":null,"xml":"<extension point=\"startURL\" target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\">\n\n    <startURLPattern>\n      <patterns>\n        <pattern>nxdoc/</pattern>\n        <pattern>nxpath/</pattern>\n        <pattern>getDocument.faces</pattern>\n        <pattern>nxstartup.faces</pattern>\n        <pattern>getSyndicationDocument.faces</pattern>\n        <pattern>getSyndicationSearch.faces</pattern>\n        <pattern>nxfile/</pattern>\n        <pattern>nxbigfile/</pattern>\n        <pattern>nxbigblob/</pattern>\n        <pattern>nxpdffile/</pattern>\n        <pattern>nxeditfile/</pattern>\n      </patterns>\n    </startURLPattern>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService","rawName":"service:org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.auth.defaultConfig/Contributions/org.nuxeo.ecm.platform.ui.web.auth.defaultConfig--startURL","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;startURLPattern&gt;\n      &lt;patterns&gt;\n        &lt;pattern&gt;nxdoc/&lt;/pattern&gt;\n        &lt;pattern&gt;nxpath/&lt;/pattern&gt;\n        &lt;pattern&gt;getDocument.faces&lt;/pattern&gt;\n        &lt;pattern&gt;nxstartup.faces&lt;/pattern&gt;\n        &lt;pattern&gt;getSyndicationDocument.faces&lt;/pattern&gt;\n        &lt;pattern&gt;getSyndicationSearch.faces&lt;/pattern&gt;\n        &lt;pattern&gt;nxfile/&lt;/pattern&gt;\n        &lt;pattern&gt;nxbigfile/&lt;/pattern&gt;\n        &lt;pattern&gt;nxbigblob/&lt;/pattern&gt;\n        &lt;pattern&gt;nxpdffile/&lt;/pattern&gt;\n        &lt;pattern&gt;nxeditfile/&lt;/pattern&gt;\n      &lt;/patterns&gt;\n    &lt;/startURLPattern&gt;","id":null,"label":"startURLPattern","rawXml":"<startURLPattern>\n      <patterns>\n        <pattern>nxdoc/</pattern>\n        <pattern>nxpath/</pattern>\n        <pattern>getDocument.faces</pattern>\n        <pattern>nxstartup.faces</pattern>\n        <pattern>getSyndicationDocument.faces</pattern>\n        <pattern>getSyndicationSearch.faces</pattern>\n        <pattern>nxfile/</pattern>\n        <pattern>nxbigfile/</pattern>\n        <pattern>nxbigblob/</pattern>\n        <pattern>nxpdffile/</pattern>\n        <pattern>nxeditfile/</pattern>\n      </patterns>\n    </startURLPattern>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.auth.defaultConfig","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-web-common/bin/main/OSGI-INF/authentication-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.ui.web.auth.defaultConfig\">\n\n  <extension\n      target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\"\n      point=\"authenticators\">\n\n    <authenticationPlugin name=\"FORM_AUTH\" enabled=\"true\"\n        class=\"org.nuxeo.ecm.platform.ui.web.auth.plugins.FormAuthenticator\">\n      <needStartingURLSaving>true</needStartingURLSaving>\n      <parameters>\n        <parameter name=\"LoginPage\">login.jsp</parameter>\n        <parameter name=\"UsernameKey\">user_name</parameter>\n        <parameter name=\"PasswordKey\">user_password</parameter>\n      </parameters>\n    </authenticationPlugin>\n\n    <authenticationPlugin name=\"BASIC_AUTH\" enabled=\"true\"\n        class=\"org.nuxeo.ecm.platform.ui.web.auth.plugins.BasicAuthenticator\">\n      <needStartingURLSaving>false</needStartingURLSaving>\n      <stateful>false</stateful>\n      <parameters>\n        <parameter name=\"RealmName\">Nuxeo 5 EP</parameter>\n        <parameter name=\"AutoPrompt\">false</parameter>\n        <parameter name=\"ForcePromptURL_RSS\">\n          getSyndicationDocument.faces\n        </parameter>\n        <parameter name=\"ForcePromptURL_RSS_SEARCH\">\n          getSyndicationSearch.faces\n        </parameter>\n        <parameter name=\"ForcePromptURL_Restlet\">restAPI/</parameter>\n        <parameter name=\"ForcePromptURL_WebEngineRest\">site/api/</parameter>\n        <parameter name=\"ForcePromptURL_WebEngineRSS\">site/sites/@rss/</parameter>\n        <parameter name=\"ForcePromptURL_WebEngineBlogsRSS\">site/blogs/@rss/</parameter>\n      </parameters>\n    </authenticationPlugin>\n\n    <authenticationPlugin name=\"ANONYMOUS_AUTH\" enabled=\"true\"\n        class=\"org.nuxeo.ecm.platform.ui.web.auth.plugins.AnonymousAuthenticator\">\n    </authenticationPlugin>\n  </extension>\n\n  <extension\n      target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\"\n      point=\"chain\">\n\n    <authenticationChain>\n      <plugins>\n        <plugin>BASIC_AUTH</plugin>\n        <plugin>TOKEN_AUTH</plugin>\n        <plugin>OAUTH2_AUTH</plugin>\n        <plugin>JWT_AUTH</plugin>\n        <plugin>FORM_AUTH</plugin>\n        <plugin>ANONYMOUS_AUTH</plugin>\n      </plugins>\n    </authenticationChain>\n\n  </extension>\n\n  <extension\n      target=\"org.nuxeo.ecm.platform.ui.web.auth.service.PluggableAuthenticationService\"\n      point=\"startURL\">\n\n    <startURLPattern>\n      <patterns>\n        <pattern>nxdoc/</pattern>\n        <pattern>nxpath/</pattern>\n        <pattern>getDocument.faces</pattern>\n        <pattern>nxstartup.faces</pattern>\n        <pattern>getSyndicationDocument.faces</pattern>\n        <pattern>getSyndicationSearch.faces</pattern>\n        <pattern>nxfile/</pattern>\n        <pattern>nxbigfile/</pattern>\n        <pattern>nxbigblob/</pattern>\n        <pattern>nxpdffile/</pattern>\n        <pattern>nxeditfile/</pattern>\n      </patterns>\n    </startURLPattern>\n\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.web.common.locale","extensionPoints":[{"@type":"NXExtensionPoint","name":"providers","descriptors":["org.nuxeo.ecm.platform.web.common.locale.LocaleProviderDescriptor"],"documentation":"\n      This extension will provide the unique locale provider to be used.\n      Adding a requirement to the existing default implementation is\n      mandatory to make sure it is overriden.\n      Implementation class should\n      implement {@see\n      org.nuxeo.ecm.platform.web.common.locale.LocaleProvider}\n      An\n      example:\n      <code>\n    <component name=\"org.nuxeo.ecm.platform.profile.locale.contrib.example\">\n        <require>org.nuxeo.ecm.platform.web.common.locale.default.contrib\n          </require>\n        <extension point=\"providers\" target=\"org.nuxeo.ecm.platform.web.common.locale\">\n            <provider class=\"org.nuxeo.ecm.user.center.profile.localeProvider.UserLocaleProvider\"/>\n        </extension>\n    </component>\n</code>\n\n      @author Sun Seng David TAN (stan@nuxeo.com)\n      @author Stephane Lacoin\n      (slacoin@nuxeo.com)\n    \n","id":"org.nuxeo.ecm.platform.web.common.locale--providers","version":"11.1-SNAPSHOT","label":"providers (org.nuxeo.ecm.platform.web.common.locale)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.locale/ExtensionPoints/org.nuxeo.ecm.platform.web.common.locale--providers","documentationHtml":"<p/>\nThis extension will provide the unique locale provider to be used.\nAdding a requirement to the existing default implementation is\nmandatory to make sure it is overriden.\nImplementation class should\nimplement {@see\norg.nuxeo.ecm.platform.web.common.locale.LocaleProvider}\nAn\nexample:\n<p/><pre><code>    &lt;component name=\"org.nuxeo.ecm.platform.profile.locale.contrib.example\">\n        &lt;require>org.nuxeo.ecm.platform.web.common.locale.default.contrib\n          &lt;/require>\n        &lt;extension point=\"providers\" target=\"org.nuxeo.ecm.platform.web.common.locale\">\n            &lt;provider class=\"org.nuxeo.ecm.user.center.profile.localeProvider.UserLocaleProvider\"/>\n        &lt;/extension>\n    &lt;/component>\n</code></pre><p/>\n(slacoin@nuxeo.com)\n<p/>","componentId":"org.nuxeo.ecm.platform.web.common.locale"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.platform.web.common.locale.LocaleProvider","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.locale/Services/org.nuxeo.ecm.platform.web.common.locale.LocaleProvider","componentId":"org.nuxeo.ecm.platform.web.common.locale"}],"extensions":[],"componentClass":"org.nuxeo.ecm.platform.web.common.locale.LocaleComponent","documentation":"\n    Provide locale and timezone.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.locale","documentationHtml":"<p/>\nProvide locale and timezone.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-web-common/bin/main/OSGI-INF/locale-framework.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.web.common.locale\">\n  <implementation\n    class=\"org.nuxeo.ecm.platform.web.common.locale.LocaleComponent\" />\n  <documentation>\n    Provide locale and timezone.\n  </documentation>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.platform.web.common.locale.LocaleProvider\" />\n  </service>\n  <extension-point name=\"providers\">\n    <documentation>\n      This extension will provide the unique locale provider to be used.\n      Adding a requirement to the existing default implementation is\n      mandatory to make sure it is overriden.\n      Implementation class should\n      implement {@see\n      org.nuxeo.ecm.platform.web.common.locale.LocaleProvider}\n      An\n      example:\n      <code>\n        <component\n          name=\"org.nuxeo.ecm.platform.profile.locale.contrib.example\">\n          <require>org.nuxeo.ecm.platform.web.common.locale.default.contrib\n          </require>\n          <extension target=\"org.nuxeo.ecm.platform.web.common.locale\"\n            point=\"providers\">\n            <provider\n              class=\"org.nuxeo.ecm.user.center.profile.localeProvider.UserLocaleProvider\" />\n          </extension>\n        </component>\n      </code>\n      @author Sun Seng David TAN (stan@nuxeo.com)\n      @author Stephane Lacoin\n      (slacoin@nuxeo.com)\n    </documentation>\n    <object\n      class=\"org.nuxeo.ecm.platform.web.common.locale.LocaleProviderDescriptor\" />\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService.defaultContrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService.defaultContrib--filterConfig","extensionPoint":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService--filterConfig","documentation":null,"xml":"<extension point=\"filterConfig\" target=\"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService\">\n\n    <filterConfig cacheTime=\"31536000\" cached=\"true\" name=\"cachednxfile\" private=\"true\" synchonize=\"false\" transactional=\"false\">\n      <!-- if url contains doc changeToken: approximately one year -->\n      <!-- transaction is manually handled in DownloadServlet -->\n      <pattern>/nuxeo/nxfile/.*\\\\?.*changeToken=.+</pattern>\n    </filterConfig>\n    <filterConfig cacheTime=\"0\" cached=\"true\" name=\"nxfile\" private=\"true\" synchonize=\"false\" transactional=\"false\">\n      <!-- transaction is manually handled in DownloadServlet -->\n      <pattern>/nuxeo/nxfile/.*</pattern>\n    </filterConfig>\n    <filterConfig cached=\"true\" name=\"BigFileDownloaderRequest\" private=\"true\" synchonize=\"false\" transactional=\"false\">\n      <!-- transaction is manually handled in DownloadServlet -->\n      <pattern>/nuxeo/nxbigfile/.*</pattern>\n    </filterConfig>\n\n    <filterConfig cached=\"true\" name=\"BigZipFileDownloaderRequest\" private=\"true\" synchonize=\"true\" transactional=\"true\">\n      <pattern>/nuxeo/nxbigzipfile/.*</pattern>\n    </filterConfig>\n\n    <filterConfig cacheTime=\"3600\" cached=\"true\" name=\"img\">\n      <pattern>/nuxeo/img.*</pattern>\n    </filterConfig>\n\n    <filterConfig cacheTime=\"3600\" cached=\"true\" name=\"icons\">\n      <pattern>/nuxeo/icons.*</pattern>\n    </filterConfig>\n\n    <filterConfig cacheTime=\"3600\" cached=\"true\" name=\"js\">\n      <pattern>/nuxeo/js.*</pattern>\n    </filterConfig>\n\n    <filterConfig cacheTime=\"3600\" cached=\"true\" name=\"scripts\">\n      <pattern>/nuxeo/scripts.*</pattern>\n    </filterConfig>\n\n    <filterConfig cacheTime=\"3600\" cached=\"true\" name=\"waitdialog\">\n      <pattern>/nuxeo/waitdialog.*</pattern>\n    </filterConfig>\n\n    <filterConfig cacheTime=\"31536000\" cached=\"true\" name=\"cachedBPR\" private=\"true\" transactional=\"true\">\n      <!-- if url contains doc changeToken: approximately one year -->\n      <pattern>/nuxeo/.*/@(blob|preview|rendition).*\\\\?.*changeToken=.+</pattern>\n    </filterConfig>\n\n    <filterConfig cacheTime=\"0\" cached=\"true\" name=\"BPR\" private=\"true\" transactional=\"true\">\n      <pattern>/nuxeo/.*/@(blob|preview|rendition).*</pattern>\n    </filterConfig>\n\n    <filterConfig cached=\"false\" name=\"nxadmin\" private=\"true\">\n      <pattern>/nuxeo/nxadmin/.*</pattern>\n    </filterConfig>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService","rawName":"service:org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService.defaultContrib/Contributions/org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService.defaultContrib--filterConfig","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;filterConfig cacheTime=&quot;31536000&quot; cached=&quot;true&quot; name=&quot;cachednxfile&quot; private=&quot;true&quot; synchonize=&quot;false&quot; transactional=&quot;false&quot;&gt;\n      &lt;!-- if url contains doc changeToken: approximately one year --&gt;\n      &lt;!-- transaction is manually handled in DownloadServlet --&gt;\n      &lt;pattern&gt;/nuxeo/nxfile/.*\\\\?.*changeToken=.+&lt;/pattern&gt;\n    &lt;/filterConfig&gt;","id":"cachednxfile","label":"filterConfig cachednxfile","rawXml":"<filterConfig cacheTime=\"31536000\" cached=\"true\" name=\"cachednxfile\" private=\"true\" synchonize=\"false\" transactional=\"false\">\n      <!-- if url contains doc changeToken: approximately one year -->\n      <!-- transaction is manually handled in DownloadServlet -->\n      <pattern>/nuxeo/nxfile/.*\\\\?.*changeToken=.+</pattern>\n    </filterConfig>"},{"documentation":"","xml":"&lt;filterConfig cacheTime=&quot;0&quot; cached=&quot;true&quot; name=&quot;nxfile&quot; private=&quot;true&quot; synchonize=&quot;false&quot; transactional=&quot;false&quot;&gt;\n      &lt;!-- transaction is manually handled in DownloadServlet --&gt;\n      &lt;pattern&gt;/nuxeo/nxfile/.*&lt;/pattern&gt;\n    &lt;/filterConfig&gt;","id":"nxfile","label":"filterConfig nxfile","rawXml":"<filterConfig cacheTime=\"0\" cached=\"true\" name=\"nxfile\" private=\"true\" synchonize=\"false\" transactional=\"false\">\n      <!-- transaction is manually handled in DownloadServlet -->\n      <pattern>/nuxeo/nxfile/.*</pattern>\n    </filterConfig>"},{"documentation":"","xml":"&lt;filterConfig cached=&quot;true&quot; name=&quot;BigFileDownloaderRequest&quot; private=&quot;true&quot; synchonize=&quot;false&quot; transactional=&quot;false&quot;&gt;\n      &lt;!-- transaction is manually handled in DownloadServlet --&gt;\n      &lt;pattern&gt;/nuxeo/nxbigfile/.*&lt;/pattern&gt;\n    &lt;/filterConfig&gt;","id":"BigFileDownloaderRequest","label":"filterConfig BigFileDownloaderRequest","rawXml":"<filterConfig cached=\"true\" name=\"BigFileDownloaderRequest\" private=\"true\" synchonize=\"false\" transactional=\"false\">\n      <!-- transaction is manually handled in DownloadServlet -->\n      <pattern>/nuxeo/nxbigfile/.*</pattern>\n    </filterConfig>"},{"documentation":"","xml":"&lt;filterConfig cached=&quot;true&quot; name=&quot;BigZipFileDownloaderRequest&quot; private=&quot;true&quot; synchonize=&quot;true&quot; transactional=&quot;true&quot;&gt;\n      &lt;pattern&gt;/nuxeo/nxbigzipfile/.*&lt;/pattern&gt;\n    &lt;/filterConfig&gt;","id":"BigZipFileDownloaderRequest","label":"filterConfig BigZipFileDownloaderRequest","rawXml":"<filterConfig cached=\"true\" name=\"BigZipFileDownloaderRequest\" private=\"true\" synchonize=\"true\" transactional=\"true\">\n      <pattern>/nuxeo/nxbigzipfile/.*</pattern>\n    </filterConfig>"},{"documentation":"","xml":"&lt;filterConfig cacheTime=&quot;3600&quot; cached=&quot;true&quot; name=&quot;img&quot;&gt;\n      &lt;pattern&gt;/nuxeo/img.*&lt;/pattern&gt;\n    &lt;/filterConfig&gt;","id":"img","label":"filterConfig img","rawXml":"<filterConfig cacheTime=\"3600\" cached=\"true\" name=\"img\">\n      <pattern>/nuxeo/img.*</pattern>\n    </filterConfig>"},{"documentation":"","xml":"&lt;filterConfig cacheTime=&quot;3600&quot; cached=&quot;true&quot; name=&quot;icons&quot;&gt;\n      &lt;pattern&gt;/nuxeo/icons.*&lt;/pattern&gt;\n    &lt;/filterConfig&gt;","id":"icons","label":"filterConfig icons","rawXml":"<filterConfig cacheTime=\"3600\" cached=\"true\" name=\"icons\">\n      <pattern>/nuxeo/icons.*</pattern>\n    </filterConfig>"},{"documentation":"","xml":"&lt;filterConfig cacheTime=&quot;3600&quot; cached=&quot;true&quot; name=&quot;js&quot;&gt;\n      &lt;pattern&gt;/nuxeo/js.*&lt;/pattern&gt;\n    &lt;/filterConfig&gt;","id":"js","label":"filterConfig js","rawXml":"<filterConfig cacheTime=\"3600\" cached=\"true\" name=\"js\">\n      <pattern>/nuxeo/js.*</pattern>\n    </filterConfig>"},{"documentation":"","xml":"&lt;filterConfig cacheTime=&quot;3600&quot; cached=&quot;true&quot; name=&quot;scripts&quot;&gt;\n      &lt;pattern&gt;/nuxeo/scripts.*&lt;/pattern&gt;\n    &lt;/filterConfig&gt;","id":"scripts","label":"filterConfig scripts","rawXml":"<filterConfig cacheTime=\"3600\" cached=\"true\" name=\"scripts\">\n      <pattern>/nuxeo/scripts.*</pattern>\n    </filterConfig>"},{"documentation":"","xml":"&lt;filterConfig cacheTime=&quot;3600&quot; cached=&quot;true&quot; name=&quot;waitdialog&quot;&gt;\n      &lt;pattern&gt;/nuxeo/waitdialog.*&lt;/pattern&gt;\n    &lt;/filterConfig&gt;","id":"waitdialog","label":"filterConfig waitdialog","rawXml":"<filterConfig cacheTime=\"3600\" cached=\"true\" name=\"waitdialog\">\n      <pattern>/nuxeo/waitdialog.*</pattern>\n    </filterConfig>"},{"documentation":"","xml":"&lt;filterConfig cacheTime=&quot;31536000&quot; cached=&quot;true&quot; name=&quot;cachedBPR&quot; private=&quot;true&quot; transactional=&quot;true&quot;&gt;\n      &lt;!-- if url contains doc changeToken: approximately one year --&gt;\n      &lt;pattern&gt;/nuxeo/.*/@(blob|preview|rendition).*\\\\?.*changeToken=.+&lt;/pattern&gt;\n    &lt;/filterConfig&gt;","id":"cachedBPR","label":"filterConfig cachedBPR","rawXml":"<filterConfig cacheTime=\"31536000\" cached=\"true\" name=\"cachedBPR\" private=\"true\" transactional=\"true\">\n      <!-- if url contains doc changeToken: approximately one year -->\n      <pattern>/nuxeo/.*/@(blob|preview|rendition).*\\\\?.*changeToken=.+</pattern>\n    </filterConfig>"},{"documentation":"","xml":"&lt;filterConfig cacheTime=&quot;0&quot; cached=&quot;true&quot; name=&quot;BPR&quot; private=&quot;true&quot; transactional=&quot;true&quot;&gt;\n      &lt;pattern&gt;/nuxeo/.*/@(blob|preview|rendition).*&lt;/pattern&gt;\n    &lt;/filterConfig&gt;","id":"BPR","label":"filterConfig BPR","rawXml":"<filterConfig cacheTime=\"0\" cached=\"true\" name=\"BPR\" private=\"true\" transactional=\"true\">\n      <pattern>/nuxeo/.*/@(blob|preview|rendition).*</pattern>\n    </filterConfig>"},{"documentation":"","xml":"&lt;filterConfig cached=&quot;false&quot; name=&quot;nxadmin&quot; private=&quot;true&quot;&gt;\n      &lt;pattern&gt;/nuxeo/nxadmin/.*&lt;/pattern&gt;\n    &lt;/filterConfig&gt;","id":"nxadmin","label":"filterConfig nxadmin","rawXml":"<filterConfig cached=\"false\" name=\"nxadmin\" private=\"true\">\n      <pattern>/nuxeo/nxadmin/.*</pattern>\n    </filterConfig>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService.defaultContrib--responseHeaders","extensionPoint":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService--responseHeaders","documentation":null,"xml":"<extension point=\"responseHeaders\" target=\"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService\">\n    <header name=\"X-UA-Compatible\">IE=10; IE=11</header>\n    <header name=\"Cache-Control\">no-cache</header>\n    <header name=\"X-Content-Type-Options\">nosniff</header>\n    <header name=\"X-XSS-Protection\">1; mode=block</header>\n    <header name=\"X-Frame-Options\">SAMEORIGIN</header>\n    <!-- this is a permissive Content-Security-Policy, which should be overridden for more security -->\n    <header name=\"Content-Security-Policy\">img-src data: blob: *; default-src blob: *; script-src 'unsafe-inline' 'unsafe-eval' data: *; style-src 'unsafe-inline' *; font-src data: *</header>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService","rawName":"service:org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService.defaultContrib/Contributions/org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService.defaultContrib--responseHeaders","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;header name=&quot;X-UA-Compatible&quot;&gt;IE=10; IE=11&lt;/header&gt;","id":"X-UA-Compatible","label":"header X-UA-Compatible","rawXml":"<header name=\"X-UA-Compatible\">IE=10; IE=11</header>"},{"documentation":"","xml":"&lt;header name=&quot;Cache-Control&quot;&gt;no-cache&lt;/header&gt;","id":"Cache-Control","label":"header Cache-Control","rawXml":"<header name=\"Cache-Control\">no-cache</header>"},{"documentation":"","xml":"&lt;header name=&quot;X-Content-Type-Options&quot;&gt;nosniff&lt;/header&gt;","id":"X-Content-Type-Options","label":"header X-Content-Type-Options","rawXml":"<header name=\"X-Content-Type-Options\">nosniff</header>"},{"documentation":"","xml":"&lt;header name=&quot;X-XSS-Protection&quot;&gt;1; mode=block&lt;/header&gt;","id":"X-XSS-Protection","label":"header X-XSS-Protection","rawXml":"<header name=\"X-XSS-Protection\">1; mode=block</header>"},{"documentation":"","xml":"&lt;header name=&quot;X-Frame-Options&quot;&gt;SAMEORIGIN&lt;/header&gt;","id":"X-Frame-Options","label":"header X-Frame-Options","rawXml":"<header name=\"X-Frame-Options\">SAMEORIGIN</header>"},{"documentation":"","xml":"&lt;header name=&quot;Content-Security-Policy&quot;&gt;img-src data: blob: *; default-src blob: *; script-src 'unsafe-inline' 'unsafe-eval' data: *; style-src 'unsafe-inline' *; font-src data: *&lt;/header&gt;","id":"Content-Security-Policy","label":"header Content-Security-Policy","rawXml":"<header name=\"Content-Security-Policy\">img-src data: blob: *; default-src blob: *; script-src 'unsafe-inline' 'unsafe-eval' data: *; style-src 'unsafe-inline' *; font-src data: *</header>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService.defaultContrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-web-common/bin/main/OSGI-INF/web-request-controller-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService.defaultContrib\">\n\n  <extension target=\"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService\"\n    point=\"filterConfig\">\n\n    <filterConfig name=\"cachednxfile\" transactional=\"false\" synchonize=\"false\" cached=\"true\" private=\"true\" cacheTime=\"31536000\">\n      <!-- if url contains doc changeToken: approximately one year -->\n      <!-- transaction is manually handled in DownloadServlet -->\n      <pattern>${org.nuxeo.ecm.contextPath}/nxfile/.*\\\\?.*changeToken=.+</pattern>\n    </filterConfig>\n    <filterConfig name=\"nxfile\" transactional=\"false\" synchonize=\"false\" cached=\"true\" private=\"true\" cacheTime=\"0\">\n      <!-- transaction is manually handled in DownloadServlet -->\n      <pattern>${org.nuxeo.ecm.contextPath}/nxfile/.*</pattern>\n    </filterConfig>\n    <filterConfig name=\"BigFileDownloaderRequest\" cached=\"true\" private=\"true\"\n      transactional=\"false\" synchonize=\"false\">\n      <!-- transaction is manually handled in DownloadServlet -->\n      <pattern>${org.nuxeo.ecm.contextPath}/nxbigfile/.*</pattern>\n    </filterConfig>\n\n    <filterConfig name=\"BigZipFileDownloaderRequest\" cached=\"true\" private=\"true\"\n      transactional=\"true\" synchonize=\"true\">\n      <pattern>${org.nuxeo.ecm.contextPath}/nxbigzipfile/.*</pattern>\n    </filterConfig>\n\n    <filterConfig name=\"img\" cached=\"true\" cacheTime=\"3600\">\n      <pattern>${org.nuxeo.ecm.contextPath}/img.*</pattern>\n    </filterConfig>\n\n    <filterConfig name=\"icons\" cached=\"true\" cacheTime=\"3600\">\n      <pattern>${org.nuxeo.ecm.contextPath}/icons.*</pattern>\n    </filterConfig>\n\n    <filterConfig name=\"js\" cached=\"true\" cacheTime=\"3600\">\n      <pattern>${org.nuxeo.ecm.contextPath}/js.*</pattern>\n    </filterConfig>\n\n    <filterConfig name=\"scripts\" cached=\"true\" cacheTime=\"3600\">\n      <pattern>${org.nuxeo.ecm.contextPath}/scripts.*</pattern>\n    </filterConfig>\n\n    <filterConfig name=\"waitdialog\" cached=\"true\" cacheTime=\"3600\">\n      <pattern>${org.nuxeo.ecm.contextPath}/waitdialog.*</pattern>\n    </filterConfig>\n\n    <filterConfig name=\"cachedBPR\" cached=\"true\" private=\"true\" cacheTime=\"31536000\" transactional=\"true\">\n      <!-- if url contains doc changeToken: approximately one year -->\n      <pattern>${org.nuxeo.ecm.contextPath}/.*/@(blob|preview|rendition).*\\\\?.*changeToken=.+</pattern>\n    </filterConfig>\n\n    <filterConfig name=\"BPR\" cached=\"true\" private=\"true\" cacheTime=\"0\" transactional=\"true\">\n      <pattern>${org.nuxeo.ecm.contextPath}/.*/@(blob|preview|rendition).*</pattern>\n    </filterConfig>\n\n    <filterConfig name=\"nxadmin\" cached=\"false\" private=\"true\">\n      <pattern>${org.nuxeo.ecm.contextPath}/nxadmin/.*</pattern>\n    </filterConfig>\n\n  </extension>\n\n  <extension target=\"org.nuxeo.ecm.platform.web.common.requestcontroller.service.RequestControllerService\"\n    point=\"responseHeaders\">\n    <header name=\"X-UA-Compatible\">IE=10; IE=11</header>\n    <header name=\"Cache-Control\">no-cache</header>\n    <header name=\"X-Content-Type-Options\">nosniff</header>\n    <header name=\"X-XSS-Protection\">1; mode=block</header>\n    <header name=\"X-Frame-Options\">${nuxeo.frame.options:=SAMEORIGIN}</header>\n    <!-- this is a permissive Content-Security-Policy, which should be overridden for more security -->\n    <header name=\"Content-Security-Policy\">img-src data: blob: *; default-src blob: *; script-src 'unsafe-inline' 'unsafe-eval' data: *; style-src 'unsafe-inline' *; font-src data: *</header>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.web.common.adminStatusListener.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.web.common.adminStatusListener.contrib--listeners","extensionPoint":"org.nuxeo.runtime.EventService--listeners","documentation":null,"xml":"<extension point=\"listeners\" target=\"org.nuxeo.runtime.EventService\">\n    <listener class=\"org.nuxeo.ecm.platform.web.common.admin.AdministrativeStatusListener\">\n      <topic>administrativeStatus</topic>\n    </listener>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.EventService","rawName":"service:org.nuxeo.runtime.EventService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.adminStatusListener.contrib/Contributions/org.nuxeo.ecm.platform.web.common.adminStatusListener.contrib--listeners","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;listener class=&quot;org.nuxeo.ecm.platform.web.common.admin.AdministrativeStatusListener&quot;&gt;\n      &lt;topic&gt;administrativeStatus&lt;/topic&gt;\n    &lt;/listener&gt;","id":null,"label":"listener","rawXml":"<listener class=\"org.nuxeo.ecm.platform.web.common.admin.AdministrativeStatusListener\">\n      <topic>administrativeStatus</topic>\n    </listener>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.web.common.adminStatusListener.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-web-common/bin/main/OSGI-INF/core-management-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.web.common.adminStatusListener.contrib\">\n\n  <extension target=\"org.nuxeo.runtime.EventService\" point=\"listeners\">\n    <listener class=\"org.nuxeo.ecm.platform.web.common.admin.AdministrativeStatusListener\">\n      <topic>administrativeStatus</topic>\n    </listener>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.ui.web.cors","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.ui.web.cors--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n      Property that allows to disable strict CORS checks when a request has Origin: null.\n      This may happen for local files, or for a JavaScript-triggered redirect.\n      Setting this to true may expose the application to CSRF problems from files\n      locally hosted on the user's disk.\n\n      @since 10.3\n    \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <documentation>\n      Property that allows to disable strict CORS checks when a request has Origin: null.\n      This may happen for local files, or for a JavaScript-triggered redirect.\n      Setting this to true may expose the application to CSRF problems from files\n      locally hosted on the user's disk.\n\n      @since 10.3\n    </documentation>\n    <property name=\"nuxeo.cors.allowNullOrigin\">false</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.cors/Contributions/org.nuxeo.ecm.platform.ui.web.cors--configuration","documentationHtml":"<p/>\nProperty that allows to disable strict CORS checks when a request has Origin: null.\nThis may happen for local files, or for a JavaScript-triggered redirect.\nSetting this to true may expose the application to CSRF problems from files\nlocally hosted on the user's disk.\n<p/>\n@since 10.3\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;nuxeo.cors.allowNullOrigin&quot;&gt;false&lt;/property&gt;","id":"nuxeo.cors.allowNullOrigin","label":"property nuxeo.cors.allowNullOrigin","rawXml":"<property name=\"nuxeo.cors.allowNullOrigin\">false</property>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.web.common/org.nuxeo.ecm.platform.ui.web.cors","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-web-common/bin/main/OSGI-INF/cors-configuration.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.ui.web.cors\">\n\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n    <documentation>\n      Property that allows to disable strict CORS checks when a request has Origin: null.\n      This may happen for local files, or for a JavaScript-triggered redirect.\n      Setting this to true may expose the application to CSRF problems from files\n      locally hosted on the user's disk.\n\n      @since 10.3\n    </documentation>\n    <property name=\"nuxeo.cors.allowNullOrigin\">false</property>\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.platform.content.template","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.platform.content.template.factories,\n org.nuxeo.ecm.platform.content.template.listener,\n org.nuxeo.ecm.platform.content.template.service\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Name: Nuxeo Content Template Manager\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nRequire-Bundle: org.nuxeo.ecm.core.api\nBundle-Vendor: Nuxeo\nBundle-Version: 0.0.0.SNAPSHOT\nBundle-ManifestVersion: 2\nNuxeo-Component: OSGI-INF/content-template-framework.xml,\n OSGI-INF/content-template-contrib.xml,\n OSGI-INF/content-template-listener.xml\nImport-Package: com.google.inject;version=\"2.0.0\",\n javax.annotation;version=\"1.0\",\n org.apache.commons.logging,\n org.jboss.util,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.security,\n org.nuxeo.ecm.core.event,\n org.nuxeo.ecm.core.event.impl,\n org.nuxeo.ecm.core.repository,\n org.nuxeo.ecm.directory;api=split,\n org.nuxeo.osgi,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model\nBundle-SymbolicName: org.nuxeo.ecm.platform.content.template;singleton=true\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-platform-content-template-manager","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform","name":"org.nuxeo.ecm.platform","liveDoc":{},"subGroups":[{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.directory","name":"org.nuxeo.ecm.directory","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.directory","org.nuxeo.ecm.directory.api","org.nuxeo.ecm.directory.sql","org.nuxeo.ecm.directory.types.contrib"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.query","name":"org.nuxeo.ecm.platform.query","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.query.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.usermanager","name":"org.nuxeo.ecm.platform.usermanager","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.usermanager","org.nuxeo.ecm.platform.usermanager.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]}],"bundleIds":["org.nuxeo.apidoc.core","org.nuxeo.apidoc.repo","org.nuxeo.directory.mongodb","org.nuxeo.ecm.actions","org.nuxeo.ecm.platform.api","org.nuxeo.ecm.platform.commandline.executor","org.nuxeo.ecm.platform.content.template","org.nuxeo.ecm.platform.dublincore","org.nuxeo.ecm.platform.forms.layout.export","org.nuxeo.ecm.platform.login","org.nuxeo.ecm.platform.web.common","org.nuxeo.osgi.app"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-content-template-manager/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.content.template.listener","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.content.template.listener--listener","extensionPoint":"org.nuxeo.ecm.core.event.EventServiceComponent--listener","documentation":"\n      Listen for Core event DOCUMENT_UPDATED and DOCUMENT_CREATED and call the\n      DublinCoreStorageService.\n\n      @author Thierry Delprat (td@nuxeo.com)\n    \n","xml":"<extension point=\"listener\" target=\"org.nuxeo.ecm.core.event.EventServiceComponent\">\n    <documentation>\n      Listen for Core event DOCUMENT_UPDATED and DOCUMENT_CREATED and call the\n      DublinCoreStorageService.\n\n      @author Thierry Delprat (td@nuxeo.com)\n    </documentation>\n\n    <listener async=\"false\" class=\"org.nuxeo.ecm.platform.content.template.listener.ContentCreationListener\" name=\"templateCreator\" postCommit=\"false\" priority=\"100\">\n    </listener>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.event.EventServiceComponent","rawName":"service:org.nuxeo.ecm.core.event.EventServiceComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.content.template/org.nuxeo.ecm.platform.content.template.listener/Contributions/org.nuxeo.ecm.platform.content.template.listener--listener","documentationHtml":"<p/>\nListen for Core event DOCUMENT_UPDATED and DOCUMENT_CREATED and call the\nDublinCoreStorageService.\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;listener async=&quot;false&quot; class=&quot;org.nuxeo.ecm.platform.content.template.listener.ContentCreationListener&quot; name=&quot;templateCreator&quot; postCommit=&quot;false&quot; priority=&quot;100&quot;&gt;\n    &lt;/listener&gt;","id":"templateCreator","label":"listener templateCreator","rawXml":"<listener async=\"false\" class=\"org.nuxeo.ecm.platform.content.template.listener.ContentCreationListener\" name=\"templateCreator\" postCommit=\"false\" priority=\"100\">\n    </listener>"}]}],"componentClass":null,"documentation":"\n    Core event listener that takes care of automatically creating children docs according to templates.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.content.template/org.nuxeo.ecm.platform.content.template.listener","documentationHtml":"<p/>\nCore event listener that takes care of automatically creating children docs according to templates.\n<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-content-template-manager/bin/main/OSGI-INF/content-template-listener.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component\n  name=\"org.nuxeo.ecm.platform.content.template.listener\">\n\n  <documentation>\n    Core event listener that takes care of automatically creating children docs according to templates.\n  </documentation>\n\n\n  <extension target=\"org.nuxeo.ecm.core.event.EventServiceComponent\" point=\"listener\">\n    <documentation>\n      Listen for Core event DOCUMENT_UPDATED and DOCUMENT_CREATED and call the\n      DublinCoreStorageService.\n\n      @author Thierry Delprat (td@nuxeo.com)\n    </documentation>\n\n    <listener name=\"templateCreator\" async=\"false\" postCommit=\"false\" class=\"org.nuxeo.ecm.platform.content.template.listener.ContentCreationListener\" priority=\"100\">\n    </listener>\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService","extensionPoints":[{"@type":"NXExtensionPoint","name":"postContentCreationHandlers","descriptors":["org.nuxeo.ecm.platform.content.template.service.PostContentCreationHandlerDescriptor"],"documentation":"\n      @author Thomas Roger (troger@nuxeo.com)\n\n      <code>\n    <postContentCreationHandler\n        class=\"org.nuxeo.ecm.platform.content.template.service.CollaborationPostHandler\"\n        enabled=\"true\" name=\"collaborationPostHandler\" order=\"1\"/>\n</code>\n","id":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService--postContentCreationHandlers","version":"11.1-SNAPSHOT","label":"postContentCreationHandlers (org.nuxeo.ecm.platform.content.template.service.ContentTemplateService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.content.template/org.nuxeo.ecm.platform.content.template.service.ContentTemplateService/ExtensionPoints/org.nuxeo.ecm.platform.content.template.service.ContentTemplateService--postContentCreationHandlers","documentationHtml":"<p/>\n<pre><code>    &lt;postContentCreationHandler\n        class=\"org.nuxeo.ecm.platform.content.template.service.CollaborationPostHandler\"\n        enabled=\"true\" name=\"collaborationPostHandler\" order=\"1\"/>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService"},{"@type":"NXExtensionPoint","name":"factory","descriptors":["org.nuxeo.ecm.platform.content.template.service.ContentFactoryDescriptor"],"documentation":"\n      This service provides extension points for ContentFactory registering.\n      @author Thierry Delprat (td@nuxeo.com)\n    \n","id":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService--factory","version":"11.1-SNAPSHOT","label":"factory (org.nuxeo.ecm.platform.content.template.service.ContentTemplateService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.content.template/org.nuxeo.ecm.platform.content.template.service.ContentTemplateService/ExtensionPoints/org.nuxeo.ecm.platform.content.template.service.ContentTemplateService--factory","documentationHtml":"<p/>\nThis service provides extension points for ContentFactory registering.\n<p/>","componentId":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService"},{"@type":"NXExtensionPoint","name":"factoryBinding","descriptors":["org.nuxeo.ecm.platform.content.template.service.FactoryBindingDescriptor"],"documentation":"\n      Define a new factory binding.\n\n      -factoryBinding\n        - name: name of the factory, defining a factory with the same name will override the first to be registered.\n        - factoryName: the name of the factory defined in the factory extensionPoint.\n        - targetType: The document Type for which the factory will be executed.\n\n      -acl: set rights on document to your users.\n        -principal: Name of the group/user\n        -permission: the permission you want to set.\n        -granted: grant or denied the permission.\n\n      -template\n        - typeName: The Type of the Document you want to create.\n        - id: The id of the Document you want to create.\n        - title: The title of the Document you want to create.\n        - description: The description of the Document you want to create.\n        - path: additionary path, added to facctoryBinding's targetType DocPath\n\n      Example of a factoryBinding Registration:\n\n      <code>\n    <factoryBinding factoryName=\"SimpleTemplateFactory\"\n        name=\"RootFactory\" targetType=\"Root\">\n        <acl>\n            <ace granted=\"true\" permission=\"Everything\" principal=\"Administrator\"/>\n            <ace granted=\"true\" permission=\"Everything\" principal=\"administrators\"/>\n            <ace granted=\"true\" permission=\"Read\" principal=\"members\"/>\n            <ace granted=\"true\" permission=\"Version\" principal=\"members\"/>\n        </acl>\n        <template>\n            <templateItem description=\"Default domain\"\n                id=\"default-domain\" title=\"Default domain\" typeName=\"Domain\"/>\n        </template>\n    </factoryBinding>\n</code>\n\n\n      @author Thierry Delprat (td@nuxeo.com)\n    \n","id":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService--factoryBinding","version":"11.1-SNAPSHOT","label":"factoryBinding (org.nuxeo.ecm.platform.content.template.service.ContentTemplateService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.content.template/org.nuxeo.ecm.platform.content.template.service.ContentTemplateService/ExtensionPoints/org.nuxeo.ecm.platform.content.template.service.ContentTemplateService--factoryBinding","documentationHtml":"<p/>\nDefine a new factory binding.\n<p/>\n-factoryBinding\n- name: name of the factory, defining a factory with the same name will override the first to be registered.\n- factoryName: the name of the factory defined in the factory extensionPoint.\n- targetType: The document Type for which the factory will be executed.\n<p/>\n-acl: set rights on document to your users.\n-principal: Name of the group/user\n-permission: the permission you want to set.\n-granted: grant or denied the permission.\n<p/>\n-template\n- typeName: The Type of the Document you want to create.\n- id: The id of the Document you want to create.\n- title: The title of the Document you want to create.\n- description: The description of the Document you want to create.\n- path: additionary path, added to facctoryBinding's targetType DocPath\n<p/>\nExample of a factoryBinding Registration:\n<p/>\n<pre><code>    &lt;factoryBinding factoryName=\"SimpleTemplateFactory\"\n        name=\"RootFactory\" targetType=\"Root\">\n        &lt;acl>\n            &lt;ace granted=\"true\" permission=\"Everything\" principal=\"Administrator\"/>\n            &lt;ace granted=\"true\" permission=\"Everything\" principal=\"administrators\"/>\n            &lt;ace granted=\"true\" permission=\"Read\" principal=\"members\"/>\n            &lt;ace granted=\"true\" permission=\"Version\" principal=\"members\"/>\n        &lt;/acl>\n        &lt;template>\n            &lt;templateItem description=\"Default domain\"\n                id=\"default-domain\" title=\"Default domain\" typeName=\"Domain\"/>\n        &lt;/template>\n    &lt;/factoryBinding>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.content.template/org.nuxeo.ecm.platform.content.template.service.ContentTemplateService/Services/org.nuxeo.ecm.platform.content.template.service.ContentTemplateService","componentId":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateServiceImpl","documentation":"\n    The content template manager service provide factories to automatically create Document.\n    The factories are used whenever a document is created using EventListener.\n    @author Thierry Delprat (td@nuxeo.com)\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.content.template/org.nuxeo.ecm.platform.content.template.service.ContentTemplateService","documentationHtml":"<p/>\nThe content template manager service provide factories to automatically create Document.\nThe factories are used whenever a document is created using EventListener.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-content-template-manager/bin/main/OSGI-INF/content-template-framework.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService\">\n  <implementation\n      class=\"org.nuxeo.ecm.platform.content.template.service.ContentTemplateServiceImpl\"/>\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService\"/>\n  </service>\n\n  <documentation>\n    The content template manager service provide factories to automatically create Document.\n    The factories are used whenever a document is created using EventListener.\n    @author Thierry Delprat (td@nuxeo.com)\n  </documentation>\n\n  <extension-point name=\"factory\">\n    <documentation>\n      This service provides extension points for ContentFactory registering.\n      @author Thierry Delprat (td@nuxeo.com)\n    </documentation>\n\n    <object\n        class=\"org.nuxeo.ecm.platform.content.template.service.ContentFactoryDescriptor\"/>\n  </extension-point>\n\n  <extension-point name=\"factoryBinding\">\n    <documentation>\n      Define a new factory binding.\n\n      -factoryBinding\n        - name: name of the factory, defining a factory with the same name will override the first to be registered.\n        - factoryName: the name of the factory defined in the factory extensionPoint.\n        - targetType: The document Type for which the factory will be executed.\n\n      -acl: set rights on document to your users.\n        -principal: Name of the group/user\n        -permission: the permission you want to set.\n        -granted: grant or denied the permission.\n\n      -template\n        - typeName: The Type of the Document you want to create.\n        - id: The id of the Document you want to create.\n        - title: The title of the Document you want to create.\n        - description: The description of the Document you want to create.\n        - path: additionary path, added to facctoryBinding's targetType DocPath\n\n      Example of a factoryBinding Registration:\n\n      <code>\n        <factoryBinding name=\"RootFactory\" factoryName=\"SimpleTemplateFactory\" targetType=\"Root\">\n          <acl>\n            <ace principal=\"Administrator\" permission=\"Everything\" granted=\"true\"/>\n            <ace principal=\"administrators\" permission=\"Everything\" granted=\"true\"/>\n            <ace principal=\"members\" permission=\"Read\" granted=\"true\"/>\n            <ace principal=\"members\" permission=\"Version\" granted=\"true\"/>\n          </acl>\n          <template>\n            <templateItem typeName=\"Domain\" id=\"default-domain\" title=\"Default domain\"\n                description=\"Default domain\"/>\n          </template>\n        </factoryBinding>\n      </code>\n\n      @author Thierry Delprat (td@nuxeo.com)\n    </documentation>\n\n    <object\n        class=\"org.nuxeo.ecm.platform.content.template.service.FactoryBindingDescriptor\"/>\n  </extension-point>\n\n  <extension-point name=\"postContentCreationHandlers\">\n    <documentation>\n      @author Thomas Roger (troger@nuxeo.com)\n\n      <code>\n        <postContentCreationHandler name=\"collaborationPostHandler\"\n          enabled=\"true\" order=\"1\"\n          class=\"org.nuxeo.ecm.platform.content.template.service.CollaborationPostHandler\" />\n      </code>\n\n    </documentation>\n\n    <object\n        class=\"org.nuxeo.ecm.platform.content.template.service.PostContentCreationHandlerDescriptor\"/>\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService.defaultContrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService.defaultContrib--factory","extensionPoint":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService--factory","documentation":null,"xml":"<extension point=\"factory\" target=\"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService\">\n\n    <contentFactory class=\"org.nuxeo.ecm.platform.content.template.factories.SimpleTemplateBasedFactory\" name=\"SimpleTemplateFactory\"/>\n\n    <contentFactory class=\"org.nuxeo.ecm.platform.content.template.factories.SimpleTemplateBasedRootFactory\" name=\"SimpleTemplateRootFactory\"/>\n\n    <contentFactory class=\"org.nuxeo.ecm.platform.content.template.factories.ImportBasedFactory\" name=\"ImportFactory\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService","rawName":"service:org.nuxeo.ecm.platform.content.template.service.ContentTemplateService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.content.template/org.nuxeo.ecm.platform.content.template.service.ContentTemplateService.defaultContrib/Contributions/org.nuxeo.ecm.platform.content.template.service.ContentTemplateService.defaultContrib--factory","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;contentFactory class=&quot;org.nuxeo.ecm.platform.content.template.factories.SimpleTemplateBasedFactory&quot; name=&quot;SimpleTemplateFactory&quot;/&gt;","id":"SimpleTemplateFactory","label":"contentFactory SimpleTemplateFactory","rawXml":"<contentFactory class=\"org.nuxeo.ecm.platform.content.template.factories.SimpleTemplateBasedFactory\" name=\"SimpleTemplateFactory\"/>"},{"documentation":"","xml":"&lt;contentFactory class=&quot;org.nuxeo.ecm.platform.content.template.factories.SimpleTemplateBasedRootFactory&quot; name=&quot;SimpleTemplateRootFactory&quot;/&gt;","id":"SimpleTemplateRootFactory","label":"contentFactory SimpleTemplateRootFactory","rawXml":"<contentFactory class=\"org.nuxeo.ecm.platform.content.template.factories.SimpleTemplateBasedRootFactory\" name=\"SimpleTemplateRootFactory\"/>"},{"documentation":"","xml":"&lt;contentFactory class=&quot;org.nuxeo.ecm.platform.content.template.factories.ImportBasedFactory&quot; name=&quot;ImportFactory&quot;/&gt;","id":"ImportFactory","label":"contentFactory ImportFactory","rawXml":"<contentFactory class=\"org.nuxeo.ecm.platform.content.template.factories.ImportBasedFactory\" name=\"ImportFactory\"/>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService.defaultContrib--factoryBinding","extensionPoint":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService--factoryBinding","documentation":null,"xml":"<extension point=\"factoryBinding\" target=\"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService\">\n\n    <factoryBinding factoryName=\"SimpleTemplateRootFactory\" name=\"RootFactory\" targetType=\"Root\">\n      <acl>\n        <ace granted=\"true\" permission=\"Everything\" principal=\"Administrator\"/>\n        <ace granted=\"true\" permission=\"Read\" principal=\"members\"/>\n      </acl>\n      <template>\n        <templateItem id=\"default-domain\" title=\"Domain\" typeName=\"Domain\"/>\n      </template>\n    </factoryBinding>\n\n    <factoryBinding factoryName=\"SimpleTemplateFactory\" name=\"DomainFactory\" targetType=\"Domain\">\n      <template>\n        <templateItem id=\"workspaces\" title=\"Workspaces\" typeName=\"WorkspaceRoot\"/>\n        <templateItem id=\"sections\" title=\"Sections\" typeName=\"SectionRoot\"/>\n        <templateItem id=\"templates\" title=\"Templates\" typeName=\"TemplateRoot\"/>\n      </template>\n    </factoryBinding>\n\n    <factoryBinding factoryName=\"SimpleTemplateFactory\" name=\"SectionRootFactory\" targetType=\"SectionRoot\">\n      <acl>\n        <ace granted=\"true\" permission=\"CanAskForPublishing\" principal=\"members\"/>\n      </acl>\n    </factoryBinding>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService","rawName":"service:org.nuxeo.ecm.platform.content.template.service.ContentTemplateService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.content.template/org.nuxeo.ecm.platform.content.template.service.ContentTemplateService.defaultContrib/Contributions/org.nuxeo.ecm.platform.content.template.service.ContentTemplateService.defaultContrib--factoryBinding","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;factoryBinding factoryName=&quot;SimpleTemplateRootFactory&quot; name=&quot;RootFactory&quot; targetType=&quot;Root&quot;&gt;\n      &lt;acl&gt;\n        &lt;ace granted=&quot;true&quot; permission=&quot;Everything&quot; principal=&quot;Administrator&quot;/&gt;\n        &lt;ace granted=&quot;true&quot; permission=&quot;Read&quot; principal=&quot;members&quot;/&gt;\n      &lt;/acl&gt;\n      &lt;template&gt;\n        &lt;templateItem id=&quot;default-domain&quot; title=&quot;Domain&quot; typeName=&quot;Domain&quot;/&gt;\n      &lt;/template&gt;\n    &lt;/factoryBinding&gt;","id":"RootFactory","label":"factoryBinding RootFactory","rawXml":"<factoryBinding factoryName=\"SimpleTemplateRootFactory\" name=\"RootFactory\" targetType=\"Root\">\n      <acl>\n        <ace granted=\"true\" permission=\"Everything\" principal=\"Administrator\"/>\n        <ace granted=\"true\" permission=\"Read\" principal=\"members\"/>\n      </acl>\n      <template>\n        <templateItem id=\"default-domain\" title=\"Domain\" typeName=\"Domain\"/>\n      </template>\n    </factoryBinding>"},{"documentation":"","xml":"&lt;factoryBinding factoryName=&quot;SimpleTemplateFactory&quot; name=&quot;DomainFactory&quot; targetType=&quot;Domain&quot;&gt;\n      &lt;template&gt;\n        &lt;templateItem id=&quot;workspaces&quot; title=&quot;Workspaces&quot; typeName=&quot;WorkspaceRoot&quot;/&gt;\n        &lt;templateItem id=&quot;sections&quot; title=&quot;Sections&quot; typeName=&quot;SectionRoot&quot;/&gt;\n        &lt;templateItem id=&quot;templates&quot; title=&quot;Templates&quot; typeName=&quot;TemplateRoot&quot;/&gt;\n      &lt;/template&gt;\n    &lt;/factoryBinding&gt;","id":"DomainFactory","label":"factoryBinding DomainFactory","rawXml":"<factoryBinding factoryName=\"SimpleTemplateFactory\" name=\"DomainFactory\" targetType=\"Domain\">\n      <template>\n        <templateItem id=\"workspaces\" title=\"Workspaces\" typeName=\"WorkspaceRoot\"/>\n        <templateItem id=\"sections\" title=\"Sections\" typeName=\"SectionRoot\"/>\n        <templateItem id=\"templates\" title=\"Templates\" typeName=\"TemplateRoot\"/>\n      </template>\n    </factoryBinding>"},{"documentation":"","xml":"&lt;factoryBinding factoryName=&quot;SimpleTemplateFactory&quot; name=&quot;SectionRootFactory&quot; targetType=&quot;SectionRoot&quot;&gt;\n      &lt;acl&gt;\n        &lt;ace granted=&quot;true&quot; permission=&quot;CanAskForPublishing&quot; principal=&quot;members&quot;/&gt;\n      &lt;/acl&gt;\n    &lt;/factoryBinding&gt;","id":"SectionRootFactory","label":"factoryBinding SectionRootFactory","rawXml":"<factoryBinding factoryName=\"SimpleTemplateFactory\" name=\"SectionRootFactory\" targetType=\"SectionRoot\">\n      <acl>\n        <ace granted=\"true\" permission=\"CanAskForPublishing\" principal=\"members\"/>\n      </acl>\n    </factoryBinding>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/org.nuxeo.ecm.platform.content.template/org.nuxeo.ecm.platform.content.template.service.ContentTemplateService.defaultContrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-content-template-manager/bin/main/OSGI-INF/content-template-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component\n  name=\"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService.defaultContrib\">\n\n  <extension\n    target=\"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService\"\n    point=\"factory\">\n\n    <contentFactory name=\"SimpleTemplateFactory\"\n      class=\"org.nuxeo.ecm.platform.content.template.factories.SimpleTemplateBasedFactory\" />\n\n    <contentFactory name=\"SimpleTemplateRootFactory\"\n      class=\"org.nuxeo.ecm.platform.content.template.factories.SimpleTemplateBasedRootFactory\" />\n\n    <contentFactory name=\"ImportFactory\"\n      class=\"org.nuxeo.ecm.platform.content.template.factories.ImportBasedFactory\" />\n  </extension>\n\n  <extension\n    target=\"org.nuxeo.ecm.platform.content.template.service.ContentTemplateService\"\n    point=\"factoryBinding\">\n\n    <factoryBinding name=\"RootFactory\" factoryName=\"SimpleTemplateRootFactory\"\n      targetType=\"Root\">\n      <acl>\n        <ace principal=\"Administrator\" permission=\"Everything\" granted=\"true\" />\n        <ace principal=\"members\" permission=\"Read\" granted=\"true\" />\n      </acl>\n      <template>\n        <templateItem typeName=\"Domain\" id=\"default-domain\" title=\"Domain\" />\n      </template>\n    </factoryBinding>\n\n    <factoryBinding name=\"DomainFactory\" factoryName=\"SimpleTemplateFactory\"\n      targetType=\"Domain\">\n      <template>\n        <templateItem typeName=\"WorkspaceRoot\" id=\"workspaces\"\n          title=\"Workspaces\" />\n        <templateItem typeName=\"SectionRoot\" id=\"sections\" title=\"Sections\" />\n        <templateItem typeName=\"TemplateRoot\" id=\"templates\" title=\"Templates\" />\n      </template>\n    </factoryBinding>\n\n    <factoryBinding name=\"SectionRootFactory\" factoryName=\"SimpleTemplateFactory\"\n      targetType=\"SectionRoot\">\n      <acl>\n        <ace principal=\"members\" permission=\"CanAskForPublishing\" granted=\"true\" />\n      </acl>\n    </factoryBinding>\n\n  </extension>\n\n</component>\n"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.automation.io","fileName":"classes","manifest":"Bundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Name: nuxeo-automation-io\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nBundle-Vendor: Nuxeo\nBundle-Version: 5.7.2.qualifier\nBundle-ManifestVersion: 2\nBundle-SymbolicName: org.nuxeo.ecm.automation.io;singleton:=true\nNuxeo-Component: OSGI-INF/codec-service.xml,\n OSGI-INF/marshaller-contrib.xml,\n OSGI-INF/codec-contrib.xml\n","requirements":null,"groupId":"org.nuxeo.ecm.automation","artifactId":"nuxeo-automation-io","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.automation","name":"org.nuxeo.ecm.automation","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.automation.core","org.nuxeo.ecm.automation.features","org.nuxeo.ecm.automation.io","org.nuxeo.ecm.automation.scripting","org.nuxeo.ecm.automation.server"],"version":"unknown","parentIds":[]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-io/target/classes","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.automation.io.services.IOComponent.codec.contrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.automation.io.services.IOComponent.codec.contrib--codecs","extensionPoint":"org.nuxeo.ecm.automation.io.services.IOComponent--codecs","documentation":null,"xml":"<extension point=\"codecs\" target=\"org.nuxeo.ecm.automation.io.services.IOComponent\">\n    <codec class=\"org.nuxeo.ecm.automation.io.services.codec.DocumentModelCodec\"/>\n    <codec class=\"org.nuxeo.ecm.automation.io.services.codec.NuxeoPrincipalCodec\"/>\n    <codec class=\"org.nuxeo.ecm.automation.io.services.codec.BulkCodec\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.automation.io.services.IOComponent","rawName":"service:org.nuxeo.ecm.automation.io.services.IOComponent"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.io/org.nuxeo.ecm.automation.io.services.IOComponent.codec.contrib/Contributions/org.nuxeo.ecm.automation.io.services.IOComponent.codec.contrib--codecs","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;codec class=&quot;org.nuxeo.ecm.automation.io.services.codec.DocumentModelCodec&quot;/&gt;","id":null,"label":"codec","rawXml":"<codec class=\"org.nuxeo.ecm.automation.io.services.codec.DocumentModelCodec\"/>"},{"documentation":"","xml":"&lt;codec class=&quot;org.nuxeo.ecm.automation.io.services.codec.NuxeoPrincipalCodec&quot;/&gt;","id":null,"label":"codec","rawXml":"<codec class=\"org.nuxeo.ecm.automation.io.services.codec.NuxeoPrincipalCodec\"/>"},{"documentation":"","xml":"&lt;codec class=&quot;org.nuxeo.ecm.automation.io.services.codec.BulkCodec&quot;/&gt;","id":null,"label":"codec","rawXml":"<codec class=\"org.nuxeo.ecm.automation.io.services.codec.BulkCodec\"/>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.io/org.nuxeo.ecm.automation.io.services.IOComponent.codec.contrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-io/target/classes/OSGI-INF/codec-contrib.xml","xmlFileContent":"<component name=\"org.nuxeo.ecm.automation.io.services.IOComponent.codec.contrib\">\n\n  <extension point=\"codecs\" target=\"org.nuxeo.ecm.automation.io.services.IOComponent\">\n    <codec class=\"org.nuxeo.ecm.automation.io.services.codec.DocumentModelCodec\" />\n    <codec class=\"org.nuxeo.ecm.automation.io.services.codec.NuxeoPrincipalCodec\" />\n    <codec class=\"org.nuxeo.ecm.automation.io.services.codec.BulkCodec\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.automation.io.services.IOComponent","extensionPoints":[{"@type":"NXExtensionPoint","name":"codecs","descriptors":["org.nuxeo.ecm.automation.io.services.codec.CodecDescriptor"],"documentation":"JSON codecs for adapting marshalling objects\n","id":"org.nuxeo.ecm.automation.io.services.IOComponent--codecs","version":"11.1-SNAPSHOT","label":"codecs (org.nuxeo.ecm.automation.io.services.IOComponent)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.io/org.nuxeo.ecm.automation.io.services.IOComponent/ExtensionPoints/org.nuxeo.ecm.automation.io.services.IOComponent--codecs","documentationHtml":"<p/>\nJSON codecs for adapting marshalling objects","componentId":"org.nuxeo.ecm.automation.io.services.IOComponent"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.automation.io.services.codec.ObjectCodecService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.io/org.nuxeo.ecm.automation.io.services.IOComponent/Services/org.nuxeo.ecm.automation.io.services.codec.ObjectCodecService","componentId":"org.nuxeo.ecm.automation.io.services.IOComponent"}],"extensions":[],"componentClass":"org.nuxeo.ecm.automation.io.services.IOComponent","documentation":"@author Damien Metzler (dmetzler@nuxeo.com)\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.io/org.nuxeo.ecm.automation.io.services.IOComponent","documentationHtml":"<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-io/target/classes/OSGI-INF/codec-service.xml","xmlFileContent":"<component name=\"org.nuxeo.ecm.automation.io.services.IOComponent\">\n\n  <require>org.nuxeo.ecm.webengine.core.service.json</require>\n\n\n  <documentation>@author Damien Metzler (dmetzler@nuxeo.com)</documentation>\n\n  <implementation class=\"org.nuxeo.ecm.automation.io.services.IOComponent\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.automation.io.services.codec.ObjectCodecService\" />\n  </service>\n\n  <extension-point name=\"codecs\">\n    <documentation>JSON codecs for adapting marshalling objects</documentation>\n    <object class=\"org.nuxeo.ecm.automation.io.services.codec.CodecDescriptor\" />\n  </extension-point>\n\n</component>"},{"@type":"NXComponent","name":"org.nuxeo.ecm.automation.server.marshallers","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.automation.server.marshallers--marshallers","extensionPoint":"org.nuxeo.ecm.automation.server.AutomationServer--marshallers","documentation":null,"xml":"<extension point=\"marshallers\" target=\"org.nuxeo.ecm.automation.server.AutomationServer\">\n    <marshaller>\n      <reader>org.nuxeo.ecm.automation.jaxrs.io.operations.JsonRequestReader</reader>\n      <reader>org.nuxeo.ecm.automation.jaxrs.io.operations.UrlEncodedFormRequestReader</reader>\n      <reader>org.nuxeo.ecm.automation.jaxrs.io.documents.BusinessAdapterReader</reader>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.operations.JsonAutomationInfoWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.documents.BlobsWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.JsonLoginInfoWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.operations.JsonOperationWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.operations.JsonHtmlOperationWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.JsonTreeWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.JsonAdapterWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.JsonRecordSetWriter</writer>\n      <!-- delegates marshalling to nuxeo-core-io MarshallerRegistry service -->\n      <writer>org.nuxeo.ecm.webengine.jaxrs.coreiodelegate.CoreIODelegate</writer>\n    </marshaller>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.automation.server.AutomationServer","rawName":"service:org.nuxeo.ecm.automation.server.AutomationServer"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.io/org.nuxeo.ecm.automation.server.marshallers/Contributions/org.nuxeo.ecm.automation.server.marshallers--marshallers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;marshaller&gt;\n      &lt;reader&gt;org.nuxeo.ecm.automation.jaxrs.io.operations.JsonRequestReader&lt;/reader&gt;\n      &lt;reader&gt;org.nuxeo.ecm.automation.jaxrs.io.operations.UrlEncodedFormRequestReader&lt;/reader&gt;\n      &lt;reader&gt;org.nuxeo.ecm.automation.jaxrs.io.documents.BusinessAdapterReader&lt;/reader&gt;\n      &lt;writer&gt;org.nuxeo.ecm.automation.jaxrs.io.operations.JsonAutomationInfoWriter&lt;/writer&gt;\n      &lt;writer&gt;org.nuxeo.ecm.automation.jaxrs.io.documents.BlobsWriter&lt;/writer&gt;\n      &lt;writer&gt;org.nuxeo.ecm.automation.jaxrs.io.JsonLoginInfoWriter&lt;/writer&gt;\n      &lt;writer&gt;org.nuxeo.ecm.automation.jaxrs.io.operations.JsonOperationWriter&lt;/writer&gt;\n      &lt;writer&gt;org.nuxeo.ecm.automation.jaxrs.io.operations.JsonHtmlOperationWriter&lt;/writer&gt;\n      &lt;writer&gt;org.nuxeo.ecm.automation.jaxrs.io.JsonTreeWriter&lt;/writer&gt;\n      &lt;writer&gt;org.nuxeo.ecm.automation.jaxrs.io.JsonAdapterWriter&lt;/writer&gt;\n      &lt;writer&gt;org.nuxeo.ecm.automation.jaxrs.io.JsonRecordSetWriter&lt;/writer&gt;\n      &lt;!-- delegates marshalling to nuxeo-core-io MarshallerRegistry service --&gt;\n      &lt;writer&gt;org.nuxeo.ecm.webengine.jaxrs.coreiodelegate.CoreIODelegate&lt;/writer&gt;\n    &lt;/marshaller&gt;","id":null,"label":"marshaller","rawXml":"<marshaller>\n      <reader>org.nuxeo.ecm.automation.jaxrs.io.operations.JsonRequestReader</reader>\n      <reader>org.nuxeo.ecm.automation.jaxrs.io.operations.UrlEncodedFormRequestReader</reader>\n      <reader>org.nuxeo.ecm.automation.jaxrs.io.documents.BusinessAdapterReader</reader>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.operations.JsonAutomationInfoWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.documents.BlobsWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.JsonLoginInfoWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.operations.JsonOperationWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.operations.JsonHtmlOperationWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.JsonTreeWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.JsonAdapterWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.JsonRecordSetWriter</writer>\n      <!-- delegates marshalling to nuxeo-core-io MarshallerRegistry service -->\n      <writer>org.nuxeo.ecm.webengine.jaxrs.coreiodelegate.CoreIODelegate</writer>\n    </marshaller>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.automation/org.nuxeo.ecm.automation.io/org.nuxeo.ecm.automation.server.marshallers","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-automation/nuxeo-automation-io/target/classes/OSGI-INF/marshaller-contrib.xml","xmlFileContent":"<component name=\"org.nuxeo.ecm.automation.server.marshallers\">\n  <!-- this is needed by JsonOperationWriter -->\n  <require>org.nuxeo.ecm.platform.contentview.json.marshallers</require>\n  <extension point=\"marshallers\" target=\"org.nuxeo.ecm.automation.server.AutomationServer\">\n    <marshaller>\n      <reader>org.nuxeo.ecm.automation.jaxrs.io.operations.JsonRequestReader</reader>\n      <reader>org.nuxeo.ecm.automation.jaxrs.io.operations.UrlEncodedFormRequestReader</reader>\n      <reader>org.nuxeo.ecm.automation.jaxrs.io.documents.BusinessAdapterReader</reader>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.operations.JsonAutomationInfoWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.documents.BlobsWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.JsonLoginInfoWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.operations.JsonOperationWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.operations.JsonHtmlOperationWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.JsonTreeWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.JsonAdapterWriter</writer>\n      <writer>org.nuxeo.ecm.automation.jaxrs.io.JsonRecordSetWriter</writer>\n      <!-- delegates marshalling to nuxeo-core-io MarshallerRegistry service -->\n      <writer>org.nuxeo.ecm.webengine.jaxrs.coreiodelegate.CoreIODelegate</writer>\n    </marshaller>\n  </extension>\n</component>"}]},{"@type":"NXBundle","bundleId":"org.nuxeo.ecm.platform.usermanager","fileName":"main","manifest":"Export-Package: org.nuxeo.ecm.platform.usermanager;core=split,\n org.nuxeo.ecm.platform.computedgroups\nBundle-ActivationPolicy: lazy\nBundle-ClassPath: .\nManifest-Version: 1.0\nBundle-Category: web,\n stateful\nBundle-Name: Nuxeo User Manager Module\nBundle-Localization: plugin\nCreated-By: 1.6.0_20 (Sun Microsystems Inc.)\nBundle-RequiredExecutionEnvironment: JavaSE-1.6\nRequire-Bundle: org.nuxeo.ecm.platform.usermanager.api;visibility:=reexport\nBundle-Vendor: Nuxeo\nEclipse-LazyStart: false\nBundle-Version: 0.0.0.SNAPSHOT\nNuxeo-Component: OSGI-INF/UserService.xml,\n OSGI-INF/computedgroups-framework.xml,\n OSGI-INF/companycomputedgroups-contrib.xml,\n OSGI-INF/UserManagerImpl.xml,\n OSGI-INF/user-adapter-contrib.xml,\n OSGI-INF/usermanager-resolver-contrib.xml,\n OSGI-INF/marshallers-contrib.xml,\n OSGI-INF/usermanager-properties.xml\nBundle-ManifestVersion: 2\nImport-Package: org.apache.commons.logging,\n org.nuxeo.common.collections,\n org.nuxeo.common.xmap.annotation,\n org.nuxeo.ecm.core;api=split,\n org.nuxeo.ecm.core.api;api=split,\n org.nuxeo.ecm.core.api.impl,\n org.nuxeo.ecm.core.api.security,\n org.nuxeo.ecm.directory;api=split,\n org.nuxeo.ecm.directory.api,\n org.nuxeo.ecm.platform.usermanager.exceptions,\n org.nuxeo.runtime,\n org.nuxeo.runtime.api,\n org.nuxeo.runtime.model,\n org.nuxeo.runtime.services.event\nBundle-SymbolicName: org.nuxeo.ecm.platform.usermanager\n","requirements":null,"groupId":"org.nuxeo.ecm.platform","artifactId":"nuxeo-platform-usermanager-core","artifactVersion":"11.1-SNAPSHOT","bundleGroup":{"@type":"NXBundleGroup","id":"grp:org.nuxeo.ecm.platform.usermanager","name":"org.nuxeo.ecm.platform.usermanager","liveDoc":{},"subGroups":[],"bundleIds":["org.nuxeo.ecm.platform.usermanager","org.nuxeo.ecm.platform.usermanager.api"],"version":"unknown","parentIds":["grp:org.nuxeo.ecm.platform"]},"liveDoc":null,"parentLiveDoc":null,"location":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-usermanager-core/bin/main","components":[{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.computedgroups.UserManager.companyComputerContrib","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.computedgroups.UserManager.companyComputerContrib--computer","extensionPoint":"org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl--computer","documentation":null,"xml":"<extension point=\"computer\" target=\"org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl\">\n        <groupComputer name=\"companyGroupComputer\">\n            <computer>org.nuxeo.ecm.platform.computedgroups.CompanyGroupComputer</computer>\n        </groupComputer>\n    </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl","rawName":"service:org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.computedgroups.UserManager.companyComputerContrib/Contributions/org.nuxeo.ecm.platform.computedgroups.UserManager.companyComputerContrib--computer","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;groupComputer name=&quot;companyGroupComputer&quot;&gt;\n            &lt;computer&gt;org.nuxeo.ecm.platform.computedgroups.CompanyGroupComputer&lt;/computer&gt;\n        &lt;/groupComputer&gt;","id":"companyGroupComputer","label":"groupComputer companyGroupComputer","rawXml":"<groupComputer name=\"companyGroupComputer\">\n            <computer>org.nuxeo.ecm.platform.computedgroups.CompanyGroupComputer</computer>\n        </groupComputer>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.computedgroups.UserManager.companyComputerContrib","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-usermanager-core/bin/main/OSGI-INF/companycomputedgroups-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.computedgroups.UserManager.companyComputerContrib\">\n\n    <extension target=\"org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl\"\n        point=\"computer\">\n        <groupComputer name=\"companyGroupComputer\">\n            <computer>org.nuxeo.ecm.platform.computedgroups.CompanyGroupComputer</computer>\n        </groupComputer>\n    </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.usermanager.adapter","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.usermanager.adapter--adapters","extensionPoint":"org.nuxeo.ecm.core.api.DocumentAdapterService--adapters","documentation":null,"xml":"<extension point=\"adapters\" target=\"org.nuxeo.ecm.core.api.DocumentAdapterService\">\n    <adapter class=\"org.nuxeo.ecm.platform.usermanager.UserAdapter\" factory=\"org.nuxeo.ecm.platform.usermanager.UserAdapterFactory\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.api.DocumentAdapterService","rawName":"service:org.nuxeo.ecm.core.api.DocumentAdapterService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.adapter/Contributions/org.nuxeo.ecm.platform.usermanager.adapter--adapters","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;adapter class=&quot;org.nuxeo.ecm.platform.usermanager.UserAdapter&quot; factory=&quot;org.nuxeo.ecm.platform.usermanager.UserAdapterFactory&quot;/&gt;","id":null,"label":"adapter","rawXml":"<adapter class=\"org.nuxeo.ecm.platform.usermanager.UserAdapter\" factory=\"org.nuxeo.ecm.platform.usermanager.UserAdapterFactory\"/>"}]}],"componentClass":null,"documentation":"Adapters for UserModel\n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.adapter","documentationHtml":"<p/>\nAdapters for UserModel","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-usermanager-core/bin/main/OSGI-INF/user-adapter-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.platform.usermanager.adapter\">\n  <documentation>Adapters for UserModel</documentation>\n\n  <extension target=\"org.nuxeo.ecm.core.api.DocumentAdapterService\"\n    point=\"adapters\">\n    <adapter class=\"org.nuxeo.ecm.platform.usermanager.UserAdapter\"\n      factory=\"org.nuxeo.ecm.platform.usermanager.UserAdapterFactory\" />\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl","extensionPoints":[{"@type":"NXExtensionPoint","name":"computer","descriptors":["org.nuxeo.ecm.platform.computedgroups.GroupComputerDescriptor","org.nuxeo.ecm.platform.computedgroups.UserMetadataGroupComputerDescriptor","org.nuxeo.ecm.platform.computedgroups.DocumentMetadataGroupComputerDescriptor"],"documentation":"\n    Extension point to contribute a new class to compute virtual groups.\n\n    The contribution should be as the following example :\n    <code>\n    <groupComputer name=\"MyGroupComputerName\">\n        <computer>fullClassName</computer>\n    </groupComputer>\n</code>\n\n\n    The contributed class must implement the org.nuxeo.ecm.platform.computedgroups.GroupComputer interface.\n\n    To simplify the Computer group generation you can also contribute a simple group computer without java\n    code contribution based on\n    <ul>\n    <li>user profile metadata (military grade given a abilitation level, for instance)</li>\n    <li>metadata given a list of documents (ex: local group)</li>\n</ul>\n\n\n    For the first case, you just have to contribute:\n    <code>\n    <userMetadataGroupComputer enabled=\"false\" groupPattern=\"grade_%s\"\n        name=\"grade_cg\" xpath=\"company\"/>\n</code>\n\n\n    Here for each user, during the connection time, Nuxeo affect the group grade_xxx where xxx the value of\n    the company metadata stored into the user profile. If the company metadata is empty or contains only spaces\n    No group is affected to the user.\n\n    For the second possibility (metadata given a list of documents), you just have to contribute:\n    <code>\n    <documentMetadataGroupComputer groupPattern=\"creator_%s\"\n        name=\"creator_cg\" whereClause=\"dc:creator = '%s'\" xpath=\"dc:title\"/>\n</code>\n\n\n    Here, we select documents created by the user. For each document found, we affect the group creator_xxx where xxx\n    is the title of the document. But you can also try this:\n\n    <code>\n    <documentMetadataGroupComputer groupPattern=\"creator_%s\"\n        name=\"creator_cg\" whereClause=\"dc:creator = '%s'\" xpath=\"ecm:uuid\"/>\n</code>\n\n\n    Here, xxx is replaced by the id of the document. XPath value is based on NXQL query and fetch selector. See the NXQL documentation\n    to have more information.\n\n    @author Thierry Delprat (td@nuxeo.com)\n    @author Benjamin JALON (bjalon@nuxeo.com)\n        \n","id":"org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl--computer","version":"11.1-SNAPSHOT","label":"computer (org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl/ExtensionPoints/org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl--computer","documentationHtml":"<p/>\nExtension point to contribute a new class to compute virtual groups.\n<p/>\nThe contribution should be as the following example :\n<p/><pre><code>    &lt;groupComputer name=\"MyGroupComputerName\">\n        &lt;computer>fullClassName&lt;/computer>\n    &lt;/groupComputer>\n</code></pre><p/>\nThe contributed class must implement the org.nuxeo.ecm.platform.computedgroups.GroupComputer interface.\n<p/>\nTo simplify the Computer group generation you can also contribute a simple group computer without java\ncode contribution based on\n<ul>\n<li>user profile metadata (military grade given a abilitation level, for instance)</li>\n<li>metadata given a list of documents (ex: local group)</li>\n</ul>\n<p/>\nFor the first case, you just have to contribute:\n<p/><pre><code>    &lt;userMetadataGroupComputer enabled=\"false\" groupPattern=\"grade_%s\"\n        name=\"grade_cg\" xpath=\"company\"/>\n</code></pre><p/>\nHere for each user, during the connection time, Nuxeo affect the group grade_xxx where xxx the value of\nthe company metadata stored into the user profile. If the company metadata is empty or contains only spaces\nNo group is affected to the user.\n<p/>\nFor the second possibility (metadata given a list of documents), you just have to contribute:\n<p/><pre><code>    &lt;documentMetadataGroupComputer groupPattern=\"creator_%s\"\n        name=\"creator_cg\" whereClause=\"dc:creator = '%s'\" xpath=\"dc:title\"/>\n</code></pre><p/>\nHere, we select documents created by the user. For each document found, we affect the group creator_xxx where xxx\nis the title of the document. But you can also try this:\n<p/>\n<pre><code>    &lt;documentMetadataGroupComputer groupPattern=\"creator_%s\"\n        name=\"creator_cg\" whereClause=\"dc:creator = '%s'\" xpath=\"ecm:uuid\"/>\n</code></pre><p/>\nHere, xxx is replaced by the id of the document. XPath value is based on NXQL query and fetch selector. See the NXQL documentation\nto have more information.\n<p/>","componentId":"org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl"},{"@type":"NXExtensionPoint","name":"computerChain","descriptors":["org.nuxeo.ecm.platform.computedgroups.GroupComputerChainDescriptor"],"documentation":"\n    Extension point to set or update the chain of group computer.\n    The GroupComputers will be called sequentially according the chain definition.\n\n    The contribution should be of the form :\n    <code>\n    <groupComputerChain>\n        <computers>\n            <computer>companyGroupComputer</computer>\n            <computer>myOtherGroupComputer</computer>\n        </computers>\n    </groupComputerChain>\n</code>\n\n\n    By default, each contribution will completly overwrite the chain.\n    If you just want to add a new computer to the existing chain, set the append attribute to true.\n\n    <code>\n    <groupComputerChain append=\"true\">\n        <computers>\n            <computer>myAdditionnalGroupComputer</computer>\n        </computers>\n    </groupComputerChain>\n</code>\n\n\n    @author Thierry Delprat (td@nuxeo.com)\n        \n","id":"org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl--computerChain","version":"11.1-SNAPSHOT","label":"computerChain (org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl/ExtensionPoints/org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl--computerChain","documentationHtml":"<p/>\nExtension point to set or update the chain of group computer.\nThe GroupComputers will be called sequentially according the chain definition.\n<p/>\nThe contribution should be of the form :\n<p/><pre><code>    &lt;groupComputerChain>\n        &lt;computers>\n            &lt;computer>companyGroupComputer&lt;/computer>\n            &lt;computer>myOtherGroupComputer&lt;/computer>\n        &lt;/computers>\n    &lt;/groupComputerChain>\n</code></pre><p/>\nBy default, each contribution will completly overwrite the chain.\nIf you just want to add a new computer to the existing chain, set the append attribute to true.\n<p/>\n<pre><code>    &lt;groupComputerChain append=\"true\">\n        &lt;computers>\n            &lt;computer>myAdditionnalGroupComputer&lt;/computer>\n        &lt;/computers>\n    &lt;/groupComputerChain>\n</code></pre><p/>","componentId":"org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.platform.computedgroups.ComputedGroupsService","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl/Services/org.nuxeo.ecm.platform.computedgroups.ComputedGroupsService","componentId":"org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl"}],"extensions":[],"componentClass":"org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl","documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl","documentationHtml":"","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-usermanager-core/bin/main/OSGI-INF/computedgroups-framework.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl\">\n\n    <implementation class=\"org.nuxeo.ecm.platform.computedgroups.ComputedGroupsServiceImpl\" />\n\n    <service>\n        <provide interface=\"org.nuxeo.ecm.platform.computedgroups.ComputedGroupsService\" />\n    </service>\n\n    <extension-point name=\"computer\">\n        <documentation>\n    Extension point to contribute a new class to compute virtual groups.\n\n    The contribution should be as the following example :\n    <code>\n        <groupComputer name=\"MyGroupComputerName\">\n            <computer>fullClassName</computer>\n        </groupComputer>\n    </code>\n\n    The contributed class must implement the org.nuxeo.ecm.platform.computedgroups.GroupComputer interface.\n\n    To simplify the Computer group generation you can also contribute a simple group computer without java\n    code contribution based on\n    <ul>\n      <li>user profile metadata (military grade given a abilitation level, for instance)</li>\n      <li>metadata given a list of documents (ex: local group)</li>\n    </ul>\n\n    For the first case, you just have to contribute:\n    <code>\n      <userMetadataGroupComputer enabled=\"false\" xpath=\"company\" groupPattern=\"grade_%s\" name=\"grade_cg\"/>\n    </code>\n\n    Here for each user, during the connection time, Nuxeo affect the group grade_xxx where xxx the value of\n    the company metadata stored into the user profile. If the company metadata is empty or contains only spaces\n    No group is affected to the user.\n\n    For the second possibility (metadata given a list of documents), you just have to contribute:\n    <code>\n      <documentMetadataGroupComputer xpath=\"dc:title\" whereClause=\"dc:creator = '%s'\" groupPattern=\"creator_%s\" name=\"creator_cg\"/>\n    </code>\n\n    Here, we select documents created by the user. For each document found, we affect the group creator_xxx where xxx\n    is the title of the document. But you can also try this:\n\n    <code>\n      <documentMetadataGroupComputer xpath=\"ecm:uuid\" whereClause=\"dc:creator = '%s'\" groupPattern=\"creator_%s\" name=\"creator_cg\"/>\n    </code>\n\n    Here, xxx is replaced by the id of the document. XPath value is based on NXQL query and fetch selector. See the NXQL documentation\n    to have more information.\n\n    @author Thierry Delprat (td@nuxeo.com)\n    @author Benjamin JALON (bjalon@nuxeo.com)\n        </documentation>\n        <object\n            class=\"org.nuxeo.ecm.platform.computedgroups.GroupComputerDescriptor\" />\n        <object\n            class=\"org.nuxeo.ecm.platform.computedgroups.UserMetadataGroupComputerDescriptor\" />\n        <object\n            class=\"org.nuxeo.ecm.platform.computedgroups.DocumentMetadataGroupComputerDescriptor\" />\n\n    </extension-point>\n\n    <extension-point name=\"computerChain\">\n        <documentation>\n    Extension point to set or update the chain of group computer.\n    The GroupComputers will be called sequentially according the chain definition.\n\n    The contribution should be of the form :\n    <code>\n      <groupComputerChain>\n         <computers>\n           <computer>companyGroupComputer</computer>\n           <computer>myOtherGroupComputer</computer>\n         </computers>\n      </groupComputerChain>\n    </code>\n\n    By default, each contribution will completly overwrite the chain.\n    If you just want to add a new computer to the existing chain, set the append attribute to true.\n\n    <code>\n          <groupComputerChain append=\"true\">\n             <computers>\n               <computer>myAdditionnalGroupComputer</computer>\n             </computers>\n          </groupComputerChain>\n    </code>\n\n    @author Thierry Delprat (td@nuxeo.com)\n        </documentation>\n        <object\n            class=\"org.nuxeo.ecm.platform.computedgroups.GroupComputerChainDescriptor\" />\n    </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.usermanager.properties","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.usermanager.properties--configuration","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n      Controls whether we check the validity of password when changing it.\n\n      @since 8.4\n    \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <documentation>\n      Controls whether we check the validity of password when changing it.\n\n      @since 8.4\n    </documentation>\n    <property name=\"nuxeo.usermanager.check.password\">********</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.properties/Contributions/org.nuxeo.ecm.platform.usermanager.properties--configuration","documentationHtml":"<p/>\nControls whether we check the validity of password when changing it.\n<p/>\n@since 8.4\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;nuxeo.usermanager.check.password&quot;&gt;********&lt;/property&gt;","id":"nuxeo.usermanager.check.password","label":"property nuxeo.usermanager.check.password","rawXml":"<property name=\"nuxeo.usermanager.check.password\">********</property>"}]},{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.usermanager.properties--configuration1","extensionPoint":"org.nuxeo.runtime.ConfigurationService--configuration","documentation":"\n      Controls whether the UserManager.searchUsers(pattern) and UserManager.searchGroups(pattern)\n      APIs interpret the pattern as a generic string with arbitrary characters\n      that will be matched exactly (depending on the directory substring match style)\n      (non-compat mode), or as a LIKE pattern where % and _ are interpreted as LIKE escapes (compat mode).\n\n      @since 11.1\n    \n","xml":"<extension point=\"configuration\" target=\"org.nuxeo.runtime.ConfigurationService\">\n    <documentation>\n      Controls whether the UserManager.searchUsers(pattern) and UserManager.searchGroups(pattern)\n      APIs interpret the pattern as a generic string with arbitrary characters\n      that will be matched exactly (depending on the directory substring match style)\n      (non-compat mode), or as a LIKE pattern where % and _ are interpreted as LIKE escapes (compat mode).\n\n      @since 11.1\n    </documentation>\n    <property name=\"nuxeo.usermanager.search.escape.compat\">false</property>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.runtime.ConfigurationService","rawName":"service:org.nuxeo.runtime.ConfigurationService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.properties/Contributions/org.nuxeo.ecm.platform.usermanager.properties--configuration1","documentationHtml":"<p/>\nControls whether the UserManager.searchUsers(pattern) and UserManager.searchGroups(pattern)\nAPIs interpret the pattern as a generic string with arbitrary characters\nthat will be matched exactly (depending on the directory substring match style)\n(non-compat mode), or as a LIKE pattern where % and _ are interpreted as LIKE escapes (compat mode).\n<p/>\n@since 11.1\n<p/>","contributionItems":[{"documentation":"","xml":"&lt;property name=&quot;nuxeo.usermanager.search.escape.compat&quot;&gt;false&lt;/property&gt;","id":"nuxeo.usermanager.search.escape.compat","label":"property nuxeo.usermanager.search.escape.compat","rawXml":"<property name=\"nuxeo.usermanager.search.escape.compat\">false</property>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.properties","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-usermanager-core/bin/main/OSGI-INF/usermanager-properties.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.platform.usermanager.properties\">\n\n  <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n    <documentation>\n      Controls whether we check the validity of password when changing it.\n\n      @since 8.4\n    </documentation>\n    <property name=\"nuxeo.usermanager.check.password\">********</property>\n  </extension>\n\n <extension target=\"org.nuxeo.runtime.ConfigurationService\" point=\"configuration\">\n    <documentation>\n      Controls whether the UserManager.searchUsers(pattern) and UserManager.searchGroups(pattern)\n      APIs interpret the pattern as a generic string with arbitrary characters\n      that will be matched exactly (depending on the directory substring match style)\n      (non-compat mode), or as a LIKE pattern where % and _ are interpreted as LIKE escapes (compat mode).\n\n      @since 11.1\n    </documentation>\n    <property name=\"nuxeo.usermanager.search.escape.compat\">false</property>\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.usermanager.marshallers","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.usermanager.marshallers--marshallers","extensionPoint":"org.nuxeo.ecm.core.io.MarshallerRegistry--marshallers","documentation":null,"xml":"<extension point=\"marshallers\" target=\"org.nuxeo.ecm.core.io.MarshallerRegistry\">\n    <register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoPrincipalJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoPrincipalJsonReader\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoPrincipalListJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoPrincipalListJsonReader\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoGroupJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoGroupJsonReader\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoGroupListJsonWriter\" enable=\"true\"/>\n    <register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoGroupListJsonReader\" enable=\"true\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.io.MarshallerRegistry","rawName":"service:org.nuxeo.ecm.core.io.MarshallerRegistry"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.marshallers/Contributions/org.nuxeo.ecm.platform.usermanager.marshallers--marshallers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.usermanager.io.NuxeoPrincipalJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoPrincipalJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.usermanager.io.NuxeoPrincipalJsonReader&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoPrincipalJsonReader\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.usermanager.io.NuxeoPrincipalListJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoPrincipalListJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.usermanager.io.NuxeoPrincipalListJsonReader&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoPrincipalListJsonReader\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.usermanager.io.NuxeoGroupJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoGroupJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.usermanager.io.NuxeoGroupJsonReader&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoGroupJsonReader\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.usermanager.io.NuxeoGroupListJsonWriter&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoGroupListJsonWriter\" enable=\"true\"/>"},{"documentation":"","xml":"&lt;register class=&quot;org.nuxeo.ecm.platform.usermanager.io.NuxeoGroupListJsonReader&quot; enable=&quot;true&quot;/&gt;","id":null,"label":"register","rawXml":"<register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoGroupListJsonReader\" enable=\"true\"/>"}]}],"componentClass":null,"documentation":"\n    Core IO registered marshallers set.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.marshallers","documentationHtml":"<p/>\nCore IO registered marshallers set.\n<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-usermanager-core/bin/main/OSGI-INF/marshallers-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.usermanager.marshallers\" version=\"1.0.0\">\n  <documentation>\n    Core IO registered marshallers set.\n  </documentation>\n  <extension target=\"org.nuxeo.ecm.core.io.MarshallerRegistry\" point=\"marshallers\">\n    <register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoPrincipalJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoPrincipalJsonReader\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoPrincipalListJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoPrincipalListJsonReader\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoGroupJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoGroupJsonReader\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoGroupListJsonWriter\" enable=\"true\" />\n    <register class=\"org.nuxeo.ecm.platform.usermanager.io.NuxeoGroupListJsonReader\" enable=\"true\" />\n  </extension>\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.usermanager.UserService","extensionPoints":[{"@type":"NXExtensionPoint","name":"userManager","descriptors":["org.nuxeo.ecm.platform.usermanager.UserManagerDescriptor"],"documentation":"\n      Configure the userManager.\n      <p/>\n\n      The extension should use the format:\n      <code>\n    <userManager>\n        <users>\n            <directory>somedirectory</directory>\n            <emailField>mail</emailField>\n            <searchFields append=\"true\">\n                <substringMatchSearchField>first</substringMatchSearchField>\n                <exactMatchSearchField>last</exactMatchSearchField>\n            </searchFields>\n            <listingMode>tabbed</listingMode>\n            <anonymousUser id=\"Anonymous\">\n                <property name=\"firstName\">Anonymous</property>\n                <property name=\"lastName\">User</property>\n            </anonymousUser>\n            <virtualUser id=\"MyCustomAdministrator\" searchable=\"false\">\n                <password>secret</password>\n                <property name=\"firstName\">My Custom</property>\n                <property name=\"lastName\">Administrator</property>\n                <group>administrators</group>\n            </virtualUser>\n            <virtualUser id=\"MyCustomMember\" searchable=\"false\">\n                <password>secret</password>\n                <property name=\"firstName\">My Custom</property>\n                <property name=\"lastName\">Member</property>\n                <group>members</group>\n                <group>othergroup</group>\n                <propertyList name=\"listprop\">\n                    <value>item1</value>\n                    <value>item2</value>\n                </propertyList>\n            </virtualUser>\n            <virtualUser id=\"ExistingVirtualUser\" remove=\"true\"/>\n        </users>\n        <defaultAdministratorId>admin</defaultAdministratorId>\n        <administratorsGroup>myAdministrators</administratorsGroup>\n        <disableDefaultAdministratorsGroup>\n            false\n          </disableDefaultAdministratorsGroup>\n        <userSortField>sn</userSortField>\n        <userPasswordPattern>^[a-zA-Z0-9]{5,}$</userPasswordPattern>\n        <groups>\n            <directory>somegroupdir</directory>\n            <membersField>members</membersField>\n            <groupLabelField>grouplabel</groupLabelField>\n            <subGroupsField>subgroups</subGroupsField>\n            <parentGroupsField>parentgroup</parentGroupsField>\n            <listingMode>search_only</listingMode>\n            <searchFields append=\"true\">\n                <substringMatchSearchField>grouplabel</substringMatchSearchField>\n                <exactMatchSearchField>groupname</exactMatchSearchField>\n            </searchFields>\n        </groups>\n        <defaultGroup>members</defaultGroup>\n        <groupSortField>groupname</groupSortField>\n    </userManager>\n</code>\n<p/>\n\n      If the element anonymousUser has the attribute remove=\"true\", then the\n      anonymous user will be disabled. The anonymous user is searchable by\n      default.\n      <p/>\n\n      If a virtual user has the attribute remove=\"true\", it is removed from the\n      list of virtual users. Virtual users are searchable by default, but it is\n      not implemented yet... so you should keep the attribute searchable=\"false\"\n      to keep the same behaviour when it will be.\n      <p/>\n\n      Virtual users with the \"administrators\" group will have the same rights\n      than the default administrator.\n      <p/>\n\n      New administrators groups can be added using the \"administratorsGroup\"\n      tag. Several groups can be defined, adding as many tags as needed. The\n      default group named \"administrators\" can be disabled by setting the\n      \"disableDefaultAdministratorsGroup\" to \"true\" (defaults to false): only\n      new defined administrators groups will then be taken into account. Note\n      that disabling this default group should be done after setting up custom\n      rights in the repository, as this group is usually defined as the group of\n      users who have all permissions at the root of the repository.\n      <p/>\n\n      Anonymous and virtual users properties have to match the users directory\n      schema fields to be taken into account.\n      <p/>\n\n      The userPasswordPattern format is specified by java.util.regex.Pattern.\n      <p/>\n\n      The values for users listingMode are: \"all\", \"tabbed\", \"search_only\".\n      (These values are defined in\n      org.nuxeo.ecm.webapp.security.UserManagerActionsBean.)\n      <p/>\n\n      The values for groups listingMode are: \"all\" and \"search_only\".\n    \n","id":"org.nuxeo.ecm.platform.usermanager.UserService--userManager","version":"11.1-SNAPSHOT","label":"userManager (org.nuxeo.ecm.platform.usermanager.UserService)","artifactType":"NXExtensionPoint","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.UserService/ExtensionPoints/org.nuxeo.ecm.platform.usermanager.UserService--userManager","documentationHtml":"<p/>\nConfigure the userManager.\n<p/>\nThe extension should use the format:\n<p/><pre><code>    &lt;userManager>\n        &lt;users>\n            &lt;directory>somedirectory&lt;/directory>\n            &lt;emailField>mail&lt;/emailField>\n            &lt;searchFields append=\"true\">\n                &lt;substringMatchSearchField>first&lt;/substringMatchSearchField>\n                &lt;exactMatchSearchField>last&lt;/exactMatchSearchField>\n            &lt;/searchFields>\n            &lt;listingMode>tabbed&lt;/listingMode>\n            &lt;anonymousUser id=\"Anonymous\">\n                &lt;property name=\"firstName\">Anonymous&lt;/property>\n                &lt;property name=\"lastName\">User&lt;/property>\n            &lt;/anonymousUser>\n            &lt;virtualUser id=\"MyCustomAdministrator\" searchable=\"false\">\n                &lt;password>secret&lt;/password>\n                &lt;property name=\"firstName\">My Custom&lt;/property>\n                &lt;property name=\"lastName\">Administrator&lt;/property>\n                &lt;group>administrators&lt;/group>\n            &lt;/virtualUser>\n            &lt;virtualUser id=\"MyCustomMember\" searchable=\"false\">\n                &lt;password>secret&lt;/password>\n                &lt;property name=\"firstName\">My Custom&lt;/property>\n                &lt;property name=\"lastName\">Member&lt;/property>\n                &lt;group>members&lt;/group>\n                &lt;group>othergroup&lt;/group>\n                &lt;propertyList name=\"listprop\">\n                    &lt;value>item1&lt;/value>\n                    &lt;value>item2&lt;/value>\n                &lt;/propertyList>\n            &lt;/virtualUser>\n            &lt;virtualUser id=\"ExistingVirtualUser\" remove=\"true\"/>\n        &lt;/users>\n        &lt;defaultAdministratorId>admin&lt;/defaultAdministratorId>\n        &lt;administratorsGroup>myAdministrators&lt;/administratorsGroup>\n        &lt;disableDefaultAdministratorsGroup>\n            false\n          &lt;/disableDefaultAdministratorsGroup>\n        &lt;userSortField>sn&lt;/userSortField>\n        &lt;userPasswordPattern>^[a-zA-Z0-9]{5,}$&lt;/userPasswordPattern>\n        &lt;groups>\n            &lt;directory>somegroupdir&lt;/directory>\n            &lt;membersField>members&lt;/membersField>\n            &lt;groupLabelField>grouplabel&lt;/groupLabelField>\n            &lt;subGroupsField>subgroups&lt;/subGroupsField>\n            &lt;parentGroupsField>parentgroup&lt;/parentGroupsField>\n            &lt;listingMode>search_only&lt;/listingMode>\n            &lt;searchFields append=\"true\">\n                &lt;substringMatchSearchField>grouplabel&lt;/substringMatchSearchField>\n                &lt;exactMatchSearchField>groupname&lt;/exactMatchSearchField>\n            &lt;/searchFields>\n        &lt;/groups>\n        &lt;defaultGroup>members&lt;/defaultGroup>\n        &lt;groupSortField>groupname&lt;/groupSortField>\n    &lt;/userManager>\n</code></pre><p/>\nIf the element anonymousUser has the attribute remove=\"true\", then the\nanonymous user will be disabled. The anonymous user is searchable by\ndefault.\n<p/>\nIf a virtual user has the attribute remove=\"true\", it is removed from the\nlist of virtual users. Virtual users are searchable by default, but it is\nnot implemented yet... so you should keep the attribute searchable=\"false\"\nto keep the same behaviour when it will be.\n<p/>\nVirtual users with the \"administrators\" group will have the same rights\nthan the default administrator.\n<p/>\nNew administrators groups can be added using the \"administratorsGroup\"\ntag. Several groups can be defined, adding as many tags as needed. The\ndefault group named \"administrators\" can be disabled by setting the\n\"disableDefaultAdministratorsGroup\" to \"true\" (defaults to false): only\nnew defined administrators groups will then be taken into account. Note\nthat disabling this default group should be done after setting up custom\nrights in the repository, as this group is usually defined as the group of\nusers who have all permissions at the root of the repository.\n<p/>\nAnonymous and virtual users properties have to match the users directory\nschema fields to be taken into account.\n<p/>\nThe userPasswordPattern format is specified by java.util.regex.Pattern.\n<p/>\nThe values for users listingMode are: \"all\", \"tabbed\", \"search_only\".\n(These values are defined in\norg.nuxeo.ecm.webapp.security.UserManagerActionsBean.)\n<p/>\nThe values for groups listingMode are: \"all\" and \"search_only\".\n<p/>","componentId":"org.nuxeo.ecm.platform.usermanager.UserService"}],"services":[{"@type":"NXService","id":"org.nuxeo.ecm.platform.usermanager.MultiTenantUserManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.UserService/Services/org.nuxeo.ecm.platform.usermanager.MultiTenantUserManager","componentId":"org.nuxeo.ecm.platform.usermanager.UserService"},{"@type":"NXService","id":"org.nuxeo.ecm.platform.usermanager.UserManager","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.UserService/Services/org.nuxeo.ecm.platform.usermanager.UserManager","componentId":"org.nuxeo.ecm.platform.usermanager.UserService"},{"@type":"NXService","id":"org.nuxeo.runtime.api.login.Authenticator","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.UserService/Services/org.nuxeo.runtime.api.login.Authenticator","componentId":"org.nuxeo.ecm.platform.usermanager.UserService"},{"@type":"NXService","id":"org.nuxeo.ecm.core.api.security.AdministratorGroupsProvider","overriden":false,"version":"11.1-SNAPSHOT","artifactType":"NXService","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.UserService/Services/org.nuxeo.ecm.core.api.security.AdministratorGroupsProvider","componentId":"org.nuxeo.ecm.platform.usermanager.UserService"}],"extensions":[],"componentClass":"org.nuxeo.ecm.platform.usermanager.UserService","documentation":"\n    A service to interact with the list of users and groups of the platform.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.UserService","documentationHtml":"<p/>\nA service to interact with the list of users and groups of the platform.\n<p/>","xmlPureComponent":false,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-usermanager-core/bin/main/OSGI-INF/UserService.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.usermanager.UserService\">\n\n  <documentation>\n    A service to interact with the list of users and groups of the platform.\n  </documentation>\n\n  <implementation class=\"org.nuxeo.ecm.platform.usermanager.UserService\" />\n\n  <service>\n    <provide interface=\"org.nuxeo.ecm.platform.usermanager.MultiTenantUserManager\" />\n    <provide interface=\"org.nuxeo.ecm.platform.usermanager.UserManager\" />\n    <provide interface=\"org.nuxeo.runtime.api.login.Authenticator\" />\n    <provide interface=\"org.nuxeo.ecm.core.api.security.AdministratorGroupsProvider\" />\n  </service>\n\n  <extension-point name=\"userManager\">\n\n    <documentation>\n      Configure the userManager.\n      <p />\n      The extension should use the format:\n      <code>\n        <userManager>\n          <users>\n            <directory>somedirectory</directory>\n            <emailField>mail</emailField>\n            <searchFields append=\"true\">\n              <substringMatchSearchField>first</substringMatchSearchField>\n              <exactMatchSearchField>last</exactMatchSearchField>\n            </searchFields>\n            <listingMode>tabbed</listingMode>\n            <anonymousUser id=\"Anonymous\">\n              <property name=\"firstName\">Anonymous</property>\n              <property name=\"lastName\">User</property>\n            </anonymousUser>\n            <virtualUser id=\"MyCustomAdministrator\" searchable=\"false\">\n              <password>********</password>\n              <property name=\"firstName\">My Custom</property>\n              <property name=\"lastName\">Administrator</property>\n              <group>administrators</group>\n            </virtualUser>\n            <virtualUser id=\"MyCustomMember\" searchable=\"false\">\n              <password>********</password>\n              <property name=\"firstName\">My Custom</property>\n              <property name=\"lastName\">Member</property>\n              <group>members</group>\n              <group>othergroup</group>\n              <propertyList name=\"listprop\">\n                <value>item1</value>\n                <value>item2</value>\n              </propertyList>\n            </virtualUser>\n            <virtualUser id=\"ExistingVirtualUser\" remove=\"true\" />\n          </users>\n          <defaultAdministratorId>admin</defaultAdministratorId>\n          <administratorsGroup>myAdministrators</administratorsGroup>\n          <disableDefaultAdministratorsGroup>\n            false\n          </disableDefaultAdministratorsGroup>\n          <userSortField>sn</userSortField>\n          <userPasswordPattern>^[a-zA-Z0-9]{5,}$</userPasswordPattern>\n          <groups>\n            <directory>somegroupdir</directory>\n            <membersField>members</membersField>\n            <groupLabelField>grouplabel</groupLabelField>\n            <subGroupsField>subgroups</subGroupsField>\n            <parentGroupsField>parentgroup</parentGroupsField>\n            <listingMode>search_only</listingMode>\n            <searchFields append=\"true\">\n              <substringMatchSearchField>grouplabel</substringMatchSearchField>\n              <exactMatchSearchField>groupname</exactMatchSearchField>\n            </searchFields>\n          </groups>\n          <defaultGroup>members</defaultGroup>\n          <groupSortField>groupname</groupSortField>\n        </userManager>\n      </code>\n      <p />\n      If the element anonymousUser has the attribute remove=\"true\", then the\n      anonymous user will be disabled. The anonymous user is searchable by\n      default.\n      <p />\n      If a virtual user has the attribute remove=\"true\", it is removed from the\n      list of virtual users. Virtual users are searchable by default, but it is\n      not implemented yet... so you should keep the attribute searchable=\"false\"\n      to keep the same behaviour when it will be.\n      <p />\n      Virtual users with the \"administrators\" group will have the same rights\n      than the default administrator.\n      <p />\n      New administrators groups can be added using the \"administratorsGroup\"\n      tag. Several groups can be defined, adding as many tags as needed. The\n      default group named \"administrators\" can be disabled by setting the\n      \"disableDefaultAdministratorsGroup\" to \"true\" (defaults to false): only\n      new defined administrators groups will then be taken into account. Note\n      that disabling this default group should be done after setting up custom\n      rights in the repository, as this group is usually defined as the group of\n      users who have all permissions at the root of the repository.\n      <p />\n      Anonymous and virtual users properties have to match the users directory\n      schema fields to be taken into account.\n      <p />\n      The userPasswordPattern format is specified by java.util.regex.Pattern.\n      <p />\n      The values for users listingMode are: \"all\", \"tabbed\", \"search_only\".\n      (These values are defined in\n      org.nuxeo.ecm.webapp.security.UserManagerActionsBean.)\n      <p />\n      The values for groups listingMode are: \"all\" and \"search_only\".\n    </documentation>\n\n    <object class=\"org.nuxeo.ecm.platform.usermanager.UserManagerDescriptor\" />\n\n  </extension-point>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.usermanager.UserManagerImpl","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.usermanager.UserManagerImpl--userManager","extensionPoint":"org.nuxeo.ecm.platform.usermanager.UserService--userManager","documentation":null,"xml":"<extension point=\"userManager\" target=\"org.nuxeo.ecm.platform.usermanager.UserService\">\n\n    <userManager class=\"org.nuxeo.ecm.platform.computedgroups.UserManagerWithComputedGroups\">\n      <users>\n        <listingMode>search_only</listingMode>\n      </users>\n    </userManager>\n\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.platform.usermanager.UserService","rawName":"service:org.nuxeo.ecm.platform.usermanager.UserService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.UserManagerImpl/Contributions/org.nuxeo.ecm.platform.usermanager.UserManagerImpl--userManager","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;userManager class=&quot;org.nuxeo.ecm.platform.computedgroups.UserManagerWithComputedGroups&quot;&gt;\n      &lt;users&gt;\n        &lt;listingMode&gt;search_only&lt;/listingMode&gt;\n      &lt;/users&gt;\n    &lt;/userManager&gt;","id":null,"label":"userManager","rawXml":"<userManager class=\"org.nuxeo.ecm.platform.computedgroups.UserManagerWithComputedGroups\">\n      <users>\n        <listingMode>search_only</listingMode>\n      </users>\n    </userManager>"}]}],"componentClass":null,"documentation":null,"version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.UserManagerImpl","documentationHtml":"","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-usermanager-core/bin/main/OSGI-INF/UserManagerImpl.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n<component name=\"org.nuxeo.ecm.platform.usermanager.UserManagerImpl\">\n\n  <extension target=\"org.nuxeo.ecm.platform.usermanager.UserService\"\n    point=\"userManager\">\n\n    <userManager\n      class=\"org.nuxeo.ecm.platform.computedgroups.UserManagerWithComputedGroups\">\n      <users>\n        <listingMode>search_only</listingMode>\n      </users>\n    </userManager>\n\n  </extension>\n\n</component>\n"},{"@type":"NXComponent","name":"org.nuxeo.ecm.platform.usermanager.resolver","extensionPoints":[],"services":[],"extensions":[{"@type":"NXContribution","id":"org.nuxeo.ecm.platform.usermanager.resolver--resolvers","extensionPoint":"org.nuxeo.ecm.core.schema.ObjectResolverService--resolvers","documentation":null,"xml":"<extension point=\"resolvers\" target=\"org.nuxeo.ecm.core.schema.ObjectResolverService\">\n    <resolver class=\"org.nuxeo.ecm.platform.usermanager.UserManagerResolver\" type=\"userManagerResolver\"/>\n  </extension>","targetComponentName":{"type":"service","name":"org.nuxeo.ecm.core.schema.ObjectResolverService","rawName":"service:org.nuxeo.ecm.core.schema.ObjectResolverService"},"version":"11.1-SNAPSHOT","artifactType":"NXContribution","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.resolver/Contributions/org.nuxeo.ecm.platform.usermanager.resolver--resolvers","documentationHtml":"","contributionItems":[{"documentation":"","xml":"&lt;resolver class=&quot;org.nuxeo.ecm.platform.usermanager.UserManagerResolver&quot; type=&quot;userManagerResolver&quot;/&gt;","id":null,"label":"resolver","rawXml":"<resolver class=\"org.nuxeo.ecm.platform.usermanager.UserManagerResolver\" type=\"userManagerResolver\"/>"}]}],"componentClass":null,"documentation":"\n    Resolver for NuxeoPrincipal and NuxeoGroup document properties. Values for properties must be prefixed\n    by 'user:' or 'group:'.\n  \n","version":"11.1-SNAPSHOT","artifactType":"NXComponent","hierarchyPath":"/grp:org.nuxeo.ecm.platform/grp:org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager/org.nuxeo.ecm.platform.usermanager.resolver","documentationHtml":"<p/>\nResolver for NuxeoPrincipal and NuxeoGroup document properties. Values for properties must be prefixed\nby 'user:' or 'group:'.\n<p/>","xmlPureComponent":true,"xmlFileName":"/home/anahide/ws/nuxeo/modules/platform/nuxeo-platform-usermanager-core/bin/main/OSGI-INF/usermanager-resolver-contrib.xml","xmlFileContent":"<?xml version=\"1.0\"?>\n\n<component name=\"org.nuxeo.ecm.platform.usermanager.resolver\">\n  <documentation>\n    Resolver for NuxeoPrincipal and NuxeoGroup document properties. Values for properties must be prefixed\n    by 'user:' or 'group:'.\n  </documentation>\n\n  <extension target=\"org.nuxeo.ecm.core.schema.ObjectResolverService\" point=\"resolvers\">\n    <resolver type=\"userManagerResolver\" class=\"org.nuxeo.ecm.platform.usermanager.UserManagerResolver\" />\n  </extension>\n\n</component>\n"}]}],"name":"Nuxeo","version":"unknown","live":true,"creationDate":1586968515703,"releaseDate":null}